# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
BinMXCAFDoc module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_binmxcafdoc.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _BinMXCAFDoc.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_BinMXCAFDoc')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_BinMXCAFDoc')
    _BinMXCAFDoc = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_BinMXCAFDoc', [dirname(__file__)])
        except ImportError:
            import _BinMXCAFDoc
            return _BinMXCAFDoc
        try:
            _mod = imp.load_module('_BinMXCAFDoc', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _BinMXCAFDoc = swig_import_helper()
    del swig_import_helper
else:
    import _BinMXCAFDoc
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _BinMXCAFDoc.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_BinMXCAFDoc.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_BinMXCAFDoc.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_BinMXCAFDoc.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_BinMXCAFDoc.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_BinMXCAFDoc.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_BinMXCAFDoc.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_BinMXCAFDoc.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_BinMXCAFDoc.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_BinMXCAFDoc.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_BinMXCAFDoc.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_BinMXCAFDoc.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_BinMXCAFDoc.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_BinMXCAFDoc.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_BinMXCAFDoc.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_BinMXCAFDoc.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_BinMXCAFDoc.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _BinMXCAFDoc.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _BinMXCAFDoc.process_exception(error, method_name, class_name)
process_exception = _BinMXCAFDoc.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.BinMDF
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.TDF
import OCC.Core.BinObjMgt
import OCC.Core.Storage
import OCC.Core.BinTools
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Geom2d
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.Geom

def Handle_BinMXCAFDoc_AreaDriver_Create() -> "opencascade::handle< BinMXCAFDoc_AreaDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_AreaDriver_Create()
Handle_BinMXCAFDoc_AreaDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_AreaDriver_Create

def Handle_BinMXCAFDoc_AreaDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_AreaDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_AreaDriver_DownCast(t)
Handle_BinMXCAFDoc_AreaDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_AreaDriver_DownCast

def Handle_BinMXCAFDoc_AreaDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_AreaDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_AreaDriver_IsNull(t)
Handle_BinMXCAFDoc_AreaDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_AreaDriver_IsNull

def Handle_BinMXCAFDoc_AssemblyItemRefDriver_Create() -> "opencascade::handle< BinMXCAFDoc_AssemblyItemRefDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_Create()
Handle_BinMXCAFDoc_AssemblyItemRefDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_Create

def Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_AssemblyItemRefDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast(t)
Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast

def Handle_BinMXCAFDoc_AssemblyItemRefDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_AssemblyItemRefDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_IsNull(t)
Handle_BinMXCAFDoc_AssemblyItemRefDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_IsNull

def Handle_BinMXCAFDoc_CentroidDriver_Create() -> "opencascade::handle< BinMXCAFDoc_CentroidDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_Create()
Handle_BinMXCAFDoc_CentroidDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_Create

def Handle_BinMXCAFDoc_CentroidDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_CentroidDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_DownCast(t)
Handle_BinMXCAFDoc_CentroidDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_DownCast

def Handle_BinMXCAFDoc_CentroidDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_CentroidDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_IsNull(t)
Handle_BinMXCAFDoc_CentroidDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_IsNull

def Handle_BinMXCAFDoc_ClippingPlaneToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_ClippingPlaneToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ClippingPlaneToolDriver_Create()
Handle_BinMXCAFDoc_ClippingPlaneToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_ClippingPlaneToolDriver_Create

def Handle_BinMXCAFDoc_ClippingPlaneToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_ClippingPlaneToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ClippingPlaneToolDriver_DownCast(t)
Handle_BinMXCAFDoc_ClippingPlaneToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_ClippingPlaneToolDriver_DownCast

def Handle_BinMXCAFDoc_ClippingPlaneToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_ClippingPlaneToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ClippingPlaneToolDriver_IsNull(t)
Handle_BinMXCAFDoc_ClippingPlaneToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_ClippingPlaneToolDriver_IsNull

def Handle_BinMXCAFDoc_ColorDriver_Create() -> "opencascade::handle< BinMXCAFDoc_ColorDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_Create()
Handle_BinMXCAFDoc_ColorDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_Create

def Handle_BinMXCAFDoc_ColorDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_ColorDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_DownCast(t)
Handle_BinMXCAFDoc_ColorDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_DownCast

def Handle_BinMXCAFDoc_ColorDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_ColorDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_IsNull(t)
Handle_BinMXCAFDoc_ColorDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_IsNull

def Handle_BinMXCAFDoc_ColorToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_ColorToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorToolDriver_Create()
Handle_BinMXCAFDoc_ColorToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorToolDriver_Create

def Handle_BinMXCAFDoc_ColorToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_ColorToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorToolDriver_DownCast(t)
Handle_BinMXCAFDoc_ColorToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorToolDriver_DownCast

def Handle_BinMXCAFDoc_ColorToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_ColorToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorToolDriver_IsNull(t)
Handle_BinMXCAFDoc_ColorToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorToolDriver_IsNull

def Handle_BinMXCAFDoc_DatumDriver_Create() -> "opencascade::handle< BinMXCAFDoc_DatumDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_Create()
Handle_BinMXCAFDoc_DatumDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_Create

def Handle_BinMXCAFDoc_DatumDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_DatumDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_DownCast(t)
Handle_BinMXCAFDoc_DatumDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_DownCast

def Handle_BinMXCAFDoc_DatumDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_DatumDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_IsNull(t)
Handle_BinMXCAFDoc_DatumDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_IsNull

def Handle_BinMXCAFDoc_DimTolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_DimTolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_Create()
Handle_BinMXCAFDoc_DimTolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_Create

def Handle_BinMXCAFDoc_DimTolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_DimTolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_DownCast(t)
Handle_BinMXCAFDoc_DimTolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_DownCast

def Handle_BinMXCAFDoc_DimTolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_DimTolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_IsNull(t)
Handle_BinMXCAFDoc_DimTolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_IsNull

def Handle_BinMXCAFDoc_DimTolToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_DimTolToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolToolDriver_Create()
Handle_BinMXCAFDoc_DimTolToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolToolDriver_Create

def Handle_BinMXCAFDoc_DimTolToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_DimTolToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolToolDriver_DownCast(t)
Handle_BinMXCAFDoc_DimTolToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolToolDriver_DownCast

def Handle_BinMXCAFDoc_DimTolToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_DimTolToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolToolDriver_IsNull(t)
Handle_BinMXCAFDoc_DimTolToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolToolDriver_IsNull

def Handle_BinMXCAFDoc_DimensionDriver_Create() -> "opencascade::handle< BinMXCAFDoc_DimensionDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimensionDriver_Create()
Handle_BinMXCAFDoc_DimensionDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimensionDriver_Create

def Handle_BinMXCAFDoc_DimensionDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_DimensionDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimensionDriver_DownCast(t)
Handle_BinMXCAFDoc_DimensionDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimensionDriver_DownCast

def Handle_BinMXCAFDoc_DimensionDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_DimensionDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimensionDriver_IsNull(t)
Handle_BinMXCAFDoc_DimensionDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimensionDriver_IsNull

def Handle_BinMXCAFDoc_DocumentToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_DocumentToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DocumentToolDriver_Create()
Handle_BinMXCAFDoc_DocumentToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_DocumentToolDriver_Create

def Handle_BinMXCAFDoc_DocumentToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_DocumentToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DocumentToolDriver_DownCast(t)
Handle_BinMXCAFDoc_DocumentToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_DocumentToolDriver_DownCast

def Handle_BinMXCAFDoc_DocumentToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_DocumentToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DocumentToolDriver_IsNull(t)
Handle_BinMXCAFDoc_DocumentToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_DocumentToolDriver_IsNull

def Handle_BinMXCAFDoc_GeomToleranceDriver_Create() -> "opencascade::handle< BinMXCAFDoc_GeomToleranceDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_GeomToleranceDriver_Create()
Handle_BinMXCAFDoc_GeomToleranceDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_GeomToleranceDriver_Create

def Handle_BinMXCAFDoc_GeomToleranceDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_GeomToleranceDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_GeomToleranceDriver_DownCast(t)
Handle_BinMXCAFDoc_GeomToleranceDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_GeomToleranceDriver_DownCast

def Handle_BinMXCAFDoc_GeomToleranceDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_GeomToleranceDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_GeomToleranceDriver_IsNull(t)
Handle_BinMXCAFDoc_GeomToleranceDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_GeomToleranceDriver_IsNull

def Handle_BinMXCAFDoc_GraphNodeDriver_Create() -> "opencascade::handle< BinMXCAFDoc_GraphNodeDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_Create()
Handle_BinMXCAFDoc_GraphNodeDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_Create

def Handle_BinMXCAFDoc_GraphNodeDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_GraphNodeDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_DownCast(t)
Handle_BinMXCAFDoc_GraphNodeDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_DownCast

def Handle_BinMXCAFDoc_GraphNodeDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_GraphNodeDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_IsNull(t)
Handle_BinMXCAFDoc_GraphNodeDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_IsNull

def Handle_BinMXCAFDoc_LayerToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_LayerToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_LayerToolDriver_Create()
Handle_BinMXCAFDoc_LayerToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_LayerToolDriver_Create

def Handle_BinMXCAFDoc_LayerToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_LayerToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_LayerToolDriver_DownCast(t)
Handle_BinMXCAFDoc_LayerToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_LayerToolDriver_DownCast

def Handle_BinMXCAFDoc_LayerToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_LayerToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_LayerToolDriver_IsNull(t)
Handle_BinMXCAFDoc_LayerToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_LayerToolDriver_IsNull

def Handle_BinMXCAFDoc_LocationDriver_Create() -> "opencascade::handle< BinMXCAFDoc_LocationDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_Create()
Handle_BinMXCAFDoc_LocationDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_Create

def Handle_BinMXCAFDoc_LocationDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_LocationDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_DownCast(t)
Handle_BinMXCAFDoc_LocationDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_DownCast

def Handle_BinMXCAFDoc_LocationDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_LocationDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_IsNull(t)
Handle_BinMXCAFDoc_LocationDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_IsNull

def Handle_BinMXCAFDoc_MaterialDriver_Create() -> "opencascade::handle< BinMXCAFDoc_MaterialDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_Create()
Handle_BinMXCAFDoc_MaterialDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_Create

def Handle_BinMXCAFDoc_MaterialDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_MaterialDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_DownCast(t)
Handle_BinMXCAFDoc_MaterialDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_DownCast

def Handle_BinMXCAFDoc_MaterialDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_MaterialDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_IsNull(t)
Handle_BinMXCAFDoc_MaterialDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_IsNull

def Handle_BinMXCAFDoc_MaterialToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_MaterialToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialToolDriver_Create()
Handle_BinMXCAFDoc_MaterialToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialToolDriver_Create

def Handle_BinMXCAFDoc_MaterialToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_MaterialToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialToolDriver_DownCast(t)
Handle_BinMXCAFDoc_MaterialToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialToolDriver_DownCast

def Handle_BinMXCAFDoc_MaterialToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_MaterialToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialToolDriver_IsNull(t)
Handle_BinMXCAFDoc_MaterialToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialToolDriver_IsNull

def Handle_BinMXCAFDoc_NoteDriver_Create() -> "opencascade::handle< BinMXCAFDoc_NoteDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_Create()
Handle_BinMXCAFDoc_NoteDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_Create

def Handle_BinMXCAFDoc_NoteDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_NoteDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_DownCast(t)
Handle_BinMXCAFDoc_NoteDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_DownCast

def Handle_BinMXCAFDoc_NoteDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_NoteDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_IsNull(t)
Handle_BinMXCAFDoc_NoteDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_IsNull

def Handle_BinMXCAFDoc_NotesToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_NotesToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NotesToolDriver_Create()
Handle_BinMXCAFDoc_NotesToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_NotesToolDriver_Create

def Handle_BinMXCAFDoc_NotesToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_NotesToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NotesToolDriver_DownCast(t)
Handle_BinMXCAFDoc_NotesToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_NotesToolDriver_DownCast

def Handle_BinMXCAFDoc_NotesToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_NotesToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NotesToolDriver_IsNull(t)
Handle_BinMXCAFDoc_NotesToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_NotesToolDriver_IsNull

def Handle_BinMXCAFDoc_ShapeToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_ShapeToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ShapeToolDriver_Create()
Handle_BinMXCAFDoc_ShapeToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_ShapeToolDriver_Create

def Handle_BinMXCAFDoc_ShapeToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_ShapeToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ShapeToolDriver_DownCast(t)
Handle_BinMXCAFDoc_ShapeToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_ShapeToolDriver_DownCast

def Handle_BinMXCAFDoc_ShapeToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_ShapeToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ShapeToolDriver_IsNull(t)
Handle_BinMXCAFDoc_ShapeToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_ShapeToolDriver_IsNull

def Handle_BinMXCAFDoc_ViewDriver_Create() -> "opencascade::handle< BinMXCAFDoc_ViewDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewDriver_Create()
Handle_BinMXCAFDoc_ViewDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewDriver_Create

def Handle_BinMXCAFDoc_ViewDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_ViewDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewDriver_DownCast(t)
Handle_BinMXCAFDoc_ViewDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewDriver_DownCast

def Handle_BinMXCAFDoc_ViewDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_ViewDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewDriver_IsNull(t)
Handle_BinMXCAFDoc_ViewDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewDriver_IsNull

def Handle_BinMXCAFDoc_ViewToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_ViewToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewToolDriver_Create()
Handle_BinMXCAFDoc_ViewToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewToolDriver_Create

def Handle_BinMXCAFDoc_ViewToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_ViewToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewToolDriver_DownCast(t)
Handle_BinMXCAFDoc_ViewToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewToolDriver_DownCast

def Handle_BinMXCAFDoc_ViewToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_ViewToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewToolDriver_IsNull(t)
Handle_BinMXCAFDoc_ViewToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_ViewToolDriver_IsNull

def Handle_BinMXCAFDoc_VolumeDriver_Create() -> "opencascade::handle< BinMXCAFDoc_VolumeDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_VolumeDriver_Create()
Handle_BinMXCAFDoc_VolumeDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_VolumeDriver_Create

def Handle_BinMXCAFDoc_VolumeDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_VolumeDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_VolumeDriver_DownCast(t)
Handle_BinMXCAFDoc_VolumeDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_VolumeDriver_DownCast

def Handle_BinMXCAFDoc_VolumeDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_VolumeDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_VolumeDriver_IsNull(t)
Handle_BinMXCAFDoc_VolumeDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_VolumeDriver_IsNull

def Handle_BinMXCAFDoc_NoteBinDataDriver_Create() -> "opencascade::handle< BinMXCAFDoc_NoteBinDataDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_Create()
Handle_BinMXCAFDoc_NoteBinDataDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_Create

def Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_NoteBinDataDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast(t)
Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast

def Handle_BinMXCAFDoc_NoteBinDataDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_NoteBinDataDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_IsNull(t)
Handle_BinMXCAFDoc_NoteBinDataDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_IsNull

def Handle_BinMXCAFDoc_NoteCommentDriver_Create() -> "opencascade::handle< BinMXCAFDoc_NoteCommentDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_Create()
Handle_BinMXCAFDoc_NoteCommentDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_Create

def Handle_BinMXCAFDoc_NoteCommentDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_NoteCommentDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_DownCast(t)
Handle_BinMXCAFDoc_NoteCommentDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_DownCast

def Handle_BinMXCAFDoc_NoteCommentDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_NoteCommentDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_IsNull(t)
Handle_BinMXCAFDoc_NoteCommentDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_IsNull

def Handle_BinMXCAFDoc_NoteBalloonDriver_Create() -> "opencascade::handle< BinMXCAFDoc_NoteBalloonDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBalloonDriver_Create()
Handle_BinMXCAFDoc_NoteBalloonDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBalloonDriver_Create

def Handle_BinMXCAFDoc_NoteBalloonDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_NoteBalloonDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBalloonDriver_DownCast(t)
Handle_BinMXCAFDoc_NoteBalloonDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBalloonDriver_DownCast

def Handle_BinMXCAFDoc_NoteBalloonDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_NoteBalloonDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBalloonDriver_IsNull(t)
Handle_BinMXCAFDoc_NoteBalloonDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBalloonDriver_IsNull
class binmxcafdoc(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddDrivers(*args) -> "void":
        """
        * Adds the attribute drivers to <theDriverTable>.
        	:param theDriverTable:
        	:type theDriverTable: BinMDF_ADriverTable
        	:param theMsgDrv:
        	:type theMsgDrv: Message_Messenger
        	:rtype: void
        """
        return _BinMXCAFDoc.binmxcafdoc_AddDrivers(*args)

    AddDrivers = staticmethod(AddDrivers)

    __repr__ = _dumps_object


    def __init__(self):
        _BinMXCAFDoc.binmxcafdoc_swiginit(self, _BinMXCAFDoc.new_binmxcafdoc())
    __swig_destroy__ = _BinMXCAFDoc.delete_binmxcafdoc
binmxcafdoc_swigregister = _BinMXCAFDoc.binmxcafdoc_swigregister
binmxcafdoc_swigregister(binmxcafdoc)

def binmxcafdoc_AddDrivers(*args) -> "void":
    """
    * Adds the attribute drivers to <theDriverTable>.
    	:param theDriverTable:
    	:type theDriverTable: BinMDF_ADriverTable
    	:param theMsgDrv:
    	:type theMsgDrv: Message_Messenger
    	:rtype: void
    """
    return _BinMXCAFDoc.binmxcafdoc_AddDrivers(*args)

class BinMXCAFDoc_AreaDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_AreaDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_AreaDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_AreaDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_AreaDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_AreaDriver
BinMXCAFDoc_AreaDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_AreaDriver_Paste, None, BinMXCAFDoc_AreaDriver)
BinMXCAFDoc_AreaDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_AreaDriver_swigregister
BinMXCAFDoc_AreaDriver_swigregister(BinMXCAFDoc_AreaDriver)

class BinMXCAFDoc_AssemblyItemRefDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_AssemblyItemRefDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_AssemblyItemRefDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMXCAFDoc.BinMXCAFDoc_AssemblyItemRefDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_AssemblyItemRefDriver
BinMXCAFDoc_AssemblyItemRefDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_AssemblyItemRefDriver_Paste, None, BinMXCAFDoc_AssemblyItemRefDriver)
BinMXCAFDoc_AssemblyItemRefDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_AssemblyItemRefDriver_swigregister
BinMXCAFDoc_AssemblyItemRefDriver_swigregister(BinMXCAFDoc_AssemblyItemRefDriver)

class BinMXCAFDoc_CentroidDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_CentroidDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_CentroidDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_CentroidDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_CentroidDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_CentroidDriver
BinMXCAFDoc_CentroidDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_CentroidDriver_Paste, None, BinMXCAFDoc_CentroidDriver)
BinMXCAFDoc_CentroidDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_CentroidDriver_swigregister
BinMXCAFDoc_CentroidDriver_swigregister(BinMXCAFDoc_CentroidDriver)

class BinMXCAFDoc_ClippingPlaneToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_ClippingPlaneToolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_ClippingPlaneToolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_ClippingPlaneToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_ClippingPlaneToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_ClippingPlaneToolDriver
BinMXCAFDoc_ClippingPlaneToolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_ClippingPlaneToolDriver_Paste, None, BinMXCAFDoc_ClippingPlaneToolDriver)
BinMXCAFDoc_ClippingPlaneToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_ClippingPlaneToolDriver_swigregister
BinMXCAFDoc_ClippingPlaneToolDriver_swigregister(BinMXCAFDoc_ClippingPlaneToolDriver)

class BinMXCAFDoc_ColorDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_ColorDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_ColorDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_ColorDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_ColorDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_ColorDriver
BinMXCAFDoc_ColorDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_ColorDriver_Paste, None, BinMXCAFDoc_ColorDriver)
BinMXCAFDoc_ColorDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_ColorDriver_swigregister
BinMXCAFDoc_ColorDriver_swigregister(BinMXCAFDoc_ColorDriver)

class BinMXCAFDoc_ColorToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_ColorToolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_ColorToolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_ColorToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_ColorToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_ColorToolDriver
BinMXCAFDoc_ColorToolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_ColorToolDriver_Paste, None, BinMXCAFDoc_ColorToolDriver)
BinMXCAFDoc_ColorToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_ColorToolDriver_swigregister
BinMXCAFDoc_ColorToolDriver_swigregister(BinMXCAFDoc_ColorToolDriver)

class BinMXCAFDoc_DatumDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_DatumDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_DatumDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_DatumDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_DatumDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_DatumDriver
BinMXCAFDoc_DatumDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_DatumDriver_Paste, None, BinMXCAFDoc_DatumDriver)
BinMXCAFDoc_DatumDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_DatumDriver_swigregister
BinMXCAFDoc_DatumDriver_swigregister(BinMXCAFDoc_DatumDriver)

class BinMXCAFDoc_DimTolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_DimTolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_DimTolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_DimTolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_DimTolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_DimTolDriver
BinMXCAFDoc_DimTolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_DimTolDriver_Paste, None, BinMXCAFDoc_DimTolDriver)
BinMXCAFDoc_DimTolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_DimTolDriver_swigregister
BinMXCAFDoc_DimTolDriver_swigregister(BinMXCAFDoc_DimTolDriver)

class BinMXCAFDoc_DimTolToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_DimTolToolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_DimTolToolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_DimTolToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_DimTolToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_DimTolToolDriver
BinMXCAFDoc_DimTolToolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_DimTolToolDriver_Paste, None, BinMXCAFDoc_DimTolToolDriver)
BinMXCAFDoc_DimTolToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_DimTolToolDriver_swigregister
BinMXCAFDoc_DimTolToolDriver_swigregister(BinMXCAFDoc_DimTolToolDriver)

class BinMXCAFDoc_DimensionDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_DimensionDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_DimensionDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_DimensionDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_DimensionDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_DimensionDriver
BinMXCAFDoc_DimensionDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_DimensionDriver_Paste, None, BinMXCAFDoc_DimensionDriver)
BinMXCAFDoc_DimensionDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_DimensionDriver_swigregister
BinMXCAFDoc_DimensionDriver_swigregister(BinMXCAFDoc_DimensionDriver)

class BinMXCAFDoc_DocumentToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_DocumentToolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_DocumentToolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_DocumentToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_DocumentToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_DocumentToolDriver
BinMXCAFDoc_DocumentToolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_DocumentToolDriver_Paste, None, BinMXCAFDoc_DocumentToolDriver)
BinMXCAFDoc_DocumentToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_DocumentToolDriver_swigregister
BinMXCAFDoc_DocumentToolDriver_swigregister(BinMXCAFDoc_DocumentToolDriver)

class BinMXCAFDoc_GeomToleranceDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_GeomToleranceDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_GeomToleranceDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_GeomToleranceDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_GeomToleranceDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_GeomToleranceDriver
BinMXCAFDoc_GeomToleranceDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_GeomToleranceDriver_Paste, None, BinMXCAFDoc_GeomToleranceDriver)
BinMXCAFDoc_GeomToleranceDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_GeomToleranceDriver_swigregister
BinMXCAFDoc_GeomToleranceDriver_swigregister(BinMXCAFDoc_GeomToleranceDriver)

class BinMXCAFDoc_GraphNodeDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_GraphNodeDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_GraphNodeDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_GraphNodeDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_GraphNodeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_GraphNodeDriver
BinMXCAFDoc_GraphNodeDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_GraphNodeDriver_Paste, None, BinMXCAFDoc_GraphNodeDriver)
BinMXCAFDoc_GraphNodeDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_GraphNodeDriver_swigregister
BinMXCAFDoc_GraphNodeDriver_swigregister(BinMXCAFDoc_GraphNodeDriver)

class BinMXCAFDoc_LayerToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_LayerToolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_LayerToolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_LayerToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_LayerToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_LayerToolDriver
BinMXCAFDoc_LayerToolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_LayerToolDriver_Paste, None, BinMXCAFDoc_LayerToolDriver)
BinMXCAFDoc_LayerToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_LayerToolDriver_swigregister
BinMXCAFDoc_LayerToolDriver_swigregister(BinMXCAFDoc_LayerToolDriver)

class BinMXCAFDoc_LocationDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_LocationDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_LocationDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_LocationDriver_Paste(self, *args)


    def SetSharedLocations(self, *args) -> "void":
        """
        :param theLocations:
        	:type theLocations: BinTools_LocationSetPtr
        	:rtype: None
        """
        return _BinMXCAFDoc.BinMXCAFDoc_LocationDriver_SetSharedLocations(self, *args)


    def Translate(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theLoc:
        	:type theLoc: TopLoc_Location
        	:param theMap:
        	:type theMap: BinObjMgt_RRelocationTable
        	:rtype: bool
        * Translate transient location to storable
        	:param theLoc:
        	:type theLoc: TopLoc_Location
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theMap:
        	:type theMap: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMXCAFDoc.BinMXCAFDoc_LocationDriver_Translate(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_LocationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_LocationDriver
BinMXCAFDoc_LocationDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_LocationDriver_Paste, None, BinMXCAFDoc_LocationDriver)
BinMXCAFDoc_LocationDriver.SetSharedLocations = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_LocationDriver_SetSharedLocations, None, BinMXCAFDoc_LocationDriver)
BinMXCAFDoc_LocationDriver.Translate = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_LocationDriver_Translate, None, BinMXCAFDoc_LocationDriver)
BinMXCAFDoc_LocationDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_LocationDriver_swigregister
BinMXCAFDoc_LocationDriver_swigregister(BinMXCAFDoc_LocationDriver)

class BinMXCAFDoc_MaterialDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_MaterialDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_MaterialDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_MaterialDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_MaterialDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_MaterialDriver
BinMXCAFDoc_MaterialDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_MaterialDriver_Paste, None, BinMXCAFDoc_MaterialDriver)
BinMXCAFDoc_MaterialDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_MaterialDriver_swigregister
BinMXCAFDoc_MaterialDriver_swigregister(BinMXCAFDoc_MaterialDriver)

class BinMXCAFDoc_MaterialToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_MaterialToolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_MaterialToolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_MaterialToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_MaterialToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_MaterialToolDriver
BinMXCAFDoc_MaterialToolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_MaterialToolDriver_Paste, None, BinMXCAFDoc_MaterialToolDriver)
BinMXCAFDoc_MaterialToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_MaterialToolDriver_swigregister
BinMXCAFDoc_MaterialToolDriver_swigregister(BinMXCAFDoc_MaterialToolDriver)

class BinMXCAFDoc_NoteDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMXCAFDoc.BinMXCAFDoc_NoteDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_NoteDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_NoteDriver
BinMXCAFDoc_NoteDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_NoteDriver_Paste, None, BinMXCAFDoc_NoteDriver)
BinMXCAFDoc_NoteDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_NoteDriver_swigregister
BinMXCAFDoc_NoteDriver_swigregister(BinMXCAFDoc_NoteDriver)

class BinMXCAFDoc_NotesToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_NotesToolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_NotesToolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMXCAFDoc.BinMXCAFDoc_NotesToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_NotesToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_NotesToolDriver
BinMXCAFDoc_NotesToolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_NotesToolDriver_Paste, None, BinMXCAFDoc_NotesToolDriver)
BinMXCAFDoc_NotesToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_NotesToolDriver_swigregister
BinMXCAFDoc_NotesToolDriver_swigregister(BinMXCAFDoc_NotesToolDriver)

class BinMXCAFDoc_ShapeToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_ShapeToolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_ShapeToolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_ShapeToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_ShapeToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_ShapeToolDriver
BinMXCAFDoc_ShapeToolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_ShapeToolDriver_Paste, None, BinMXCAFDoc_ShapeToolDriver)
BinMXCAFDoc_ShapeToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_ShapeToolDriver_swigregister
BinMXCAFDoc_ShapeToolDriver_swigregister(BinMXCAFDoc_ShapeToolDriver)

class BinMXCAFDoc_ViewDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_ViewDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_ViewDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_ViewDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_ViewDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_ViewDriver
BinMXCAFDoc_ViewDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_ViewDriver_Paste, None, BinMXCAFDoc_ViewDriver)
BinMXCAFDoc_ViewDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_ViewDriver_swigregister
BinMXCAFDoc_ViewDriver_swigregister(BinMXCAFDoc_ViewDriver)

class BinMXCAFDoc_ViewToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_ViewToolDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_ViewToolDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_ViewToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_ViewToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_ViewToolDriver
BinMXCAFDoc_ViewToolDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_ViewToolDriver_Paste, None, BinMXCAFDoc_ViewToolDriver)
BinMXCAFDoc_ViewToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_ViewToolDriver_swigregister
BinMXCAFDoc_ViewToolDriver_swigregister(BinMXCAFDoc_ViewToolDriver)

class BinMXCAFDoc_VolumeDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_VolumeDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_VolumeDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMXCAFDoc.BinMXCAFDoc_VolumeDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_VolumeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_VolumeDriver
BinMXCAFDoc_VolumeDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_VolumeDriver_Paste, None, BinMXCAFDoc_VolumeDriver)
BinMXCAFDoc_VolumeDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_VolumeDriver_swigregister
BinMXCAFDoc_VolumeDriver_swigregister(BinMXCAFDoc_VolumeDriver)

class BinMXCAFDoc_NoteBinDataDriver(BinMXCAFDoc_NoteDriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_NoteBinDataDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_NoteBinDataDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMXCAFDoc.BinMXCAFDoc_NoteBinDataDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_NoteBinDataDriver
BinMXCAFDoc_NoteBinDataDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_NoteBinDataDriver_Paste, None, BinMXCAFDoc_NoteBinDataDriver)
BinMXCAFDoc_NoteBinDataDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_NoteBinDataDriver_swigregister
BinMXCAFDoc_NoteBinDataDriver_swigregister(BinMXCAFDoc_NoteBinDataDriver)

class BinMXCAFDoc_NoteCommentDriver(BinMXCAFDoc_NoteDriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_NoteCommentDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_NoteCommentDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: BinObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: BinObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMXCAFDoc.BinMXCAFDoc_NoteCommentDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_NoteCommentDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_NoteCommentDriver
BinMXCAFDoc_NoteCommentDriver.Paste = new_instancemethod(_BinMXCAFDoc.BinMXCAFDoc_NoteCommentDriver_Paste, None, BinMXCAFDoc_NoteCommentDriver)
BinMXCAFDoc_NoteCommentDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_NoteCommentDriver_swigregister
BinMXCAFDoc_NoteCommentDriver_swigregister(BinMXCAFDoc_NoteCommentDriver)

class BinMXCAFDoc_NoteBalloonDriver(BinMXCAFDoc_NoteCommentDriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _BinMXCAFDoc.BinMXCAFDoc_NoteBalloonDriver_swiginit(self, _BinMXCAFDoc.new_BinMXCAFDoc_NoteBalloonDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_NoteBalloonDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_NoteBalloonDriver
BinMXCAFDoc_NoteBalloonDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_NoteBalloonDriver_swigregister
BinMXCAFDoc_NoteBalloonDriver_swigregister(BinMXCAFDoc_NoteBalloonDriver)



