# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
Message module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_message.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _Message.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_Message')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_Message')
    _Message = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_Message', [dirname(__file__)])
        except ImportError:
            import _Message
            return _Message
        try:
            _mod = imp.load_module('_Message', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _Message = swig_import_helper()
    del swig_import_helper
else:
    import _Message
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _Message.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_Message.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_Message.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_Message.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_Message.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_Message.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_Message.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_Message.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_Message.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_Message.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_Message.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_Message.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_Message.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_Message.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_Message.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_Message.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_Message.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _Message.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _Message.process_exception(error, method_name, class_name)
process_exception = _Message.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
Message_None = _Message.Message_None
Message_Done1 = _Message.Message_Done1
Message_Done2 = _Message.Message_Done2
Message_Done3 = _Message.Message_Done3
Message_Done4 = _Message.Message_Done4
Message_Done5 = _Message.Message_Done5
Message_Done6 = _Message.Message_Done6
Message_Done7 = _Message.Message_Done7
Message_Done8 = _Message.Message_Done8
Message_Done9 = _Message.Message_Done9
Message_Done10 = _Message.Message_Done10
Message_Done11 = _Message.Message_Done11
Message_Done12 = _Message.Message_Done12
Message_Done13 = _Message.Message_Done13
Message_Done14 = _Message.Message_Done14
Message_Done15 = _Message.Message_Done15
Message_Done16 = _Message.Message_Done16
Message_Done17 = _Message.Message_Done17
Message_Done18 = _Message.Message_Done18
Message_Done19 = _Message.Message_Done19
Message_Done20 = _Message.Message_Done20
Message_Done21 = _Message.Message_Done21
Message_Done22 = _Message.Message_Done22
Message_Done23 = _Message.Message_Done23
Message_Done24 = _Message.Message_Done24
Message_Done25 = _Message.Message_Done25
Message_Done26 = _Message.Message_Done26
Message_Done27 = _Message.Message_Done27
Message_Done28 = _Message.Message_Done28
Message_Done29 = _Message.Message_Done29
Message_Done30 = _Message.Message_Done30
Message_Done31 = _Message.Message_Done31
Message_Done32 = _Message.Message_Done32
Message_Warn1 = _Message.Message_Warn1
Message_Warn2 = _Message.Message_Warn2
Message_Warn3 = _Message.Message_Warn3
Message_Warn4 = _Message.Message_Warn4
Message_Warn5 = _Message.Message_Warn5
Message_Warn6 = _Message.Message_Warn6
Message_Warn7 = _Message.Message_Warn7
Message_Warn8 = _Message.Message_Warn8
Message_Warn9 = _Message.Message_Warn9
Message_Warn10 = _Message.Message_Warn10
Message_Warn11 = _Message.Message_Warn11
Message_Warn12 = _Message.Message_Warn12
Message_Warn13 = _Message.Message_Warn13
Message_Warn14 = _Message.Message_Warn14
Message_Warn15 = _Message.Message_Warn15
Message_Warn16 = _Message.Message_Warn16
Message_Warn17 = _Message.Message_Warn17
Message_Warn18 = _Message.Message_Warn18
Message_Warn19 = _Message.Message_Warn19
Message_Warn20 = _Message.Message_Warn20
Message_Warn21 = _Message.Message_Warn21
Message_Warn22 = _Message.Message_Warn22
Message_Warn23 = _Message.Message_Warn23
Message_Warn24 = _Message.Message_Warn24
Message_Warn25 = _Message.Message_Warn25
Message_Warn26 = _Message.Message_Warn26
Message_Warn27 = _Message.Message_Warn27
Message_Warn28 = _Message.Message_Warn28
Message_Warn29 = _Message.Message_Warn29
Message_Warn30 = _Message.Message_Warn30
Message_Warn31 = _Message.Message_Warn31
Message_Warn32 = _Message.Message_Warn32
Message_Alarm1 = _Message.Message_Alarm1
Message_Alarm2 = _Message.Message_Alarm2
Message_Alarm3 = _Message.Message_Alarm3
Message_Alarm4 = _Message.Message_Alarm4
Message_Alarm5 = _Message.Message_Alarm5
Message_Alarm6 = _Message.Message_Alarm6
Message_Alarm7 = _Message.Message_Alarm7
Message_Alarm8 = _Message.Message_Alarm8
Message_Alarm9 = _Message.Message_Alarm9
Message_Alarm10 = _Message.Message_Alarm10
Message_Alarm11 = _Message.Message_Alarm11
Message_Alarm12 = _Message.Message_Alarm12
Message_Alarm13 = _Message.Message_Alarm13
Message_Alarm14 = _Message.Message_Alarm14
Message_Alarm15 = _Message.Message_Alarm15
Message_Alarm16 = _Message.Message_Alarm16
Message_Alarm17 = _Message.Message_Alarm17
Message_Alarm18 = _Message.Message_Alarm18
Message_Alarm19 = _Message.Message_Alarm19
Message_Alarm20 = _Message.Message_Alarm20
Message_Alarm21 = _Message.Message_Alarm21
Message_Alarm22 = _Message.Message_Alarm22
Message_Alarm23 = _Message.Message_Alarm23
Message_Alarm24 = _Message.Message_Alarm24
Message_Alarm25 = _Message.Message_Alarm25
Message_Alarm26 = _Message.Message_Alarm26
Message_Alarm27 = _Message.Message_Alarm27
Message_Alarm28 = _Message.Message_Alarm28
Message_Alarm29 = _Message.Message_Alarm29
Message_Alarm30 = _Message.Message_Alarm30
Message_Alarm31 = _Message.Message_Alarm31
Message_Alarm32 = _Message.Message_Alarm32
Message_Fail1 = _Message.Message_Fail1
Message_Fail2 = _Message.Message_Fail2
Message_Fail3 = _Message.Message_Fail3
Message_Fail4 = _Message.Message_Fail4
Message_Fail5 = _Message.Message_Fail5
Message_Fail6 = _Message.Message_Fail6
Message_Fail7 = _Message.Message_Fail7
Message_Fail8 = _Message.Message_Fail8
Message_Fail9 = _Message.Message_Fail9
Message_Fail10 = _Message.Message_Fail10
Message_Fail11 = _Message.Message_Fail11
Message_Fail12 = _Message.Message_Fail12
Message_Fail13 = _Message.Message_Fail13
Message_Fail14 = _Message.Message_Fail14
Message_Fail15 = _Message.Message_Fail15
Message_Fail16 = _Message.Message_Fail16
Message_Fail17 = _Message.Message_Fail17
Message_Fail18 = _Message.Message_Fail18
Message_Fail19 = _Message.Message_Fail19
Message_Fail20 = _Message.Message_Fail20
Message_Fail21 = _Message.Message_Fail21
Message_Fail22 = _Message.Message_Fail22
Message_Fail23 = _Message.Message_Fail23
Message_Fail24 = _Message.Message_Fail24
Message_Fail25 = _Message.Message_Fail25
Message_Fail26 = _Message.Message_Fail26
Message_Fail27 = _Message.Message_Fail27
Message_Fail28 = _Message.Message_Fail28
Message_Fail29 = _Message.Message_Fail29
Message_Fail30 = _Message.Message_Fail30
Message_Fail31 = _Message.Message_Fail31
Message_Fail32 = _Message.Message_Fail32
Message_Trace = _Message.Message_Trace
Message_Info = _Message.Message_Info
Message_Warning = _Message.Message_Warning
Message_Alarm = _Message.Message_Alarm
Message_Fail = _Message.Message_Fail
Message_DONE = _Message.Message_DONE
Message_WARN = _Message.Message_WARN
Message_ALARM = _Message.Message_ALARM
Message_FAIL = _Message.Message_FAIL
class Message_ListOfMsg(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Message.Message_ListOfMsg_swiginit(self, _Message.new_Message_ListOfMsg(*args))
    __swig_destroy__ = _Message.delete_Message_ListOfMsg
Message_ListOfMsg.begin = new_instancemethod(_Message.Message_ListOfMsg_begin, None, Message_ListOfMsg)
Message_ListOfMsg.end = new_instancemethod(_Message.Message_ListOfMsg_end, None, Message_ListOfMsg)
Message_ListOfMsg.cbegin = new_instancemethod(_Message.Message_ListOfMsg_cbegin, None, Message_ListOfMsg)
Message_ListOfMsg.cend = new_instancemethod(_Message.Message_ListOfMsg_cend, None, Message_ListOfMsg)
Message_ListOfMsg.Size = new_instancemethod(_Message.Message_ListOfMsg_Size, None, Message_ListOfMsg)
Message_ListOfMsg.Assign = new_instancemethod(_Message.Message_ListOfMsg_Assign, None, Message_ListOfMsg)
Message_ListOfMsg.Set = new_instancemethod(_Message.Message_ListOfMsg_Set, None, Message_ListOfMsg)
Message_ListOfMsg.Clear = new_instancemethod(_Message.Message_ListOfMsg_Clear, None, Message_ListOfMsg)
Message_ListOfMsg.First = new_instancemethod(_Message.Message_ListOfMsg_First, None, Message_ListOfMsg)
Message_ListOfMsg.Last = new_instancemethod(_Message.Message_ListOfMsg_Last, None, Message_ListOfMsg)
Message_ListOfMsg.Append = new_instancemethod(_Message.Message_ListOfMsg_Append, None, Message_ListOfMsg)
Message_ListOfMsg.Prepend = new_instancemethod(_Message.Message_ListOfMsg_Prepend, None, Message_ListOfMsg)
Message_ListOfMsg.RemoveFirst = new_instancemethod(_Message.Message_ListOfMsg_RemoveFirst, None, Message_ListOfMsg)
Message_ListOfMsg.Remove = new_instancemethod(_Message.Message_ListOfMsg_Remove, None, Message_ListOfMsg)
Message_ListOfMsg.InsertBefore = new_instancemethod(_Message.Message_ListOfMsg_InsertBefore, None, Message_ListOfMsg)
Message_ListOfMsg.InsertAfter = new_instancemethod(_Message.Message_ListOfMsg_InsertAfter, None, Message_ListOfMsg)
Message_ListOfMsg.Reverse = new_instancemethod(_Message.Message_ListOfMsg_Reverse, None, Message_ListOfMsg)
Message_ListOfMsg_swigregister = _Message.Message_ListOfMsg_swigregister
Message_ListOfMsg_swigregister(Message_ListOfMsg)

class Message_ListIteratorOfListOfMsg(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Message.Message_ListIteratorOfListOfMsg_swiginit(self, _Message.new_Message_ListIteratorOfListOfMsg(*args))
    __swig_destroy__ = _Message.delete_Message_ListIteratorOfListOfMsg
Message_ListIteratorOfListOfMsg.More = new_instancemethod(_Message.Message_ListIteratorOfListOfMsg_More, None, Message_ListIteratorOfListOfMsg)
Message_ListIteratorOfListOfMsg.Next = new_instancemethod(_Message.Message_ListIteratorOfListOfMsg_Next, None, Message_ListIteratorOfListOfMsg)
Message_ListIteratorOfListOfMsg.Value = new_instancemethod(_Message.Message_ListIteratorOfListOfMsg_Value, None, Message_ListIteratorOfListOfMsg)
Message_ListIteratorOfListOfMsg.ChangeValue = new_instancemethod(_Message.Message_ListIteratorOfListOfMsg_ChangeValue, None, Message_ListIteratorOfListOfMsg)
Message_ListIteratorOfListOfMsg_swigregister = _Message.Message_ListIteratorOfListOfMsg_swigregister
Message_ListIteratorOfListOfMsg_swigregister(Message_ListIteratorOfListOfMsg)

class Message_SequenceOfPrinters(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Message.Message_SequenceOfPrinters_swiginit(self, _Message.new_Message_SequenceOfPrinters(*args))
    delNode = staticmethod(_Message.Message_SequenceOfPrinters_delNode)
    __swig_destroy__ = _Message.delete_Message_SequenceOfPrinters
Message_SequenceOfPrinters.begin = new_instancemethod(_Message.Message_SequenceOfPrinters_begin, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.end = new_instancemethod(_Message.Message_SequenceOfPrinters_end, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.cbegin = new_instancemethod(_Message.Message_SequenceOfPrinters_cbegin, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.cend = new_instancemethod(_Message.Message_SequenceOfPrinters_cend, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Size = new_instancemethod(_Message.Message_SequenceOfPrinters_Size, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Length = new_instancemethod(_Message.Message_SequenceOfPrinters_Length, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Lower = new_instancemethod(_Message.Message_SequenceOfPrinters_Lower, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Upper = new_instancemethod(_Message.Message_SequenceOfPrinters_Upper, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.IsEmpty = new_instancemethod(_Message.Message_SequenceOfPrinters_IsEmpty, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Reverse = new_instancemethod(_Message.Message_SequenceOfPrinters_Reverse, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Exchange = new_instancemethod(_Message.Message_SequenceOfPrinters_Exchange, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Clear = new_instancemethod(_Message.Message_SequenceOfPrinters_Clear, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Assign = new_instancemethod(_Message.Message_SequenceOfPrinters_Assign, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Set = new_instancemethod(_Message.Message_SequenceOfPrinters_Set, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Remove = new_instancemethod(_Message.Message_SequenceOfPrinters_Remove, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Append = new_instancemethod(_Message.Message_SequenceOfPrinters_Append, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Prepend = new_instancemethod(_Message.Message_SequenceOfPrinters_Prepend, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.InsertBefore = new_instancemethod(_Message.Message_SequenceOfPrinters_InsertBefore, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.InsertAfter = new_instancemethod(_Message.Message_SequenceOfPrinters_InsertAfter, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Split = new_instancemethod(_Message.Message_SequenceOfPrinters_Split, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.First = new_instancemethod(_Message.Message_SequenceOfPrinters_First, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.ChangeFirst = new_instancemethod(_Message.Message_SequenceOfPrinters_ChangeFirst, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Last = new_instancemethod(_Message.Message_SequenceOfPrinters_Last, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.ChangeLast = new_instancemethod(_Message.Message_SequenceOfPrinters_ChangeLast, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.Value = new_instancemethod(_Message.Message_SequenceOfPrinters_Value, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.ChangeValue = new_instancemethod(_Message.Message_SequenceOfPrinters_ChangeValue, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.__call__ = new_instancemethod(_Message.Message_SequenceOfPrinters___call__, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters.SetValue = new_instancemethod(_Message.Message_SequenceOfPrinters_SetValue, None, Message_SequenceOfPrinters)
Message_SequenceOfPrinters_swigregister = _Message.Message_SequenceOfPrinters_swigregister
Message_SequenceOfPrinters_swigregister(Message_SequenceOfPrinters)

def Message_SequenceOfPrinters_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _Message.Message_SequenceOfPrinters_delNode(theNode, theAl)
Message_SequenceOfPrinters_delNode = _Message.Message_SequenceOfPrinters_delNode

class Message_SequenceOfProgressScale(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Message.Message_SequenceOfProgressScale_swiginit(self, _Message.new_Message_SequenceOfProgressScale(*args))
    delNode = staticmethod(_Message.Message_SequenceOfProgressScale_delNode)
    __swig_destroy__ = _Message.delete_Message_SequenceOfProgressScale
Message_SequenceOfProgressScale.begin = new_instancemethod(_Message.Message_SequenceOfProgressScale_begin, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.end = new_instancemethod(_Message.Message_SequenceOfProgressScale_end, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.cbegin = new_instancemethod(_Message.Message_SequenceOfProgressScale_cbegin, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.cend = new_instancemethod(_Message.Message_SequenceOfProgressScale_cend, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Size = new_instancemethod(_Message.Message_SequenceOfProgressScale_Size, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Length = new_instancemethod(_Message.Message_SequenceOfProgressScale_Length, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Lower = new_instancemethod(_Message.Message_SequenceOfProgressScale_Lower, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Upper = new_instancemethod(_Message.Message_SequenceOfProgressScale_Upper, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.IsEmpty = new_instancemethod(_Message.Message_SequenceOfProgressScale_IsEmpty, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Reverse = new_instancemethod(_Message.Message_SequenceOfProgressScale_Reverse, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Exchange = new_instancemethod(_Message.Message_SequenceOfProgressScale_Exchange, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Clear = new_instancemethod(_Message.Message_SequenceOfProgressScale_Clear, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Assign = new_instancemethod(_Message.Message_SequenceOfProgressScale_Assign, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Set = new_instancemethod(_Message.Message_SequenceOfProgressScale_Set, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Remove = new_instancemethod(_Message.Message_SequenceOfProgressScale_Remove, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Append = new_instancemethod(_Message.Message_SequenceOfProgressScale_Append, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Prepend = new_instancemethod(_Message.Message_SequenceOfProgressScale_Prepend, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.InsertBefore = new_instancemethod(_Message.Message_SequenceOfProgressScale_InsertBefore, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.InsertAfter = new_instancemethod(_Message.Message_SequenceOfProgressScale_InsertAfter, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Split = new_instancemethod(_Message.Message_SequenceOfProgressScale_Split, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.First = new_instancemethod(_Message.Message_SequenceOfProgressScale_First, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.ChangeFirst = new_instancemethod(_Message.Message_SequenceOfProgressScale_ChangeFirst, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Last = new_instancemethod(_Message.Message_SequenceOfProgressScale_Last, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.ChangeLast = new_instancemethod(_Message.Message_SequenceOfProgressScale_ChangeLast, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.Value = new_instancemethod(_Message.Message_SequenceOfProgressScale_Value, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.ChangeValue = new_instancemethod(_Message.Message_SequenceOfProgressScale_ChangeValue, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.__call__ = new_instancemethod(_Message.Message_SequenceOfProgressScale___call__, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale.SetValue = new_instancemethod(_Message.Message_SequenceOfProgressScale_SetValue, None, Message_SequenceOfProgressScale)
Message_SequenceOfProgressScale_swigregister = _Message.Message_SequenceOfProgressScale_swigregister
Message_SequenceOfProgressScale_swigregister(Message_SequenceOfProgressScale)

def Message_SequenceOfProgressScale_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _Message.Message_SequenceOfProgressScale_delNode(theNode, theAl)
Message_SequenceOfProgressScale_delNode = _Message.Message_SequenceOfProgressScale_delNode

class Message_ListOfAlert(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Message.Message_ListOfAlert_swiginit(self, _Message.new_Message_ListOfAlert(*args))
    __swig_destroy__ = _Message.delete_Message_ListOfAlert
Message_ListOfAlert.begin = new_instancemethod(_Message.Message_ListOfAlert_begin, None, Message_ListOfAlert)
Message_ListOfAlert.end = new_instancemethod(_Message.Message_ListOfAlert_end, None, Message_ListOfAlert)
Message_ListOfAlert.cbegin = new_instancemethod(_Message.Message_ListOfAlert_cbegin, None, Message_ListOfAlert)
Message_ListOfAlert.cend = new_instancemethod(_Message.Message_ListOfAlert_cend, None, Message_ListOfAlert)
Message_ListOfAlert.Size = new_instancemethod(_Message.Message_ListOfAlert_Size, None, Message_ListOfAlert)
Message_ListOfAlert.Assign = new_instancemethod(_Message.Message_ListOfAlert_Assign, None, Message_ListOfAlert)
Message_ListOfAlert.Set = new_instancemethod(_Message.Message_ListOfAlert_Set, None, Message_ListOfAlert)
Message_ListOfAlert.Clear = new_instancemethod(_Message.Message_ListOfAlert_Clear, None, Message_ListOfAlert)
Message_ListOfAlert.First = new_instancemethod(_Message.Message_ListOfAlert_First, None, Message_ListOfAlert)
Message_ListOfAlert.Last = new_instancemethod(_Message.Message_ListOfAlert_Last, None, Message_ListOfAlert)
Message_ListOfAlert.Append = new_instancemethod(_Message.Message_ListOfAlert_Append, None, Message_ListOfAlert)
Message_ListOfAlert.Prepend = new_instancemethod(_Message.Message_ListOfAlert_Prepend, None, Message_ListOfAlert)
Message_ListOfAlert.RemoveFirst = new_instancemethod(_Message.Message_ListOfAlert_RemoveFirst, None, Message_ListOfAlert)
Message_ListOfAlert.Remove = new_instancemethod(_Message.Message_ListOfAlert_Remove, None, Message_ListOfAlert)
Message_ListOfAlert.InsertBefore = new_instancemethod(_Message.Message_ListOfAlert_InsertBefore, None, Message_ListOfAlert)
Message_ListOfAlert.InsertAfter = new_instancemethod(_Message.Message_ListOfAlert_InsertAfter, None, Message_ListOfAlert)
Message_ListOfAlert.Reverse = new_instancemethod(_Message.Message_ListOfAlert_Reverse, None, Message_ListOfAlert)
Message_ListOfAlert_swigregister = _Message.Message_ListOfAlert_swigregister
Message_ListOfAlert_swigregister(Message_ListOfAlert)



