# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
RWStepBasic module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_rwstepbasic.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _RWStepBasic.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepBasic')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepBasic')
    _RWStepBasic = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepBasic', [dirname(__file__)])
        except ImportError:
            import _RWStepBasic
            return _RWStepBasic
        try:
            _mod = imp.load_module('_RWStepBasic', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepBasic = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepBasic
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepBasic.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_RWStepBasic.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_RWStepBasic.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_RWStepBasic.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_RWStepBasic.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_RWStepBasic.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_RWStepBasic.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_RWStepBasic.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_RWStepBasic.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_RWStepBasic.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_RWStepBasic.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_RWStepBasic.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_RWStepBasic.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_RWStepBasic.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_RWStepBasic.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_RWStepBasic.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_RWStepBasic.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _RWStepBasic.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _RWStepBasic.process_exception(error, method_name, class_name)
process_exception = _RWStepBasic.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepBasic
class RWStepBasic_RWAction(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWAction_swiginit(self, _RWStepBasic.new_RWStepBasic_RWAction(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Action
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Action
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWAction_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_Action
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWAction_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Action
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Action
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWAction_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWAction
RWStepBasic_RWAction.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWAction_ReadStep, None, RWStepBasic_RWAction)
RWStepBasic_RWAction.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWAction_Share, None, RWStepBasic_RWAction)
RWStepBasic_RWAction.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWAction_WriteStep, None, RWStepBasic_RWAction)
RWStepBasic_RWAction_swigregister = _RWStepBasic.RWStepBasic_RWAction_swigregister
RWStepBasic_RWAction_swigregister(RWStepBasic_RWAction)

class RWStepBasic_RWActionAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWActionAssignment_swiginit(self, _RWStepBasic.new_RWStepBasic_RWActionAssignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ActionAssignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ActionAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ActionAssignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ActionAssignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ActionAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWActionAssignment
RWStepBasic_RWActionAssignment.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionAssignment_ReadStep, None, RWStepBasic_RWActionAssignment)
RWStepBasic_RWActionAssignment.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionAssignment_Share, None, RWStepBasic_RWActionAssignment)
RWStepBasic_RWActionAssignment.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionAssignment_WriteStep, None, RWStepBasic_RWActionAssignment)
RWStepBasic_RWActionAssignment_swigregister = _RWStepBasic.RWStepBasic_RWActionAssignment_swigregister
RWStepBasic_RWActionAssignment_swigregister(RWStepBasic_RWActionAssignment)

class RWStepBasic_RWActionMethod(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWActionMethod_swiginit(self, _RWStepBasic.new_RWStepBasic_RWActionMethod(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ActionMethod
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ActionMethod
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionMethod_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ActionMethod
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionMethod_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ActionMethod
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ActionMethod
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionMethod_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWActionMethod
RWStepBasic_RWActionMethod.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionMethod_ReadStep, None, RWStepBasic_RWActionMethod)
RWStepBasic_RWActionMethod.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionMethod_Share, None, RWStepBasic_RWActionMethod)
RWStepBasic_RWActionMethod.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionMethod_WriteStep, None, RWStepBasic_RWActionMethod)
RWStepBasic_RWActionMethod_swigregister = _RWStepBasic.RWStepBasic_RWActionMethod_swigregister
RWStepBasic_RWActionMethod_swigregister(RWStepBasic_RWActionMethod)

class RWStepBasic_RWActionRequestAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWActionRequestAssignment_swiginit(self, _RWStepBasic.new_RWStepBasic_RWActionRequestAssignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ActionRequestAssignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ActionRequestAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionRequestAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ActionRequestAssignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionRequestAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ActionRequestAssignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ActionRequestAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionRequestAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWActionRequestAssignment
RWStepBasic_RWActionRequestAssignment.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionRequestAssignment_ReadStep, None, RWStepBasic_RWActionRequestAssignment)
RWStepBasic_RWActionRequestAssignment.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionRequestAssignment_Share, None, RWStepBasic_RWActionRequestAssignment)
RWStepBasic_RWActionRequestAssignment.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionRequestAssignment_WriteStep, None, RWStepBasic_RWActionRequestAssignment)
RWStepBasic_RWActionRequestAssignment_swigregister = _RWStepBasic.RWStepBasic_RWActionRequestAssignment_swigregister
RWStepBasic_RWActionRequestAssignment_swigregister(RWStepBasic_RWActionRequestAssignment)

class RWStepBasic_RWActionRequestSolution(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWActionRequestSolution_swiginit(self, _RWStepBasic.new_RWStepBasic_RWActionRequestSolution(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ActionRequestSolution
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ActionRequestSolution
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionRequestSolution_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ActionRequestSolution
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionRequestSolution_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ActionRequestSolution
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ActionRequestSolution
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWActionRequestSolution_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWActionRequestSolution
RWStepBasic_RWActionRequestSolution.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionRequestSolution_ReadStep, None, RWStepBasic_RWActionRequestSolution)
RWStepBasic_RWActionRequestSolution.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionRequestSolution_Share, None, RWStepBasic_RWActionRequestSolution)
RWStepBasic_RWActionRequestSolution.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWActionRequestSolution_WriteStep, None, RWStepBasic_RWActionRequestSolution)
RWStepBasic_RWActionRequestSolution_swigregister = _RWStepBasic.RWStepBasic_RWActionRequestSolution_swigregister
RWStepBasic_RWActionRequestSolution_swigregister(RWStepBasic_RWActionRequestSolution)

class RWStepBasic_RWAddress(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWAddress_swiginit(self, _RWStepBasic.new_RWStepBasic_RWAddress(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Address
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWAddress_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Address
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWAddress_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWAddress
RWStepBasic_RWAddress.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWAddress_ReadStep, None, RWStepBasic_RWAddress)
RWStepBasic_RWAddress.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWAddress_WriteStep, None, RWStepBasic_RWAddress)
RWStepBasic_RWAddress_swigregister = _RWStepBasic.RWStepBasic_RWAddress_swigregister
RWStepBasic_RWAddress_swigregister(RWStepBasic_RWAddress)

class RWStepBasic_RWApplicationContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWApplicationContext_swiginit(self, _RWStepBasic.new_RWStepBasic_RWApplicationContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ApplicationContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApplicationContext_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ApplicationContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApplicationContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApplicationContext
RWStepBasic_RWApplicationContext.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApplicationContext_ReadStep, None, RWStepBasic_RWApplicationContext)
RWStepBasic_RWApplicationContext.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApplicationContext_WriteStep, None, RWStepBasic_RWApplicationContext)
RWStepBasic_RWApplicationContext_swigregister = _RWStepBasic.RWStepBasic_RWApplicationContext_swigregister
RWStepBasic_RWApplicationContext_swigregister(RWStepBasic_RWApplicationContext)

class RWStepBasic_RWApplicationContextElement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWApplicationContextElement_swiginit(self, _RWStepBasic.new_RWStepBasic_RWApplicationContextElement(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ApplicationContextElement
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApplicationContextElement_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ApplicationContextElement
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApplicationContextElement_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ApplicationContextElement
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApplicationContextElement_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApplicationContextElement
RWStepBasic_RWApplicationContextElement.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApplicationContextElement_ReadStep, None, RWStepBasic_RWApplicationContextElement)
RWStepBasic_RWApplicationContextElement.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWApplicationContextElement_Share, None, RWStepBasic_RWApplicationContextElement)
RWStepBasic_RWApplicationContextElement.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApplicationContextElement_WriteStep, None, RWStepBasic_RWApplicationContextElement)
RWStepBasic_RWApplicationContextElement_swigregister = _RWStepBasic.RWStepBasic_RWApplicationContextElement_swigregister
RWStepBasic_RWApplicationContextElement_swigregister(RWStepBasic_RWApplicationContextElement)

class RWStepBasic_RWApplicationProtocolDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_swiginit(self, _RWStepBasic.new_RWStepBasic_RWApplicationProtocolDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ApplicationProtocolDefinition
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ApplicationProtocolDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ApplicationProtocolDefinition
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApplicationProtocolDefinition
RWStepBasic_RWApplicationProtocolDefinition.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_ReadStep, None, RWStepBasic_RWApplicationProtocolDefinition)
RWStepBasic_RWApplicationProtocolDefinition.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_Share, None, RWStepBasic_RWApplicationProtocolDefinition)
RWStepBasic_RWApplicationProtocolDefinition.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_WriteStep, None, RWStepBasic_RWApplicationProtocolDefinition)
RWStepBasic_RWApplicationProtocolDefinition_swigregister = _RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_swigregister
RWStepBasic_RWApplicationProtocolDefinition_swigregister(RWStepBasic_RWApplicationProtocolDefinition)

class RWStepBasic_RWApproval(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWApproval_swiginit(self, _RWStepBasic.new_RWStepBasic_RWApproval(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Approval
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApproval_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_Approval
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApproval_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Approval
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApproval_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApproval
RWStepBasic_RWApproval.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApproval_ReadStep, None, RWStepBasic_RWApproval)
RWStepBasic_RWApproval.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWApproval_Share, None, RWStepBasic_RWApproval)
RWStepBasic_RWApproval.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApproval_WriteStep, None, RWStepBasic_RWApproval)
RWStepBasic_RWApproval_swigregister = _RWStepBasic.RWStepBasic_RWApproval_swigregister
RWStepBasic_RWApproval_swigregister(RWStepBasic_RWApproval)

class RWStepBasic_RWApprovalDateTime(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWApprovalDateTime_swiginit(self, _RWStepBasic.new_RWStepBasic_RWApprovalDateTime(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ApprovalDateTime
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalDateTime_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ApprovalDateTime
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalDateTime_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ApprovalDateTime
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalDateTime_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalDateTime
RWStepBasic_RWApprovalDateTime.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalDateTime_ReadStep, None, RWStepBasic_RWApprovalDateTime)
RWStepBasic_RWApprovalDateTime.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalDateTime_Share, None, RWStepBasic_RWApprovalDateTime)
RWStepBasic_RWApprovalDateTime.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalDateTime_WriteStep, None, RWStepBasic_RWApprovalDateTime)
RWStepBasic_RWApprovalDateTime_swigregister = _RWStepBasic.RWStepBasic_RWApprovalDateTime_swigregister
RWStepBasic_RWApprovalDateTime_swigregister(RWStepBasic_RWApprovalDateTime)

class RWStepBasic_RWApprovalPersonOrganization(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_swiginit(self, _RWStepBasic.new_RWStepBasic_RWApprovalPersonOrganization(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ApprovalPersonOrganization
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ApprovalPersonOrganization
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ApprovalPersonOrganization
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalPersonOrganization
RWStepBasic_RWApprovalPersonOrganization.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_ReadStep, None, RWStepBasic_RWApprovalPersonOrganization)
RWStepBasic_RWApprovalPersonOrganization.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_Share, None, RWStepBasic_RWApprovalPersonOrganization)
RWStepBasic_RWApprovalPersonOrganization.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_WriteStep, None, RWStepBasic_RWApprovalPersonOrganization)
RWStepBasic_RWApprovalPersonOrganization_swigregister = _RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_swigregister
RWStepBasic_RWApprovalPersonOrganization_swigregister(RWStepBasic_RWApprovalPersonOrganization)

class RWStepBasic_RWApprovalRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWApprovalRelationship_swiginit(self, _RWStepBasic.new_RWStepBasic_RWApprovalRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ApprovalRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ApprovalRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ApprovalRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalRelationship
RWStepBasic_RWApprovalRelationship.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalRelationship_ReadStep, None, RWStepBasic_RWApprovalRelationship)
RWStepBasic_RWApprovalRelationship.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalRelationship_Share, None, RWStepBasic_RWApprovalRelationship)
RWStepBasic_RWApprovalRelationship.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalRelationship_WriteStep, None, RWStepBasic_RWApprovalRelationship)
RWStepBasic_RWApprovalRelationship_swigregister = _RWStepBasic.RWStepBasic_RWApprovalRelationship_swigregister
RWStepBasic_RWApprovalRelationship_swigregister(RWStepBasic_RWApprovalRelationship)

class RWStepBasic_RWApprovalRole(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWApprovalRole_swiginit(self, _RWStepBasic.new_RWStepBasic_RWApprovalRole(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ApprovalRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ApprovalRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalRole
RWStepBasic_RWApprovalRole.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalRole_ReadStep, None, RWStepBasic_RWApprovalRole)
RWStepBasic_RWApprovalRole.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalRole_WriteStep, None, RWStepBasic_RWApprovalRole)
RWStepBasic_RWApprovalRole_swigregister = _RWStepBasic.RWStepBasic_RWApprovalRole_swigregister
RWStepBasic_RWApprovalRole_swigregister(RWStepBasic_RWApprovalRole)

class RWStepBasic_RWApprovalStatus(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWApprovalStatus_swiginit(self, _RWStepBasic.new_RWStepBasic_RWApprovalStatus(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ApprovalStatus
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalStatus_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ApprovalStatus
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWApprovalStatus_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalStatus
RWStepBasic_RWApprovalStatus.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalStatus_ReadStep, None, RWStepBasic_RWApprovalStatus)
RWStepBasic_RWApprovalStatus.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWApprovalStatus_WriteStep, None, RWStepBasic_RWApprovalStatus)
RWStepBasic_RWApprovalStatus_swigregister = _RWStepBasic.RWStepBasic_RWApprovalStatus_swigregister
RWStepBasic_RWApprovalStatus_swigregister(RWStepBasic_RWApprovalStatus)

class RWStepBasic_RWCalendarDate(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWCalendarDate_swiginit(self, _RWStepBasic.new_RWStepBasic_RWCalendarDate(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_CalendarDate
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCalendarDate_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_CalendarDate
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCalendarDate_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCalendarDate
RWStepBasic_RWCalendarDate.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCalendarDate_ReadStep, None, RWStepBasic_RWCalendarDate)
RWStepBasic_RWCalendarDate.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCalendarDate_WriteStep, None, RWStepBasic_RWCalendarDate)
RWStepBasic_RWCalendarDate_swigregister = _RWStepBasic.RWStepBasic_RWCalendarDate_swigregister
RWStepBasic_RWCalendarDate_swigregister(RWStepBasic_RWCalendarDate)

class RWStepBasic_RWCertification(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWCertification_swiginit(self, _RWStepBasic.new_RWStepBasic_RWCertification(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Certification
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Certification
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCertification_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_Certification
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCertification_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Certification
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Certification
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCertification_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCertification
RWStepBasic_RWCertification.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCertification_ReadStep, None, RWStepBasic_RWCertification)
RWStepBasic_RWCertification.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWCertification_Share, None, RWStepBasic_RWCertification)
RWStepBasic_RWCertification.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCertification_WriteStep, None, RWStepBasic_RWCertification)
RWStepBasic_RWCertification_swigregister = _RWStepBasic.RWStepBasic_RWCertification_swigregister
RWStepBasic_RWCertification_swigregister(RWStepBasic_RWCertification)

class RWStepBasic_RWCertificationAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWCertificationAssignment_swiginit(self, _RWStepBasic.new_RWStepBasic_RWCertificationAssignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CertificationAssignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_CertificationAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCertificationAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_CertificationAssignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCertificationAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CertificationAssignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_CertificationAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCertificationAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCertificationAssignment
RWStepBasic_RWCertificationAssignment.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCertificationAssignment_ReadStep, None, RWStepBasic_RWCertificationAssignment)
RWStepBasic_RWCertificationAssignment.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWCertificationAssignment_Share, None, RWStepBasic_RWCertificationAssignment)
RWStepBasic_RWCertificationAssignment.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCertificationAssignment_WriteStep, None, RWStepBasic_RWCertificationAssignment)
RWStepBasic_RWCertificationAssignment_swigregister = _RWStepBasic.RWStepBasic_RWCertificationAssignment_swigregister
RWStepBasic_RWCertificationAssignment_swigregister(RWStepBasic_RWCertificationAssignment)

class RWStepBasic_RWCertificationType(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWCertificationType_swiginit(self, _RWStepBasic.new_RWStepBasic_RWCertificationType(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CertificationType
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_CertificationType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCertificationType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_CertificationType
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCertificationType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CertificationType
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_CertificationType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCertificationType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCertificationType
RWStepBasic_RWCertificationType.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCertificationType_ReadStep, None, RWStepBasic_RWCertificationType)
RWStepBasic_RWCertificationType.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWCertificationType_Share, None, RWStepBasic_RWCertificationType)
RWStepBasic_RWCertificationType.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCertificationType_WriteStep, None, RWStepBasic_RWCertificationType)
RWStepBasic_RWCertificationType_swigregister = _RWStepBasic.RWStepBasic_RWCertificationType_swigregister
RWStepBasic_RWCertificationType_swigregister(RWStepBasic_RWCertificationType)

class RWStepBasic_RWCharacterizedObject(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWCharacterizedObject_swiginit(self, _RWStepBasic.new_RWStepBasic_RWCharacterizedObject(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CharacterizedObject
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_CharacterizedObject
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCharacterizedObject_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_CharacterizedObject
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCharacterizedObject_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CharacterizedObject
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_CharacterizedObject
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCharacterizedObject_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCharacterizedObject
RWStepBasic_RWCharacterizedObject.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCharacterizedObject_ReadStep, None, RWStepBasic_RWCharacterizedObject)
RWStepBasic_RWCharacterizedObject.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWCharacterizedObject_Share, None, RWStepBasic_RWCharacterizedObject)
RWStepBasic_RWCharacterizedObject.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCharacterizedObject_WriteStep, None, RWStepBasic_RWCharacterizedObject)
RWStepBasic_RWCharacterizedObject_swigregister = _RWStepBasic.RWStepBasic_RWCharacterizedObject_swigregister
RWStepBasic_RWCharacterizedObject_swigregister(RWStepBasic_RWCharacterizedObject)

class RWStepBasic_RWContract(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWContract_swiginit(self, _RWStepBasic.new_RWStepBasic_RWContract(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Contract
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Contract
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWContract_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_Contract
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWContract_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Contract
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Contract
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWContract_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWContract
RWStepBasic_RWContract.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWContract_ReadStep, None, RWStepBasic_RWContract)
RWStepBasic_RWContract.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWContract_Share, None, RWStepBasic_RWContract)
RWStepBasic_RWContract.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWContract_WriteStep, None, RWStepBasic_RWContract)
RWStepBasic_RWContract_swigregister = _RWStepBasic.RWStepBasic_RWContract_swigregister
RWStepBasic_RWContract_swigregister(RWStepBasic_RWContract)

class RWStepBasic_RWContractAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWContractAssignment_swiginit(self, _RWStepBasic.new_RWStepBasic_RWContractAssignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ContractAssignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ContractAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWContractAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ContractAssignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWContractAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ContractAssignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ContractAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWContractAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWContractAssignment
RWStepBasic_RWContractAssignment.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWContractAssignment_ReadStep, None, RWStepBasic_RWContractAssignment)
RWStepBasic_RWContractAssignment.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWContractAssignment_Share, None, RWStepBasic_RWContractAssignment)
RWStepBasic_RWContractAssignment.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWContractAssignment_WriteStep, None, RWStepBasic_RWContractAssignment)
RWStepBasic_RWContractAssignment_swigregister = _RWStepBasic.RWStepBasic_RWContractAssignment_swigregister
RWStepBasic_RWContractAssignment_swigregister(RWStepBasic_RWContractAssignment)

class RWStepBasic_RWContractType(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWContractType_swiginit(self, _RWStepBasic.new_RWStepBasic_RWContractType(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ContractType
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ContractType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWContractType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ContractType
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWContractType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ContractType
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ContractType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWContractType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWContractType
RWStepBasic_RWContractType.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWContractType_ReadStep, None, RWStepBasic_RWContractType)
RWStepBasic_RWContractType.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWContractType_Share, None, RWStepBasic_RWContractType)
RWStepBasic_RWContractType.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWContractType_WriteStep, None, RWStepBasic_RWContractType)
RWStepBasic_RWContractType_swigregister = _RWStepBasic.RWStepBasic_RWContractType_swigregister
RWStepBasic_RWContractType_swigregister(RWStepBasic_RWContractType)

class RWStepBasic_RWConversionBasedUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWConversionBasedUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWConversionBasedUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ConversionBasedUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnit
RWStepBasic_RWConversionBasedUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnit_ReadStep, None, RWStepBasic_RWConversionBasedUnit)
RWStepBasic_RWConversionBasedUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnit_Share, None, RWStepBasic_RWConversionBasedUnit)
RWStepBasic_RWConversionBasedUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnit_WriteStep, None, RWStepBasic_RWConversionBasedUnit)
RWStepBasic_RWConversionBasedUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnit_swigregister
RWStepBasic_RWConversionBasedUnit_swigregister(RWStepBasic_RWConversionBasedUnit)

class RWStepBasic_RWConversionBasedUnitAndAreaUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndAreaUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndAreaUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndAreaUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndAreaUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndAreaUnit
RWStepBasic_RWConversionBasedUnitAndAreaUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_ReadStep, None, RWStepBasic_RWConversionBasedUnitAndAreaUnit)
RWStepBasic_RWConversionBasedUnitAndAreaUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_Share, None, RWStepBasic_RWConversionBasedUnitAndAreaUnit)
RWStepBasic_RWConversionBasedUnitAndAreaUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_WriteStep, None, RWStepBasic_RWConversionBasedUnitAndAreaUnit)
RWStepBasic_RWConversionBasedUnitAndAreaUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndAreaUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndAreaUnit)

class RWStepBasic_RWConversionBasedUnitAndLengthUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndLengthUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndLengthUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndLengthUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndLengthUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndLengthUnit
RWStepBasic_RWConversionBasedUnitAndLengthUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_ReadStep, None, RWStepBasic_RWConversionBasedUnitAndLengthUnit)
RWStepBasic_RWConversionBasedUnitAndLengthUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_Share, None, RWStepBasic_RWConversionBasedUnitAndLengthUnit)
RWStepBasic_RWConversionBasedUnitAndLengthUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_WriteStep, None, RWStepBasic_RWConversionBasedUnitAndLengthUnit)
RWStepBasic_RWConversionBasedUnitAndLengthUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndLengthUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndLengthUnit)

class RWStepBasic_RWConversionBasedUnitAndMassUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndMassUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndMassUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndMassUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndMassUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndMassUnit
RWStepBasic_RWConversionBasedUnitAndMassUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_ReadStep, None, RWStepBasic_RWConversionBasedUnitAndMassUnit)
RWStepBasic_RWConversionBasedUnitAndMassUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_Share, None, RWStepBasic_RWConversionBasedUnitAndMassUnit)
RWStepBasic_RWConversionBasedUnitAndMassUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_WriteStep, None, RWStepBasic_RWConversionBasedUnitAndMassUnit)
RWStepBasic_RWConversionBasedUnitAndMassUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndMassUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndMassUnit)

class RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndPlaneAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndPlaneAngleUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndPlaneAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit
RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_ReadStep, None, RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit)
RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_Share, None, RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit)
RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_WriteStep, None, RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit)
RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit)

class RWStepBasic_RWConversionBasedUnitAndRatioUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndRatioUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndRatioUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndRatioUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndRatioUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndRatioUnit
RWStepBasic_RWConversionBasedUnitAndRatioUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_ReadStep, None, RWStepBasic_RWConversionBasedUnitAndRatioUnit)
RWStepBasic_RWConversionBasedUnitAndRatioUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_Share, None, RWStepBasic_RWConversionBasedUnitAndRatioUnit)
RWStepBasic_RWConversionBasedUnitAndRatioUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_WriteStep, None, RWStepBasic_RWConversionBasedUnitAndRatioUnit)
RWStepBasic_RWConversionBasedUnitAndRatioUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndRatioUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndRatioUnit)

class RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndSolidAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndSolidAngleUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndSolidAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit
RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_ReadStep, None, RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit)
RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_Share, None, RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit)
RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_WriteStep, None, RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit)
RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit)

class RWStepBasic_RWConversionBasedUnitAndTimeUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndTimeUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndTimeUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndTimeUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndTimeUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndTimeUnit
RWStepBasic_RWConversionBasedUnitAndTimeUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_ReadStep, None, RWStepBasic_RWConversionBasedUnitAndTimeUnit)
RWStepBasic_RWConversionBasedUnitAndTimeUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_Share, None, RWStepBasic_RWConversionBasedUnitAndTimeUnit)
RWStepBasic_RWConversionBasedUnitAndTimeUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_WriteStep, None, RWStepBasic_RWConversionBasedUnitAndTimeUnit)
RWStepBasic_RWConversionBasedUnitAndTimeUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndTimeUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndTimeUnit)

class RWStepBasic_RWConversionBasedUnitAndVolumeUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndVolumeUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndVolumeUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndVolumeUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ConversionBasedUnitAndVolumeUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndVolumeUnit
RWStepBasic_RWConversionBasedUnitAndVolumeUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_ReadStep, None, RWStepBasic_RWConversionBasedUnitAndVolumeUnit)
RWStepBasic_RWConversionBasedUnitAndVolumeUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_Share, None, RWStepBasic_RWConversionBasedUnitAndVolumeUnit)
RWStepBasic_RWConversionBasedUnitAndVolumeUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_WriteStep, None, RWStepBasic_RWConversionBasedUnitAndVolumeUnit)
RWStepBasic_RWConversionBasedUnitAndVolumeUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndVolumeUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndVolumeUnit)

class RWStepBasic_RWCoordinatedUniversalTimeOffset(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWCoordinatedUniversalTimeOffset_swiginit(self, _RWStepBasic.new_RWStepBasic_RWCoordinatedUniversalTimeOffset(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_CoordinatedUniversalTimeOffset
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCoordinatedUniversalTimeOffset_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_CoordinatedUniversalTimeOffset
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWCoordinatedUniversalTimeOffset_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCoordinatedUniversalTimeOffset
RWStepBasic_RWCoordinatedUniversalTimeOffset.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCoordinatedUniversalTimeOffset_ReadStep, None, RWStepBasic_RWCoordinatedUniversalTimeOffset)
RWStepBasic_RWCoordinatedUniversalTimeOffset.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWCoordinatedUniversalTimeOffset_WriteStep, None, RWStepBasic_RWCoordinatedUniversalTimeOffset)
RWStepBasic_RWCoordinatedUniversalTimeOffset_swigregister = _RWStepBasic.RWStepBasic_RWCoordinatedUniversalTimeOffset_swigregister
RWStepBasic_RWCoordinatedUniversalTimeOffset_swigregister(RWStepBasic_RWCoordinatedUniversalTimeOffset)

class RWStepBasic_RWDate(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDate_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDate(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Date
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDate_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Date
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDate_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDate
RWStepBasic_RWDate.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDate_ReadStep, None, RWStepBasic_RWDate)
RWStepBasic_RWDate.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDate_WriteStep, None, RWStepBasic_RWDate)
RWStepBasic_RWDate_swigregister = _RWStepBasic.RWStepBasic_RWDate_swigregister
RWStepBasic_RWDate_swigregister(RWStepBasic_RWDate)

class RWStepBasic_RWDateAndTime(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDateAndTime_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDateAndTime(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DateAndTime
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDateAndTime_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_DateAndTime
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDateAndTime_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DateAndTime
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDateAndTime_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDateAndTime
RWStepBasic_RWDateAndTime.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDateAndTime_ReadStep, None, RWStepBasic_RWDateAndTime)
RWStepBasic_RWDateAndTime.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDateAndTime_Share, None, RWStepBasic_RWDateAndTime)
RWStepBasic_RWDateAndTime.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDateAndTime_WriteStep, None, RWStepBasic_RWDateAndTime)
RWStepBasic_RWDateAndTime_swigregister = _RWStepBasic.RWStepBasic_RWDateAndTime_swigregister
RWStepBasic_RWDateAndTime_swigregister(RWStepBasic_RWDateAndTime)

class RWStepBasic_RWDateRole(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDateRole_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDateRole(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DateRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDateRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DateRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDateRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDateRole
RWStepBasic_RWDateRole.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDateRole_ReadStep, None, RWStepBasic_RWDateRole)
RWStepBasic_RWDateRole.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDateRole_WriteStep, None, RWStepBasic_RWDateRole)
RWStepBasic_RWDateRole_swigregister = _RWStepBasic.RWStepBasic_RWDateRole_swigregister
RWStepBasic_RWDateRole_swigregister(RWStepBasic_RWDateRole)

class RWStepBasic_RWDateTimeRole(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDateTimeRole_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDateTimeRole(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DateTimeRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDateTimeRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DateTimeRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDateTimeRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDateTimeRole
RWStepBasic_RWDateTimeRole.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDateTimeRole_ReadStep, None, RWStepBasic_RWDateTimeRole)
RWStepBasic_RWDateTimeRole.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDateTimeRole_WriteStep, None, RWStepBasic_RWDateTimeRole)
RWStepBasic_RWDateTimeRole_swigregister = _RWStepBasic.RWStepBasic_RWDateTimeRole_swigregister
RWStepBasic_RWDateTimeRole_swigregister(RWStepBasic_RWDateTimeRole)

class RWStepBasic_RWDerivedUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDerivedUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDerivedUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DerivedUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_DerivedUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DerivedUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDerivedUnit
RWStepBasic_RWDerivedUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDerivedUnit_ReadStep, None, RWStepBasic_RWDerivedUnit)
RWStepBasic_RWDerivedUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDerivedUnit_Share, None, RWStepBasic_RWDerivedUnit)
RWStepBasic_RWDerivedUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDerivedUnit_WriteStep, None, RWStepBasic_RWDerivedUnit)
RWStepBasic_RWDerivedUnit_swigregister = _RWStepBasic.RWStepBasic_RWDerivedUnit_swigregister
RWStepBasic_RWDerivedUnit_swigregister(RWStepBasic_RWDerivedUnit)

class RWStepBasic_RWDerivedUnitElement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDerivedUnitElement_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDerivedUnitElement(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DerivedUnitElement
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnitElement_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_DerivedUnitElement
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnitElement_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DerivedUnitElement
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnitElement_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDerivedUnitElement
RWStepBasic_RWDerivedUnitElement.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDerivedUnitElement_ReadStep, None, RWStepBasic_RWDerivedUnitElement)
RWStepBasic_RWDerivedUnitElement.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDerivedUnitElement_Share, None, RWStepBasic_RWDerivedUnitElement)
RWStepBasic_RWDerivedUnitElement.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDerivedUnitElement_WriteStep, None, RWStepBasic_RWDerivedUnitElement)
RWStepBasic_RWDerivedUnitElement_swigregister = _RWStepBasic.RWStepBasic_RWDerivedUnitElement_swigregister
RWStepBasic_RWDerivedUnitElement_swigregister(RWStepBasic_RWDerivedUnitElement)

class RWStepBasic_RWDimensionalExponents(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDimensionalExponents_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDimensionalExponents(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DimensionalExponents
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDimensionalExponents_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DimensionalExponents
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDimensionalExponents_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDimensionalExponents
RWStepBasic_RWDimensionalExponents.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDimensionalExponents_ReadStep, None, RWStepBasic_RWDimensionalExponents)
RWStepBasic_RWDimensionalExponents.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDimensionalExponents_WriteStep, None, RWStepBasic_RWDimensionalExponents)
RWStepBasic_RWDimensionalExponents_swigregister = _RWStepBasic.RWStepBasic_RWDimensionalExponents_swigregister
RWStepBasic_RWDimensionalExponents_swigregister(RWStepBasic_RWDimensionalExponents)

class RWStepBasic_RWDocument(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWDocument_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDocument(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Document
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Document
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocument_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_Document
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocument_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Document
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Document
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocument_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocument
RWStepBasic_RWDocument.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocument_ReadStep, None, RWStepBasic_RWDocument)
RWStepBasic_RWDocument.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocument_Share, None, RWStepBasic_RWDocument)
RWStepBasic_RWDocument.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocument_WriteStep, None, RWStepBasic_RWDocument)
RWStepBasic_RWDocument_swigregister = _RWStepBasic.RWStepBasic_RWDocument_swigregister
RWStepBasic_RWDocument_swigregister(RWStepBasic_RWDocument)

class RWStepBasic_RWDocumentFile(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWDocumentFile_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDocumentFile(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DocumentFile
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DocumentFile
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentFile_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_DocumentFile
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentFile_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DocumentFile
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DocumentFile
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentFile_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentFile
RWStepBasic_RWDocumentFile.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentFile_ReadStep, None, RWStepBasic_RWDocumentFile)
RWStepBasic_RWDocumentFile.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentFile_Share, None, RWStepBasic_RWDocumentFile)
RWStepBasic_RWDocumentFile.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentFile_WriteStep, None, RWStepBasic_RWDocumentFile)
RWStepBasic_RWDocumentFile_swigregister = _RWStepBasic.RWStepBasic_RWDocumentFile_swigregister
RWStepBasic_RWDocumentFile_swigregister(RWStepBasic_RWDocumentFile)

class RWStepBasic_RWDocumentProductAssociation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWDocumentProductAssociation_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDocumentProductAssociation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DocumentProductAssociation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DocumentProductAssociation
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductAssociation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_DocumentProductAssociation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductAssociation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DocumentProductAssociation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DocumentProductAssociation
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductAssociation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentProductAssociation
RWStepBasic_RWDocumentProductAssociation.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentProductAssociation_ReadStep, None, RWStepBasic_RWDocumentProductAssociation)
RWStepBasic_RWDocumentProductAssociation.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentProductAssociation_Share, None, RWStepBasic_RWDocumentProductAssociation)
RWStepBasic_RWDocumentProductAssociation.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentProductAssociation_WriteStep, None, RWStepBasic_RWDocumentProductAssociation)
RWStepBasic_RWDocumentProductAssociation_swigregister = _RWStepBasic.RWStepBasic_RWDocumentProductAssociation_swigregister
RWStepBasic_RWDocumentProductAssociation_swigregister(RWStepBasic_RWDocumentProductAssociation)

class RWStepBasic_RWDocumentProductEquivalence(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDocumentProductEquivalence(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DocumentProductEquivalence
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DocumentProductEquivalence
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_DocumentProductEquivalence
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DocumentProductEquivalence
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DocumentProductEquivalence
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentProductEquivalence
RWStepBasic_RWDocumentProductEquivalence.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_ReadStep, None, RWStepBasic_RWDocumentProductEquivalence)
RWStepBasic_RWDocumentProductEquivalence.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_Share, None, RWStepBasic_RWDocumentProductEquivalence)
RWStepBasic_RWDocumentProductEquivalence.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_WriteStep, None, RWStepBasic_RWDocumentProductEquivalence)
RWStepBasic_RWDocumentProductEquivalence_swigregister = _RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_swigregister
RWStepBasic_RWDocumentProductEquivalence_swigregister(RWStepBasic_RWDocumentProductEquivalence)

class RWStepBasic_RWDocumentRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDocumentRelationship_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDocumentRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DocumentRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_DocumentRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DocumentRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentRelationship
RWStepBasic_RWDocumentRelationship.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentRelationship_ReadStep, None, RWStepBasic_RWDocumentRelationship)
RWStepBasic_RWDocumentRelationship.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentRelationship_Share, None, RWStepBasic_RWDocumentRelationship)
RWStepBasic_RWDocumentRelationship.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentRelationship_WriteStep, None, RWStepBasic_RWDocumentRelationship)
RWStepBasic_RWDocumentRelationship_swigregister = _RWStepBasic.RWStepBasic_RWDocumentRelationship_swigregister
RWStepBasic_RWDocumentRelationship_swigregister(RWStepBasic_RWDocumentRelationship)

class RWStepBasic_RWDocumentRepresentationType(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWDocumentRepresentationType_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDocumentRepresentationType(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DocumentRepresentationType
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DocumentRepresentationType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentRepresentationType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_DocumentRepresentationType
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentRepresentationType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DocumentRepresentationType
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DocumentRepresentationType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentRepresentationType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentRepresentationType
RWStepBasic_RWDocumentRepresentationType.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentRepresentationType_ReadStep, None, RWStepBasic_RWDocumentRepresentationType)
RWStepBasic_RWDocumentRepresentationType.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentRepresentationType_Share, None, RWStepBasic_RWDocumentRepresentationType)
RWStepBasic_RWDocumentRepresentationType.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentRepresentationType_WriteStep, None, RWStepBasic_RWDocumentRepresentationType)
RWStepBasic_RWDocumentRepresentationType_swigregister = _RWStepBasic.RWStepBasic_RWDocumentRepresentationType_swigregister
RWStepBasic_RWDocumentRepresentationType_swigregister(RWStepBasic_RWDocumentRepresentationType)

class RWStepBasic_RWDocumentType(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDocumentType_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDocumentType(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DocumentType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_DocumentType
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DocumentType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentType
RWStepBasic_RWDocumentType.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentType_ReadStep, None, RWStepBasic_RWDocumentType)
RWStepBasic_RWDocumentType.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentType_Share, None, RWStepBasic_RWDocumentType)
RWStepBasic_RWDocumentType.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentType_WriteStep, None, RWStepBasic_RWDocumentType)
RWStepBasic_RWDocumentType_swigregister = _RWStepBasic.RWStepBasic_RWDocumentType_swigregister
RWStepBasic_RWDocumentType_swigregister(RWStepBasic_RWDocumentType)

class RWStepBasic_RWDocumentUsageConstraint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_swiginit(self, _RWStepBasic.new_RWStepBasic_RWDocumentUsageConstraint(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_DocumentUsageConstraint
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_DocumentUsageConstraint
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_DocumentUsageConstraint
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentUsageConstraint
RWStepBasic_RWDocumentUsageConstraint.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_ReadStep, None, RWStepBasic_RWDocumentUsageConstraint)
RWStepBasic_RWDocumentUsageConstraint.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_Share, None, RWStepBasic_RWDocumentUsageConstraint)
RWStepBasic_RWDocumentUsageConstraint.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_WriteStep, None, RWStepBasic_RWDocumentUsageConstraint)
RWStepBasic_RWDocumentUsageConstraint_swigregister = _RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_swigregister
RWStepBasic_RWDocumentUsageConstraint_swigregister(RWStepBasic_RWDocumentUsageConstraint)

class RWStepBasic_RWEffectivity(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWEffectivity_swiginit(self, _RWStepBasic.new_RWStepBasic_RWEffectivity(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Effectivity
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWEffectivity_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_Effectivity
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWEffectivity_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Effectivity
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWEffectivity_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWEffectivity
RWStepBasic_RWEffectivity.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWEffectivity_ReadStep, None, RWStepBasic_RWEffectivity)
RWStepBasic_RWEffectivity.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWEffectivity_Share, None, RWStepBasic_RWEffectivity)
RWStepBasic_RWEffectivity.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWEffectivity_WriteStep, None, RWStepBasic_RWEffectivity)
RWStepBasic_RWEffectivity_swigregister = _RWStepBasic.RWStepBasic_RWEffectivity_swigregister
RWStepBasic_RWEffectivity_swigregister(RWStepBasic_RWEffectivity)

class RWStepBasic_RWEffectivityAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWEffectivityAssignment_swiginit(self, _RWStepBasic.new_RWStepBasic_RWEffectivityAssignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads EffectivityAssignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_EffectivityAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWEffectivityAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_EffectivityAssignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWEffectivityAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes EffectivityAssignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_EffectivityAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWEffectivityAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWEffectivityAssignment
RWStepBasic_RWEffectivityAssignment.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWEffectivityAssignment_ReadStep, None, RWStepBasic_RWEffectivityAssignment)
RWStepBasic_RWEffectivityAssignment.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWEffectivityAssignment_Share, None, RWStepBasic_RWEffectivityAssignment)
RWStepBasic_RWEffectivityAssignment.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWEffectivityAssignment_WriteStep, None, RWStepBasic_RWEffectivityAssignment)
RWStepBasic_RWEffectivityAssignment_swigregister = _RWStepBasic.RWStepBasic_RWEffectivityAssignment_swigregister
RWStepBasic_RWEffectivityAssignment_swigregister(RWStepBasic_RWEffectivityAssignment)

class RWStepBasic_RWEulerAngles(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWEulerAngles_swiginit(self, _RWStepBasic.new_RWStepBasic_RWEulerAngles(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads EulerAngles
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_EulerAngles
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWEulerAngles_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_EulerAngles
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWEulerAngles_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes EulerAngles
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_EulerAngles
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWEulerAngles_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWEulerAngles
RWStepBasic_RWEulerAngles.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWEulerAngles_ReadStep, None, RWStepBasic_RWEulerAngles)
RWStepBasic_RWEulerAngles.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWEulerAngles_Share, None, RWStepBasic_RWEulerAngles)
RWStepBasic_RWEulerAngles.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWEulerAngles_WriteStep, None, RWStepBasic_RWEulerAngles)
RWStepBasic_RWEulerAngles_swigregister = _RWStepBasic.RWStepBasic_RWEulerAngles_swigregister
RWStepBasic_RWEulerAngles_swigregister(RWStepBasic_RWEulerAngles)

class RWStepBasic_RWExternalIdentificationAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_swiginit(self, _RWStepBasic.new_RWStepBasic_RWExternalIdentificationAssignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ExternalIdentificationAssignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ExternalIdentificationAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ExternalIdentificationAssignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ExternalIdentificationAssignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ExternalIdentificationAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWExternalIdentificationAssignment
RWStepBasic_RWExternalIdentificationAssignment.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_ReadStep, None, RWStepBasic_RWExternalIdentificationAssignment)
RWStepBasic_RWExternalIdentificationAssignment.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_Share, None, RWStepBasic_RWExternalIdentificationAssignment)
RWStepBasic_RWExternalIdentificationAssignment.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_WriteStep, None, RWStepBasic_RWExternalIdentificationAssignment)
RWStepBasic_RWExternalIdentificationAssignment_swigregister = _RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_swigregister
RWStepBasic_RWExternalIdentificationAssignment_swigregister(RWStepBasic_RWExternalIdentificationAssignment)

class RWStepBasic_RWExternalSource(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWExternalSource_swiginit(self, _RWStepBasic.new_RWStepBasic_RWExternalSource(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ExternalSource
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ExternalSource
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWExternalSource_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ExternalSource
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWExternalSource_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ExternalSource
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ExternalSource
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWExternalSource_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWExternalSource
RWStepBasic_RWExternalSource.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWExternalSource_ReadStep, None, RWStepBasic_RWExternalSource)
RWStepBasic_RWExternalSource.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWExternalSource_Share, None, RWStepBasic_RWExternalSource)
RWStepBasic_RWExternalSource.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWExternalSource_WriteStep, None, RWStepBasic_RWExternalSource)
RWStepBasic_RWExternalSource_swigregister = _RWStepBasic.RWStepBasic_RWExternalSource_swigregister
RWStepBasic_RWExternalSource_swigregister(RWStepBasic_RWExternalSource)

class RWStepBasic_RWExternallyDefinedItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWExternallyDefinedItem_swiginit(self, _RWStepBasic.new_RWStepBasic_RWExternallyDefinedItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ExternallyDefinedItem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ExternallyDefinedItem
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWExternallyDefinedItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ExternallyDefinedItem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWExternallyDefinedItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ExternallyDefinedItem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ExternallyDefinedItem
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWExternallyDefinedItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWExternallyDefinedItem
RWStepBasic_RWExternallyDefinedItem.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWExternallyDefinedItem_ReadStep, None, RWStepBasic_RWExternallyDefinedItem)
RWStepBasic_RWExternallyDefinedItem.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWExternallyDefinedItem_Share, None, RWStepBasic_RWExternallyDefinedItem)
RWStepBasic_RWExternallyDefinedItem.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWExternallyDefinedItem_WriteStep, None, RWStepBasic_RWExternallyDefinedItem)
RWStepBasic_RWExternallyDefinedItem_swigregister = _RWStepBasic.RWStepBasic_RWExternallyDefinedItem_swigregister
RWStepBasic_RWExternallyDefinedItem_swigregister(RWStepBasic_RWExternallyDefinedItem)

class RWStepBasic_RWGeneralProperty(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWGeneralProperty_swiginit(self, _RWStepBasic.new_RWStepBasic_RWGeneralProperty(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeneralProperty
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_GeneralProperty
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGeneralProperty_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_GeneralProperty
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGeneralProperty_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeneralProperty
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_GeneralProperty
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGeneralProperty_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWGeneralProperty
RWStepBasic_RWGeneralProperty.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWGeneralProperty_ReadStep, None, RWStepBasic_RWGeneralProperty)
RWStepBasic_RWGeneralProperty.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWGeneralProperty_Share, None, RWStepBasic_RWGeneralProperty)
RWStepBasic_RWGeneralProperty.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWGeneralProperty_WriteStep, None, RWStepBasic_RWGeneralProperty)
RWStepBasic_RWGeneralProperty_swigregister = _RWStepBasic.RWStepBasic_RWGeneralProperty_swigregister
RWStepBasic_RWGeneralProperty_swigregister(RWStepBasic_RWGeneralProperty)

class RWStepBasic_RWGroup(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWGroup_swiginit(self, _RWStepBasic.new_RWStepBasic_RWGroup(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Group
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Group
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGroup_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_Group
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGroup_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Group
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Group
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGroup_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWGroup
RWStepBasic_RWGroup.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWGroup_ReadStep, None, RWStepBasic_RWGroup)
RWStepBasic_RWGroup.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWGroup_Share, None, RWStepBasic_RWGroup)
RWStepBasic_RWGroup.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWGroup_WriteStep, None, RWStepBasic_RWGroup)
RWStepBasic_RWGroup_swigregister = _RWStepBasic.RWStepBasic_RWGroup_swigregister
RWStepBasic_RWGroup_swigregister(RWStepBasic_RWGroup)

class RWStepBasic_RWGroupAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWGroupAssignment_swiginit(self, _RWStepBasic.new_RWStepBasic_RWGroupAssignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GroupAssignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_GroupAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGroupAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_GroupAssignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGroupAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GroupAssignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_GroupAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGroupAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWGroupAssignment
RWStepBasic_RWGroupAssignment.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWGroupAssignment_ReadStep, None, RWStepBasic_RWGroupAssignment)
RWStepBasic_RWGroupAssignment.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWGroupAssignment_Share, None, RWStepBasic_RWGroupAssignment)
RWStepBasic_RWGroupAssignment.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWGroupAssignment_WriteStep, None, RWStepBasic_RWGroupAssignment)
RWStepBasic_RWGroupAssignment_swigregister = _RWStepBasic.RWStepBasic_RWGroupAssignment_swigregister
RWStepBasic_RWGroupAssignment_swigregister(RWStepBasic_RWGroupAssignment)

class RWStepBasic_RWGroupRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWGroupRelationship_swiginit(self, _RWStepBasic.new_RWStepBasic_RWGroupRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GroupRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_GroupRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGroupRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_GroupRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGroupRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GroupRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_GroupRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWGroupRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWGroupRelationship
RWStepBasic_RWGroupRelationship.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWGroupRelationship_ReadStep, None, RWStepBasic_RWGroupRelationship)
RWStepBasic_RWGroupRelationship.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWGroupRelationship_Share, None, RWStepBasic_RWGroupRelationship)
RWStepBasic_RWGroupRelationship.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWGroupRelationship_WriteStep, None, RWStepBasic_RWGroupRelationship)
RWStepBasic_RWGroupRelationship_swigregister = _RWStepBasic.RWStepBasic_RWGroupRelationship_swigregister
RWStepBasic_RWGroupRelationship_swigregister(RWStepBasic_RWGroupRelationship)

class RWStepBasic_RWIdentificationAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWIdentificationAssignment_swiginit(self, _RWStepBasic.new_RWStepBasic_RWIdentificationAssignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads IdentificationAssignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_IdentificationAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWIdentificationAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_IdentificationAssignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWIdentificationAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes IdentificationAssignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_IdentificationAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWIdentificationAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWIdentificationAssignment
RWStepBasic_RWIdentificationAssignment.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWIdentificationAssignment_ReadStep, None, RWStepBasic_RWIdentificationAssignment)
RWStepBasic_RWIdentificationAssignment.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWIdentificationAssignment_Share, None, RWStepBasic_RWIdentificationAssignment)
RWStepBasic_RWIdentificationAssignment.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWIdentificationAssignment_WriteStep, None, RWStepBasic_RWIdentificationAssignment)
RWStepBasic_RWIdentificationAssignment_swigregister = _RWStepBasic.RWStepBasic_RWIdentificationAssignment_swigregister
RWStepBasic_RWIdentificationAssignment_swigregister(RWStepBasic_RWIdentificationAssignment)

class RWStepBasic_RWIdentificationRole(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWIdentificationRole_swiginit(self, _RWStepBasic.new_RWStepBasic_RWIdentificationRole(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads IdentificationRole
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_IdentificationRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWIdentificationRole_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_IdentificationRole
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWIdentificationRole_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes IdentificationRole
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_IdentificationRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWIdentificationRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWIdentificationRole
RWStepBasic_RWIdentificationRole.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWIdentificationRole_ReadStep, None, RWStepBasic_RWIdentificationRole)
RWStepBasic_RWIdentificationRole.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWIdentificationRole_Share, None, RWStepBasic_RWIdentificationRole)
RWStepBasic_RWIdentificationRole.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWIdentificationRole_WriteStep, None, RWStepBasic_RWIdentificationRole)
RWStepBasic_RWIdentificationRole_swigregister = _RWStepBasic.RWStepBasic_RWIdentificationRole_swigregister
RWStepBasic_RWIdentificationRole_swigregister(RWStepBasic_RWIdentificationRole)

class RWStepBasic_RWLengthMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWLengthMeasureWithUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_LengthMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_LengthMeasureWithUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_LengthMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWLengthMeasureWithUnit
RWStepBasic_RWLengthMeasureWithUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_ReadStep, None, RWStepBasic_RWLengthMeasureWithUnit)
RWStepBasic_RWLengthMeasureWithUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_Share, None, RWStepBasic_RWLengthMeasureWithUnit)
RWStepBasic_RWLengthMeasureWithUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_WriteStep, None, RWStepBasic_RWLengthMeasureWithUnit)
RWStepBasic_RWLengthMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_swigregister
RWStepBasic_RWLengthMeasureWithUnit_swigregister(RWStepBasic_RWLengthMeasureWithUnit)

class RWStepBasic_RWLengthUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWLengthUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWLengthUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_LengthUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWLengthUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_LengthUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWLengthUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_LengthUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWLengthUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWLengthUnit
RWStepBasic_RWLengthUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWLengthUnit_ReadStep, None, RWStepBasic_RWLengthUnit)
RWStepBasic_RWLengthUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWLengthUnit_Share, None, RWStepBasic_RWLengthUnit)
RWStepBasic_RWLengthUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWLengthUnit_WriteStep, None, RWStepBasic_RWLengthUnit)
RWStepBasic_RWLengthUnit_swigregister = _RWStepBasic.RWStepBasic_RWLengthUnit_swigregister
RWStepBasic_RWLengthUnit_swigregister(RWStepBasic_RWLengthUnit)

class RWStepBasic_RWLocalTime(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWLocalTime_swiginit(self, _RWStepBasic.new_RWStepBasic_RWLocalTime(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_LocalTime
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWLocalTime_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_LocalTime
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWLocalTime_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_LocalTime
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWLocalTime_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWLocalTime
RWStepBasic_RWLocalTime.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWLocalTime_ReadStep, None, RWStepBasic_RWLocalTime)
RWStepBasic_RWLocalTime.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWLocalTime_Share, None, RWStepBasic_RWLocalTime)
RWStepBasic_RWLocalTime.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWLocalTime_WriteStep, None, RWStepBasic_RWLocalTime)
RWStepBasic_RWLocalTime_swigregister = _RWStepBasic.RWStepBasic_RWLocalTime_swigregister
RWStepBasic_RWLocalTime_swigregister(RWStepBasic_RWLocalTime)

class RWStepBasic_RWMassMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWMassMeasureWithUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_MassMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_MassMeasureWithUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_MassMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWMassMeasureWithUnit
RWStepBasic_RWMassMeasureWithUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_ReadStep, None, RWStepBasic_RWMassMeasureWithUnit)
RWStepBasic_RWMassMeasureWithUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_Share, None, RWStepBasic_RWMassMeasureWithUnit)
RWStepBasic_RWMassMeasureWithUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_WriteStep, None, RWStepBasic_RWMassMeasureWithUnit)
RWStepBasic_RWMassMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_swigregister
RWStepBasic_RWMassMeasureWithUnit_swigregister(RWStepBasic_RWMassMeasureWithUnit)

class RWStepBasic_RWMassUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWMassUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWMassUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads MassUnit
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_MassUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMassUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_MassUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMassUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes MassUnit
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_MassUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMassUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWMassUnit
RWStepBasic_RWMassUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWMassUnit_ReadStep, None, RWStepBasic_RWMassUnit)
RWStepBasic_RWMassUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWMassUnit_Share, None, RWStepBasic_RWMassUnit)
RWStepBasic_RWMassUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWMassUnit_WriteStep, None, RWStepBasic_RWMassUnit)
RWStepBasic_RWMassUnit_swigregister = _RWStepBasic.RWStepBasic_RWMassUnit_swigregister
RWStepBasic_RWMassUnit_swigregister(RWStepBasic_RWMassUnit)

class RWStepBasic_RWMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWMeasureWithUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWMeasureWithUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_MeasureWithUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWMeasureWithUnit
RWStepBasic_RWMeasureWithUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWMeasureWithUnit_ReadStep, None, RWStepBasic_RWMeasureWithUnit)
RWStepBasic_RWMeasureWithUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWMeasureWithUnit_Share, None, RWStepBasic_RWMeasureWithUnit)
RWStepBasic_RWMeasureWithUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWMeasureWithUnit_WriteStep, None, RWStepBasic_RWMeasureWithUnit)
RWStepBasic_RWMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWMeasureWithUnit_swigregister
RWStepBasic_RWMeasureWithUnit_swigregister(RWStepBasic_RWMeasureWithUnit)

class RWStepBasic_RWMechanicalContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWMechanicalContext_swiginit(self, _RWStepBasic.new_RWStepBasic_RWMechanicalContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_MechanicalContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMechanicalContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_MechanicalContext
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMechanicalContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_MechanicalContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWMechanicalContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWMechanicalContext
RWStepBasic_RWMechanicalContext.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWMechanicalContext_ReadStep, None, RWStepBasic_RWMechanicalContext)
RWStepBasic_RWMechanicalContext.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWMechanicalContext_Share, None, RWStepBasic_RWMechanicalContext)
RWStepBasic_RWMechanicalContext.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWMechanicalContext_WriteStep, None, RWStepBasic_RWMechanicalContext)
RWStepBasic_RWMechanicalContext_swigregister = _RWStepBasic.RWStepBasic_RWMechanicalContext_swigregister
RWStepBasic_RWMechanicalContext_swigregister(RWStepBasic_RWMechanicalContext)

class RWStepBasic_RWNameAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWNameAssignment_swiginit(self, _RWStepBasic.new_RWStepBasic_RWNameAssignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads NameAssignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_NameAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWNameAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_NameAssignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWNameAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes NameAssignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_NameAssignment
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWNameAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWNameAssignment
RWStepBasic_RWNameAssignment.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWNameAssignment_ReadStep, None, RWStepBasic_RWNameAssignment)
RWStepBasic_RWNameAssignment.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWNameAssignment_Share, None, RWStepBasic_RWNameAssignment)
RWStepBasic_RWNameAssignment.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWNameAssignment_WriteStep, None, RWStepBasic_RWNameAssignment)
RWStepBasic_RWNameAssignment_swigregister = _RWStepBasic.RWStepBasic_RWNameAssignment_swigregister
RWStepBasic_RWNameAssignment_swigregister(RWStepBasic_RWNameAssignment)

class RWStepBasic_RWNamedUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWNamedUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWNamedUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_NamedUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWNamedUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_NamedUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWNamedUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_NamedUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWNamedUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWNamedUnit
RWStepBasic_RWNamedUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWNamedUnit_ReadStep, None, RWStepBasic_RWNamedUnit)
RWStepBasic_RWNamedUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWNamedUnit_Share, None, RWStepBasic_RWNamedUnit)
RWStepBasic_RWNamedUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWNamedUnit_WriteStep, None, RWStepBasic_RWNamedUnit)
RWStepBasic_RWNamedUnit_swigregister = _RWStepBasic.RWStepBasic_RWNamedUnit_swigregister
RWStepBasic_RWNamedUnit_swigregister(RWStepBasic_RWNamedUnit)

class RWStepBasic_RWObjectRole(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWObjectRole_swiginit(self, _RWStepBasic.new_RWStepBasic_RWObjectRole(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ObjectRole
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ObjectRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWObjectRole_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ObjectRole
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWObjectRole_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ObjectRole
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ObjectRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWObjectRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWObjectRole
RWStepBasic_RWObjectRole.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWObjectRole_ReadStep, None, RWStepBasic_RWObjectRole)
RWStepBasic_RWObjectRole.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWObjectRole_Share, None, RWStepBasic_RWObjectRole)
RWStepBasic_RWObjectRole.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWObjectRole_WriteStep, None, RWStepBasic_RWObjectRole)
RWStepBasic_RWObjectRole_swigregister = _RWStepBasic.RWStepBasic_RWObjectRole_swigregister
RWStepBasic_RWObjectRole_swigregister(RWStepBasic_RWObjectRole)

class RWStepBasic_RWOrdinalDate(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWOrdinalDate_swiginit(self, _RWStepBasic.new_RWStepBasic_RWOrdinalDate(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_OrdinalDate
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWOrdinalDate_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_OrdinalDate
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWOrdinalDate_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWOrdinalDate
RWStepBasic_RWOrdinalDate.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWOrdinalDate_ReadStep, None, RWStepBasic_RWOrdinalDate)
RWStepBasic_RWOrdinalDate.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWOrdinalDate_WriteStep, None, RWStepBasic_RWOrdinalDate)
RWStepBasic_RWOrdinalDate_swigregister = _RWStepBasic.RWStepBasic_RWOrdinalDate_swigregister
RWStepBasic_RWOrdinalDate_swigregister(RWStepBasic_RWOrdinalDate)

class RWStepBasic_RWOrganization(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWOrganization_swiginit(self, _RWStepBasic.new_RWStepBasic_RWOrganization(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Organization
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWOrganization_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Organization
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWOrganization_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWOrganization
RWStepBasic_RWOrganization.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWOrganization_ReadStep, None, RWStepBasic_RWOrganization)
RWStepBasic_RWOrganization.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWOrganization_WriteStep, None, RWStepBasic_RWOrganization)
RWStepBasic_RWOrganization_swigregister = _RWStepBasic.RWStepBasic_RWOrganization_swigregister
RWStepBasic_RWOrganization_swigregister(RWStepBasic_RWOrganization)

class RWStepBasic_RWOrganizationRole(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWOrganizationRole_swiginit(self, _RWStepBasic.new_RWStepBasic_RWOrganizationRole(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_OrganizationRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWOrganizationRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_OrganizationRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWOrganizationRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWOrganizationRole
RWStepBasic_RWOrganizationRole.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWOrganizationRole_ReadStep, None, RWStepBasic_RWOrganizationRole)
RWStepBasic_RWOrganizationRole.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWOrganizationRole_WriteStep, None, RWStepBasic_RWOrganizationRole)
RWStepBasic_RWOrganizationRole_swigregister = _RWStepBasic.RWStepBasic_RWOrganizationRole_swigregister
RWStepBasic_RWOrganizationRole_swigregister(RWStepBasic_RWOrganizationRole)

class RWStepBasic_RWOrganizationalAddress(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWOrganizationalAddress_swiginit(self, _RWStepBasic.new_RWStepBasic_RWOrganizationalAddress(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_OrganizationalAddress
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWOrganizationalAddress_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_OrganizationalAddress
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWOrganizationalAddress_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_OrganizationalAddress
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWOrganizationalAddress_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWOrganizationalAddress
RWStepBasic_RWOrganizationalAddress.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWOrganizationalAddress_ReadStep, None, RWStepBasic_RWOrganizationalAddress)
RWStepBasic_RWOrganizationalAddress.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWOrganizationalAddress_Share, None, RWStepBasic_RWOrganizationalAddress)
RWStepBasic_RWOrganizationalAddress.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWOrganizationalAddress_WriteStep, None, RWStepBasic_RWOrganizationalAddress)
RWStepBasic_RWOrganizationalAddress_swigregister = _RWStepBasic.RWStepBasic_RWOrganizationalAddress_swigregister
RWStepBasic_RWOrganizationalAddress_swigregister(RWStepBasic_RWOrganizationalAddress)

class RWStepBasic_RWPerson(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWPerson_swiginit(self, _RWStepBasic.new_RWStepBasic_RWPerson(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Person
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPerson_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Person
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPerson_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPerson
RWStepBasic_RWPerson.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPerson_ReadStep, None, RWStepBasic_RWPerson)
RWStepBasic_RWPerson.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPerson_WriteStep, None, RWStepBasic_RWPerson)
RWStepBasic_RWPerson_swigregister = _RWStepBasic.RWStepBasic_RWPerson_swigregister
RWStepBasic_RWPerson_swigregister(RWStepBasic_RWPerson)

class RWStepBasic_RWPersonAndOrganization(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWPersonAndOrganization_swiginit(self, _RWStepBasic.new_RWStepBasic_RWPersonAndOrganization(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_PersonAndOrganization
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganization_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_PersonAndOrganization
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganization_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_PersonAndOrganization
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganization_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPersonAndOrganization
RWStepBasic_RWPersonAndOrganization.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPersonAndOrganization_ReadStep, None, RWStepBasic_RWPersonAndOrganization)
RWStepBasic_RWPersonAndOrganization.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWPersonAndOrganization_Share, None, RWStepBasic_RWPersonAndOrganization)
RWStepBasic_RWPersonAndOrganization.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPersonAndOrganization_WriteStep, None, RWStepBasic_RWPersonAndOrganization)
RWStepBasic_RWPersonAndOrganization_swigregister = _RWStepBasic.RWStepBasic_RWPersonAndOrganization_swigregister
RWStepBasic_RWPersonAndOrganization_swigregister(RWStepBasic_RWPersonAndOrganization)

class RWStepBasic_RWPersonAndOrganizationRole(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWPersonAndOrganizationRole_swiginit(self, _RWStepBasic.new_RWStepBasic_RWPersonAndOrganizationRole(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_PersonAndOrganizationRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganizationRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_PersonAndOrganizationRole
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganizationRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPersonAndOrganizationRole
RWStepBasic_RWPersonAndOrganizationRole.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPersonAndOrganizationRole_ReadStep, None, RWStepBasic_RWPersonAndOrganizationRole)
RWStepBasic_RWPersonAndOrganizationRole.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPersonAndOrganizationRole_WriteStep, None, RWStepBasic_RWPersonAndOrganizationRole)
RWStepBasic_RWPersonAndOrganizationRole_swigregister = _RWStepBasic.RWStepBasic_RWPersonAndOrganizationRole_swigregister
RWStepBasic_RWPersonAndOrganizationRole_swigregister(RWStepBasic_RWPersonAndOrganizationRole)

class RWStepBasic_RWPersonalAddress(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWPersonalAddress_swiginit(self, _RWStepBasic.new_RWStepBasic_RWPersonalAddress(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_PersonalAddress
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPersonalAddress_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_PersonalAddress
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPersonalAddress_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_PersonalAddress
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPersonalAddress_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPersonalAddress
RWStepBasic_RWPersonalAddress.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPersonalAddress_ReadStep, None, RWStepBasic_RWPersonalAddress)
RWStepBasic_RWPersonalAddress.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWPersonalAddress_Share, None, RWStepBasic_RWPersonalAddress)
RWStepBasic_RWPersonalAddress.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPersonalAddress_WriteStep, None, RWStepBasic_RWPersonalAddress)
RWStepBasic_RWPersonalAddress_swigregister = _RWStepBasic.RWStepBasic_RWPersonalAddress_swigregister
RWStepBasic_RWPersonalAddress_swigregister(RWStepBasic_RWPersonalAddress)

class RWStepBasic_RWPlaneAngleMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWPlaneAngleMeasureWithUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_PlaneAngleMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_PlaneAngleMeasureWithUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_PlaneAngleMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPlaneAngleMeasureWithUnit
RWStepBasic_RWPlaneAngleMeasureWithUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_ReadStep, None, RWStepBasic_RWPlaneAngleMeasureWithUnit)
RWStepBasic_RWPlaneAngleMeasureWithUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_Share, None, RWStepBasic_RWPlaneAngleMeasureWithUnit)
RWStepBasic_RWPlaneAngleMeasureWithUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_WriteStep, None, RWStepBasic_RWPlaneAngleMeasureWithUnit)
RWStepBasic_RWPlaneAngleMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_swigregister
RWStepBasic_RWPlaneAngleMeasureWithUnit_swigregister(RWStepBasic_RWPlaneAngleMeasureWithUnit)

class RWStepBasic_RWPlaneAngleUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWPlaneAngleUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWPlaneAngleUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_PlaneAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_PlaneAngleUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_PlaneAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPlaneAngleUnit
RWStepBasic_RWPlaneAngleUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPlaneAngleUnit_ReadStep, None, RWStepBasic_RWPlaneAngleUnit)
RWStepBasic_RWPlaneAngleUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWPlaneAngleUnit_Share, None, RWStepBasic_RWPlaneAngleUnit)
RWStepBasic_RWPlaneAngleUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWPlaneAngleUnit_WriteStep, None, RWStepBasic_RWPlaneAngleUnit)
RWStepBasic_RWPlaneAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWPlaneAngleUnit_swigregister
RWStepBasic_RWPlaneAngleUnit_swigregister(RWStepBasic_RWPlaneAngleUnit)

class RWStepBasic_RWProduct(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProduct_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProduct(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_Product
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProduct_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_Product
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProduct_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_Product
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProduct_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProduct
RWStepBasic_RWProduct.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProduct_ReadStep, None, RWStepBasic_RWProduct)
RWStepBasic_RWProduct.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProduct_Share, None, RWStepBasic_RWProduct)
RWStepBasic_RWProduct.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProduct_WriteStep, None, RWStepBasic_RWProduct)
RWStepBasic_RWProduct_swigregister = _RWStepBasic.RWStepBasic_RWProduct_swigregister
RWStepBasic_RWProduct_swigregister(RWStepBasic_RWProduct)

class RWStepBasic_RWProductCategory(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductCategory_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductCategory(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductCategory
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductCategory_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductCategory
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductCategory_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductCategory
RWStepBasic_RWProductCategory.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductCategory_ReadStep, None, RWStepBasic_RWProductCategory)
RWStepBasic_RWProductCategory.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductCategory_WriteStep, None, RWStepBasic_RWProductCategory)
RWStepBasic_RWProductCategory_swigregister = _RWStepBasic.RWStepBasic_RWProductCategory_swigregister
RWStepBasic_RWProductCategory_swigregister(RWStepBasic_RWProductCategory)

class RWStepBasic_RWProductCategoryRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWProductCategoryRelationship_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductCategoryRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ProductCategoryRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductCategoryRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductCategoryRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ProductCategoryRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductCategoryRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ProductCategoryRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductCategoryRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductCategoryRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductCategoryRelationship
RWStepBasic_RWProductCategoryRelationship.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductCategoryRelationship_ReadStep, None, RWStepBasic_RWProductCategoryRelationship)
RWStepBasic_RWProductCategoryRelationship.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductCategoryRelationship_Share, None, RWStepBasic_RWProductCategoryRelationship)
RWStepBasic_RWProductCategoryRelationship.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductCategoryRelationship_WriteStep, None, RWStepBasic_RWProductCategoryRelationship)
RWStepBasic_RWProductCategoryRelationship_swigregister = _RWStepBasic.RWStepBasic_RWProductCategoryRelationship_swigregister
RWStepBasic_RWProductCategoryRelationship_swigregister(RWStepBasic_RWProductCategoryRelationship)

class RWStepBasic_RWProductConceptContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWProductConceptContext_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductConceptContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ProductConceptContext
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductConceptContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductConceptContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ProductConceptContext
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductConceptContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ProductConceptContext
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductConceptContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductConceptContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductConceptContext
RWStepBasic_RWProductConceptContext.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductConceptContext_ReadStep, None, RWStepBasic_RWProductConceptContext)
RWStepBasic_RWProductConceptContext.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductConceptContext_Share, None, RWStepBasic_RWProductConceptContext)
RWStepBasic_RWProductConceptContext.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductConceptContext_WriteStep, None, RWStepBasic_RWProductConceptContext)
RWStepBasic_RWProductConceptContext_swigregister = _RWStepBasic.RWStepBasic_RWProductConceptContext_swigregister
RWStepBasic_RWProductConceptContext_swigregister(RWStepBasic_RWProductConceptContext)

class RWStepBasic_RWProductContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductContext_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductContext
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductContext
RWStepBasic_RWProductContext.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductContext_ReadStep, None, RWStepBasic_RWProductContext)
RWStepBasic_RWProductContext.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductContext_Share, None, RWStepBasic_RWProductContext)
RWStepBasic_RWProductContext.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductContext_WriteStep, None, RWStepBasic_RWProductContext)
RWStepBasic_RWProductContext_swigregister = _RWStepBasic.RWStepBasic_RWProductContext_swigregister
RWStepBasic_RWProductContext_swigregister(RWStepBasic_RWProductContext)

class RWStepBasic_RWProductDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductDefinition_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinition
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinition
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinition
RWStepBasic_RWProductDefinition.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinition_ReadStep, None, RWStepBasic_RWProductDefinition)
RWStepBasic_RWProductDefinition.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinition_Share, None, RWStepBasic_RWProductDefinition)
RWStepBasic_RWProductDefinition.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinition_WriteStep, None, RWStepBasic_RWProductDefinition)
RWStepBasic_RWProductDefinition_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinition_swigregister
RWStepBasic_RWProductDefinition_swigregister(RWStepBasic_RWProductDefinition)

class RWStepBasic_RWProductDefinitionContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductDefinitionContext_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinitionContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductDefinitionContext
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionContext
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionContext
RWStepBasic_RWProductDefinitionContext.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionContext_ReadStep, None, RWStepBasic_RWProductDefinitionContext)
RWStepBasic_RWProductDefinitionContext.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionContext_Share, None, RWStepBasic_RWProductDefinitionContext)
RWStepBasic_RWProductDefinitionContext.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionContext_WriteStep, None, RWStepBasic_RWProductDefinitionContext)
RWStepBasic_RWProductDefinitionContext_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionContext_swigregister
RWStepBasic_RWProductDefinitionContext_swigregister(RWStepBasic_RWProductDefinitionContext)

class RWStepBasic_RWProductDefinitionEffectivity(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinitionEffectivity(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionEffectivity
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductDefinitionEffectivity
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionEffectivity
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionEffectivity
RWStepBasic_RWProductDefinitionEffectivity.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_ReadStep, None, RWStepBasic_RWProductDefinitionEffectivity)
RWStepBasic_RWProductDefinitionEffectivity.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_Share, None, RWStepBasic_RWProductDefinitionEffectivity)
RWStepBasic_RWProductDefinitionEffectivity.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_WriteStep, None, RWStepBasic_RWProductDefinitionEffectivity)
RWStepBasic_RWProductDefinitionEffectivity_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_swigregister
RWStepBasic_RWProductDefinitionEffectivity_swigregister(RWStepBasic_RWProductDefinitionEffectivity)

class RWStepBasic_RWProductDefinitionFormation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductDefinitionFormation_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinitionFormation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionFormation
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductDefinitionFormation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionFormation
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionFormation
RWStepBasic_RWProductDefinitionFormation.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionFormation_ReadStep, None, RWStepBasic_RWProductDefinitionFormation)
RWStepBasic_RWProductDefinitionFormation.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionFormation_Share, None, RWStepBasic_RWProductDefinitionFormation)
RWStepBasic_RWProductDefinitionFormation.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionFormation_WriteStep, None, RWStepBasic_RWProductDefinitionFormation)
RWStepBasic_RWProductDefinitionFormation_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionFormation_swigregister
RWStepBasic_RWProductDefinitionFormation_swigregister(RWStepBasic_RWProductDefinitionFormation)

class RWStepBasic_RWProductDefinitionFormationRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinitionFormationRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ProductDefinitionFormationRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionFormationRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionFormationRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ProductDefinitionFormationRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionFormationRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionFormationRelationship
RWStepBasic_RWProductDefinitionFormationRelationship.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_ReadStep, None, RWStepBasic_RWProductDefinitionFormationRelationship)
RWStepBasic_RWProductDefinitionFormationRelationship.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_Share, None, RWStepBasic_RWProductDefinitionFormationRelationship)
RWStepBasic_RWProductDefinitionFormationRelationship.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_WriteStep, None, RWStepBasic_RWProductDefinitionFormationRelationship)
RWStepBasic_RWProductDefinitionFormationRelationship_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_swigregister
RWStepBasic_RWProductDefinitionFormationRelationship_swigregister(RWStepBasic_RWProductDefinitionFormationRelationship)

class RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionFormationWithSpecifiedSource
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductDefinitionFormationWithSpecifiedSource
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionFormationWithSpecifiedSource
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource
RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_ReadStep, None, RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource)
RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_Share, None, RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource)
RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_WriteStep, None, RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource)
RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_swigregister
RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_swigregister(RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource)

class RWStepBasic_RWProductDefinitionReference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductDefinitionReference_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinitionReference(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionReference
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReference_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductDefinitionReference
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReference_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionReference
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReference_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionReference
RWStepBasic_RWProductDefinitionReference.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionReference_ReadStep, None, RWStepBasic_RWProductDefinitionReference)
RWStepBasic_RWProductDefinitionReference.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionReference_Share, None, RWStepBasic_RWProductDefinitionReference)
RWStepBasic_RWProductDefinitionReference.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionReference_WriteStep, None, RWStepBasic_RWProductDefinitionReference)
RWStepBasic_RWProductDefinitionReference_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionReference_swigregister
RWStepBasic_RWProductDefinitionReference_swigregister(RWStepBasic_RWProductDefinitionReference)

class RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionReferenceWithLocalRepresentation
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductDefinitionReferenceWithLocalRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionReferenceWithLocalRepresentation
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation
RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_ReadStep, None, RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation)
RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_Share, None, RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation)
RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_WriteStep, None, RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation)
RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_swigregister
RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_swigregister(RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation)

class RWStepBasic_RWProductDefinitionRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinitionRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ProductDefinitionRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ProductDefinitionRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionRelationship
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionRelationship
RWStepBasic_RWProductDefinitionRelationship.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_ReadStep, None, RWStepBasic_RWProductDefinitionRelationship)
RWStepBasic_RWProductDefinitionRelationship.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_Share, None, RWStepBasic_RWProductDefinitionRelationship)
RWStepBasic_RWProductDefinitionRelationship.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_WriteStep, None, RWStepBasic_RWProductDefinitionRelationship)
RWStepBasic_RWProductDefinitionRelationship_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_swigregister
RWStepBasic_RWProductDefinitionRelationship_swigregister(RWStepBasic_RWProductDefinitionRelationship)

class RWStepBasic_RWProductDefinitionWithAssociatedDocuments(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductDefinitionWithAssociatedDocuments(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionWithAssociatedDocuments
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductDefinitionWithAssociatedDocuments
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductDefinitionWithAssociatedDocuments
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionWithAssociatedDocuments
RWStepBasic_RWProductDefinitionWithAssociatedDocuments.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_ReadStep, None, RWStepBasic_RWProductDefinitionWithAssociatedDocuments)
RWStepBasic_RWProductDefinitionWithAssociatedDocuments.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_Share, None, RWStepBasic_RWProductDefinitionWithAssociatedDocuments)
RWStepBasic_RWProductDefinitionWithAssociatedDocuments.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_WriteStep, None, RWStepBasic_RWProductDefinitionWithAssociatedDocuments)
RWStepBasic_RWProductDefinitionWithAssociatedDocuments_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_swigregister
RWStepBasic_RWProductDefinitionWithAssociatedDocuments_swigregister(RWStepBasic_RWProductDefinitionWithAssociatedDocuments)

class RWStepBasic_RWProductRelatedProductCategory(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductRelatedProductCategory(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductRelatedProductCategory
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductRelatedProductCategory
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductRelatedProductCategory
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductRelatedProductCategory
RWStepBasic_RWProductRelatedProductCategory.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_ReadStep, None, RWStepBasic_RWProductRelatedProductCategory)
RWStepBasic_RWProductRelatedProductCategory.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_Share, None, RWStepBasic_RWProductRelatedProductCategory)
RWStepBasic_RWProductRelatedProductCategory.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_WriteStep, None, RWStepBasic_RWProductRelatedProductCategory)
RWStepBasic_RWProductRelatedProductCategory_swigregister = _RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_swigregister
RWStepBasic_RWProductRelatedProductCategory_swigregister(RWStepBasic_RWProductRelatedProductCategory)

class RWStepBasic_RWProductType(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWProductType_swiginit(self, _RWStepBasic.new_RWStepBasic_RWProductType(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ProductType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_ProductType
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ProductType
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWProductType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductType
RWStepBasic_RWProductType.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductType_ReadStep, None, RWStepBasic_RWProductType)
RWStepBasic_RWProductType.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductType_Share, None, RWStepBasic_RWProductType)
RWStepBasic_RWProductType.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWProductType_WriteStep, None, RWStepBasic_RWProductType)
RWStepBasic_RWProductType_swigregister = _RWStepBasic.RWStepBasic_RWProductType_swigregister
RWStepBasic_RWProductType_swigregister(RWStepBasic_RWProductType)

class RWStepBasic_RWRatioMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWRatioMeasureWithUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_RatioMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_RatioMeasureWithUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_RatioMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWRatioMeasureWithUnit
RWStepBasic_RWRatioMeasureWithUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_ReadStep, None, RWStepBasic_RWRatioMeasureWithUnit)
RWStepBasic_RWRatioMeasureWithUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_Share, None, RWStepBasic_RWRatioMeasureWithUnit)
RWStepBasic_RWRatioMeasureWithUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_WriteStep, None, RWStepBasic_RWRatioMeasureWithUnit)
RWStepBasic_RWRatioMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_swigregister
RWStepBasic_RWRatioMeasureWithUnit_swigregister(RWStepBasic_RWRatioMeasureWithUnit)

class RWStepBasic_RWRoleAssociation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWRoleAssociation_swiginit(self, _RWStepBasic.new_RWStepBasic_RWRoleAssociation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads RoleAssociation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_RoleAssociation
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWRoleAssociation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_RoleAssociation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWRoleAssociation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes RoleAssociation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_RoleAssociation
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWRoleAssociation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWRoleAssociation
RWStepBasic_RWRoleAssociation.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWRoleAssociation_ReadStep, None, RWStepBasic_RWRoleAssociation)
RWStepBasic_RWRoleAssociation.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWRoleAssociation_Share, None, RWStepBasic_RWRoleAssociation)
RWStepBasic_RWRoleAssociation.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWRoleAssociation_WriteStep, None, RWStepBasic_RWRoleAssociation)
RWStepBasic_RWRoleAssociation_swigregister = _RWStepBasic.RWStepBasic_RWRoleAssociation_swigregister
RWStepBasic_RWRoleAssociation_swigregister(RWStepBasic_RWRoleAssociation)

class RWStepBasic_RWSecurityClassification(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSecurityClassification_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSecurityClassification(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SecurityClassification
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassification_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_SecurityClassification
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassification_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SecurityClassification
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassification_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSecurityClassification
RWStepBasic_RWSecurityClassification.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSecurityClassification_ReadStep, None, RWStepBasic_RWSecurityClassification)
RWStepBasic_RWSecurityClassification.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWSecurityClassification_Share, None, RWStepBasic_RWSecurityClassification)
RWStepBasic_RWSecurityClassification.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSecurityClassification_WriteStep, None, RWStepBasic_RWSecurityClassification)
RWStepBasic_RWSecurityClassification_swigregister = _RWStepBasic.RWStepBasic_RWSecurityClassification_swigregister
RWStepBasic_RWSecurityClassification_swigregister(RWStepBasic_RWSecurityClassification)

class RWStepBasic_RWSecurityClassificationLevel(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSecurityClassificationLevel_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSecurityClassificationLevel(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SecurityClassificationLevel
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassificationLevel_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SecurityClassificationLevel
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassificationLevel_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSecurityClassificationLevel
RWStepBasic_RWSecurityClassificationLevel.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSecurityClassificationLevel_ReadStep, None, RWStepBasic_RWSecurityClassificationLevel)
RWStepBasic_RWSecurityClassificationLevel.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSecurityClassificationLevel_WriteStep, None, RWStepBasic_RWSecurityClassificationLevel)
RWStepBasic_RWSecurityClassificationLevel_swigregister = _RWStepBasic.RWStepBasic_RWSecurityClassificationLevel_swigregister
RWStepBasic_RWSecurityClassificationLevel_swigregister(RWStepBasic_RWSecurityClassificationLevel)

class RWStepBasic_RWSiUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DecodeName(self, *args) -> "Standard_Boolean":
        """
        :param aName:
        	:type aName: StepBasic_SiUnitName
        	:param text:
        	:type text: char *
        	:rtype: bool
        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_DecodeName(self, *args)


    def DecodePrefix(self, *args) -> "Standard_Boolean":
        """
        :param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:param text:
        	:type text: char *
        	:rtype: bool
        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_DecodePrefix(self, *args)


    def EncodeName(self, *args) -> "TCollection_AsciiString":
        """
        :param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: TCollection_AsciiString
        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_EncodeName(self, *args)


    def EncodePrefix(self, *args) -> "TCollection_AsciiString":
        """
        :param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:rtype: TCollection_AsciiString
        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_EncodePrefix(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnit
RWStepBasic_RWSiUnit.DecodeName = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnit_DecodeName, None, RWStepBasic_RWSiUnit)
RWStepBasic_RWSiUnit.DecodePrefix = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnit_DecodePrefix, None, RWStepBasic_RWSiUnit)
RWStepBasic_RWSiUnit.EncodeName = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnit_EncodeName, None, RWStepBasic_RWSiUnit)
RWStepBasic_RWSiUnit.EncodePrefix = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnit_EncodePrefix, None, RWStepBasic_RWSiUnit)
RWStepBasic_RWSiUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnit_ReadStep, None, RWStepBasic_RWSiUnit)
RWStepBasic_RWSiUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnit_WriteStep, None, RWStepBasic_RWSiUnit)
RWStepBasic_RWSiUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnit_swigregister
RWStepBasic_RWSiUnit_swigregister(RWStepBasic_RWSiUnit)

class RWStepBasic_RWSiUnitAndAreaUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnitAndAreaUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnitAndAreaUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnitAndAreaUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndAreaUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnitAndAreaUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndAreaUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndAreaUnit
RWStepBasic_RWSiUnitAndAreaUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndAreaUnit_ReadStep, None, RWStepBasic_RWSiUnitAndAreaUnit)
RWStepBasic_RWSiUnitAndAreaUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndAreaUnit_WriteStep, None, RWStepBasic_RWSiUnitAndAreaUnit)
RWStepBasic_RWSiUnitAndAreaUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndAreaUnit_swigregister
RWStepBasic_RWSiUnitAndAreaUnit_swigregister(RWStepBasic_RWSiUnitAndAreaUnit)

class RWStepBasic_RWSiUnitAndLengthUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnitAndLengthUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnitAndLengthUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnitAndLengthUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndLengthUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnitAndLengthUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndLengthUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndLengthUnit
RWStepBasic_RWSiUnitAndLengthUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndLengthUnit_ReadStep, None, RWStepBasic_RWSiUnitAndLengthUnit)
RWStepBasic_RWSiUnitAndLengthUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndLengthUnit_WriteStep, None, RWStepBasic_RWSiUnitAndLengthUnit)
RWStepBasic_RWSiUnitAndLengthUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndLengthUnit_swigregister
RWStepBasic_RWSiUnitAndLengthUnit_swigregister(RWStepBasic_RWSiUnitAndLengthUnit)

class RWStepBasic_RWSiUnitAndMassUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnitAndMassUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnitAndMassUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnitAndMassUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndMassUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnitAndMassUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndMassUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndMassUnit
RWStepBasic_RWSiUnitAndMassUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndMassUnit_ReadStep, None, RWStepBasic_RWSiUnitAndMassUnit)
RWStepBasic_RWSiUnitAndMassUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndMassUnit_WriteStep, None, RWStepBasic_RWSiUnitAndMassUnit)
RWStepBasic_RWSiUnitAndMassUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndMassUnit_swigregister
RWStepBasic_RWSiUnitAndMassUnit_swigregister(RWStepBasic_RWSiUnitAndMassUnit)

class RWStepBasic_RWSiUnitAndPlaneAngleUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnitAndPlaneAngleUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnitAndPlaneAngleUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnitAndPlaneAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndPlaneAngleUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnitAndPlaneAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndPlaneAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndPlaneAngleUnit
RWStepBasic_RWSiUnitAndPlaneAngleUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndPlaneAngleUnit_ReadStep, None, RWStepBasic_RWSiUnitAndPlaneAngleUnit)
RWStepBasic_RWSiUnitAndPlaneAngleUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndPlaneAngleUnit_WriteStep, None, RWStepBasic_RWSiUnitAndPlaneAngleUnit)
RWStepBasic_RWSiUnitAndPlaneAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndPlaneAngleUnit_swigregister
RWStepBasic_RWSiUnitAndPlaneAngleUnit_swigregister(RWStepBasic_RWSiUnitAndPlaneAngleUnit)

class RWStepBasic_RWSiUnitAndRatioUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnitAndRatioUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnitAndRatioUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnitAndRatioUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndRatioUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnitAndRatioUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndRatioUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndRatioUnit
RWStepBasic_RWSiUnitAndRatioUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndRatioUnit_ReadStep, None, RWStepBasic_RWSiUnitAndRatioUnit)
RWStepBasic_RWSiUnitAndRatioUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndRatioUnit_WriteStep, None, RWStepBasic_RWSiUnitAndRatioUnit)
RWStepBasic_RWSiUnitAndRatioUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndRatioUnit_swigregister
RWStepBasic_RWSiUnitAndRatioUnit_swigregister(RWStepBasic_RWSiUnitAndRatioUnit)

class RWStepBasic_RWSiUnitAndSolidAngleUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnitAndSolidAngleUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnitAndSolidAngleUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnitAndSolidAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndSolidAngleUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnitAndSolidAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndSolidAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndSolidAngleUnit
RWStepBasic_RWSiUnitAndSolidAngleUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndSolidAngleUnit_ReadStep, None, RWStepBasic_RWSiUnitAndSolidAngleUnit)
RWStepBasic_RWSiUnitAndSolidAngleUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndSolidAngleUnit_WriteStep, None, RWStepBasic_RWSiUnitAndSolidAngleUnit)
RWStepBasic_RWSiUnitAndSolidAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndSolidAngleUnit_swigregister
RWStepBasic_RWSiUnitAndSolidAngleUnit_swigregister(RWStepBasic_RWSiUnitAndSolidAngleUnit)

class RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnitAndThermodynamicTemperatureUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnitAndThermodynamicTemperatureUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit
RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_ReadStep, None, RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit)
RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_WriteStep, None, RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit)
RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_swigregister
RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_swigregister(RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit)

class RWStepBasic_RWSiUnitAndTimeUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnitAndTimeUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnitAndTimeUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnitAndTimeUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndTimeUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnitAndTimeUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndTimeUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndTimeUnit
RWStepBasic_RWSiUnitAndTimeUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndTimeUnit_ReadStep, None, RWStepBasic_RWSiUnitAndTimeUnit)
RWStepBasic_RWSiUnitAndTimeUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndTimeUnit_WriteStep, None, RWStepBasic_RWSiUnitAndTimeUnit)
RWStepBasic_RWSiUnitAndTimeUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndTimeUnit_swigregister
RWStepBasic_RWSiUnitAndTimeUnit_swigregister(RWStepBasic_RWSiUnitAndTimeUnit)

class RWStepBasic_RWSiUnitAndVolumeUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSiUnitAndVolumeUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSiUnitAndVolumeUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SiUnitAndVolumeUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndVolumeUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SiUnitAndVolumeUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndVolumeUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndVolumeUnit
RWStepBasic_RWSiUnitAndVolumeUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndVolumeUnit_ReadStep, None, RWStepBasic_RWSiUnitAndVolumeUnit)
RWStepBasic_RWSiUnitAndVolumeUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSiUnitAndVolumeUnit_WriteStep, None, RWStepBasic_RWSiUnitAndVolumeUnit)
RWStepBasic_RWSiUnitAndVolumeUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndVolumeUnit_swigregister
RWStepBasic_RWSiUnitAndVolumeUnit_swigregister(RWStepBasic_RWSiUnitAndVolumeUnit)

class RWStepBasic_RWSolidAngleMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSolidAngleMeasureWithUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SolidAngleMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_SolidAngleMeasureWithUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SolidAngleMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSolidAngleMeasureWithUnit
RWStepBasic_RWSolidAngleMeasureWithUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_ReadStep, None, RWStepBasic_RWSolidAngleMeasureWithUnit)
RWStepBasic_RWSolidAngleMeasureWithUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_Share, None, RWStepBasic_RWSolidAngleMeasureWithUnit)
RWStepBasic_RWSolidAngleMeasureWithUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_WriteStep, None, RWStepBasic_RWSolidAngleMeasureWithUnit)
RWStepBasic_RWSolidAngleMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_swigregister
RWStepBasic_RWSolidAngleMeasureWithUnit_swigregister(RWStepBasic_RWSolidAngleMeasureWithUnit)

class RWStepBasic_RWSolidAngleUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWSolidAngleUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWSolidAngleUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_SolidAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_SolidAngleUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_SolidAngleUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSolidAngleUnit
RWStepBasic_RWSolidAngleUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSolidAngleUnit_ReadStep, None, RWStepBasic_RWSolidAngleUnit)
RWStepBasic_RWSolidAngleUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWSolidAngleUnit_Share, None, RWStepBasic_RWSolidAngleUnit)
RWStepBasic_RWSolidAngleUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWSolidAngleUnit_WriteStep, None, RWStepBasic_RWSolidAngleUnit)
RWStepBasic_RWSolidAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWSolidAngleUnit_swigregister
RWStepBasic_RWSolidAngleUnit_swigregister(RWStepBasic_RWSolidAngleUnit)

class RWStepBasic_RWThermodynamicTemperatureUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWThermodynamicTemperatureUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ThermodynamicTemperatureUnit
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_ThermodynamicTemperatureUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_ThermodynamicTemperatureUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ThermodynamicTemperatureUnit
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_ThermodynamicTemperatureUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWThermodynamicTemperatureUnit
RWStepBasic_RWThermodynamicTemperatureUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_ReadStep, None, RWStepBasic_RWThermodynamicTemperatureUnit)
RWStepBasic_RWThermodynamicTemperatureUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_Share, None, RWStepBasic_RWThermodynamicTemperatureUnit)
RWStepBasic_RWThermodynamicTemperatureUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_WriteStep, None, RWStepBasic_RWThermodynamicTemperatureUnit)
RWStepBasic_RWThermodynamicTemperatureUnit_swigregister = _RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_swigregister
RWStepBasic_RWThermodynamicTemperatureUnit_swigregister(RWStepBasic_RWThermodynamicTemperatureUnit)

class RWStepBasic_RWUncertaintyMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_swiginit(self, _RWStepBasic.new_RWStepBasic_RWUncertaintyMeasureWithUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_UncertaintyMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepBasic_UncertaintyMeasureWithUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_UncertaintyMeasureWithUnit
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWUncertaintyMeasureWithUnit
RWStepBasic_RWUncertaintyMeasureWithUnit.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_ReadStep, None, RWStepBasic_RWUncertaintyMeasureWithUnit)
RWStepBasic_RWUncertaintyMeasureWithUnit.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_Share, None, RWStepBasic_RWUncertaintyMeasureWithUnit)
RWStepBasic_RWUncertaintyMeasureWithUnit.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_WriteStep, None, RWStepBasic_RWUncertaintyMeasureWithUnit)
RWStepBasic_RWUncertaintyMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_swigregister
RWStepBasic_RWUncertaintyMeasureWithUnit_swigregister(RWStepBasic_RWUncertaintyMeasureWithUnit)

class RWStepBasic_RWVersionedActionRequest(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepBasic.RWStepBasic_RWVersionedActionRequest_swiginit(self, _RWStepBasic.new_RWStepBasic_RWVersionedActionRequest(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads VersionedActionRequest
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_VersionedActionRequest
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWVersionedActionRequest_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepBasic_VersionedActionRequest
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWVersionedActionRequest_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes VersionedActionRequest
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_VersionedActionRequest
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWVersionedActionRequest_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWVersionedActionRequest
RWStepBasic_RWVersionedActionRequest.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWVersionedActionRequest_ReadStep, None, RWStepBasic_RWVersionedActionRequest)
RWStepBasic_RWVersionedActionRequest.Share = new_instancemethod(_RWStepBasic.RWStepBasic_RWVersionedActionRequest_Share, None, RWStepBasic_RWVersionedActionRequest)
RWStepBasic_RWVersionedActionRequest.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWVersionedActionRequest_WriteStep, None, RWStepBasic_RWVersionedActionRequest)
RWStepBasic_RWVersionedActionRequest_swigregister = _RWStepBasic.RWStepBasic_RWVersionedActionRequest_swigregister
RWStepBasic_RWVersionedActionRequest_swigregister(RWStepBasic_RWVersionedActionRequest)

class RWStepBasic_RWWeekOfYearAndDayDate(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepBasic.RWStepBasic_RWWeekOfYearAndDayDate_swiginit(self, _RWStepBasic.new_RWStepBasic_RWWeekOfYearAndDayDate(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepBasic_WeekOfYearAndDayDate
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWWeekOfYearAndDayDate_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepBasic_WeekOfYearAndDayDate
        	:rtype: None
        """
        return _RWStepBasic.RWStepBasic_RWWeekOfYearAndDayDate_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWWeekOfYearAndDayDate
RWStepBasic_RWWeekOfYearAndDayDate.ReadStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWWeekOfYearAndDayDate_ReadStep, None, RWStepBasic_RWWeekOfYearAndDayDate)
RWStepBasic_RWWeekOfYearAndDayDate.WriteStep = new_instancemethod(_RWStepBasic.RWStepBasic_RWWeekOfYearAndDayDate_WriteStep, None, RWStepBasic_RWWeekOfYearAndDayDate)
RWStepBasic_RWWeekOfYearAndDayDate_swigregister = _RWStepBasic.RWStepBasic_RWWeekOfYearAndDayDate_swigregister
RWStepBasic_RWWeekOfYearAndDayDate_swigregister(RWStepBasic_RWWeekOfYearAndDayDate)



