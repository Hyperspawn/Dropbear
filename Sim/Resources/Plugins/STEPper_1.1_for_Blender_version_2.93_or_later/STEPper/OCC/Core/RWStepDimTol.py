# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
RWStepDimTol module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_rwstepdimtol.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _RWStepDimTol.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepDimTol')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepDimTol')
    _RWStepDimTol = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepDimTol', [dirname(__file__)])
        except ImportError:
            import _RWStepDimTol
            return _RWStepDimTol
        try:
            _mod = imp.load_module('_RWStepDimTol', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepDimTol = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepDimTol
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepDimTol.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_RWStepDimTol.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_RWStepDimTol.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_RWStepDimTol.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_RWStepDimTol.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_RWStepDimTol.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_RWStepDimTol.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_RWStepDimTol.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_RWStepDimTol.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_RWStepDimTol.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_RWStepDimTol.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_RWStepDimTol.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_RWStepDimTol.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_RWStepDimTol.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_RWStepDimTol.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_RWStepDimTol.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_RWStepDimTol.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _RWStepDimTol.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _RWStepDimTol.process_exception(error, method_name, class_name)
process_exception = _RWStepDimTol.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepDimTol
import OCC.Core.StepRepr
import OCC.Core.StepBasic
import OCC.Core.StepShape
import OCC.Core.StepGeom
class RWStepDimTol_RWAngularityTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWAngularityTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWAngularityTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads AngularityTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_AngularityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWAngularityTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_AngularityTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWAngularityTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes AngularityTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_AngularityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWAngularityTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWAngularityTolerance
RWStepDimTol_RWAngularityTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWAngularityTolerance_ReadStep, None, RWStepDimTol_RWAngularityTolerance)
RWStepDimTol_RWAngularityTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWAngularityTolerance_Share, None, RWStepDimTol_RWAngularityTolerance)
RWStepDimTol_RWAngularityTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWAngularityTolerance_WriteStep, None, RWStepDimTol_RWAngularityTolerance)
RWStepDimTol_RWAngularityTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWAngularityTolerance_swigregister
RWStepDimTol_RWAngularityTolerance_swigregister(RWStepDimTol_RWAngularityTolerance)

class RWStepDimTol_RWCircularRunoutTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWCircularRunoutTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWCircularRunoutTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CircularRunoutTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_CircularRunoutTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCircularRunoutTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_CircularRunoutTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCircularRunoutTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CircularRunoutTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_CircularRunoutTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCircularRunoutTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWCircularRunoutTolerance
RWStepDimTol_RWCircularRunoutTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCircularRunoutTolerance_ReadStep, None, RWStepDimTol_RWCircularRunoutTolerance)
RWStepDimTol_RWCircularRunoutTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCircularRunoutTolerance_Share, None, RWStepDimTol_RWCircularRunoutTolerance)
RWStepDimTol_RWCircularRunoutTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCircularRunoutTolerance_WriteStep, None, RWStepDimTol_RWCircularRunoutTolerance)
RWStepDimTol_RWCircularRunoutTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWCircularRunoutTolerance_swigregister
RWStepDimTol_RWCircularRunoutTolerance_swigregister(RWStepDimTol_RWCircularRunoutTolerance)

class RWStepDimTol_RWCoaxialityTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWCoaxialityTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWCoaxialityTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CoaxialityTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_CoaxialityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCoaxialityTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_CoaxialityTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCoaxialityTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CoaxialityTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_CoaxialityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCoaxialityTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWCoaxialityTolerance
RWStepDimTol_RWCoaxialityTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCoaxialityTolerance_ReadStep, None, RWStepDimTol_RWCoaxialityTolerance)
RWStepDimTol_RWCoaxialityTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCoaxialityTolerance_Share, None, RWStepDimTol_RWCoaxialityTolerance)
RWStepDimTol_RWCoaxialityTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCoaxialityTolerance_WriteStep, None, RWStepDimTol_RWCoaxialityTolerance)
RWStepDimTol_RWCoaxialityTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWCoaxialityTolerance_swigregister
RWStepDimTol_RWCoaxialityTolerance_swigregister(RWStepDimTol_RWCoaxialityTolerance)

class RWStepDimTol_RWCommonDatum(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWCommonDatum_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWCommonDatum(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CommonDatum
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_CommonDatum
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCommonDatum_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_CommonDatum
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCommonDatum_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CommonDatum
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_CommonDatum
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCommonDatum_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWCommonDatum
RWStepDimTol_RWCommonDatum.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCommonDatum_ReadStep, None, RWStepDimTol_RWCommonDatum)
RWStepDimTol_RWCommonDatum.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCommonDatum_Share, None, RWStepDimTol_RWCommonDatum)
RWStepDimTol_RWCommonDatum.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCommonDatum_WriteStep, None, RWStepDimTol_RWCommonDatum)
RWStepDimTol_RWCommonDatum_swigregister = _RWStepDimTol.RWStepDimTol_RWCommonDatum_swigregister
RWStepDimTol_RWCommonDatum_swigregister(RWStepDimTol_RWCommonDatum)

class RWStepDimTol_RWConcentricityTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWConcentricityTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWConcentricityTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ConcentricityTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_ConcentricityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWConcentricityTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_ConcentricityTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWConcentricityTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ConcentricityTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_ConcentricityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWConcentricityTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWConcentricityTolerance
RWStepDimTol_RWConcentricityTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWConcentricityTolerance_ReadStep, None, RWStepDimTol_RWConcentricityTolerance)
RWStepDimTol_RWConcentricityTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWConcentricityTolerance_Share, None, RWStepDimTol_RWConcentricityTolerance)
RWStepDimTol_RWConcentricityTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWConcentricityTolerance_WriteStep, None, RWStepDimTol_RWConcentricityTolerance)
RWStepDimTol_RWConcentricityTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWConcentricityTolerance_swigregister
RWStepDimTol_RWConcentricityTolerance_swigregister(RWStepDimTol_RWConcentricityTolerance)

class RWStepDimTol_RWCylindricityTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWCylindricityTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWCylindricityTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CylindricityTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_CylindricityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCylindricityTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_CylindricityTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCylindricityTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CylindricityTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_CylindricityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWCylindricityTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWCylindricityTolerance
RWStepDimTol_RWCylindricityTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCylindricityTolerance_ReadStep, None, RWStepDimTol_RWCylindricityTolerance)
RWStepDimTol_RWCylindricityTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCylindricityTolerance_Share, None, RWStepDimTol_RWCylindricityTolerance)
RWStepDimTol_RWCylindricityTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWCylindricityTolerance_WriteStep, None, RWStepDimTol_RWCylindricityTolerance)
RWStepDimTol_RWCylindricityTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWCylindricityTolerance_swigregister
RWStepDimTol_RWCylindricityTolerance_swigregister(RWStepDimTol_RWCylindricityTolerance)

class RWStepDimTol_RWDatum(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWDatum_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWDatum(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Datum
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_Datum
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatum_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_Datum
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatum_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Datum
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_Datum
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatum_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWDatum
RWStepDimTol_RWDatum.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatum_ReadStep, None, RWStepDimTol_RWDatum)
RWStepDimTol_RWDatum.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatum_Share, None, RWStepDimTol_RWDatum)
RWStepDimTol_RWDatum.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatum_WriteStep, None, RWStepDimTol_RWDatum)
RWStepDimTol_RWDatum_swigregister = _RWStepDimTol.RWStepDimTol_RWDatum_swigregister
RWStepDimTol_RWDatum_swigregister(RWStepDimTol_RWDatum)

class RWStepDimTol_RWDatumFeature(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWDatumFeature_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWDatumFeature(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DatumFeature
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_DatumFeature
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumFeature_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_DatumFeature
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumFeature_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DatumFeature
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_DatumFeature
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumFeature_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWDatumFeature
RWStepDimTol_RWDatumFeature.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumFeature_ReadStep, None, RWStepDimTol_RWDatumFeature)
RWStepDimTol_RWDatumFeature.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumFeature_Share, None, RWStepDimTol_RWDatumFeature)
RWStepDimTol_RWDatumFeature.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumFeature_WriteStep, None, RWStepDimTol_RWDatumFeature)
RWStepDimTol_RWDatumFeature_swigregister = _RWStepDimTol.RWStepDimTol_RWDatumFeature_swigregister
RWStepDimTol_RWDatumFeature_swigregister(RWStepDimTol_RWDatumFeature)

class RWStepDimTol_RWDatumReference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWDatumReference_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWDatumReference(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DatumReference
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_DatumReference
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReference_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_DatumReference
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReference_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DatumReference
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_DatumReference
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReference_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWDatumReference
RWStepDimTol_RWDatumReference.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReference_ReadStep, None, RWStepDimTol_RWDatumReference)
RWStepDimTol_RWDatumReference.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReference_Share, None, RWStepDimTol_RWDatumReference)
RWStepDimTol_RWDatumReference.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReference_WriteStep, None, RWStepDimTol_RWDatumReference)
RWStepDimTol_RWDatumReference_swigregister = _RWStepDimTol.RWStepDimTol_RWDatumReference_swigregister
RWStepDimTol_RWDatumReference_swigregister(RWStepDimTol_RWDatumReference)

class RWStepDimTol_RWDatumReferenceCompartment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWDatumReferenceCompartment_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWDatumReferenceCompartment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DatumReferenceElement
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_DatumReferenceCompartment
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReferenceCompartment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_DatumReferenceCompartment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReferenceCompartment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DatumReferenceElement
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_DatumReferenceCompartment
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReferenceCompartment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWDatumReferenceCompartment
RWStepDimTol_RWDatumReferenceCompartment.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReferenceCompartment_ReadStep, None, RWStepDimTol_RWDatumReferenceCompartment)
RWStepDimTol_RWDatumReferenceCompartment.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReferenceCompartment_Share, None, RWStepDimTol_RWDatumReferenceCompartment)
RWStepDimTol_RWDatumReferenceCompartment.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReferenceCompartment_WriteStep, None, RWStepDimTol_RWDatumReferenceCompartment)
RWStepDimTol_RWDatumReferenceCompartment_swigregister = _RWStepDimTol.RWStepDimTol_RWDatumReferenceCompartment_swigregister
RWStepDimTol_RWDatumReferenceCompartment_swigregister(RWStepDimTol_RWDatumReferenceCompartment)

class RWStepDimTol_RWDatumReferenceElement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWDatumReferenceElement_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWDatumReferenceElement(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DatumReferenceElement
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_DatumReferenceElement
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReferenceElement_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_DatumReferenceElement
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReferenceElement_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DatumReferenceElement
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_DatumReferenceElement
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReferenceElement_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWDatumReferenceElement
RWStepDimTol_RWDatumReferenceElement.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReferenceElement_ReadStep, None, RWStepDimTol_RWDatumReferenceElement)
RWStepDimTol_RWDatumReferenceElement.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReferenceElement_Share, None, RWStepDimTol_RWDatumReferenceElement)
RWStepDimTol_RWDatumReferenceElement.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReferenceElement_WriteStep, None, RWStepDimTol_RWDatumReferenceElement)
RWStepDimTol_RWDatumReferenceElement_swigregister = _RWStepDimTol.RWStepDimTol_RWDatumReferenceElement_swigregister
RWStepDimTol_RWDatumReferenceElement_swigregister(RWStepDimTol_RWDatumReferenceElement)

class RWStepDimTol_RWDatumReferenceModifierWithValue(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWDatumReferenceModifierWithValue_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWDatumReferenceModifierWithValue(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DatumReferenceModifierWithValue
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_DatumReferenceModifierWithValue
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReferenceModifierWithValue_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DatumReferenceModifierWithValue
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_DatumReferenceModifierWithValue
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumReferenceModifierWithValue_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWDatumReferenceModifierWithValue
RWStepDimTol_RWDatumReferenceModifierWithValue.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReferenceModifierWithValue_ReadStep, None, RWStepDimTol_RWDatumReferenceModifierWithValue)
RWStepDimTol_RWDatumReferenceModifierWithValue.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumReferenceModifierWithValue_WriteStep, None, RWStepDimTol_RWDatumReferenceModifierWithValue)
RWStepDimTol_RWDatumReferenceModifierWithValue_swigregister = _RWStepDimTol.RWStepDimTol_RWDatumReferenceModifierWithValue_swigregister
RWStepDimTol_RWDatumReferenceModifierWithValue_swigregister(RWStepDimTol_RWDatumReferenceModifierWithValue)

class RWStepDimTol_RWDatumSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWDatumSystem_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWDatumSystem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DatumSystem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_DatumSystem
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumSystem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_DatumSystem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumSystem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DatumSystem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_DatumSystem
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumSystem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWDatumSystem
RWStepDimTol_RWDatumSystem.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumSystem_ReadStep, None, RWStepDimTol_RWDatumSystem)
RWStepDimTol_RWDatumSystem.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumSystem_Share, None, RWStepDimTol_RWDatumSystem)
RWStepDimTol_RWDatumSystem.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumSystem_WriteStep, None, RWStepDimTol_RWDatumSystem)
RWStepDimTol_RWDatumSystem_swigregister = _RWStepDimTol.RWStepDimTol_RWDatumSystem_swigregister
RWStepDimTol_RWDatumSystem_swigregister(RWStepDimTol_RWDatumSystem)

class RWStepDimTol_RWDatumTarget(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWDatumTarget_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWDatumTarget(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DatumTarget
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_DatumTarget
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumTarget_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_DatumTarget
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumTarget_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DatumTarget
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_DatumTarget
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWDatumTarget_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWDatumTarget
RWStepDimTol_RWDatumTarget.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumTarget_ReadStep, None, RWStepDimTol_RWDatumTarget)
RWStepDimTol_RWDatumTarget.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumTarget_Share, None, RWStepDimTol_RWDatumTarget)
RWStepDimTol_RWDatumTarget.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWDatumTarget_WriteStep, None, RWStepDimTol_RWDatumTarget)
RWStepDimTol_RWDatumTarget_swigregister = _RWStepDimTol.RWStepDimTol_RWDatumTarget_swigregister
RWStepDimTol_RWDatumTarget_swigregister(RWStepDimTol_RWDatumTarget)

class RWStepDimTol_RWFlatnessTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWFlatnessTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWFlatnessTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FlatnessTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_FlatnessTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWFlatnessTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_FlatnessTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWFlatnessTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FlatnessTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_FlatnessTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWFlatnessTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWFlatnessTolerance
RWStepDimTol_RWFlatnessTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWFlatnessTolerance_ReadStep, None, RWStepDimTol_RWFlatnessTolerance)
RWStepDimTol_RWFlatnessTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWFlatnessTolerance_Share, None, RWStepDimTol_RWFlatnessTolerance)
RWStepDimTol_RWFlatnessTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWFlatnessTolerance_WriteStep, None, RWStepDimTol_RWFlatnessTolerance)
RWStepDimTol_RWFlatnessTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWFlatnessTolerance_swigregister
RWStepDimTol_RWFlatnessTolerance_swigregister(RWStepDimTol_RWFlatnessTolerance)

class RWStepDimTol_RWGeneralDatumReference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWGeneralDatumReference_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeneralDatumReference(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeneralDatumReference
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeneralDatumReference
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeneralDatumReference_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_GeneralDatumReference
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeneralDatumReference_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeneralDatumReference
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeneralDatumReference
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeneralDatumReference_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeneralDatumReference
RWStepDimTol_RWGeneralDatumReference.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeneralDatumReference_ReadStep, None, RWStepDimTol_RWGeneralDatumReference)
RWStepDimTol_RWGeneralDatumReference.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeneralDatumReference_Share, None, RWStepDimTol_RWGeneralDatumReference)
RWStepDimTol_RWGeneralDatumReference.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeneralDatumReference_WriteStep, None, RWStepDimTol_RWGeneralDatumReference)
RWStepDimTol_RWGeneralDatumReference_swigregister = _RWStepDimTol.RWStepDimTol_RWGeneralDatumReference_swigregister
RWStepDimTol_RWGeneralDatumReference_swigregister(RWStepDimTol_RWGeneralDatumReference)

class RWStepDimTol_RWGeoTolAndGeoTolWthDatRef(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeoTolAndGeoTolWthDatRef(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRef
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRef
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRef
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeoTolAndGeoTolWthDatRef
RWStepDimTol_RWGeoTolAndGeoTolWthDatRef.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_ReadStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRef)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRef.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_Share, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRef)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRef.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_WriteStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRef)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_swigregister = _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_swigregister
RWStepDimTol_RWGeoTolAndGeoTolWthDatRef_swigregister(RWStepDimTol_RWGeoTolAndGeoTolWthDatRef)

class RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_ReadStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_Share, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_WriteStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_swigregister = _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_swigregister
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_swigregister(RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol)

class RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_ReadStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_Share, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_WriteStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_swigregister = _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_swigregister
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod_swigregister(RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndGeoTolWthMod)

class RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_ReadStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_Share, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_WriteStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_swigregister = _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_swigregister
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_swigregister(RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)

class RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_ReadStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_Share, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_WriteStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol)
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_swigregister = _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_swigregister
RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_swigregister(RWStepDimTol_RWGeoTolAndGeoTolWthDatRefAndUneqDisGeoTol)

class RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthMaxTol
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthMaxTol
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthMaxTol
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol
RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_ReadStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol)
RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_Share, None, RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol)
RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_WriteStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol)
RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_swigregister = _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_swigregister
RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol_swigregister(RWStepDimTol_RWGeoTolAndGeoTolWthMaxTol)

class RWStepDimTol_RWGeoTolAndGeoTolWthMod(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMod_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeoTolAndGeoTolWthMod(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthMod
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMod_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthMod
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMod_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeoTolAndGeoTolWthMod
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMod_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeoTolAndGeoTolWthMod
RWStepDimTol_RWGeoTolAndGeoTolWthMod.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMod_ReadStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthMod)
RWStepDimTol_RWGeoTolAndGeoTolWthMod.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMod_Share, None, RWStepDimTol_RWGeoTolAndGeoTolWthMod)
RWStepDimTol_RWGeoTolAndGeoTolWthMod.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMod_WriteStep, None, RWStepDimTol_RWGeoTolAndGeoTolWthMod)
RWStepDimTol_RWGeoTolAndGeoTolWthMod_swigregister = _RWStepDimTol.RWStepDimTol_RWGeoTolAndGeoTolWthMod_swigregister
RWStepDimTol_RWGeoTolAndGeoTolWthMod_swigregister(RWStepDimTol_RWGeoTolAndGeoTolWthMod)

class RWStepDimTol_RWGeometricTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWGeometricTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeometricTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeometricTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeometricTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_GeometricTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeometricTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeometricTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeometricTolerance
RWStepDimTol_RWGeometricTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricTolerance_ReadStep, None, RWStepDimTol_RWGeometricTolerance)
RWStepDimTol_RWGeometricTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricTolerance_Share, None, RWStepDimTol_RWGeometricTolerance)
RWStepDimTol_RWGeometricTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricTolerance_WriteStep, None, RWStepDimTol_RWGeometricTolerance)
RWStepDimTol_RWGeometricTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWGeometricTolerance_swigregister
RWStepDimTol_RWGeometricTolerance_swigregister(RWStepDimTol_RWGeometricTolerance)

class RWStepDimTol_RWGeometricToleranceRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWGeometricToleranceRelationship_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeometricToleranceRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeometricToleranceRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceRelationship
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeometricToleranceRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceRelationship
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeometricToleranceRelationship
RWStepDimTol_RWGeometricToleranceRelationship.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceRelationship_ReadStep, None, RWStepDimTol_RWGeometricToleranceRelationship)
RWStepDimTol_RWGeometricToleranceRelationship.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceRelationship_Share, None, RWStepDimTol_RWGeometricToleranceRelationship)
RWStepDimTol_RWGeometricToleranceRelationship.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceRelationship_WriteStep, None, RWStepDimTol_RWGeometricToleranceRelationship)
RWStepDimTol_RWGeometricToleranceRelationship_swigregister = _RWStepDimTol.RWStepDimTol_RWGeometricToleranceRelationship_swigregister
RWStepDimTol_RWGeometricToleranceRelationship_swigregister(RWStepDimTol_RWGeometricToleranceRelationship)

class RWStepDimTol_RWGeometricToleranceWithDatumReference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDatumReference_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeometricToleranceWithDatumReference(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeometricToleranceWithDatumReference
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithDatumReference
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDatumReference_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithDatumReference
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDatumReference_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeometricToleranceWithDatumReference
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithDatumReference
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDatumReference_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeometricToleranceWithDatumReference
RWStepDimTol_RWGeometricToleranceWithDatumReference.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDatumReference_ReadStep, None, RWStepDimTol_RWGeometricToleranceWithDatumReference)
RWStepDimTol_RWGeometricToleranceWithDatumReference.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDatumReference_Share, None, RWStepDimTol_RWGeometricToleranceWithDatumReference)
RWStepDimTol_RWGeometricToleranceWithDatumReference.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDatumReference_WriteStep, None, RWStepDimTol_RWGeometricToleranceWithDatumReference)
RWStepDimTol_RWGeometricToleranceWithDatumReference_swigregister = _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDatumReference_swigregister
RWStepDimTol_RWGeometricToleranceWithDatumReference_swigregister(RWStepDimTol_RWGeometricToleranceWithDatumReference)

class RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeometricToleranceWithDefinedAreaUnit
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithDefinedAreaUnit
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithDefinedAreaUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeometricToleranceWithDefinedAreaUnit
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithDefinedAreaUnit
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit
RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_ReadStep, None, RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit)
RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_Share, None, RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit)
RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_WriteStep, None, RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit)
RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_swigregister = _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_swigregister
RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit_swigregister(RWStepDimTol_RWGeometricToleranceWithDefinedAreaUnit)

class RWStepDimTol_RWGeometricToleranceWithDefinedUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedUnit_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeometricToleranceWithDefinedUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeometricToleranceWithDefinedUnit
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithDefinedUnit
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithDefinedUnit
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeometricToleranceWithDefinedUnit
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithDefinedUnit
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeometricToleranceWithDefinedUnit
RWStepDimTol_RWGeometricToleranceWithDefinedUnit.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedUnit_ReadStep, None, RWStepDimTol_RWGeometricToleranceWithDefinedUnit)
RWStepDimTol_RWGeometricToleranceWithDefinedUnit.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedUnit_Share, None, RWStepDimTol_RWGeometricToleranceWithDefinedUnit)
RWStepDimTol_RWGeometricToleranceWithDefinedUnit.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedUnit_WriteStep, None, RWStepDimTol_RWGeometricToleranceWithDefinedUnit)
RWStepDimTol_RWGeometricToleranceWithDefinedUnit_swigregister = _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithDefinedUnit_swigregister
RWStepDimTol_RWGeometricToleranceWithDefinedUnit_swigregister(RWStepDimTol_RWGeometricToleranceWithDefinedUnit)

class RWStepDimTol_RWGeometricToleranceWithMaximumTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeometricToleranceWithMaximumTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeometricToleranceWithMaximumTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithMaximumTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithMaximumTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeometricToleranceWithMaximumTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithMaximumTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeometricToleranceWithMaximumTolerance
RWStepDimTol_RWGeometricToleranceWithMaximumTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_ReadStep, None, RWStepDimTol_RWGeometricToleranceWithMaximumTolerance)
RWStepDimTol_RWGeometricToleranceWithMaximumTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_Share, None, RWStepDimTol_RWGeometricToleranceWithMaximumTolerance)
RWStepDimTol_RWGeometricToleranceWithMaximumTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_WriteStep, None, RWStepDimTol_RWGeometricToleranceWithMaximumTolerance)
RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_swigregister
RWStepDimTol_RWGeometricToleranceWithMaximumTolerance_swigregister(RWStepDimTol_RWGeometricToleranceWithMaximumTolerance)

class RWStepDimTol_RWGeometricToleranceWithModifiers(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithModifiers_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWGeometricToleranceWithModifiers(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeometricToleranceWithModifiers
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithModifiers
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithModifiers_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithModifiers
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithModifiers_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeometricToleranceWithModifiers
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_GeometricToleranceWithModifiers
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithModifiers_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWGeometricToleranceWithModifiers
RWStepDimTol_RWGeometricToleranceWithModifiers.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithModifiers_ReadStep, None, RWStepDimTol_RWGeometricToleranceWithModifiers)
RWStepDimTol_RWGeometricToleranceWithModifiers.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithModifiers_Share, None, RWStepDimTol_RWGeometricToleranceWithModifiers)
RWStepDimTol_RWGeometricToleranceWithModifiers.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithModifiers_WriteStep, None, RWStepDimTol_RWGeometricToleranceWithModifiers)
RWStepDimTol_RWGeometricToleranceWithModifiers_swigregister = _RWStepDimTol.RWStepDimTol_RWGeometricToleranceWithModifiers_swigregister
RWStepDimTol_RWGeometricToleranceWithModifiers_swigregister(RWStepDimTol_RWGeometricToleranceWithModifiers)

class RWStepDimTol_RWLineProfileTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWLineProfileTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWLineProfileTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads LineProfileTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_LineProfileTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWLineProfileTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_LineProfileTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWLineProfileTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes LineProfileTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_LineProfileTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWLineProfileTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWLineProfileTolerance
RWStepDimTol_RWLineProfileTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWLineProfileTolerance_ReadStep, None, RWStepDimTol_RWLineProfileTolerance)
RWStepDimTol_RWLineProfileTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWLineProfileTolerance_Share, None, RWStepDimTol_RWLineProfileTolerance)
RWStepDimTol_RWLineProfileTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWLineProfileTolerance_WriteStep, None, RWStepDimTol_RWLineProfileTolerance)
RWStepDimTol_RWLineProfileTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWLineProfileTolerance_swigregister
RWStepDimTol_RWLineProfileTolerance_swigregister(RWStepDimTol_RWLineProfileTolerance)

class RWStepDimTol_RWModifiedGeometricTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWModifiedGeometricTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWModifiedGeometricTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ModifiedGeometricTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_ModifiedGeometricTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWModifiedGeometricTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_ModifiedGeometricTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWModifiedGeometricTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ModifiedGeometricTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_ModifiedGeometricTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWModifiedGeometricTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWModifiedGeometricTolerance
RWStepDimTol_RWModifiedGeometricTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWModifiedGeometricTolerance_ReadStep, None, RWStepDimTol_RWModifiedGeometricTolerance)
RWStepDimTol_RWModifiedGeometricTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWModifiedGeometricTolerance_Share, None, RWStepDimTol_RWModifiedGeometricTolerance)
RWStepDimTol_RWModifiedGeometricTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWModifiedGeometricTolerance_WriteStep, None, RWStepDimTol_RWModifiedGeometricTolerance)
RWStepDimTol_RWModifiedGeometricTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWModifiedGeometricTolerance_swigregister
RWStepDimTol_RWModifiedGeometricTolerance_swigregister(RWStepDimTol_RWModifiedGeometricTolerance)

class RWStepDimTol_RWNonUniformZoneDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWNonUniformZoneDefinition_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWNonUniformZoneDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads NonUniformZoneDefinition
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_NonUniformZoneDefinition
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWNonUniformZoneDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_NonUniformZoneDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWNonUniformZoneDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes NonUniformZoneDefinition
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_NonUniformZoneDefinition
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWNonUniformZoneDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWNonUniformZoneDefinition
RWStepDimTol_RWNonUniformZoneDefinition.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWNonUniformZoneDefinition_ReadStep, None, RWStepDimTol_RWNonUniformZoneDefinition)
RWStepDimTol_RWNonUniformZoneDefinition.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWNonUniformZoneDefinition_Share, None, RWStepDimTol_RWNonUniformZoneDefinition)
RWStepDimTol_RWNonUniformZoneDefinition.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWNonUniformZoneDefinition_WriteStep, None, RWStepDimTol_RWNonUniformZoneDefinition)
RWStepDimTol_RWNonUniformZoneDefinition_swigregister = _RWStepDimTol.RWStepDimTol_RWNonUniformZoneDefinition_swigregister
RWStepDimTol_RWNonUniformZoneDefinition_swigregister(RWStepDimTol_RWNonUniformZoneDefinition)

class RWStepDimTol_RWParallelismTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWParallelismTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWParallelismTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ParallelismTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_ParallelismTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWParallelismTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_ParallelismTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWParallelismTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ParallelismTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_ParallelismTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWParallelismTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWParallelismTolerance
RWStepDimTol_RWParallelismTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWParallelismTolerance_ReadStep, None, RWStepDimTol_RWParallelismTolerance)
RWStepDimTol_RWParallelismTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWParallelismTolerance_Share, None, RWStepDimTol_RWParallelismTolerance)
RWStepDimTol_RWParallelismTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWParallelismTolerance_WriteStep, None, RWStepDimTol_RWParallelismTolerance)
RWStepDimTol_RWParallelismTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWParallelismTolerance_swigregister
RWStepDimTol_RWParallelismTolerance_swigregister(RWStepDimTol_RWParallelismTolerance)

class RWStepDimTol_RWPerpendicularityTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWPerpendicularityTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWPerpendicularityTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads PerpendicularityTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_PerpendicularityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWPerpendicularityTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_PerpendicularityTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWPerpendicularityTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes PerpendicularityTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_PerpendicularityTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWPerpendicularityTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWPerpendicularityTolerance
RWStepDimTol_RWPerpendicularityTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWPerpendicularityTolerance_ReadStep, None, RWStepDimTol_RWPerpendicularityTolerance)
RWStepDimTol_RWPerpendicularityTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWPerpendicularityTolerance_Share, None, RWStepDimTol_RWPerpendicularityTolerance)
RWStepDimTol_RWPerpendicularityTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWPerpendicularityTolerance_WriteStep, None, RWStepDimTol_RWPerpendicularityTolerance)
RWStepDimTol_RWPerpendicularityTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWPerpendicularityTolerance_swigregister
RWStepDimTol_RWPerpendicularityTolerance_swigregister(RWStepDimTol_RWPerpendicularityTolerance)

class RWStepDimTol_RWPlacedDatumTargetFeature(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWPlacedDatumTargetFeature_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWPlacedDatumTargetFeature(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads PlacedDatumTargetFeature
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_PlacedDatumTargetFeature
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWPlacedDatumTargetFeature_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_PlacedDatumTargetFeature
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWPlacedDatumTargetFeature_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes PlacedDatumTargetFeature
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_PlacedDatumTargetFeature
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWPlacedDatumTargetFeature_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWPlacedDatumTargetFeature
RWStepDimTol_RWPlacedDatumTargetFeature.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWPlacedDatumTargetFeature_ReadStep, None, RWStepDimTol_RWPlacedDatumTargetFeature)
RWStepDimTol_RWPlacedDatumTargetFeature.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWPlacedDatumTargetFeature_Share, None, RWStepDimTol_RWPlacedDatumTargetFeature)
RWStepDimTol_RWPlacedDatumTargetFeature.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWPlacedDatumTargetFeature_WriteStep, None, RWStepDimTol_RWPlacedDatumTargetFeature)
RWStepDimTol_RWPlacedDatumTargetFeature_swigregister = _RWStepDimTol.RWStepDimTol_RWPlacedDatumTargetFeature_swigregister
RWStepDimTol_RWPlacedDatumTargetFeature_swigregister(RWStepDimTol_RWPlacedDatumTargetFeature)

class RWStepDimTol_RWPositionTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWPositionTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWPositionTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads PositionTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_PositionTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWPositionTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_PositionTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWPositionTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes PositionTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_PositionTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWPositionTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWPositionTolerance
RWStepDimTol_RWPositionTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWPositionTolerance_ReadStep, None, RWStepDimTol_RWPositionTolerance)
RWStepDimTol_RWPositionTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWPositionTolerance_Share, None, RWStepDimTol_RWPositionTolerance)
RWStepDimTol_RWPositionTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWPositionTolerance_WriteStep, None, RWStepDimTol_RWPositionTolerance)
RWStepDimTol_RWPositionTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWPositionTolerance_swigregister
RWStepDimTol_RWPositionTolerance_swigregister(RWStepDimTol_RWPositionTolerance)

class RWStepDimTol_RWProjectedZoneDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWProjectedZoneDefinition_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWProjectedZoneDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ProjectedZoneDefinition
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_ProjectedZoneDefinition
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWProjectedZoneDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_ProjectedZoneDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWProjectedZoneDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ProjectedZoneDefinition
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_ProjectedZoneDefinition
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWProjectedZoneDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWProjectedZoneDefinition
RWStepDimTol_RWProjectedZoneDefinition.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWProjectedZoneDefinition_ReadStep, None, RWStepDimTol_RWProjectedZoneDefinition)
RWStepDimTol_RWProjectedZoneDefinition.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWProjectedZoneDefinition_Share, None, RWStepDimTol_RWProjectedZoneDefinition)
RWStepDimTol_RWProjectedZoneDefinition.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWProjectedZoneDefinition_WriteStep, None, RWStepDimTol_RWProjectedZoneDefinition)
RWStepDimTol_RWProjectedZoneDefinition_swigregister = _RWStepDimTol.RWStepDimTol_RWProjectedZoneDefinition_swigregister
RWStepDimTol_RWProjectedZoneDefinition_swigregister(RWStepDimTol_RWProjectedZoneDefinition)

class RWStepDimTol_RWRoundnessTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWRoundnessTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWRoundnessTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads RoundnessTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_RoundnessTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWRoundnessTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_RoundnessTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWRoundnessTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes RoundnessTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_RoundnessTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWRoundnessTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWRoundnessTolerance
RWStepDimTol_RWRoundnessTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWRoundnessTolerance_ReadStep, None, RWStepDimTol_RWRoundnessTolerance)
RWStepDimTol_RWRoundnessTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWRoundnessTolerance_Share, None, RWStepDimTol_RWRoundnessTolerance)
RWStepDimTol_RWRoundnessTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWRoundnessTolerance_WriteStep, None, RWStepDimTol_RWRoundnessTolerance)
RWStepDimTol_RWRoundnessTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWRoundnessTolerance_swigregister
RWStepDimTol_RWRoundnessTolerance_swigregister(RWStepDimTol_RWRoundnessTolerance)

class RWStepDimTol_RWRunoutZoneDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWRunoutZoneDefinition_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWRunoutZoneDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads RunoutZoneDefinition
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_RunoutZoneDefinition
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWRunoutZoneDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_RunoutZoneDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWRunoutZoneDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes RunoutZoneDefinition
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_RunoutZoneDefinition
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWRunoutZoneDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWRunoutZoneDefinition
RWStepDimTol_RWRunoutZoneDefinition.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWRunoutZoneDefinition_ReadStep, None, RWStepDimTol_RWRunoutZoneDefinition)
RWStepDimTol_RWRunoutZoneDefinition.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWRunoutZoneDefinition_Share, None, RWStepDimTol_RWRunoutZoneDefinition)
RWStepDimTol_RWRunoutZoneDefinition.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWRunoutZoneDefinition_WriteStep, None, RWStepDimTol_RWRunoutZoneDefinition)
RWStepDimTol_RWRunoutZoneDefinition_swigregister = _RWStepDimTol.RWStepDimTol_RWRunoutZoneDefinition_swigregister
RWStepDimTol_RWRunoutZoneDefinition_swigregister(RWStepDimTol_RWRunoutZoneDefinition)

class RWStepDimTol_RWRunoutZoneOrientation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWRunoutZoneOrientation_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWRunoutZoneOrientation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads RunoutZoneOrientation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_RunoutZoneOrientation
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWRunoutZoneOrientation_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes RunoutZoneOrientation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_RunoutZoneOrientation
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWRunoutZoneOrientation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWRunoutZoneOrientation
RWStepDimTol_RWRunoutZoneOrientation.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWRunoutZoneOrientation_ReadStep, None, RWStepDimTol_RWRunoutZoneOrientation)
RWStepDimTol_RWRunoutZoneOrientation.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWRunoutZoneOrientation_WriteStep, None, RWStepDimTol_RWRunoutZoneOrientation)
RWStepDimTol_RWRunoutZoneOrientation_swigregister = _RWStepDimTol.RWStepDimTol_RWRunoutZoneOrientation_swigregister
RWStepDimTol_RWRunoutZoneOrientation_swigregister(RWStepDimTol_RWRunoutZoneOrientation)

class RWStepDimTol_RWStraightnessTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWStraightnessTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWStraightnessTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads StraightnessTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_StraightnessTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWStraightnessTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_StraightnessTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWStraightnessTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes StraightnessTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_StraightnessTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWStraightnessTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWStraightnessTolerance
RWStepDimTol_RWStraightnessTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWStraightnessTolerance_ReadStep, None, RWStepDimTol_RWStraightnessTolerance)
RWStepDimTol_RWStraightnessTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWStraightnessTolerance_Share, None, RWStepDimTol_RWStraightnessTolerance)
RWStepDimTol_RWStraightnessTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWStraightnessTolerance_WriteStep, None, RWStepDimTol_RWStraightnessTolerance)
RWStepDimTol_RWStraightnessTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWStraightnessTolerance_swigregister
RWStepDimTol_RWStraightnessTolerance_swigregister(RWStepDimTol_RWStraightnessTolerance)

class RWStepDimTol_RWSurfaceProfileTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWSurfaceProfileTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWSurfaceProfileTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads SurfaceProfileTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_SurfaceProfileTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWSurfaceProfileTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_SurfaceProfileTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWSurfaceProfileTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes SurfaceProfileTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_SurfaceProfileTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWSurfaceProfileTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWSurfaceProfileTolerance
RWStepDimTol_RWSurfaceProfileTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWSurfaceProfileTolerance_ReadStep, None, RWStepDimTol_RWSurfaceProfileTolerance)
RWStepDimTol_RWSurfaceProfileTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWSurfaceProfileTolerance_Share, None, RWStepDimTol_RWSurfaceProfileTolerance)
RWStepDimTol_RWSurfaceProfileTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWSurfaceProfileTolerance_WriteStep, None, RWStepDimTol_RWSurfaceProfileTolerance)
RWStepDimTol_RWSurfaceProfileTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWSurfaceProfileTolerance_swigregister
RWStepDimTol_RWSurfaceProfileTolerance_swigregister(RWStepDimTol_RWSurfaceProfileTolerance)

class RWStepDimTol_RWSymmetryTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWSymmetryTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWSymmetryTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads SymmetryTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_SymmetryTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWSymmetryTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_SymmetryTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWSymmetryTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes SymmetryTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_SymmetryTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWSymmetryTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWSymmetryTolerance
RWStepDimTol_RWSymmetryTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWSymmetryTolerance_ReadStep, None, RWStepDimTol_RWSymmetryTolerance)
RWStepDimTol_RWSymmetryTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWSymmetryTolerance_Share, None, RWStepDimTol_RWSymmetryTolerance)
RWStepDimTol_RWSymmetryTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWSymmetryTolerance_WriteStep, None, RWStepDimTol_RWSymmetryTolerance)
RWStepDimTol_RWSymmetryTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWSymmetryTolerance_swigregister
RWStepDimTol_RWSymmetryTolerance_swigregister(RWStepDimTol_RWSymmetryTolerance)

class RWStepDimTol_RWToleranceZone(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWToleranceZone_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWToleranceZone(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ToleranceZone
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_ToleranceZone
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWToleranceZone_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_ToleranceZone
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWToleranceZone_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ToleranceZone
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_ToleranceZone
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWToleranceZone_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWToleranceZone
RWStepDimTol_RWToleranceZone.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWToleranceZone_ReadStep, None, RWStepDimTol_RWToleranceZone)
RWStepDimTol_RWToleranceZone.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWToleranceZone_Share, None, RWStepDimTol_RWToleranceZone)
RWStepDimTol_RWToleranceZone.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWToleranceZone_WriteStep, None, RWStepDimTol_RWToleranceZone)
RWStepDimTol_RWToleranceZone_swigregister = _RWStepDimTol.RWStepDimTol_RWToleranceZone_swigregister
RWStepDimTol_RWToleranceZone_swigregister(RWStepDimTol_RWToleranceZone)

class RWStepDimTol_RWToleranceZoneDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWToleranceZoneDefinition_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWToleranceZoneDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ToleranceZoneDefinition
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_ToleranceZoneDefinition
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWToleranceZoneDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_ToleranceZoneDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWToleranceZoneDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ToleranceZoneDefinition
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_ToleranceZoneDefinition
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWToleranceZoneDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWToleranceZoneDefinition
RWStepDimTol_RWToleranceZoneDefinition.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWToleranceZoneDefinition_ReadStep, None, RWStepDimTol_RWToleranceZoneDefinition)
RWStepDimTol_RWToleranceZoneDefinition.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWToleranceZoneDefinition_Share, None, RWStepDimTol_RWToleranceZoneDefinition)
RWStepDimTol_RWToleranceZoneDefinition.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWToleranceZoneDefinition_WriteStep, None, RWStepDimTol_RWToleranceZoneDefinition)
RWStepDimTol_RWToleranceZoneDefinition_swigregister = _RWStepDimTol.RWStepDimTol_RWToleranceZoneDefinition_swigregister
RWStepDimTol_RWToleranceZoneDefinition_swigregister(RWStepDimTol_RWToleranceZoneDefinition)

class RWStepDimTol_RWToleranceZoneForm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWToleranceZoneForm_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWToleranceZoneForm(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ToleranceZoneForm
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_ToleranceZoneForm
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWToleranceZoneForm_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ToleranceZoneForm
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_ToleranceZoneForm
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWToleranceZoneForm_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWToleranceZoneForm
RWStepDimTol_RWToleranceZoneForm.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWToleranceZoneForm_ReadStep, None, RWStepDimTol_RWToleranceZoneForm)
RWStepDimTol_RWToleranceZoneForm.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWToleranceZoneForm_WriteStep, None, RWStepDimTol_RWToleranceZoneForm)
RWStepDimTol_RWToleranceZoneForm_swigregister = _RWStepDimTol.RWStepDimTol_RWToleranceZoneForm_swigregister
RWStepDimTol_RWToleranceZoneForm_swigregister(RWStepDimTol_RWToleranceZoneForm)

class RWStepDimTol_RWTotalRunoutTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWTotalRunoutTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWTotalRunoutTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads TotalRunoutTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_TotalRunoutTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWTotalRunoutTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_TotalRunoutTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWTotalRunoutTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes TotalRunoutTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_TotalRunoutTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWTotalRunoutTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWTotalRunoutTolerance
RWStepDimTol_RWTotalRunoutTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWTotalRunoutTolerance_ReadStep, None, RWStepDimTol_RWTotalRunoutTolerance)
RWStepDimTol_RWTotalRunoutTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWTotalRunoutTolerance_Share, None, RWStepDimTol_RWTotalRunoutTolerance)
RWStepDimTol_RWTotalRunoutTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWTotalRunoutTolerance_WriteStep, None, RWStepDimTol_RWTotalRunoutTolerance)
RWStepDimTol_RWTotalRunoutTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWTotalRunoutTolerance_swigregister
RWStepDimTol_RWTotalRunoutTolerance_swigregister(RWStepDimTol_RWTotalRunoutTolerance)

class RWStepDimTol_RWUnequallyDisposedGeometricTolerance(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepDimTol.RWStepDimTol_RWUnequallyDisposedGeometricTolerance_swiginit(self, _RWStepDimTol.new_RWStepDimTol_RWUnequallyDisposedGeometricTolerance(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads UnequallyDisposedGeometricTolerance
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepDimTol_UnequallyDisposedGeometricTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWUnequallyDisposedGeometricTolerance_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepDimTol_UnequallyDisposedGeometricTolerance
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWUnequallyDisposedGeometricTolerance_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes UnequallyDisposedGeometricTolerance
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepDimTol_UnequallyDisposedGeometricTolerance
        	:rtype: None
        """
        return _RWStepDimTol.RWStepDimTol_RWUnequallyDisposedGeometricTolerance_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepDimTol.delete_RWStepDimTol_RWUnequallyDisposedGeometricTolerance
RWStepDimTol_RWUnequallyDisposedGeometricTolerance.ReadStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWUnequallyDisposedGeometricTolerance_ReadStep, None, RWStepDimTol_RWUnequallyDisposedGeometricTolerance)
RWStepDimTol_RWUnequallyDisposedGeometricTolerance.Share = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWUnequallyDisposedGeometricTolerance_Share, None, RWStepDimTol_RWUnequallyDisposedGeometricTolerance)
RWStepDimTol_RWUnequallyDisposedGeometricTolerance.WriteStep = new_instancemethod(_RWStepDimTol.RWStepDimTol_RWUnequallyDisposedGeometricTolerance_WriteStep, None, RWStepDimTol_RWUnequallyDisposedGeometricTolerance)
RWStepDimTol_RWUnequallyDisposedGeometricTolerance_swigregister = _RWStepDimTol.RWStepDimTol_RWUnequallyDisposedGeometricTolerance_swigregister
RWStepDimTol_RWUnequallyDisposedGeometricTolerance_swigregister(RWStepDimTol_RWUnequallyDisposedGeometricTolerance)



