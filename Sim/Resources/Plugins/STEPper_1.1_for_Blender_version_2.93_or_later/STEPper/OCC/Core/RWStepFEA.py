# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
RWStepFEA module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_rwstepfea.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _RWStepFEA.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepFEA')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepFEA')
    _RWStepFEA = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepFEA', [dirname(__file__)])
        except ImportError:
            import _RWStepFEA
            return _RWStepFEA
        try:
            _mod = imp.load_module('_RWStepFEA', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepFEA = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepFEA
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepFEA.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_RWStepFEA.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_RWStepFEA.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_RWStepFEA.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_RWStepFEA.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_RWStepFEA.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_RWStepFEA.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_RWStepFEA.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_RWStepFEA.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_RWStepFEA.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_RWStepFEA.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_RWStepFEA.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_RWStepFEA.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_RWStepFEA.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_RWStepFEA.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_RWStepFEA.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_RWStepFEA.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _RWStepFEA.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _RWStepFEA.process_exception(error, method_name, class_name)
process_exception = _RWStepFEA.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepFEA
import OCC.Core.StepElement
import OCC.Core.StepRepr
import OCC.Core.StepBasic
import OCC.Core.StepGeom
class RWStepFEA_RWAlignedCurve3dElementCoordinateSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWAlignedCurve3dElementCoordinateSystem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads AlignedCurve3dElementCoordinateSystem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_AlignedCurve3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_AlignedCurve3dElementCoordinateSystem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes AlignedCurve3dElementCoordinateSystem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_AlignedCurve3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWAlignedCurve3dElementCoordinateSystem
RWStepFEA_RWAlignedCurve3dElementCoordinateSystem.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_ReadStep, None, RWStepFEA_RWAlignedCurve3dElementCoordinateSystem)
RWStepFEA_RWAlignedCurve3dElementCoordinateSystem.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_Share, None, RWStepFEA_RWAlignedCurve3dElementCoordinateSystem)
RWStepFEA_RWAlignedCurve3dElementCoordinateSystem.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_WriteStep, None, RWStepFEA_RWAlignedCurve3dElementCoordinateSystem)
RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_swigregister = _RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_swigregister
RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_swigregister(RWStepFEA_RWAlignedCurve3dElementCoordinateSystem)

class RWStepFEA_RWAlignedSurface3dElementCoordinateSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWAlignedSurface3dElementCoordinateSystem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads AlignedSurface3dElementCoordinateSystem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_AlignedSurface3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_AlignedSurface3dElementCoordinateSystem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes AlignedSurface3dElementCoordinateSystem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_AlignedSurface3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWAlignedSurface3dElementCoordinateSystem
RWStepFEA_RWAlignedSurface3dElementCoordinateSystem.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_ReadStep, None, RWStepFEA_RWAlignedSurface3dElementCoordinateSystem)
RWStepFEA_RWAlignedSurface3dElementCoordinateSystem.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_Share, None, RWStepFEA_RWAlignedSurface3dElementCoordinateSystem)
RWStepFEA_RWAlignedSurface3dElementCoordinateSystem.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_WriteStep, None, RWStepFEA_RWAlignedSurface3dElementCoordinateSystem)
RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_swigregister = _RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_swigregister
RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_swigregister(RWStepFEA_RWAlignedSurface3dElementCoordinateSystem)

class RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ArbitraryVolume3dElementCoordinateSystem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_ArbitraryVolume3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_ArbitraryVolume3dElementCoordinateSystem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ArbitraryVolume3dElementCoordinateSystem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_ArbitraryVolume3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem
RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_ReadStep, None, RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem)
RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_Share, None, RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem)
RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_WriteStep, None, RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem)
RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_swigregister = _RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_swigregister
RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_swigregister(RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem)

class RWStepFEA_RWConstantSurface3dElementCoordinateSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWConstantSurface3dElementCoordinateSystem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ConstantSurface3dElementCoordinateSystem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_ConstantSurface3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_ConstantSurface3dElementCoordinateSystem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ConstantSurface3dElementCoordinateSystem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_ConstantSurface3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWConstantSurface3dElementCoordinateSystem
RWStepFEA_RWConstantSurface3dElementCoordinateSystem.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_ReadStep, None, RWStepFEA_RWConstantSurface3dElementCoordinateSystem)
RWStepFEA_RWConstantSurface3dElementCoordinateSystem.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_Share, None, RWStepFEA_RWConstantSurface3dElementCoordinateSystem)
RWStepFEA_RWConstantSurface3dElementCoordinateSystem.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_WriteStep, None, RWStepFEA_RWConstantSurface3dElementCoordinateSystem)
RWStepFEA_RWConstantSurface3dElementCoordinateSystem_swigregister = _RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_swigregister
RWStepFEA_RWConstantSurface3dElementCoordinateSystem_swigregister(RWStepFEA_RWConstantSurface3dElementCoordinateSystem)

class RWStepFEA_RWCurve3dElementProperty(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWCurve3dElementProperty_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurve3dElementProperty(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Curve3dElementProperty
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_Curve3dElementProperty
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementProperty_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_Curve3dElementProperty
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementProperty_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Curve3dElementProperty
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_Curve3dElementProperty
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementProperty_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurve3dElementProperty
RWStepFEA_RWCurve3dElementProperty.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurve3dElementProperty_ReadStep, None, RWStepFEA_RWCurve3dElementProperty)
RWStepFEA_RWCurve3dElementProperty.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurve3dElementProperty_Share, None, RWStepFEA_RWCurve3dElementProperty)
RWStepFEA_RWCurve3dElementProperty.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurve3dElementProperty_WriteStep, None, RWStepFEA_RWCurve3dElementProperty)
RWStepFEA_RWCurve3dElementProperty_swigregister = _RWStepFEA.RWStepFEA_RWCurve3dElementProperty_swigregister
RWStepFEA_RWCurve3dElementProperty_swigregister(RWStepFEA_RWCurve3dElementProperty)

class RWStepFEA_RWCurve3dElementRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurve3dElementRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Curve3dElementRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_Curve3dElementRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_Curve3dElementRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Curve3dElementRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_Curve3dElementRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurve3dElementRepresentation
RWStepFEA_RWCurve3dElementRepresentation.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_ReadStep, None, RWStepFEA_RWCurve3dElementRepresentation)
RWStepFEA_RWCurve3dElementRepresentation.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_Share, None, RWStepFEA_RWCurve3dElementRepresentation)
RWStepFEA_RWCurve3dElementRepresentation.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_WriteStep, None, RWStepFEA_RWCurve3dElementRepresentation)
RWStepFEA_RWCurve3dElementRepresentation_swigregister = _RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_swigregister
RWStepFEA_RWCurve3dElementRepresentation_swigregister(RWStepFEA_RWCurve3dElementRepresentation)

class RWStepFEA_RWCurveElementEndOffset(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWCurveElementEndOffset_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementEndOffset(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveElementEndOffset
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_CurveElementEndOffset
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndOffset_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_CurveElementEndOffset
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndOffset_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveElementEndOffset
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_CurveElementEndOffset
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndOffset_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementEndOffset
RWStepFEA_RWCurveElementEndOffset.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementEndOffset_ReadStep, None, RWStepFEA_RWCurveElementEndOffset)
RWStepFEA_RWCurveElementEndOffset.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementEndOffset_Share, None, RWStepFEA_RWCurveElementEndOffset)
RWStepFEA_RWCurveElementEndOffset.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementEndOffset_WriteStep, None, RWStepFEA_RWCurveElementEndOffset)
RWStepFEA_RWCurveElementEndOffset_swigregister = _RWStepFEA.RWStepFEA_RWCurveElementEndOffset_swigregister
RWStepFEA_RWCurveElementEndOffset_swigregister(RWStepFEA_RWCurveElementEndOffset)

class RWStepFEA_RWCurveElementEndRelease(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWCurveElementEndRelease_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementEndRelease(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveElementEndRelease
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_CurveElementEndRelease
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndRelease_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_CurveElementEndRelease
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndRelease_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveElementEndRelease
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_CurveElementEndRelease
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndRelease_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementEndRelease
RWStepFEA_RWCurveElementEndRelease.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementEndRelease_ReadStep, None, RWStepFEA_RWCurveElementEndRelease)
RWStepFEA_RWCurveElementEndRelease.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementEndRelease_Share, None, RWStepFEA_RWCurveElementEndRelease)
RWStepFEA_RWCurveElementEndRelease.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementEndRelease_WriteStep, None, RWStepFEA_RWCurveElementEndRelease)
RWStepFEA_RWCurveElementEndRelease_swigregister = _RWStepFEA.RWStepFEA_RWCurveElementEndRelease_swigregister
RWStepFEA_RWCurveElementEndRelease_swigregister(RWStepFEA_RWCurveElementEndRelease)

class RWStepFEA_RWCurveElementInterval(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWCurveElementInterval_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementInterval(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveElementInterval
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_CurveElementInterval
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementInterval_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_CurveElementInterval
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementInterval_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveElementInterval
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_CurveElementInterval
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementInterval_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementInterval
RWStepFEA_RWCurveElementInterval.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementInterval_ReadStep, None, RWStepFEA_RWCurveElementInterval)
RWStepFEA_RWCurveElementInterval.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementInterval_Share, None, RWStepFEA_RWCurveElementInterval)
RWStepFEA_RWCurveElementInterval.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementInterval_WriteStep, None, RWStepFEA_RWCurveElementInterval)
RWStepFEA_RWCurveElementInterval_swigregister = _RWStepFEA.RWStepFEA_RWCurveElementInterval_swigregister
RWStepFEA_RWCurveElementInterval_swigregister(RWStepFEA_RWCurveElementInterval)

class RWStepFEA_RWCurveElementIntervalConstant(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementIntervalConstant(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveElementIntervalConstant
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_CurveElementIntervalConstant
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_CurveElementIntervalConstant
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveElementIntervalConstant
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_CurveElementIntervalConstant
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementIntervalConstant
RWStepFEA_RWCurveElementIntervalConstant.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_ReadStep, None, RWStepFEA_RWCurveElementIntervalConstant)
RWStepFEA_RWCurveElementIntervalConstant.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_Share, None, RWStepFEA_RWCurveElementIntervalConstant)
RWStepFEA_RWCurveElementIntervalConstant.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_WriteStep, None, RWStepFEA_RWCurveElementIntervalConstant)
RWStepFEA_RWCurveElementIntervalConstant_swigregister = _RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_swigregister
RWStepFEA_RWCurveElementIntervalConstant_swigregister(RWStepFEA_RWCurveElementIntervalConstant)

class RWStepFEA_RWCurveElementIntervalLinearlyVarying(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementIntervalLinearlyVarying(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveElementIntervalLinearlyVarying
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_CurveElementIntervalLinearlyVarying
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_CurveElementIntervalLinearlyVarying
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveElementIntervalLinearlyVarying
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_CurveElementIntervalLinearlyVarying
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementIntervalLinearlyVarying
RWStepFEA_RWCurveElementIntervalLinearlyVarying.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_ReadStep, None, RWStepFEA_RWCurveElementIntervalLinearlyVarying)
RWStepFEA_RWCurveElementIntervalLinearlyVarying.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_Share, None, RWStepFEA_RWCurveElementIntervalLinearlyVarying)
RWStepFEA_RWCurveElementIntervalLinearlyVarying.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_WriteStep, None, RWStepFEA_RWCurveElementIntervalLinearlyVarying)
RWStepFEA_RWCurveElementIntervalLinearlyVarying_swigregister = _RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_swigregister
RWStepFEA_RWCurveElementIntervalLinearlyVarying_swigregister(RWStepFEA_RWCurveElementIntervalLinearlyVarying)

class RWStepFEA_RWCurveElementLocation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWCurveElementLocation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementLocation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveElementLocation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_CurveElementLocation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementLocation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_CurveElementLocation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementLocation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveElementLocation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_CurveElementLocation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWCurveElementLocation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementLocation
RWStepFEA_RWCurveElementLocation.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementLocation_ReadStep, None, RWStepFEA_RWCurveElementLocation)
RWStepFEA_RWCurveElementLocation.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementLocation_Share, None, RWStepFEA_RWCurveElementLocation)
RWStepFEA_RWCurveElementLocation.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWCurveElementLocation_WriteStep, None, RWStepFEA_RWCurveElementLocation)
RWStepFEA_RWCurveElementLocation_swigregister = _RWStepFEA.RWStepFEA_RWCurveElementLocation_swigregister
RWStepFEA_RWCurveElementLocation_swigregister(RWStepFEA_RWCurveElementLocation)

class RWStepFEA_RWDummyNode(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWDummyNode_swiginit(self, _RWStepFEA.new_RWStepFEA_RWDummyNode(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DummyNode
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_DummyNode
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWDummyNode_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_DummyNode
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWDummyNode_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DummyNode
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_DummyNode
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWDummyNode_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWDummyNode
RWStepFEA_RWDummyNode.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWDummyNode_ReadStep, None, RWStepFEA_RWDummyNode)
RWStepFEA_RWDummyNode.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWDummyNode_Share, None, RWStepFEA_RWDummyNode)
RWStepFEA_RWDummyNode.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWDummyNode_WriteStep, None, RWStepFEA_RWDummyNode)
RWStepFEA_RWDummyNode_swigregister = _RWStepFEA.RWStepFEA_RWDummyNode_swigregister
RWStepFEA_RWDummyNode_swigregister(RWStepFEA_RWDummyNode)

class RWStepFEA_RWElementGeometricRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWElementGeometricRelationship_swiginit(self, _RWStepFEA.new_RWStepFEA_RWElementGeometricRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ElementGeometricRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_ElementGeometricRelationship
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWElementGeometricRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_ElementGeometricRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWElementGeometricRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ElementGeometricRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_ElementGeometricRelationship
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWElementGeometricRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWElementGeometricRelationship
RWStepFEA_RWElementGeometricRelationship.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWElementGeometricRelationship_ReadStep, None, RWStepFEA_RWElementGeometricRelationship)
RWStepFEA_RWElementGeometricRelationship.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWElementGeometricRelationship_Share, None, RWStepFEA_RWElementGeometricRelationship)
RWStepFEA_RWElementGeometricRelationship.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWElementGeometricRelationship_WriteStep, None, RWStepFEA_RWElementGeometricRelationship)
RWStepFEA_RWElementGeometricRelationship_swigregister = _RWStepFEA.RWStepFEA_RWElementGeometricRelationship_swigregister
RWStepFEA_RWElementGeometricRelationship_swigregister(RWStepFEA_RWElementGeometricRelationship)

class RWStepFEA_RWElementGroup(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWElementGroup_swiginit(self, _RWStepFEA.new_RWStepFEA_RWElementGroup(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ElementGroup
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_ElementGroup
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWElementGroup_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_ElementGroup
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWElementGroup_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ElementGroup
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_ElementGroup
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWElementGroup_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWElementGroup
RWStepFEA_RWElementGroup.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWElementGroup_ReadStep, None, RWStepFEA_RWElementGroup)
RWStepFEA_RWElementGroup.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWElementGroup_Share, None, RWStepFEA_RWElementGroup)
RWStepFEA_RWElementGroup.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWElementGroup_WriteStep, None, RWStepFEA_RWElementGroup)
RWStepFEA_RWElementGroup_swigregister = _RWStepFEA.RWStepFEA_RWElementGroup_swigregister
RWStepFEA_RWElementGroup_swigregister(RWStepFEA_RWElementGroup)

class RWStepFEA_RWElementRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWElementRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWElementRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ElementRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_ElementRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWElementRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_ElementRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWElementRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ElementRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_ElementRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWElementRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWElementRepresentation
RWStepFEA_RWElementRepresentation.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWElementRepresentation_ReadStep, None, RWStepFEA_RWElementRepresentation)
RWStepFEA_RWElementRepresentation.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWElementRepresentation_Share, None, RWStepFEA_RWElementRepresentation)
RWStepFEA_RWElementRepresentation.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWElementRepresentation_WriteStep, None, RWStepFEA_RWElementRepresentation)
RWStepFEA_RWElementRepresentation_swigregister = _RWStepFEA.RWStepFEA_RWElementRepresentation_swigregister
RWStepFEA_RWElementRepresentation_swigregister(RWStepFEA_RWElementRepresentation)

class RWStepFEA_RWFeaAreaDensity(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaAreaDensity_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaAreaDensity(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaAreaDensity
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaAreaDensity
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaAreaDensity_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaAreaDensity
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaAreaDensity_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaAreaDensity
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaAreaDensity
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaAreaDensity_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaAreaDensity
RWStepFEA_RWFeaAreaDensity.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaAreaDensity_ReadStep, None, RWStepFEA_RWFeaAreaDensity)
RWStepFEA_RWFeaAreaDensity.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaAreaDensity_Share, None, RWStepFEA_RWFeaAreaDensity)
RWStepFEA_RWFeaAreaDensity.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaAreaDensity_WriteStep, None, RWStepFEA_RWFeaAreaDensity)
RWStepFEA_RWFeaAreaDensity_swigregister = _RWStepFEA.RWStepFEA_RWFeaAreaDensity_swigregister
RWStepFEA_RWFeaAreaDensity_swigregister(RWStepFEA_RWFeaAreaDensity)

class RWStepFEA_RWFeaAxis2Placement3d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaAxis2Placement3d(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaAxis2Placement3d
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaAxis2Placement3d
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaAxis2Placement3d
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaAxis2Placement3d
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaAxis2Placement3d
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaAxis2Placement3d
RWStepFEA_RWFeaAxis2Placement3d.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_ReadStep, None, RWStepFEA_RWFeaAxis2Placement3d)
RWStepFEA_RWFeaAxis2Placement3d.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_Share, None, RWStepFEA_RWFeaAxis2Placement3d)
RWStepFEA_RWFeaAxis2Placement3d.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_WriteStep, None, RWStepFEA_RWFeaAxis2Placement3d)
RWStepFEA_RWFeaAxis2Placement3d_swigregister = _RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_swigregister
RWStepFEA_RWFeaAxis2Placement3d_swigregister(RWStepFEA_RWFeaAxis2Placement3d)

class RWStepFEA_RWFeaCurveSectionGeometricRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaCurveSectionGeometricRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaCurveSectionGeometricRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaCurveSectionGeometricRelationship
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaCurveSectionGeometricRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaCurveSectionGeometricRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaCurveSectionGeometricRelationship
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaCurveSectionGeometricRelationship
RWStepFEA_RWFeaCurveSectionGeometricRelationship.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_ReadStep, None, RWStepFEA_RWFeaCurveSectionGeometricRelationship)
RWStepFEA_RWFeaCurveSectionGeometricRelationship.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_Share, None, RWStepFEA_RWFeaCurveSectionGeometricRelationship)
RWStepFEA_RWFeaCurveSectionGeometricRelationship.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_WriteStep, None, RWStepFEA_RWFeaCurveSectionGeometricRelationship)
RWStepFEA_RWFeaCurveSectionGeometricRelationship_swigregister = _RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_swigregister
RWStepFEA_RWFeaCurveSectionGeometricRelationship_swigregister(RWStepFEA_RWFeaCurveSectionGeometricRelationship)

class RWStepFEA_RWFeaGroup(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaGroup_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaGroup(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaGroup
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaGroup
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaGroup_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaGroup
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaGroup_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaGroup
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaGroup
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaGroup_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaGroup
RWStepFEA_RWFeaGroup.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaGroup_ReadStep, None, RWStepFEA_RWFeaGroup)
RWStepFEA_RWFeaGroup.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaGroup_Share, None, RWStepFEA_RWFeaGroup)
RWStepFEA_RWFeaGroup.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaGroup_WriteStep, None, RWStepFEA_RWFeaGroup)
RWStepFEA_RWFeaGroup_swigregister = _RWStepFEA.RWStepFEA_RWFeaGroup_swigregister
RWStepFEA_RWFeaGroup_swigregister(RWStepFEA_RWFeaGroup)

class RWStepFEA_RWFeaLinearElasticity(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaLinearElasticity_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaLinearElasticity(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaLinearElasticity
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaLinearElasticity
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaLinearElasticity_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaLinearElasticity
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaLinearElasticity_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaLinearElasticity
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaLinearElasticity
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaLinearElasticity_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaLinearElasticity
RWStepFEA_RWFeaLinearElasticity.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaLinearElasticity_ReadStep, None, RWStepFEA_RWFeaLinearElasticity)
RWStepFEA_RWFeaLinearElasticity.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaLinearElasticity_Share, None, RWStepFEA_RWFeaLinearElasticity)
RWStepFEA_RWFeaLinearElasticity.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaLinearElasticity_WriteStep, None, RWStepFEA_RWFeaLinearElasticity)
RWStepFEA_RWFeaLinearElasticity_swigregister = _RWStepFEA.RWStepFEA_RWFeaLinearElasticity_swigregister
RWStepFEA_RWFeaLinearElasticity_swigregister(RWStepFEA_RWFeaLinearElasticity)

class RWStepFEA_RWFeaMassDensity(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaMassDensity_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaMassDensity(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaMassDensity
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaMassDensity
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMassDensity_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaMassDensity
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMassDensity_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaMassDensity
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaMassDensity
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMassDensity_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaMassDensity
RWStepFEA_RWFeaMassDensity.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMassDensity_ReadStep, None, RWStepFEA_RWFeaMassDensity)
RWStepFEA_RWFeaMassDensity.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMassDensity_Share, None, RWStepFEA_RWFeaMassDensity)
RWStepFEA_RWFeaMassDensity.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMassDensity_WriteStep, None, RWStepFEA_RWFeaMassDensity)
RWStepFEA_RWFeaMassDensity_swigregister = _RWStepFEA.RWStepFEA_RWFeaMassDensity_swigregister
RWStepFEA_RWFeaMassDensity_swigregister(RWStepFEA_RWFeaMassDensity)

class RWStepFEA_RWFeaMaterialPropertyRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaMaterialPropertyRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaMaterialPropertyRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaMaterialPropertyRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaMaterialPropertyRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaMaterialPropertyRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaMaterialPropertyRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaMaterialPropertyRepresentation
RWStepFEA_RWFeaMaterialPropertyRepresentation.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_ReadStep, None, RWStepFEA_RWFeaMaterialPropertyRepresentation)
RWStepFEA_RWFeaMaterialPropertyRepresentation.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_Share, None, RWStepFEA_RWFeaMaterialPropertyRepresentation)
RWStepFEA_RWFeaMaterialPropertyRepresentation.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_WriteStep, None, RWStepFEA_RWFeaMaterialPropertyRepresentation)
RWStepFEA_RWFeaMaterialPropertyRepresentation_swigregister = _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_swigregister
RWStepFEA_RWFeaMaterialPropertyRepresentation_swigregister(RWStepFEA_RWFeaMaterialPropertyRepresentation)

class RWStepFEA_RWFeaMaterialPropertyRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaMaterialPropertyRepresentationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaMaterialPropertyRepresentationItem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaMaterialPropertyRepresentationItem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaMaterialPropertyRepresentationItem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaMaterialPropertyRepresentationItem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaMaterialPropertyRepresentationItem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaMaterialPropertyRepresentationItem
RWStepFEA_RWFeaMaterialPropertyRepresentationItem.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_ReadStep, None, RWStepFEA_RWFeaMaterialPropertyRepresentationItem)
RWStepFEA_RWFeaMaterialPropertyRepresentationItem.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_Share, None, RWStepFEA_RWFeaMaterialPropertyRepresentationItem)
RWStepFEA_RWFeaMaterialPropertyRepresentationItem.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_WriteStep, None, RWStepFEA_RWFeaMaterialPropertyRepresentationItem)
RWStepFEA_RWFeaMaterialPropertyRepresentationItem_swigregister = _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_swigregister
RWStepFEA_RWFeaMaterialPropertyRepresentationItem_swigregister(RWStepFEA_RWFeaMaterialPropertyRepresentationItem)

class RWStepFEA_RWFeaModel(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaModel_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaModel(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaModel
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaModel
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaModel_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaModel
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaModel_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaModel
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaModel
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaModel_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaModel
RWStepFEA_RWFeaModel.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaModel_ReadStep, None, RWStepFEA_RWFeaModel)
RWStepFEA_RWFeaModel.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaModel_Share, None, RWStepFEA_RWFeaModel)
RWStepFEA_RWFeaModel.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaModel_WriteStep, None, RWStepFEA_RWFeaModel)
RWStepFEA_RWFeaModel_swigregister = _RWStepFEA.RWStepFEA_RWFeaModel_swigregister
RWStepFEA_RWFeaModel_swigregister(RWStepFEA_RWFeaModel)

class RWStepFEA_RWFeaModel3d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaModel3d_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaModel3d(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaModel3d
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaModel3d
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaModel3d_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaModel3d
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaModel3d_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaModel3d
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaModel3d
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaModel3d_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaModel3d
RWStepFEA_RWFeaModel3d.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaModel3d_ReadStep, None, RWStepFEA_RWFeaModel3d)
RWStepFEA_RWFeaModel3d.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaModel3d_Share, None, RWStepFEA_RWFeaModel3d)
RWStepFEA_RWFeaModel3d.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaModel3d_WriteStep, None, RWStepFEA_RWFeaModel3d)
RWStepFEA_RWFeaModel3d_swigregister = _RWStepFEA.RWStepFEA_RWFeaModel3d_swigregister
RWStepFEA_RWFeaModel3d_swigregister(RWStepFEA_RWFeaModel3d)

class RWStepFEA_RWFeaModelDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaModelDefinition_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaModelDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaModelDefinition
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaModelDefinition
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaModelDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaModelDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaModelDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaModelDefinition
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaModelDefinition
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaModelDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaModelDefinition
RWStepFEA_RWFeaModelDefinition.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaModelDefinition_ReadStep, None, RWStepFEA_RWFeaModelDefinition)
RWStepFEA_RWFeaModelDefinition.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaModelDefinition_Share, None, RWStepFEA_RWFeaModelDefinition)
RWStepFEA_RWFeaModelDefinition.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaModelDefinition_WriteStep, None, RWStepFEA_RWFeaModelDefinition)
RWStepFEA_RWFeaModelDefinition_swigregister = _RWStepFEA.RWStepFEA_RWFeaModelDefinition_swigregister
RWStepFEA_RWFeaModelDefinition_swigregister(RWStepFEA_RWFeaModelDefinition)

class RWStepFEA_RWFeaMoistureAbsorption(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaMoistureAbsorption(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaMoistureAbsorption
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaMoistureAbsorption
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaMoistureAbsorption
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaMoistureAbsorption
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaMoistureAbsorption
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaMoistureAbsorption
RWStepFEA_RWFeaMoistureAbsorption.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_ReadStep, None, RWStepFEA_RWFeaMoistureAbsorption)
RWStepFEA_RWFeaMoistureAbsorption.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_Share, None, RWStepFEA_RWFeaMoistureAbsorption)
RWStepFEA_RWFeaMoistureAbsorption.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_WriteStep, None, RWStepFEA_RWFeaMoistureAbsorption)
RWStepFEA_RWFeaMoistureAbsorption_swigregister = _RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_swigregister
RWStepFEA_RWFeaMoistureAbsorption_swigregister(RWStepFEA_RWFeaMoistureAbsorption)

class RWStepFEA_RWFeaParametricPoint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaParametricPoint_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaParametricPoint(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaParametricPoint
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaParametricPoint
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaParametricPoint_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaParametricPoint
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaParametricPoint_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaParametricPoint
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaParametricPoint
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaParametricPoint_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaParametricPoint
RWStepFEA_RWFeaParametricPoint.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaParametricPoint_ReadStep, None, RWStepFEA_RWFeaParametricPoint)
RWStepFEA_RWFeaParametricPoint.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaParametricPoint_Share, None, RWStepFEA_RWFeaParametricPoint)
RWStepFEA_RWFeaParametricPoint.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaParametricPoint_WriteStep, None, RWStepFEA_RWFeaParametricPoint)
RWStepFEA_RWFeaParametricPoint_swigregister = _RWStepFEA.RWStepFEA_RWFeaParametricPoint_swigregister
RWStepFEA_RWFeaParametricPoint_swigregister(RWStepFEA_RWFeaParametricPoint)

class RWStepFEA_RWFeaRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaRepresentationItem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaRepresentationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaRepresentationItem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaRepresentationItem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaRepresentationItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaRepresentationItem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaRepresentationItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaRepresentationItem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaRepresentationItem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaRepresentationItem
RWStepFEA_RWFeaRepresentationItem.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaRepresentationItem_ReadStep, None, RWStepFEA_RWFeaRepresentationItem)
RWStepFEA_RWFeaRepresentationItem.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaRepresentationItem_Share, None, RWStepFEA_RWFeaRepresentationItem)
RWStepFEA_RWFeaRepresentationItem.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaRepresentationItem_WriteStep, None, RWStepFEA_RWFeaRepresentationItem)
RWStepFEA_RWFeaRepresentationItem_swigregister = _RWStepFEA.RWStepFEA_RWFeaRepresentationItem_swigregister
RWStepFEA_RWFeaRepresentationItem_swigregister(RWStepFEA_RWFeaRepresentationItem)

class RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaSecantCoefficientOfLinearThermalExpansion
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaSecantCoefficientOfLinearThermalExpansion
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaSecantCoefficientOfLinearThermalExpansion
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaSecantCoefficientOfLinearThermalExpansion
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaSecantCoefficientOfLinearThermalExpansion
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion
RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_ReadStep, None, RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion)
RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_Share, None, RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion)
RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_WriteStep, None, RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion)
RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_swigregister = _RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_swigregister
RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_swigregister(RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion)

class RWStepFEA_RWFeaShellBendingStiffness(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaShellBendingStiffness(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaShellBendingStiffness
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaShellBendingStiffness
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaShellBendingStiffness
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaShellBendingStiffness
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaShellBendingStiffness
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaShellBendingStiffness
RWStepFEA_RWFeaShellBendingStiffness.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_ReadStep, None, RWStepFEA_RWFeaShellBendingStiffness)
RWStepFEA_RWFeaShellBendingStiffness.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_Share, None, RWStepFEA_RWFeaShellBendingStiffness)
RWStepFEA_RWFeaShellBendingStiffness.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_WriteStep, None, RWStepFEA_RWFeaShellBendingStiffness)
RWStepFEA_RWFeaShellBendingStiffness_swigregister = _RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_swigregister
RWStepFEA_RWFeaShellBendingStiffness_swigregister(RWStepFEA_RWFeaShellBendingStiffness)

class RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaShellMembraneBendingCouplingStiffness
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaShellMembraneBendingCouplingStiffness
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaShellMembraneBendingCouplingStiffness
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaShellMembraneBendingCouplingStiffness
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaShellMembraneBendingCouplingStiffness
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness
RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_ReadStep, None, RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness)
RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_Share, None, RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness)
RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_WriteStep, None, RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness)
RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_swigregister = _RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_swigregister
RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_swigregister(RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness)

class RWStepFEA_RWFeaShellMembraneStiffness(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaShellMembraneStiffness(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaShellMembraneStiffness
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaShellMembraneStiffness
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaShellMembraneStiffness
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaShellMembraneStiffness
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaShellMembraneStiffness
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaShellMembraneStiffness
RWStepFEA_RWFeaShellMembraneStiffness.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_ReadStep, None, RWStepFEA_RWFeaShellMembraneStiffness)
RWStepFEA_RWFeaShellMembraneStiffness.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_Share, None, RWStepFEA_RWFeaShellMembraneStiffness)
RWStepFEA_RWFeaShellMembraneStiffness.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_WriteStep, None, RWStepFEA_RWFeaShellMembraneStiffness)
RWStepFEA_RWFeaShellMembraneStiffness_swigregister = _RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_swigregister
RWStepFEA_RWFeaShellMembraneStiffness_swigregister(RWStepFEA_RWFeaShellMembraneStiffness)

class RWStepFEA_RWFeaShellShearStiffness(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaShellShearStiffness(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaShellShearStiffness
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaShellShearStiffness
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaShellShearStiffness
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaShellShearStiffness
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaShellShearStiffness
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaShellShearStiffness
RWStepFEA_RWFeaShellShearStiffness.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_ReadStep, None, RWStepFEA_RWFeaShellShearStiffness)
RWStepFEA_RWFeaShellShearStiffness.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_Share, None, RWStepFEA_RWFeaShellShearStiffness)
RWStepFEA_RWFeaShellShearStiffness.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_WriteStep, None, RWStepFEA_RWFeaShellShearStiffness)
RWStepFEA_RWFeaShellShearStiffness_swigregister = _RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_swigregister
RWStepFEA_RWFeaShellShearStiffness_swigregister(RWStepFEA_RWFeaShellShearStiffness)

class RWStepFEA_RWFeaSurfaceSectionGeometricRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaSurfaceSectionGeometricRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaSurfaceSectionGeometricRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaSurfaceSectionGeometricRelationship
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaSurfaceSectionGeometricRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaSurfaceSectionGeometricRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaSurfaceSectionGeometricRelationship
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaSurfaceSectionGeometricRelationship
RWStepFEA_RWFeaSurfaceSectionGeometricRelationship.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_ReadStep, None, RWStepFEA_RWFeaSurfaceSectionGeometricRelationship)
RWStepFEA_RWFeaSurfaceSectionGeometricRelationship.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_Share, None, RWStepFEA_RWFeaSurfaceSectionGeometricRelationship)
RWStepFEA_RWFeaSurfaceSectionGeometricRelationship.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_WriteStep, None, RWStepFEA_RWFeaSurfaceSectionGeometricRelationship)
RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_swigregister = _RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_swigregister
RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_swigregister(RWStepFEA_RWFeaSurfaceSectionGeometricRelationship)

class RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FeaTangentialCoefficientOfLinearThermalExpansion
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FeaTangentialCoefficientOfLinearThermalExpansion
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion
RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_ReadStep, None, RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion)
RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_Share, None, RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion)
RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_WriteStep, None, RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion)
RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_swigregister = _RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_swigregister
RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_swigregister(RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion)

class RWStepFEA_RWFreedomAndCoefficient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFreedomAndCoefficient(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FreedomAndCoefficient
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FreedomAndCoefficient
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FreedomAndCoefficient
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FreedomAndCoefficient
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FreedomAndCoefficient
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFreedomAndCoefficient
RWStepFEA_RWFreedomAndCoefficient.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_ReadStep, None, RWStepFEA_RWFreedomAndCoefficient)
RWStepFEA_RWFreedomAndCoefficient.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_Share, None, RWStepFEA_RWFreedomAndCoefficient)
RWStepFEA_RWFreedomAndCoefficient.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_WriteStep, None, RWStepFEA_RWFreedomAndCoefficient)
RWStepFEA_RWFreedomAndCoefficient_swigregister = _RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_swigregister
RWStepFEA_RWFreedomAndCoefficient_swigregister(RWStepFEA_RWFreedomAndCoefficient)

class RWStepFEA_RWFreedomsList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWFreedomsList_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFreedomsList(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads FreedomsList
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_FreedomsList
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFreedomsList_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_FreedomsList
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFreedomsList_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes FreedomsList
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_FreedomsList
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWFreedomsList_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFreedomsList
RWStepFEA_RWFreedomsList.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFreedomsList_ReadStep, None, RWStepFEA_RWFreedomsList)
RWStepFEA_RWFreedomsList.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWFreedomsList_Share, None, RWStepFEA_RWFreedomsList)
RWStepFEA_RWFreedomsList.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWFreedomsList_WriteStep, None, RWStepFEA_RWFreedomsList)
RWStepFEA_RWFreedomsList_swigregister = _RWStepFEA.RWStepFEA_RWFreedomsList_swigregister
RWStepFEA_RWFreedomsList_swigregister(RWStepFEA_RWFreedomsList)

class RWStepFEA_RWGeometricNode(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWGeometricNode_swiginit(self, _RWStepFEA.new_RWStepFEA_RWGeometricNode(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeometricNode
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_GeometricNode
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWGeometricNode_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_GeometricNode
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWGeometricNode_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeometricNode
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_GeometricNode
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWGeometricNode_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWGeometricNode
RWStepFEA_RWGeometricNode.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWGeometricNode_ReadStep, None, RWStepFEA_RWGeometricNode)
RWStepFEA_RWGeometricNode.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWGeometricNode_Share, None, RWStepFEA_RWGeometricNode)
RWStepFEA_RWGeometricNode.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWGeometricNode_WriteStep, None, RWStepFEA_RWGeometricNode)
RWStepFEA_RWGeometricNode_swigregister = _RWStepFEA.RWStepFEA_RWGeometricNode_swigregister
RWStepFEA_RWGeometricNode_swigregister(RWStepFEA_RWGeometricNode)

class RWStepFEA_RWNode(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWNode_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNode(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Node
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_Node
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNode_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_Node
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNode_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Node
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_Node
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNode_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNode
RWStepFEA_RWNode.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNode_ReadStep, None, RWStepFEA_RWNode)
RWStepFEA_RWNode.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWNode_Share, None, RWStepFEA_RWNode)
RWStepFEA_RWNode.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNode_WriteStep, None, RWStepFEA_RWNode)
RWStepFEA_RWNode_swigregister = _RWStepFEA.RWStepFEA_RWNode_swigregister
RWStepFEA_RWNode_swigregister(RWStepFEA_RWNode)

class RWStepFEA_RWNodeDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWNodeDefinition_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads NodeDefinition
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_NodeDefinition
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_NodeDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes NodeDefinition
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_NodeDefinition
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeDefinition
RWStepFEA_RWNodeDefinition.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeDefinition_ReadStep, None, RWStepFEA_RWNodeDefinition)
RWStepFEA_RWNodeDefinition.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeDefinition_Share, None, RWStepFEA_RWNodeDefinition)
RWStepFEA_RWNodeDefinition.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeDefinition_WriteStep, None, RWStepFEA_RWNodeDefinition)
RWStepFEA_RWNodeDefinition_swigregister = _RWStepFEA.RWStepFEA_RWNodeDefinition_swigregister
RWStepFEA_RWNodeDefinition_swigregister(RWStepFEA_RWNodeDefinition)

class RWStepFEA_RWNodeGroup(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWNodeGroup_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeGroup(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads NodeGroup
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_NodeGroup
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeGroup_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_NodeGroup
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeGroup_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes NodeGroup
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_NodeGroup
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeGroup_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeGroup
RWStepFEA_RWNodeGroup.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeGroup_ReadStep, None, RWStepFEA_RWNodeGroup)
RWStepFEA_RWNodeGroup.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeGroup_Share, None, RWStepFEA_RWNodeGroup)
RWStepFEA_RWNodeGroup.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeGroup_WriteStep, None, RWStepFEA_RWNodeGroup)
RWStepFEA_RWNodeGroup_swigregister = _RWStepFEA.RWStepFEA_RWNodeGroup_swigregister
RWStepFEA_RWNodeGroup_swigregister(RWStepFEA_RWNodeGroup)

class RWStepFEA_RWNodeRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWNodeRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads NodeRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_NodeRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_NodeRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes NodeRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_NodeRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeRepresentation
RWStepFEA_RWNodeRepresentation.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeRepresentation_ReadStep, None, RWStepFEA_RWNodeRepresentation)
RWStepFEA_RWNodeRepresentation.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeRepresentation_Share, None, RWStepFEA_RWNodeRepresentation)
RWStepFEA_RWNodeRepresentation.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeRepresentation_WriteStep, None, RWStepFEA_RWNodeRepresentation)
RWStepFEA_RWNodeRepresentation_swigregister = _RWStepFEA.RWStepFEA_RWNodeRepresentation_swigregister
RWStepFEA_RWNodeRepresentation_swigregister(RWStepFEA_RWNodeRepresentation)

class RWStepFEA_RWNodeSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWNodeSet_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeSet(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads NodeSet
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_NodeSet
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeSet_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_NodeSet
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeSet_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes NodeSet
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_NodeSet
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeSet_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeSet
RWStepFEA_RWNodeSet.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeSet_ReadStep, None, RWStepFEA_RWNodeSet)
RWStepFEA_RWNodeSet.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeSet_Share, None, RWStepFEA_RWNodeSet)
RWStepFEA_RWNodeSet.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeSet_WriteStep, None, RWStepFEA_RWNodeSet)
RWStepFEA_RWNodeSet_swigregister = _RWStepFEA.RWStepFEA_RWNodeSet_swigregister
RWStepFEA_RWNodeSet_swigregister(RWStepFEA_RWNodeSet)

class RWStepFEA_RWNodeWithSolutionCoordinateSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeWithSolutionCoordinateSystem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads NodeWithSolutionCoordinateSystem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_NodeWithSolutionCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_NodeWithSolutionCoordinateSystem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes NodeWithSolutionCoordinateSystem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_NodeWithSolutionCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeWithSolutionCoordinateSystem
RWStepFEA_RWNodeWithSolutionCoordinateSystem.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_ReadStep, None, RWStepFEA_RWNodeWithSolutionCoordinateSystem)
RWStepFEA_RWNodeWithSolutionCoordinateSystem.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_Share, None, RWStepFEA_RWNodeWithSolutionCoordinateSystem)
RWStepFEA_RWNodeWithSolutionCoordinateSystem.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_WriteStep, None, RWStepFEA_RWNodeWithSolutionCoordinateSystem)
RWStepFEA_RWNodeWithSolutionCoordinateSystem_swigregister = _RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_swigregister
RWStepFEA_RWNodeWithSolutionCoordinateSystem_swigregister(RWStepFEA_RWNodeWithSolutionCoordinateSystem)

class RWStepFEA_RWNodeWithVector(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWNodeWithVector_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeWithVector(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads NodeWithVector
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_NodeWithVector
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeWithVector_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_NodeWithVector
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeWithVector_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes NodeWithVector
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_NodeWithVector
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWNodeWithVector_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeWithVector
RWStepFEA_RWNodeWithVector.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeWithVector_ReadStep, None, RWStepFEA_RWNodeWithVector)
RWStepFEA_RWNodeWithVector.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeWithVector_Share, None, RWStepFEA_RWNodeWithVector)
RWStepFEA_RWNodeWithVector.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWNodeWithVector_WriteStep, None, RWStepFEA_RWNodeWithVector)
RWStepFEA_RWNodeWithVector_swigregister = _RWStepFEA.RWStepFEA_RWNodeWithVector_swigregister
RWStepFEA_RWNodeWithVector_swigregister(RWStepFEA_RWNodeWithVector)

class RWStepFEA_RWParametricCurve3dElementCoordinateDirection(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_swiginit(self, _RWStepFEA.new_RWStepFEA_RWParametricCurve3dElementCoordinateDirection(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ParametricCurve3dElementCoordinateDirection
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_ParametricCurve3dElementCoordinateDirection
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_ParametricCurve3dElementCoordinateDirection
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ParametricCurve3dElementCoordinateDirection
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_ParametricCurve3dElementCoordinateDirection
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWParametricCurve3dElementCoordinateDirection
RWStepFEA_RWParametricCurve3dElementCoordinateDirection.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_ReadStep, None, RWStepFEA_RWParametricCurve3dElementCoordinateDirection)
RWStepFEA_RWParametricCurve3dElementCoordinateDirection.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_Share, None, RWStepFEA_RWParametricCurve3dElementCoordinateDirection)
RWStepFEA_RWParametricCurve3dElementCoordinateDirection.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_WriteStep, None, RWStepFEA_RWParametricCurve3dElementCoordinateDirection)
RWStepFEA_RWParametricCurve3dElementCoordinateDirection_swigregister = _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_swigregister
RWStepFEA_RWParametricCurve3dElementCoordinateDirection_swigregister(RWStepFEA_RWParametricCurve3dElementCoordinateDirection)

class RWStepFEA_RWParametricCurve3dElementCoordinateSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWParametricCurve3dElementCoordinateSystem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ParametricCurve3dElementCoordinateSystem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_ParametricCurve3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_ParametricCurve3dElementCoordinateSystem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ParametricCurve3dElementCoordinateSystem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_ParametricCurve3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWParametricCurve3dElementCoordinateSystem
RWStepFEA_RWParametricCurve3dElementCoordinateSystem.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_ReadStep, None, RWStepFEA_RWParametricCurve3dElementCoordinateSystem)
RWStepFEA_RWParametricCurve3dElementCoordinateSystem.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_Share, None, RWStepFEA_RWParametricCurve3dElementCoordinateSystem)
RWStepFEA_RWParametricCurve3dElementCoordinateSystem.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_WriteStep, None, RWStepFEA_RWParametricCurve3dElementCoordinateSystem)
RWStepFEA_RWParametricCurve3dElementCoordinateSystem_swigregister = _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_swigregister
RWStepFEA_RWParametricCurve3dElementCoordinateSystem_swigregister(RWStepFEA_RWParametricCurve3dElementCoordinateSystem)

class RWStepFEA_RWParametricSurface3dElementCoordinateSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWParametricSurface3dElementCoordinateSystem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ParametricSurface3dElementCoordinateSystem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_ParametricSurface3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_ParametricSurface3dElementCoordinateSystem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ParametricSurface3dElementCoordinateSystem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_ParametricSurface3dElementCoordinateSystem
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWParametricSurface3dElementCoordinateSystem
RWStepFEA_RWParametricSurface3dElementCoordinateSystem.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_ReadStep, None, RWStepFEA_RWParametricSurface3dElementCoordinateSystem)
RWStepFEA_RWParametricSurface3dElementCoordinateSystem.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_Share, None, RWStepFEA_RWParametricSurface3dElementCoordinateSystem)
RWStepFEA_RWParametricSurface3dElementCoordinateSystem.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_WriteStep, None, RWStepFEA_RWParametricSurface3dElementCoordinateSystem)
RWStepFEA_RWParametricSurface3dElementCoordinateSystem_swigregister = _RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_swigregister
RWStepFEA_RWParametricSurface3dElementCoordinateSystem_swigregister(RWStepFEA_RWParametricSurface3dElementCoordinateSystem)

class RWStepFEA_RWSurface3dElementRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWSurface3dElementRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Surface3dElementRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_Surface3dElementRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_Surface3dElementRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Surface3dElementRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_Surface3dElementRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWSurface3dElementRepresentation
RWStepFEA_RWSurface3dElementRepresentation.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_ReadStep, None, RWStepFEA_RWSurface3dElementRepresentation)
RWStepFEA_RWSurface3dElementRepresentation.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_Share, None, RWStepFEA_RWSurface3dElementRepresentation)
RWStepFEA_RWSurface3dElementRepresentation.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_WriteStep, None, RWStepFEA_RWSurface3dElementRepresentation)
RWStepFEA_RWSurface3dElementRepresentation_swigregister = _RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_swigregister
RWStepFEA_RWSurface3dElementRepresentation_swigregister(RWStepFEA_RWSurface3dElementRepresentation)

class RWStepFEA_RWVolume3dElementRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWVolume3dElementRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Volume3dElementRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepFEA_Volume3dElementRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepFEA_Volume3dElementRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Volume3dElementRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepFEA_Volume3dElementRepresentation
        	:rtype: None
        """
        return _RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWVolume3dElementRepresentation
RWStepFEA_RWVolume3dElementRepresentation.ReadStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_ReadStep, None, RWStepFEA_RWVolume3dElementRepresentation)
RWStepFEA_RWVolume3dElementRepresentation.Share = new_instancemethod(_RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_Share, None, RWStepFEA_RWVolume3dElementRepresentation)
RWStepFEA_RWVolume3dElementRepresentation.WriteStep = new_instancemethod(_RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_WriteStep, None, RWStepFEA_RWVolume3dElementRepresentation)
RWStepFEA_RWVolume3dElementRepresentation_swigregister = _RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_swigregister
RWStepFEA_RWVolume3dElementRepresentation_swigregister(RWStepFEA_RWVolume3dElementRepresentation)



