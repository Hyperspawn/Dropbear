# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
RWStepGeom module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_rwstepgeom.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _RWStepGeom.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepGeom')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepGeom')
    _RWStepGeom = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepGeom', [dirname(__file__)])
        except ImportError:
            import _RWStepGeom
            return _RWStepGeom
        try:
            _mod = imp.load_module('_RWStepGeom', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepGeom = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepGeom
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepGeom.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_RWStepGeom.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_RWStepGeom.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_RWStepGeom.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_RWStepGeom.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_RWStepGeom.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_RWStepGeom.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_RWStepGeom.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_RWStepGeom.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_RWStepGeom.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_RWStepGeom.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_RWStepGeom.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_RWStepGeom.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_RWStepGeom.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_RWStepGeom.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_RWStepGeom.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_RWStepGeom.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _RWStepGeom.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _RWStepGeom.process_exception(error, method_name, class_name)
process_exception = _RWStepGeom.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepGeom
import OCC.Core.StepRepr
import OCC.Core.StepBasic
class RWStepGeom_RWAxis1Placement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWAxis1Placement_swiginit(self, _RWStepGeom.new_RWStepGeom_RWAxis1Placement(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Axis1Placement
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWAxis1Placement_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Axis1Placement
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWAxis1Placement_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Axis1Placement
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWAxis1Placement_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWAxis1Placement
RWStepGeom_RWAxis1Placement.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWAxis1Placement_ReadStep, None, RWStepGeom_RWAxis1Placement)
RWStepGeom_RWAxis1Placement.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWAxis1Placement_Share, None, RWStepGeom_RWAxis1Placement)
RWStepGeom_RWAxis1Placement.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWAxis1Placement_WriteStep, None, RWStepGeom_RWAxis1Placement)
RWStepGeom_RWAxis1Placement_swigregister = _RWStepGeom.RWStepGeom_RWAxis1Placement_swigregister
RWStepGeom_RWAxis1Placement_swigregister(RWStepGeom_RWAxis1Placement)

class RWStepGeom_RWAxis2Placement2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWAxis2Placement2d_swiginit(self, _RWStepGeom.new_RWStepGeom_RWAxis2Placement2d(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Axis2Placement2d
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWAxis2Placement2d_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Axis2Placement2d
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWAxis2Placement2d_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Axis2Placement2d
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWAxis2Placement2d_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWAxis2Placement2d
RWStepGeom_RWAxis2Placement2d.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWAxis2Placement2d_ReadStep, None, RWStepGeom_RWAxis2Placement2d)
RWStepGeom_RWAxis2Placement2d.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWAxis2Placement2d_Share, None, RWStepGeom_RWAxis2Placement2d)
RWStepGeom_RWAxis2Placement2d.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWAxis2Placement2d_WriteStep, None, RWStepGeom_RWAxis2Placement2d)
RWStepGeom_RWAxis2Placement2d_swigregister = _RWStepGeom.RWStepGeom_RWAxis2Placement2d_swigregister
RWStepGeom_RWAxis2Placement2d_swigregister(RWStepGeom_RWAxis2Placement2d)

class RWStepGeom_RWAxis2Placement3d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWAxis2Placement3d_swiginit(self, _RWStepGeom.new_RWStepGeom_RWAxis2Placement3d(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Axis2Placement3d
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWAxis2Placement3d_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Axis2Placement3d
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWAxis2Placement3d_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Axis2Placement3d
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWAxis2Placement3d_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWAxis2Placement3d
RWStepGeom_RWAxis2Placement3d.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWAxis2Placement3d_ReadStep, None, RWStepGeom_RWAxis2Placement3d)
RWStepGeom_RWAxis2Placement3d.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWAxis2Placement3d_Share, None, RWStepGeom_RWAxis2Placement3d)
RWStepGeom_RWAxis2Placement3d.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWAxis2Placement3d_WriteStep, None, RWStepGeom_RWAxis2Placement3d)
RWStepGeom_RWAxis2Placement3d_swigregister = _RWStepGeom.RWStepGeom_RWAxis2Placement3d_swigregister
RWStepGeom_RWAxis2Placement3d_swigregister(RWStepGeom_RWAxis2Placement3d)

class RWStepGeom_RWBSplineCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBSplineCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBSplineCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBSplineCurve
RWStepGeom_RWBSplineCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurve_ReadStep, None, RWStepGeom_RWBSplineCurve)
RWStepGeom_RWBSplineCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurve_Share, None, RWStepGeom_RWBSplineCurve)
RWStepGeom_RWBSplineCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurve_WriteStep, None, RWStepGeom_RWBSplineCurve)
RWStepGeom_RWBSplineCurve_swigregister = _RWStepGeom.RWStepGeom_RWBSplineCurve_swigregister
RWStepGeom_RWBSplineCurve_swigregister(RWStepGeom_RWBSplineCurve)

class RWStepGeom_RWBSplineCurveWithKnots(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineCurveWithKnots
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBSplineCurveWithKnots(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BSplineCurveWithKnots
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineCurveWithKnots
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BSplineCurveWithKnots
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBSplineCurveWithKnots
RWStepGeom_RWBSplineCurveWithKnots.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_Check, None, RWStepGeom_RWBSplineCurveWithKnots)
RWStepGeom_RWBSplineCurveWithKnots.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_ReadStep, None, RWStepGeom_RWBSplineCurveWithKnots)
RWStepGeom_RWBSplineCurveWithKnots.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_Share, None, RWStepGeom_RWBSplineCurveWithKnots)
RWStepGeom_RWBSplineCurveWithKnots.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_WriteStep, None, RWStepGeom_RWBSplineCurveWithKnots)
RWStepGeom_RWBSplineCurveWithKnots_swigregister = _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnots_swigregister
RWStepGeom_RWBSplineCurveWithKnots_swigregister(RWStepGeom_RWBSplineCurveWithKnots)

class RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve
RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_Check, None, RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve)
RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_ReadStep, None, RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve)
RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_Share, None, RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve)
RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_WriteStep, None, RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve)
RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_swigregister = _RWStepGeom.RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_swigregister
RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve_swigregister(RWStepGeom_RWBSplineCurveWithKnotsAndRationalBSplineCurve)

class RWStepGeom_RWBSplineSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBSplineSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBSplineSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBSplineSurface
RWStepGeom_RWBSplineSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurface_ReadStep, None, RWStepGeom_RWBSplineSurface)
RWStepGeom_RWBSplineSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurface_Share, None, RWStepGeom_RWBSplineSurface)
RWStepGeom_RWBSplineSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurface_WriteStep, None, RWStepGeom_RWBSplineSurface)
RWStepGeom_RWBSplineSurface_swigregister = _RWStepGeom.RWStepGeom_RWBSplineSurface_swigregister
RWStepGeom_RWBSplineSurface_swigregister(RWStepGeom_RWBSplineSurface)

class RWStepGeom_RWBSplineSurfaceWithKnots(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineSurfaceWithKnots
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBSplineSurfaceWithKnots(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BSplineSurfaceWithKnots
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineSurfaceWithKnots
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BSplineSurfaceWithKnots
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBSplineSurfaceWithKnots
RWStepGeom_RWBSplineSurfaceWithKnots.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_Check, None, RWStepGeom_RWBSplineSurfaceWithKnots)
RWStepGeom_RWBSplineSurfaceWithKnots.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_ReadStep, None, RWStepGeom_RWBSplineSurfaceWithKnots)
RWStepGeom_RWBSplineSurfaceWithKnots.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_Share, None, RWStepGeom_RWBSplineSurfaceWithKnots)
RWStepGeom_RWBSplineSurfaceWithKnots.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_WriteStep, None, RWStepGeom_RWBSplineSurfaceWithKnots)
RWStepGeom_RWBSplineSurfaceWithKnots_swigregister = _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnots_swigregister
RWStepGeom_RWBSplineSurfaceWithKnots_swigregister(RWStepGeom_RWBSplineSurfaceWithKnots)

class RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface
RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_Check, None, RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface)
RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_ReadStep, None, RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface)
RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_Share, None, RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface)
RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_WriteStep, None, RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface)
RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_swigregister = _RWStepGeom.RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_swigregister
RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface_swigregister(RWStepGeom_RWBSplineSurfaceWithKnotsAndRationalBSplineSurface)

class RWStepGeom_RWBezierCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBezierCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBezierCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BezierCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BezierCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BezierCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBezierCurve
RWStepGeom_RWBezierCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierCurve_ReadStep, None, RWStepGeom_RWBezierCurve)
RWStepGeom_RWBezierCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierCurve_Share, None, RWStepGeom_RWBezierCurve)
RWStepGeom_RWBezierCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierCurve_WriteStep, None, RWStepGeom_RWBezierCurve)
RWStepGeom_RWBezierCurve_swigregister = _RWStepGeom.RWStepGeom_RWBezierCurve_swigregister
RWStepGeom_RWBezierCurve_swigregister(RWStepGeom_RWBezierCurve)

class RWStepGeom_RWBezierCurveAndRationalBSplineCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBezierCurveAndRationalBSplineCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBezierCurveAndRationalBSplineCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BezierCurveAndRationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierCurveAndRationalBSplineCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BezierCurveAndRationalBSplineCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierCurveAndRationalBSplineCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BezierCurveAndRationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierCurveAndRationalBSplineCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBezierCurveAndRationalBSplineCurve
RWStepGeom_RWBezierCurveAndRationalBSplineCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierCurveAndRationalBSplineCurve_ReadStep, None, RWStepGeom_RWBezierCurveAndRationalBSplineCurve)
RWStepGeom_RWBezierCurveAndRationalBSplineCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierCurveAndRationalBSplineCurve_Share, None, RWStepGeom_RWBezierCurveAndRationalBSplineCurve)
RWStepGeom_RWBezierCurveAndRationalBSplineCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierCurveAndRationalBSplineCurve_WriteStep, None, RWStepGeom_RWBezierCurveAndRationalBSplineCurve)
RWStepGeom_RWBezierCurveAndRationalBSplineCurve_swigregister = _RWStepGeom.RWStepGeom_RWBezierCurveAndRationalBSplineCurve_swigregister
RWStepGeom_RWBezierCurveAndRationalBSplineCurve_swigregister(RWStepGeom_RWBezierCurveAndRationalBSplineCurve)

class RWStepGeom_RWBezierSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBezierSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBezierSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BezierSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BezierSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BezierSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBezierSurface
RWStepGeom_RWBezierSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierSurface_ReadStep, None, RWStepGeom_RWBezierSurface)
RWStepGeom_RWBezierSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierSurface_Share, None, RWStepGeom_RWBezierSurface)
RWStepGeom_RWBezierSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierSurface_WriteStep, None, RWStepGeom_RWBezierSurface)
RWStepGeom_RWBezierSurface_swigregister = _RWStepGeom.RWStepGeom_RWBezierSurface_swigregister
RWStepGeom_RWBezierSurface_swigregister(RWStepGeom_RWBezierSurface)

class RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BezierSurfaceAndRationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BezierSurfaceAndRationalBSplineSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BezierSurfaceAndRationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface
RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_ReadStep, None, RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface)
RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_Share, None, RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface)
RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_WriteStep, None, RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface)
RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_swigregister = _RWStepGeom.RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_swigregister
RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface_swigregister(RWStepGeom_RWBezierSurfaceAndRationalBSplineSurface)

class RWStepGeom_RWBoundaryCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBoundaryCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBoundaryCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BoundaryCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBoundaryCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_BoundaryCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBoundaryCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BoundaryCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBoundaryCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBoundaryCurve
RWStepGeom_RWBoundaryCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBoundaryCurve_ReadStep, None, RWStepGeom_RWBoundaryCurve)
RWStepGeom_RWBoundaryCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWBoundaryCurve_Share, None, RWStepGeom_RWBoundaryCurve)
RWStepGeom_RWBoundaryCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBoundaryCurve_WriteStep, None, RWStepGeom_RWBoundaryCurve)
RWStepGeom_RWBoundaryCurve_swigregister = _RWStepGeom.RWStepGeom_RWBoundaryCurve_swigregister
RWStepGeom_RWBoundaryCurve_swigregister(RWStepGeom_RWBoundaryCurve)

class RWStepGeom_RWBoundedCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBoundedCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBoundedCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BoundedCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBoundedCurve_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BoundedCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBoundedCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBoundedCurve
RWStepGeom_RWBoundedCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBoundedCurve_ReadStep, None, RWStepGeom_RWBoundedCurve)
RWStepGeom_RWBoundedCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBoundedCurve_WriteStep, None, RWStepGeom_RWBoundedCurve)
RWStepGeom_RWBoundedCurve_swigregister = _RWStepGeom.RWStepGeom_RWBoundedCurve_swigregister
RWStepGeom_RWBoundedCurve_swigregister(RWStepGeom_RWBoundedCurve)

class RWStepGeom_RWBoundedSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWBoundedSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWBoundedSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_BoundedSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBoundedSurface_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_BoundedSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWBoundedSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWBoundedSurface
RWStepGeom_RWBoundedSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBoundedSurface_ReadStep, None, RWStepGeom_RWBoundedSurface)
RWStepGeom_RWBoundedSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWBoundedSurface_WriteStep, None, RWStepGeom_RWBoundedSurface)
RWStepGeom_RWBoundedSurface_swigregister = _RWStepGeom.RWStepGeom_RWBoundedSurface_swigregister
RWStepGeom_RWBoundedSurface_swigregister(RWStepGeom_RWBoundedSurface)

class RWStepGeom_RWCartesianPoint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCartesianPoint_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCartesianPoint(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCartesianPoint_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCartesianPoint_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCartesianPoint
RWStepGeom_RWCartesianPoint.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCartesianPoint_ReadStep, None, RWStepGeom_RWCartesianPoint)
RWStepGeom_RWCartesianPoint.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCartesianPoint_WriteStep, None, RWStepGeom_RWCartesianPoint)
RWStepGeom_RWCartesianPoint_swigregister = _RWStepGeom.RWStepGeom_RWCartesianPoint_swigregister
RWStepGeom_RWCartesianPoint_swigregister(RWStepGeom_RWCartesianPoint)

class RWStepGeom_RWCartesianTransformationOperator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCartesianTransformationOperator(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_CartesianTransformationOperator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_CartesianTransformationOperator
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_CartesianTransformationOperator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCartesianTransformationOperator
RWStepGeom_RWCartesianTransformationOperator.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCartesianTransformationOperator_ReadStep, None, RWStepGeom_RWCartesianTransformationOperator)
RWStepGeom_RWCartesianTransformationOperator.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWCartesianTransformationOperator_Share, None, RWStepGeom_RWCartesianTransformationOperator)
RWStepGeom_RWCartesianTransformationOperator.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCartesianTransformationOperator_WriteStep, None, RWStepGeom_RWCartesianTransformationOperator)
RWStepGeom_RWCartesianTransformationOperator_swigregister = _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator_swigregister
RWStepGeom_RWCartesianTransformationOperator_swigregister(RWStepGeom_RWCartesianTransformationOperator)

class RWStepGeom_RWCartesianTransformationOperator3d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator3d_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCartesianTransformationOperator3d(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_CartesianTransformationOperator3d
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator3d_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_CartesianTransformationOperator3d
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator3d_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_CartesianTransformationOperator3d
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator3d_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCartesianTransformationOperator3d
RWStepGeom_RWCartesianTransformationOperator3d.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCartesianTransformationOperator3d_ReadStep, None, RWStepGeom_RWCartesianTransformationOperator3d)
RWStepGeom_RWCartesianTransformationOperator3d.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWCartesianTransformationOperator3d_Share, None, RWStepGeom_RWCartesianTransformationOperator3d)
RWStepGeom_RWCartesianTransformationOperator3d.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCartesianTransformationOperator3d_WriteStep, None, RWStepGeom_RWCartesianTransformationOperator3d)
RWStepGeom_RWCartesianTransformationOperator3d_swigregister = _RWStepGeom.RWStepGeom_RWCartesianTransformationOperator3d_swigregister
RWStepGeom_RWCartesianTransformationOperator3d_swigregister(RWStepGeom_RWCartesianTransformationOperator3d)

class RWStepGeom_RWCircle(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCircle_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCircle(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Circle
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCircle_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Circle
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCircle_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Circle
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCircle_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCircle
RWStepGeom_RWCircle.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCircle_ReadStep, None, RWStepGeom_RWCircle)
RWStepGeom_RWCircle.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWCircle_Share, None, RWStepGeom_RWCircle)
RWStepGeom_RWCircle.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCircle_WriteStep, None, RWStepGeom_RWCircle)
RWStepGeom_RWCircle_swigregister = _RWStepGeom.RWStepGeom_RWCircle_swigregister
RWStepGeom_RWCircle_swigregister(RWStepGeom_RWCircle)

class RWStepGeom_RWCompositeCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCompositeCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCompositeCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_CompositeCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCompositeCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_CompositeCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCompositeCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_CompositeCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCompositeCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCompositeCurve
RWStepGeom_RWCompositeCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCompositeCurve_ReadStep, None, RWStepGeom_RWCompositeCurve)
RWStepGeom_RWCompositeCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWCompositeCurve_Share, None, RWStepGeom_RWCompositeCurve)
RWStepGeom_RWCompositeCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCompositeCurve_WriteStep, None, RWStepGeom_RWCompositeCurve)
RWStepGeom_RWCompositeCurve_swigregister = _RWStepGeom.RWStepGeom_RWCompositeCurve_swigregister
RWStepGeom_RWCompositeCurve_swigregister(RWStepGeom_RWCompositeCurve)

class RWStepGeom_RWCompositeCurveOnSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCompositeCurveOnSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCompositeCurveOnSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_CompositeCurveOnSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCompositeCurveOnSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_CompositeCurveOnSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCompositeCurveOnSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_CompositeCurveOnSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCompositeCurveOnSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCompositeCurveOnSurface
RWStepGeom_RWCompositeCurveOnSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCompositeCurveOnSurface_ReadStep, None, RWStepGeom_RWCompositeCurveOnSurface)
RWStepGeom_RWCompositeCurveOnSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWCompositeCurveOnSurface_Share, None, RWStepGeom_RWCompositeCurveOnSurface)
RWStepGeom_RWCompositeCurveOnSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCompositeCurveOnSurface_WriteStep, None, RWStepGeom_RWCompositeCurveOnSurface)
RWStepGeom_RWCompositeCurveOnSurface_swigregister = _RWStepGeom.RWStepGeom_RWCompositeCurveOnSurface_swigregister
RWStepGeom_RWCompositeCurveOnSurface_swigregister(RWStepGeom_RWCompositeCurveOnSurface)

class RWStepGeom_RWCompositeCurveSegment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCompositeCurveSegment_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCompositeCurveSegment(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_CompositeCurveSegment
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCompositeCurveSegment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_CompositeCurveSegment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCompositeCurveSegment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_CompositeCurveSegment
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCompositeCurveSegment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCompositeCurveSegment
RWStepGeom_RWCompositeCurveSegment.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCompositeCurveSegment_ReadStep, None, RWStepGeom_RWCompositeCurveSegment)
RWStepGeom_RWCompositeCurveSegment.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWCompositeCurveSegment_Share, None, RWStepGeom_RWCompositeCurveSegment)
RWStepGeom_RWCompositeCurveSegment.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCompositeCurveSegment_WriteStep, None, RWStepGeom_RWCompositeCurveSegment)
RWStepGeom_RWCompositeCurveSegment_swigregister = _RWStepGeom.RWStepGeom_RWCompositeCurveSegment_swigregister
RWStepGeom_RWCompositeCurveSegment_swigregister(RWStepGeom_RWCompositeCurveSegment)

class RWStepGeom_RWConic(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWConic_swiginit(self, _RWStepGeom.new_RWStepGeom_RWConic(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Conic
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWConic_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Conic
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWConic_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Conic
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWConic_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWConic
RWStepGeom_RWConic.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWConic_ReadStep, None, RWStepGeom_RWConic)
RWStepGeom_RWConic.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWConic_Share, None, RWStepGeom_RWConic)
RWStepGeom_RWConic.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWConic_WriteStep, None, RWStepGeom_RWConic)
RWStepGeom_RWConic_swigregister = _RWStepGeom.RWStepGeom_RWConic_swigregister
RWStepGeom_RWConic_swigregister(RWStepGeom_RWConic)

class RWStepGeom_RWConicalSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWConicalSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWConicalSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_ConicalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWConicalSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_ConicalSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWConicalSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_ConicalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWConicalSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWConicalSurface
RWStepGeom_RWConicalSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWConicalSurface_ReadStep, None, RWStepGeom_RWConicalSurface)
RWStepGeom_RWConicalSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWConicalSurface_Share, None, RWStepGeom_RWConicalSurface)
RWStepGeom_RWConicalSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWConicalSurface_WriteStep, None, RWStepGeom_RWConicalSurface)
RWStepGeom_RWConicalSurface_swigregister = _RWStepGeom.RWStepGeom_RWConicalSurface_swigregister
RWStepGeom_RWConicalSurface_swigregister(RWStepGeom_RWConicalSurface)

class RWStepGeom_RWCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Curve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCurve_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Curve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCurve
RWStepGeom_RWCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCurve_ReadStep, None, RWStepGeom_RWCurve)
RWStepGeom_RWCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCurve_WriteStep, None, RWStepGeom_RWCurve)
RWStepGeom_RWCurve_swigregister = _RWStepGeom.RWStepGeom_RWCurve_swigregister
RWStepGeom_RWCurve_swigregister(RWStepGeom_RWCurve)

class RWStepGeom_RWCurveBoundedSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepGeom.RWStepGeom_RWCurveBoundedSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCurveBoundedSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveBoundedSurface
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_CurveBoundedSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCurveBoundedSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepGeom_CurveBoundedSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCurveBoundedSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveBoundedSurface
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_CurveBoundedSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCurveBoundedSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCurveBoundedSurface
RWStepGeom_RWCurveBoundedSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCurveBoundedSurface_ReadStep, None, RWStepGeom_RWCurveBoundedSurface)
RWStepGeom_RWCurveBoundedSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWCurveBoundedSurface_Share, None, RWStepGeom_RWCurveBoundedSurface)
RWStepGeom_RWCurveBoundedSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCurveBoundedSurface_WriteStep, None, RWStepGeom_RWCurveBoundedSurface)
RWStepGeom_RWCurveBoundedSurface_swigregister = _RWStepGeom.RWStepGeom_RWCurveBoundedSurface_swigregister
RWStepGeom_RWCurveBoundedSurface_swigregister(RWStepGeom_RWCurveBoundedSurface)

class RWStepGeom_RWCurveReplica(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCurveReplica_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCurveReplica(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_CurveReplica
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCurveReplica_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_CurveReplica
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCurveReplica_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_CurveReplica
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCurveReplica_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCurveReplica
RWStepGeom_RWCurveReplica.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCurveReplica_ReadStep, None, RWStepGeom_RWCurveReplica)
RWStepGeom_RWCurveReplica.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWCurveReplica_Share, None, RWStepGeom_RWCurveReplica)
RWStepGeom_RWCurveReplica.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCurveReplica_WriteStep, None, RWStepGeom_RWCurveReplica)
RWStepGeom_RWCurveReplica_swigregister = _RWStepGeom.RWStepGeom_RWCurveReplica_swigregister
RWStepGeom_RWCurveReplica_swigregister(RWStepGeom_RWCurveReplica)

class RWStepGeom_RWCylindricalSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWCylindricalSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWCylindricalSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_CylindricalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCylindricalSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_CylindricalSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCylindricalSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_CylindricalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWCylindricalSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWCylindricalSurface
RWStepGeom_RWCylindricalSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCylindricalSurface_ReadStep, None, RWStepGeom_RWCylindricalSurface)
RWStepGeom_RWCylindricalSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWCylindricalSurface_Share, None, RWStepGeom_RWCylindricalSurface)
RWStepGeom_RWCylindricalSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWCylindricalSurface_WriteStep, None, RWStepGeom_RWCylindricalSurface)
RWStepGeom_RWCylindricalSurface_swigregister = _RWStepGeom.RWStepGeom_RWCylindricalSurface_swigregister
RWStepGeom_RWCylindricalSurface_swigregister(RWStepGeom_RWCylindricalSurface)

class RWStepGeom_RWDegeneratePcurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWDegeneratePcurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWDegeneratePcurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_DegeneratePcurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWDegeneratePcurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_DegeneratePcurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWDegeneratePcurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_DegeneratePcurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWDegeneratePcurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWDegeneratePcurve
RWStepGeom_RWDegeneratePcurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWDegeneratePcurve_ReadStep, None, RWStepGeom_RWDegeneratePcurve)
RWStepGeom_RWDegeneratePcurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWDegeneratePcurve_Share, None, RWStepGeom_RWDegeneratePcurve)
RWStepGeom_RWDegeneratePcurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWDegeneratePcurve_WriteStep, None, RWStepGeom_RWDegeneratePcurve)
RWStepGeom_RWDegeneratePcurve_swigregister = _RWStepGeom.RWStepGeom_RWDegeneratePcurve_swigregister
RWStepGeom_RWDegeneratePcurve_swigregister(RWStepGeom_RWDegeneratePcurve)

class RWStepGeom_RWDegenerateToroidalSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWDegenerateToroidalSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWDegenerateToroidalSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_DegenerateToroidalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWDegenerateToroidalSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_DegenerateToroidalSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWDegenerateToroidalSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_DegenerateToroidalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWDegenerateToroidalSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWDegenerateToroidalSurface
RWStepGeom_RWDegenerateToroidalSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWDegenerateToroidalSurface_ReadStep, None, RWStepGeom_RWDegenerateToroidalSurface)
RWStepGeom_RWDegenerateToroidalSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWDegenerateToroidalSurface_Share, None, RWStepGeom_RWDegenerateToroidalSurface)
RWStepGeom_RWDegenerateToroidalSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWDegenerateToroidalSurface_WriteStep, None, RWStepGeom_RWDegenerateToroidalSurface)
RWStepGeom_RWDegenerateToroidalSurface_swigregister = _RWStepGeom.RWStepGeom_RWDegenerateToroidalSurface_swigregister
RWStepGeom_RWDegenerateToroidalSurface_swigregister(RWStepGeom_RWDegenerateToroidalSurface)

class RWStepGeom_RWDirection(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Direction
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWDirection_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWDirection_swiginit(self, _RWStepGeom.new_RWStepGeom_RWDirection(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Direction
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWDirection_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Direction
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWDirection_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWDirection
RWStepGeom_RWDirection.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWDirection_Check, None, RWStepGeom_RWDirection)
RWStepGeom_RWDirection.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWDirection_ReadStep, None, RWStepGeom_RWDirection)
RWStepGeom_RWDirection.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWDirection_WriteStep, None, RWStepGeom_RWDirection)
RWStepGeom_RWDirection_swigregister = _RWStepGeom.RWStepGeom_RWDirection_swigregister
RWStepGeom_RWDirection_swigregister(RWStepGeom_RWDirection)

class RWStepGeom_RWElementarySurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWElementarySurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWElementarySurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_ElementarySurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWElementarySurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_ElementarySurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWElementarySurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_ElementarySurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWElementarySurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWElementarySurface
RWStepGeom_RWElementarySurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWElementarySurface_ReadStep, None, RWStepGeom_RWElementarySurface)
RWStepGeom_RWElementarySurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWElementarySurface_Share, None, RWStepGeom_RWElementarySurface)
RWStepGeom_RWElementarySurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWElementarySurface_WriteStep, None, RWStepGeom_RWElementarySurface)
RWStepGeom_RWElementarySurface_swigregister = _RWStepGeom.RWStepGeom_RWElementarySurface_swigregister
RWStepGeom_RWElementarySurface_swigregister(RWStepGeom_RWElementarySurface)

class RWStepGeom_RWEllipse(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Ellipse
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWEllipse_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWEllipse_swiginit(self, _RWStepGeom.new_RWStepGeom_RWEllipse(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Ellipse
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWEllipse_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Ellipse
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWEllipse_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Ellipse
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWEllipse_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWEllipse
RWStepGeom_RWEllipse.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWEllipse_Check, None, RWStepGeom_RWEllipse)
RWStepGeom_RWEllipse.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWEllipse_ReadStep, None, RWStepGeom_RWEllipse)
RWStepGeom_RWEllipse.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWEllipse_Share, None, RWStepGeom_RWEllipse)
RWStepGeom_RWEllipse.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWEllipse_WriteStep, None, RWStepGeom_RWEllipse)
RWStepGeom_RWEllipse_swigregister = _RWStepGeom.RWStepGeom_RWEllipse_swigregister
RWStepGeom_RWEllipse_swigregister(RWStepGeom_RWEllipse)

class RWStepGeom_RWEvaluatedDegeneratePcurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWEvaluatedDegeneratePcurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWEvaluatedDegeneratePcurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_EvaluatedDegeneratePcurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWEvaluatedDegeneratePcurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_EvaluatedDegeneratePcurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWEvaluatedDegeneratePcurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_EvaluatedDegeneratePcurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWEvaluatedDegeneratePcurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWEvaluatedDegeneratePcurve
RWStepGeom_RWEvaluatedDegeneratePcurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWEvaluatedDegeneratePcurve_ReadStep, None, RWStepGeom_RWEvaluatedDegeneratePcurve)
RWStepGeom_RWEvaluatedDegeneratePcurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWEvaluatedDegeneratePcurve_Share, None, RWStepGeom_RWEvaluatedDegeneratePcurve)
RWStepGeom_RWEvaluatedDegeneratePcurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWEvaluatedDegeneratePcurve_WriteStep, None, RWStepGeom_RWEvaluatedDegeneratePcurve)
RWStepGeom_RWEvaluatedDegeneratePcurve_swigregister = _RWStepGeom.RWStepGeom_RWEvaluatedDegeneratePcurve_swigregister
RWStepGeom_RWEvaluatedDegeneratePcurve_swigregister(RWStepGeom_RWEvaluatedDegeneratePcurve)

class RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_swiginit(self, _RWStepGeom.new_RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx
RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_ReadStep, None, RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Share, None, RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_WriteStep, None, RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_swigregister = _RWStepGeom.RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_swigregister
RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_swigregister(RWStepGeom_RWGeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)

class RWStepGeom_RWGeometricRepresentationContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWGeometricRepresentationContext_swiginit(self, _RWStepGeom.new_RWStepGeom_RWGeometricRepresentationContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_GeometricRepresentationContext
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationContext_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_GeometricRepresentationContext
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWGeometricRepresentationContext
RWStepGeom_RWGeometricRepresentationContext.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationContext_ReadStep, None, RWStepGeom_RWGeometricRepresentationContext)
RWStepGeom_RWGeometricRepresentationContext.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationContext_WriteStep, None, RWStepGeom_RWGeometricRepresentationContext)
RWStepGeom_RWGeometricRepresentationContext_swigregister = _RWStepGeom.RWStepGeom_RWGeometricRepresentationContext_swigregister
RWStepGeom_RWGeometricRepresentationContext_swigregister(RWStepGeom_RWGeometricRepresentationContext)

class RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_swiginit(self, _RWStepGeom.new_RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext
RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_ReadStep, None, RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext)
RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_Share, None, RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext)
RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_WriteStep, None, RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext)
RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_swigregister = _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_swigregister
RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext_swigregister(RWStepGeom_RWGeometricRepresentationContextAndGlobalUnitAssignedContext)

class RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_swiginit(self, _RWStepGeom.new_RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_GeometricRepresentationContextAndParametricRepresentationContext
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_GeometricRepresentationContextAndParametricRepresentationContext
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_GeometricRepresentationContextAndParametricRepresentationContext
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext
RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_ReadStep, None, RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext)
RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_Share, None, RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext)
RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_WriteStep, None, RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext)
RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_swigregister = _RWStepGeom.RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_swigregister
RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext_swigregister(RWStepGeom_RWGeometricRepresentationContextAndParametricRepresentationContext)

class RWStepGeom_RWGeometricRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWGeometricRepresentationItem_swiginit(self, _RWStepGeom.new_RWStepGeom_RWGeometricRepresentationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_GeometricRepresentationItem
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_GeometricRepresentationItem
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWGeometricRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWGeometricRepresentationItem
RWStepGeom_RWGeometricRepresentationItem.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationItem_ReadStep, None, RWStepGeom_RWGeometricRepresentationItem)
RWStepGeom_RWGeometricRepresentationItem.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWGeometricRepresentationItem_WriteStep, None, RWStepGeom_RWGeometricRepresentationItem)
RWStepGeom_RWGeometricRepresentationItem_swigregister = _RWStepGeom.RWStepGeom_RWGeometricRepresentationItem_swigregister
RWStepGeom_RWGeometricRepresentationItem_swigregister(RWStepGeom_RWGeometricRepresentationItem)

class RWStepGeom_RWHyperbola(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWHyperbola_swiginit(self, _RWStepGeom.new_RWStepGeom_RWHyperbola(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Hyperbola
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWHyperbola_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Hyperbola
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWHyperbola_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Hyperbola
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWHyperbola_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWHyperbola
RWStepGeom_RWHyperbola.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWHyperbola_ReadStep, None, RWStepGeom_RWHyperbola)
RWStepGeom_RWHyperbola.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWHyperbola_Share, None, RWStepGeom_RWHyperbola)
RWStepGeom_RWHyperbola.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWHyperbola_WriteStep, None, RWStepGeom_RWHyperbola)
RWStepGeom_RWHyperbola_swigregister = _RWStepGeom.RWStepGeom_RWHyperbola_swigregister
RWStepGeom_RWHyperbola_swigregister(RWStepGeom_RWHyperbola)

class RWStepGeom_RWIntersectionCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWIntersectionCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWIntersectionCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_IntersectionCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWIntersectionCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_IntersectionCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWIntersectionCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_IntersectionCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWIntersectionCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWIntersectionCurve
RWStepGeom_RWIntersectionCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWIntersectionCurve_ReadStep, None, RWStepGeom_RWIntersectionCurve)
RWStepGeom_RWIntersectionCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWIntersectionCurve_Share, None, RWStepGeom_RWIntersectionCurve)
RWStepGeom_RWIntersectionCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWIntersectionCurve_WriteStep, None, RWStepGeom_RWIntersectionCurve)
RWStepGeom_RWIntersectionCurve_swigregister = _RWStepGeom.RWStepGeom_RWIntersectionCurve_swigregister
RWStepGeom_RWIntersectionCurve_swigregister(RWStepGeom_RWIntersectionCurve)

class RWStepGeom_RWLine(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWLine_swiginit(self, _RWStepGeom.new_RWStepGeom_RWLine(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Line
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWLine_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Line
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWLine_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Line
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWLine_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWLine
RWStepGeom_RWLine.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWLine_ReadStep, None, RWStepGeom_RWLine)
RWStepGeom_RWLine.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWLine_Share, None, RWStepGeom_RWLine)
RWStepGeom_RWLine.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWLine_WriteStep, None, RWStepGeom_RWLine)
RWStepGeom_RWLine_swigregister = _RWStepGeom.RWStepGeom_RWLine_swigregister
RWStepGeom_RWLine_swigregister(RWStepGeom_RWLine)

class RWStepGeom_RWOffsetCurve3d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWOffsetCurve3d_swiginit(self, _RWStepGeom.new_RWStepGeom_RWOffsetCurve3d(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_OffsetCurve3d
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOffsetCurve3d_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_OffsetCurve3d
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOffsetCurve3d_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_OffsetCurve3d
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOffsetCurve3d_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWOffsetCurve3d
RWStepGeom_RWOffsetCurve3d.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWOffsetCurve3d_ReadStep, None, RWStepGeom_RWOffsetCurve3d)
RWStepGeom_RWOffsetCurve3d.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWOffsetCurve3d_Share, None, RWStepGeom_RWOffsetCurve3d)
RWStepGeom_RWOffsetCurve3d.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWOffsetCurve3d_WriteStep, None, RWStepGeom_RWOffsetCurve3d)
RWStepGeom_RWOffsetCurve3d_swigregister = _RWStepGeom.RWStepGeom_RWOffsetCurve3d_swigregister
RWStepGeom_RWOffsetCurve3d_swigregister(RWStepGeom_RWOffsetCurve3d)

class RWStepGeom_RWOffsetSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWOffsetSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWOffsetSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_OffsetSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOffsetSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_OffsetSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOffsetSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_OffsetSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOffsetSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWOffsetSurface
RWStepGeom_RWOffsetSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWOffsetSurface_ReadStep, None, RWStepGeom_RWOffsetSurface)
RWStepGeom_RWOffsetSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWOffsetSurface_Share, None, RWStepGeom_RWOffsetSurface)
RWStepGeom_RWOffsetSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWOffsetSurface_WriteStep, None, RWStepGeom_RWOffsetSurface)
RWStepGeom_RWOffsetSurface_swigregister = _RWStepGeom.RWStepGeom_RWOffsetSurface_swigregister
RWStepGeom_RWOffsetSurface_swigregister(RWStepGeom_RWOffsetSurface)

class RWStepGeom_RWOrientedSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepGeom.RWStepGeom_RWOrientedSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWOrientedSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads OrientedSurface
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_OrientedSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOrientedSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepGeom_OrientedSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOrientedSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes OrientedSurface
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_OrientedSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOrientedSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWOrientedSurface
RWStepGeom_RWOrientedSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWOrientedSurface_ReadStep, None, RWStepGeom_RWOrientedSurface)
RWStepGeom_RWOrientedSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWOrientedSurface_Share, None, RWStepGeom_RWOrientedSurface)
RWStepGeom_RWOrientedSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWOrientedSurface_WriteStep, None, RWStepGeom_RWOrientedSurface)
RWStepGeom_RWOrientedSurface_swigregister = _RWStepGeom.RWStepGeom_RWOrientedSurface_swigregister
RWStepGeom_RWOrientedSurface_swigregister(RWStepGeom_RWOrientedSurface)

class RWStepGeom_RWOuterBoundaryCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWOuterBoundaryCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWOuterBoundaryCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_OuterBoundaryCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOuterBoundaryCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_OuterBoundaryCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOuterBoundaryCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_OuterBoundaryCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWOuterBoundaryCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWOuterBoundaryCurve
RWStepGeom_RWOuterBoundaryCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWOuterBoundaryCurve_ReadStep, None, RWStepGeom_RWOuterBoundaryCurve)
RWStepGeom_RWOuterBoundaryCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWOuterBoundaryCurve_Share, None, RWStepGeom_RWOuterBoundaryCurve)
RWStepGeom_RWOuterBoundaryCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWOuterBoundaryCurve_WriteStep, None, RWStepGeom_RWOuterBoundaryCurve)
RWStepGeom_RWOuterBoundaryCurve_swigregister = _RWStepGeom.RWStepGeom_RWOuterBoundaryCurve_swigregister
RWStepGeom_RWOuterBoundaryCurve_swigregister(RWStepGeom_RWOuterBoundaryCurve)

class RWStepGeom_RWParabola(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWParabola_swiginit(self, _RWStepGeom.new_RWStepGeom_RWParabola(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Parabola
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWParabola_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Parabola
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWParabola_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Parabola
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWParabola_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWParabola
RWStepGeom_RWParabola.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWParabola_ReadStep, None, RWStepGeom_RWParabola)
RWStepGeom_RWParabola.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWParabola_Share, None, RWStepGeom_RWParabola)
RWStepGeom_RWParabola.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWParabola_WriteStep, None, RWStepGeom_RWParabola)
RWStepGeom_RWParabola_swigregister = _RWStepGeom.RWStepGeom_RWParabola_swigregister
RWStepGeom_RWParabola_swigregister(RWStepGeom_RWParabola)

class RWStepGeom_RWPcurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWPcurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWPcurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Pcurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPcurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Pcurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPcurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Pcurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPcurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWPcurve
RWStepGeom_RWPcurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPcurve_ReadStep, None, RWStepGeom_RWPcurve)
RWStepGeom_RWPcurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWPcurve_Share, None, RWStepGeom_RWPcurve)
RWStepGeom_RWPcurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPcurve_WriteStep, None, RWStepGeom_RWPcurve)
RWStepGeom_RWPcurve_swigregister = _RWStepGeom.RWStepGeom_RWPcurve_swigregister
RWStepGeom_RWPcurve_swigregister(RWStepGeom_RWPcurve)

class RWStepGeom_RWPlacement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWPlacement_swiginit(self, _RWStepGeom.new_RWStepGeom_RWPlacement(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Placement
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPlacement_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Placement
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPlacement_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Placement
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPlacement_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWPlacement
RWStepGeom_RWPlacement.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPlacement_ReadStep, None, RWStepGeom_RWPlacement)
RWStepGeom_RWPlacement.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWPlacement_Share, None, RWStepGeom_RWPlacement)
RWStepGeom_RWPlacement.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPlacement_WriteStep, None, RWStepGeom_RWPlacement)
RWStepGeom_RWPlacement_swigregister = _RWStepGeom.RWStepGeom_RWPlacement_swigregister
RWStepGeom_RWPlacement_swigregister(RWStepGeom_RWPlacement)

class RWStepGeom_RWPlane(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWPlane_swiginit(self, _RWStepGeom.new_RWStepGeom_RWPlane(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Plane
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPlane_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Plane
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPlane_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Plane
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPlane_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWPlane
RWStepGeom_RWPlane.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPlane_ReadStep, None, RWStepGeom_RWPlane)
RWStepGeom_RWPlane.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWPlane_Share, None, RWStepGeom_RWPlane)
RWStepGeom_RWPlane.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPlane_WriteStep, None, RWStepGeom_RWPlane)
RWStepGeom_RWPlane_swigregister = _RWStepGeom.RWStepGeom_RWPlane_swigregister
RWStepGeom_RWPlane_swigregister(RWStepGeom_RWPlane)

class RWStepGeom_RWPoint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWPoint_swiginit(self, _RWStepGeom.new_RWStepGeom_RWPoint(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Point
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPoint_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Point
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPoint_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWPoint
RWStepGeom_RWPoint.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPoint_ReadStep, None, RWStepGeom_RWPoint)
RWStepGeom_RWPoint.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPoint_WriteStep, None, RWStepGeom_RWPoint)
RWStepGeom_RWPoint_swigregister = _RWStepGeom.RWStepGeom_RWPoint_swigregister
RWStepGeom_RWPoint_swigregister(RWStepGeom_RWPoint)

class RWStepGeom_RWPointOnCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWPointOnCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWPointOnCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_PointOnCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPointOnCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_PointOnCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPointOnCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_PointOnCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPointOnCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWPointOnCurve
RWStepGeom_RWPointOnCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPointOnCurve_ReadStep, None, RWStepGeom_RWPointOnCurve)
RWStepGeom_RWPointOnCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWPointOnCurve_Share, None, RWStepGeom_RWPointOnCurve)
RWStepGeom_RWPointOnCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPointOnCurve_WriteStep, None, RWStepGeom_RWPointOnCurve)
RWStepGeom_RWPointOnCurve_swigregister = _RWStepGeom.RWStepGeom_RWPointOnCurve_swigregister
RWStepGeom_RWPointOnCurve_swigregister(RWStepGeom_RWPointOnCurve)

class RWStepGeom_RWPointOnSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWPointOnSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWPointOnSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_PointOnSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPointOnSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_PointOnSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPointOnSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_PointOnSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPointOnSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWPointOnSurface
RWStepGeom_RWPointOnSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPointOnSurface_ReadStep, None, RWStepGeom_RWPointOnSurface)
RWStepGeom_RWPointOnSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWPointOnSurface_Share, None, RWStepGeom_RWPointOnSurface)
RWStepGeom_RWPointOnSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPointOnSurface_WriteStep, None, RWStepGeom_RWPointOnSurface)
RWStepGeom_RWPointOnSurface_swigregister = _RWStepGeom.RWStepGeom_RWPointOnSurface_swigregister
RWStepGeom_RWPointOnSurface_swigregister(RWStepGeom_RWPointOnSurface)

class RWStepGeom_RWPointReplica(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWPointReplica_swiginit(self, _RWStepGeom.new_RWStepGeom_RWPointReplica(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_PointReplica
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPointReplica_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_PointReplica
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPointReplica_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_PointReplica
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPointReplica_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWPointReplica
RWStepGeom_RWPointReplica.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPointReplica_ReadStep, None, RWStepGeom_RWPointReplica)
RWStepGeom_RWPointReplica.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWPointReplica_Share, None, RWStepGeom_RWPointReplica)
RWStepGeom_RWPointReplica.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPointReplica_WriteStep, None, RWStepGeom_RWPointReplica)
RWStepGeom_RWPointReplica_swigregister = _RWStepGeom.RWStepGeom_RWPointReplica_swigregister
RWStepGeom_RWPointReplica_swigregister(RWStepGeom_RWPointReplica)

class RWStepGeom_RWPolyline(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWPolyline_swiginit(self, _RWStepGeom.new_RWStepGeom_RWPolyline(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Polyline
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPolyline_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Polyline
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPolyline_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Polyline
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWPolyline_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWPolyline
RWStepGeom_RWPolyline.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPolyline_ReadStep, None, RWStepGeom_RWPolyline)
RWStepGeom_RWPolyline.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWPolyline_Share, None, RWStepGeom_RWPolyline)
RWStepGeom_RWPolyline.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWPolyline_WriteStep, None, RWStepGeom_RWPolyline)
RWStepGeom_RWPolyline_swigregister = _RWStepGeom.RWStepGeom_RWPolyline_swigregister
RWStepGeom_RWPolyline_swigregister(RWStepGeom_RWPolyline)

class RWStepGeom_RWQuasiUniformCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWQuasiUniformCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWQuasiUniformCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_QuasiUniformCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_QuasiUniformCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_QuasiUniformCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWQuasiUniformCurve
RWStepGeom_RWQuasiUniformCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformCurve_ReadStep, None, RWStepGeom_RWQuasiUniformCurve)
RWStepGeom_RWQuasiUniformCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformCurve_Share, None, RWStepGeom_RWQuasiUniformCurve)
RWStepGeom_RWQuasiUniformCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformCurve_WriteStep, None, RWStepGeom_RWQuasiUniformCurve)
RWStepGeom_RWQuasiUniformCurve_swigregister = _RWStepGeom.RWStepGeom_RWQuasiUniformCurve_swigregister
RWStepGeom_RWQuasiUniformCurve_swigregister(RWStepGeom_RWQuasiUniformCurve)

class RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_QuasiUniformCurveAndRationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_QuasiUniformCurveAndRationalBSplineCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_QuasiUniformCurveAndRationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve
RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_ReadStep, None, RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve)
RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_Share, None, RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve)
RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_WriteStep, None, RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve)
RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_swigregister = _RWStepGeom.RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_swigregister
RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve_swigregister(RWStepGeom_RWQuasiUniformCurveAndRationalBSplineCurve)

class RWStepGeom_RWQuasiUniformSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWQuasiUniformSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWQuasiUniformSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_QuasiUniformSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_QuasiUniformSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_QuasiUniformSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWQuasiUniformSurface
RWStepGeom_RWQuasiUniformSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformSurface_ReadStep, None, RWStepGeom_RWQuasiUniformSurface)
RWStepGeom_RWQuasiUniformSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformSurface_Share, None, RWStepGeom_RWQuasiUniformSurface)
RWStepGeom_RWQuasiUniformSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformSurface_WriteStep, None, RWStepGeom_RWQuasiUniformSurface)
RWStepGeom_RWQuasiUniformSurface_swigregister = _RWStepGeom.RWStepGeom_RWQuasiUniformSurface_swigregister
RWStepGeom_RWQuasiUniformSurface_swigregister(RWStepGeom_RWQuasiUniformSurface)

class RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface
RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_ReadStep, None, RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface)
RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_Share, None, RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface)
RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_WriteStep, None, RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface)
RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_swigregister = _RWStepGeom.RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_swigregister
RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface_swigregister(RWStepGeom_RWQuasiUniformSurfaceAndRationalBSplineSurface)

class RWStepGeom_RWRationalBSplineCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_RationalBSplineCurve
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRationalBSplineCurve_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWRationalBSplineCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWRationalBSplineCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_RationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRationalBSplineCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_RationalBSplineCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRationalBSplineCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_RationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRationalBSplineCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWRationalBSplineCurve
RWStepGeom_RWRationalBSplineCurve.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWRationalBSplineCurve_Check, None, RWStepGeom_RWRationalBSplineCurve)
RWStepGeom_RWRationalBSplineCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWRationalBSplineCurve_ReadStep, None, RWStepGeom_RWRationalBSplineCurve)
RWStepGeom_RWRationalBSplineCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWRationalBSplineCurve_Share, None, RWStepGeom_RWRationalBSplineCurve)
RWStepGeom_RWRationalBSplineCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWRationalBSplineCurve_WriteStep, None, RWStepGeom_RWRationalBSplineCurve)
RWStepGeom_RWRationalBSplineCurve_swigregister = _RWStepGeom.RWStepGeom_RWRationalBSplineCurve_swigregister
RWStepGeom_RWRationalBSplineCurve_swigregister(RWStepGeom_RWRationalBSplineCurve)

class RWStepGeom_RWRationalBSplineSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_RationalBSplineSurface
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRationalBSplineSurface_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWRationalBSplineSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWRationalBSplineSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_RationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRationalBSplineSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_RationalBSplineSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRationalBSplineSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_RationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRationalBSplineSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWRationalBSplineSurface
RWStepGeom_RWRationalBSplineSurface.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWRationalBSplineSurface_Check, None, RWStepGeom_RWRationalBSplineSurface)
RWStepGeom_RWRationalBSplineSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWRationalBSplineSurface_ReadStep, None, RWStepGeom_RWRationalBSplineSurface)
RWStepGeom_RWRationalBSplineSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWRationalBSplineSurface_Share, None, RWStepGeom_RWRationalBSplineSurface)
RWStepGeom_RWRationalBSplineSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWRationalBSplineSurface_WriteStep, None, RWStepGeom_RWRationalBSplineSurface)
RWStepGeom_RWRationalBSplineSurface_swigregister = _RWStepGeom.RWStepGeom_RWRationalBSplineSurface_swigregister
RWStepGeom_RWRationalBSplineSurface_swigregister(RWStepGeom_RWRationalBSplineSurface)

class RWStepGeom_RWRectangularCompositeSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWRectangularCompositeSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWRectangularCompositeSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_RectangularCompositeSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRectangularCompositeSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_RectangularCompositeSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRectangularCompositeSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_RectangularCompositeSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRectangularCompositeSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWRectangularCompositeSurface
RWStepGeom_RWRectangularCompositeSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWRectangularCompositeSurface_ReadStep, None, RWStepGeom_RWRectangularCompositeSurface)
RWStepGeom_RWRectangularCompositeSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWRectangularCompositeSurface_Share, None, RWStepGeom_RWRectangularCompositeSurface)
RWStepGeom_RWRectangularCompositeSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWRectangularCompositeSurface_WriteStep, None, RWStepGeom_RWRectangularCompositeSurface)
RWStepGeom_RWRectangularCompositeSurface_swigregister = _RWStepGeom.RWStepGeom_RWRectangularCompositeSurface_swigregister
RWStepGeom_RWRectangularCompositeSurface_swigregister(RWStepGeom_RWRectangularCompositeSurface)

class RWStepGeom_RWRectangularTrimmedSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWRectangularTrimmedSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWRectangularTrimmedSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_RectangularTrimmedSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRectangularTrimmedSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_RectangularTrimmedSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRectangularTrimmedSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_RectangularTrimmedSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWRectangularTrimmedSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWRectangularTrimmedSurface
RWStepGeom_RWRectangularTrimmedSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWRectangularTrimmedSurface_ReadStep, None, RWStepGeom_RWRectangularTrimmedSurface)
RWStepGeom_RWRectangularTrimmedSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWRectangularTrimmedSurface_Share, None, RWStepGeom_RWRectangularTrimmedSurface)
RWStepGeom_RWRectangularTrimmedSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWRectangularTrimmedSurface_WriteStep, None, RWStepGeom_RWRectangularTrimmedSurface)
RWStepGeom_RWRectangularTrimmedSurface_swigregister = _RWStepGeom.RWStepGeom_RWRectangularTrimmedSurface_swigregister
RWStepGeom_RWRectangularTrimmedSurface_swigregister(RWStepGeom_RWRectangularTrimmedSurface)

class RWStepGeom_RWReparametrisedCompositeCurveSegment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWReparametrisedCompositeCurveSegment_swiginit(self, _RWStepGeom.new_RWStepGeom_RWReparametrisedCompositeCurveSegment(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_ReparametrisedCompositeCurveSegment
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWReparametrisedCompositeCurveSegment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_ReparametrisedCompositeCurveSegment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWReparametrisedCompositeCurveSegment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_ReparametrisedCompositeCurveSegment
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWReparametrisedCompositeCurveSegment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWReparametrisedCompositeCurveSegment
RWStepGeom_RWReparametrisedCompositeCurveSegment.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWReparametrisedCompositeCurveSegment_ReadStep, None, RWStepGeom_RWReparametrisedCompositeCurveSegment)
RWStepGeom_RWReparametrisedCompositeCurveSegment.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWReparametrisedCompositeCurveSegment_Share, None, RWStepGeom_RWReparametrisedCompositeCurveSegment)
RWStepGeom_RWReparametrisedCompositeCurveSegment.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWReparametrisedCompositeCurveSegment_WriteStep, None, RWStepGeom_RWReparametrisedCompositeCurveSegment)
RWStepGeom_RWReparametrisedCompositeCurveSegment_swigregister = _RWStepGeom.RWStepGeom_RWReparametrisedCompositeCurveSegment_swigregister
RWStepGeom_RWReparametrisedCompositeCurveSegment_swigregister(RWStepGeom_RWReparametrisedCompositeCurveSegment)

class RWStepGeom_RWSeamCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSeamCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSeamCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_SeamCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSeamCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_SeamCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSeamCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_SeamCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSeamCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSeamCurve
RWStepGeom_RWSeamCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSeamCurve_ReadStep, None, RWStepGeom_RWSeamCurve)
RWStepGeom_RWSeamCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWSeamCurve_Share, None, RWStepGeom_RWSeamCurve)
RWStepGeom_RWSeamCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSeamCurve_WriteStep, None, RWStepGeom_RWSeamCurve)
RWStepGeom_RWSeamCurve_swigregister = _RWStepGeom.RWStepGeom_RWSeamCurve_swigregister
RWStepGeom_RWSeamCurve_swigregister(RWStepGeom_RWSeamCurve)

class RWStepGeom_RWSphericalSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSphericalSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSphericalSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_SphericalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSphericalSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_SphericalSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSphericalSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_SphericalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSphericalSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSphericalSurface
RWStepGeom_RWSphericalSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSphericalSurface_ReadStep, None, RWStepGeom_RWSphericalSurface)
RWStepGeom_RWSphericalSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWSphericalSurface_Share, None, RWStepGeom_RWSphericalSurface)
RWStepGeom_RWSphericalSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSphericalSurface_WriteStep, None, RWStepGeom_RWSphericalSurface)
RWStepGeom_RWSphericalSurface_swigregister = _RWStepGeom.RWStepGeom_RWSphericalSurface_swigregister
RWStepGeom_RWSphericalSurface_swigregister(RWStepGeom_RWSphericalSurface)

class RWStepGeom_RWSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Surface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurface_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Surface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSurface
RWStepGeom_RWSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurface_ReadStep, None, RWStepGeom_RWSurface)
RWStepGeom_RWSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurface_WriteStep, None, RWStepGeom_RWSurface)
RWStepGeom_RWSurface_swigregister = _RWStepGeom.RWStepGeom_RWSurface_swigregister
RWStepGeom_RWSurface_swigregister(RWStepGeom_RWSurface)

class RWStepGeom_RWSurfaceCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSurfaceCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSurfaceCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_SurfaceCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_SurfaceCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_SurfaceCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSurfaceCurve
RWStepGeom_RWSurfaceCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceCurve_ReadStep, None, RWStepGeom_RWSurfaceCurve)
RWStepGeom_RWSurfaceCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceCurve_Share, None, RWStepGeom_RWSurfaceCurve)
RWStepGeom_RWSurfaceCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceCurve_WriteStep, None, RWStepGeom_RWSurfaceCurve)
RWStepGeom_RWSurfaceCurve_swigregister = _RWStepGeom.RWStepGeom_RWSurfaceCurve_swigregister
RWStepGeom_RWSurfaceCurve_swigregister(RWStepGeom_RWSurfaceCurve)

class RWStepGeom_RWSurfaceCurveAndBoundedCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSurfaceCurveAndBoundedCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSurfaceCurveAndBoundedCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_SurfaceCurveAndBoundedCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceCurveAndBoundedCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_SurfaceCurveAndBoundedCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceCurveAndBoundedCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_SurfaceCurveAndBoundedCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceCurveAndBoundedCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSurfaceCurveAndBoundedCurve
RWStepGeom_RWSurfaceCurveAndBoundedCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceCurveAndBoundedCurve_ReadStep, None, RWStepGeom_RWSurfaceCurveAndBoundedCurve)
RWStepGeom_RWSurfaceCurveAndBoundedCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceCurveAndBoundedCurve_Share, None, RWStepGeom_RWSurfaceCurveAndBoundedCurve)
RWStepGeom_RWSurfaceCurveAndBoundedCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceCurveAndBoundedCurve_WriteStep, None, RWStepGeom_RWSurfaceCurveAndBoundedCurve)
RWStepGeom_RWSurfaceCurveAndBoundedCurve_swigregister = _RWStepGeom.RWStepGeom_RWSurfaceCurveAndBoundedCurve_swigregister
RWStepGeom_RWSurfaceCurveAndBoundedCurve_swigregister(RWStepGeom_RWSurfaceCurveAndBoundedCurve)

class RWStepGeom_RWSurfaceOfLinearExtrusion(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSurfaceOfLinearExtrusion_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSurfaceOfLinearExtrusion(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_SurfaceOfLinearExtrusion
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceOfLinearExtrusion_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_SurfaceOfLinearExtrusion
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceOfLinearExtrusion_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_SurfaceOfLinearExtrusion
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceOfLinearExtrusion_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSurfaceOfLinearExtrusion
RWStepGeom_RWSurfaceOfLinearExtrusion.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceOfLinearExtrusion_ReadStep, None, RWStepGeom_RWSurfaceOfLinearExtrusion)
RWStepGeom_RWSurfaceOfLinearExtrusion.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceOfLinearExtrusion_Share, None, RWStepGeom_RWSurfaceOfLinearExtrusion)
RWStepGeom_RWSurfaceOfLinearExtrusion.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceOfLinearExtrusion_WriteStep, None, RWStepGeom_RWSurfaceOfLinearExtrusion)
RWStepGeom_RWSurfaceOfLinearExtrusion_swigregister = _RWStepGeom.RWStepGeom_RWSurfaceOfLinearExtrusion_swigregister
RWStepGeom_RWSurfaceOfLinearExtrusion_swigregister(RWStepGeom_RWSurfaceOfLinearExtrusion)

class RWStepGeom_RWSurfaceOfRevolution(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSurfaceOfRevolution_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSurfaceOfRevolution(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_SurfaceOfRevolution
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceOfRevolution_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_SurfaceOfRevolution
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceOfRevolution_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_SurfaceOfRevolution
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceOfRevolution_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSurfaceOfRevolution
RWStepGeom_RWSurfaceOfRevolution.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceOfRevolution_ReadStep, None, RWStepGeom_RWSurfaceOfRevolution)
RWStepGeom_RWSurfaceOfRevolution.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceOfRevolution_Share, None, RWStepGeom_RWSurfaceOfRevolution)
RWStepGeom_RWSurfaceOfRevolution.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceOfRevolution_WriteStep, None, RWStepGeom_RWSurfaceOfRevolution)
RWStepGeom_RWSurfaceOfRevolution_swigregister = _RWStepGeom.RWStepGeom_RWSurfaceOfRevolution_swigregister
RWStepGeom_RWSurfaceOfRevolution_swigregister(RWStepGeom_RWSurfaceOfRevolution)

class RWStepGeom_RWSurfacePatch(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSurfacePatch_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSurfacePatch(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_SurfacePatch
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfacePatch_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_SurfacePatch
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfacePatch_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_SurfacePatch
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfacePatch_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSurfacePatch
RWStepGeom_RWSurfacePatch.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfacePatch_ReadStep, None, RWStepGeom_RWSurfacePatch)
RWStepGeom_RWSurfacePatch.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfacePatch_Share, None, RWStepGeom_RWSurfacePatch)
RWStepGeom_RWSurfacePatch.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfacePatch_WriteStep, None, RWStepGeom_RWSurfacePatch)
RWStepGeom_RWSurfacePatch_swigregister = _RWStepGeom.RWStepGeom_RWSurfacePatch_swigregister
RWStepGeom_RWSurfacePatch_swigregister(RWStepGeom_RWSurfacePatch)

class RWStepGeom_RWSurfaceReplica(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSurfaceReplica_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSurfaceReplica(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_SurfaceReplica
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceReplica_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_SurfaceReplica
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceReplica_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_SurfaceReplica
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSurfaceReplica_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSurfaceReplica
RWStepGeom_RWSurfaceReplica.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceReplica_ReadStep, None, RWStepGeom_RWSurfaceReplica)
RWStepGeom_RWSurfaceReplica.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceReplica_Share, None, RWStepGeom_RWSurfaceReplica)
RWStepGeom_RWSurfaceReplica.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSurfaceReplica_WriteStep, None, RWStepGeom_RWSurfaceReplica)
RWStepGeom_RWSurfaceReplica_swigregister = _RWStepGeom.RWStepGeom_RWSurfaceReplica_swigregister
RWStepGeom_RWSurfaceReplica_swigregister(RWStepGeom_RWSurfaceReplica)

class RWStepGeom_RWSweptSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWSweptSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWSweptSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_SweptSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSweptSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_SweptSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSweptSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_SweptSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWSweptSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWSweptSurface
RWStepGeom_RWSweptSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSweptSurface_ReadStep, None, RWStepGeom_RWSweptSurface)
RWStepGeom_RWSweptSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWSweptSurface_Share, None, RWStepGeom_RWSweptSurface)
RWStepGeom_RWSweptSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWSweptSurface_WriteStep, None, RWStepGeom_RWSweptSurface)
RWStepGeom_RWSweptSurface_swigregister = _RWStepGeom.RWStepGeom_RWSweptSurface_swigregister
RWStepGeom_RWSweptSurface_swigregister(RWStepGeom_RWSweptSurface)

class RWStepGeom_RWToroidalSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_ToroidalSurface
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWToroidalSurface_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWToroidalSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWToroidalSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_ToroidalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWToroidalSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_ToroidalSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWToroidalSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_ToroidalSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWToroidalSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWToroidalSurface
RWStepGeom_RWToroidalSurface.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWToroidalSurface_Check, None, RWStepGeom_RWToroidalSurface)
RWStepGeom_RWToroidalSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWToroidalSurface_ReadStep, None, RWStepGeom_RWToroidalSurface)
RWStepGeom_RWToroidalSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWToroidalSurface_Share, None, RWStepGeom_RWToroidalSurface)
RWStepGeom_RWToroidalSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWToroidalSurface_WriteStep, None, RWStepGeom_RWToroidalSurface)
RWStepGeom_RWToroidalSurface_swigregister = _RWStepGeom.RWStepGeom_RWToroidalSurface_swigregister
RWStepGeom_RWToroidalSurface_swigregister(RWStepGeom_RWToroidalSurface)

class RWStepGeom_RWTrimmedCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWTrimmedCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWTrimmedCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_TrimmedCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWTrimmedCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_TrimmedCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWTrimmedCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_TrimmedCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWTrimmedCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWTrimmedCurve
RWStepGeom_RWTrimmedCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWTrimmedCurve_ReadStep, None, RWStepGeom_RWTrimmedCurve)
RWStepGeom_RWTrimmedCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWTrimmedCurve_Share, None, RWStepGeom_RWTrimmedCurve)
RWStepGeom_RWTrimmedCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWTrimmedCurve_WriteStep, None, RWStepGeom_RWTrimmedCurve)
RWStepGeom_RWTrimmedCurve_swigregister = _RWStepGeom.RWStepGeom_RWTrimmedCurve_swigregister
RWStepGeom_RWTrimmedCurve_swigregister(RWStepGeom_RWTrimmedCurve)

class RWStepGeom_RWUniformCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWUniformCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWUniformCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_UniformCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_UniformCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_UniformCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWUniformCurve
RWStepGeom_RWUniformCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformCurve_ReadStep, None, RWStepGeom_RWUniformCurve)
RWStepGeom_RWUniformCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformCurve_Share, None, RWStepGeom_RWUniformCurve)
RWStepGeom_RWUniformCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformCurve_WriteStep, None, RWStepGeom_RWUniformCurve)
RWStepGeom_RWUniformCurve_swigregister = _RWStepGeom.RWStepGeom_RWUniformCurve_swigregister
RWStepGeom_RWUniformCurve_swigregister(RWStepGeom_RWUniformCurve)

class RWStepGeom_RWUniformCurveAndRationalBSplineCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWUniformCurveAndRationalBSplineCurve_swiginit(self, _RWStepGeom.new_RWStepGeom_RWUniformCurveAndRationalBSplineCurve(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_UniformCurveAndRationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformCurveAndRationalBSplineCurve_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_UniformCurveAndRationalBSplineCurve
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformCurveAndRationalBSplineCurve_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_UniformCurveAndRationalBSplineCurve
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformCurveAndRationalBSplineCurve_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWUniformCurveAndRationalBSplineCurve
RWStepGeom_RWUniformCurveAndRationalBSplineCurve.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformCurveAndRationalBSplineCurve_ReadStep, None, RWStepGeom_RWUniformCurveAndRationalBSplineCurve)
RWStepGeom_RWUniformCurveAndRationalBSplineCurve.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformCurveAndRationalBSplineCurve_Share, None, RWStepGeom_RWUniformCurveAndRationalBSplineCurve)
RWStepGeom_RWUniformCurveAndRationalBSplineCurve.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformCurveAndRationalBSplineCurve_WriteStep, None, RWStepGeom_RWUniformCurveAndRationalBSplineCurve)
RWStepGeom_RWUniformCurveAndRationalBSplineCurve_swigregister = _RWStepGeom.RWStepGeom_RWUniformCurveAndRationalBSplineCurve_swigregister
RWStepGeom_RWUniformCurveAndRationalBSplineCurve_swigregister(RWStepGeom_RWUniformCurveAndRationalBSplineCurve)

class RWStepGeom_RWUniformSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWUniformSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWUniformSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_UniformSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_UniformSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_UniformSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWUniformSurface
RWStepGeom_RWUniformSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformSurface_ReadStep, None, RWStepGeom_RWUniformSurface)
RWStepGeom_RWUniformSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformSurface_Share, None, RWStepGeom_RWUniformSurface)
RWStepGeom_RWUniformSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformSurface_WriteStep, None, RWStepGeom_RWUniformSurface)
RWStepGeom_RWUniformSurface_swigregister = _RWStepGeom.RWStepGeom_RWUniformSurface_swigregister
RWStepGeom_RWUniformSurface_swigregister(RWStepGeom_RWUniformSurface)

class RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_swiginit(self, _RWStepGeom.new_RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_UniformSurfaceAndRationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_UniformSurfaceAndRationalBSplineSurface
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_UniformSurfaceAndRationalBSplineSurface
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface
RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_ReadStep, None, RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface)
RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_Share, None, RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface)
RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_WriteStep, None, RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface)
RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_swigregister = _RWStepGeom.RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_swigregister
RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface_swigregister(RWStepGeom_RWUniformSurfaceAndRationalBSplineSurface)

class RWStepGeom_RWVector(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Check(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Vector
        	:param shares:
        	:type shares: Interface_ShareTool
        	:param ach:
        	:type ach: Interface_Check
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWVector_Check(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _RWStepGeom.RWStepGeom_RWVector_swiginit(self, _RWStepGeom.new_RWStepGeom_RWVector(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepGeom_Vector
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWVector_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepGeom_Vector
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWVector_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepGeom_Vector
        	:rtype: None
        """
        return _RWStepGeom.RWStepGeom_RWVector_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepGeom.delete_RWStepGeom_RWVector
RWStepGeom_RWVector.Check = new_instancemethod(_RWStepGeom.RWStepGeom_RWVector_Check, None, RWStepGeom_RWVector)
RWStepGeom_RWVector.ReadStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWVector_ReadStep, None, RWStepGeom_RWVector)
RWStepGeom_RWVector.Share = new_instancemethod(_RWStepGeom.RWStepGeom_RWVector_Share, None, RWStepGeom_RWVector)
RWStepGeom_RWVector.WriteStep = new_instancemethod(_RWStepGeom.RWStepGeom_RWVector_WriteStep, None, RWStepGeom_RWVector)
RWStepGeom_RWVector_swigregister = _RWStepGeom.RWStepGeom_RWVector_swigregister
RWStepGeom_RWVector_swigregister(RWStepGeom_RWVector)



