# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
RWStepRepr module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_rwsteprepr.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _RWStepRepr.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepRepr')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepRepr')
    _RWStepRepr = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepRepr', [dirname(__file__)])
        except ImportError:
            import _RWStepRepr
            return _RWStepRepr
        try:
            _mod = imp.load_module('_RWStepRepr', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepRepr = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepRepr
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepRepr.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_RWStepRepr.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_RWStepRepr.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_RWStepRepr.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_RWStepRepr.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_RWStepRepr.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_RWStepRepr.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_RWStepRepr.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_RWStepRepr.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_RWStepRepr.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_RWStepRepr.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_RWStepRepr.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_RWStepRepr.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_RWStepRepr.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_RWStepRepr.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_RWStepRepr.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_RWStepRepr.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _RWStepRepr.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _RWStepRepr.process_exception(error, method_name, class_name)
process_exception = _RWStepRepr.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepRepr
import OCC.Core.StepBasic
class RWStepRepr_RWAllAroundShapeAspect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_swiginit(self, _RWStepRepr.new_RWStepRepr_RWAllAroundShapeAspect(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads AllAroundShapeAspect
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_AllAroundShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_AllAroundShapeAspect
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes AllAroundShapeAspect
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_AllAroundShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWAllAroundShapeAspect
RWStepRepr_RWAllAroundShapeAspect.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_ReadStep, None, RWStepRepr_RWAllAroundShapeAspect)
RWStepRepr_RWAllAroundShapeAspect.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_Share, None, RWStepRepr_RWAllAroundShapeAspect)
RWStepRepr_RWAllAroundShapeAspect.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_WriteStep, None, RWStepRepr_RWAllAroundShapeAspect)
RWStepRepr_RWAllAroundShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_swigregister
RWStepRepr_RWAllAroundShapeAspect_swigregister(RWStepRepr_RWAllAroundShapeAspect)

class RWStepRepr_RWApex(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWApex_swiginit(self, _RWStepRepr.new_RWStepRepr_RWApex(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Apex
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_Apex
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWApex_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_Apex
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWApex_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Apex
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_Apex
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWApex_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWApex
RWStepRepr_RWApex.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWApex_ReadStep, None, RWStepRepr_RWApex)
RWStepRepr_RWApex.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWApex_Share, None, RWStepRepr_RWApex)
RWStepRepr_RWApex.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWApex_WriteStep, None, RWStepRepr_RWApex)
RWStepRepr_RWApex_swigregister = _RWStepRepr.RWStepRepr_RWApex_swigregister
RWStepRepr_RWApex_swigregister(RWStepRepr_RWApex)

class RWStepRepr_RWAssemblyComponentUsage(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_swiginit(self, _RWStepRepr.new_RWStepRepr_RWAssemblyComponentUsage(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads AssemblyComponentUsage
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_AssemblyComponentUsage
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_AssemblyComponentUsage
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes AssemblyComponentUsage
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_AssemblyComponentUsage
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWAssemblyComponentUsage
RWStepRepr_RWAssemblyComponentUsage.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_ReadStep, None, RWStepRepr_RWAssemblyComponentUsage)
RWStepRepr_RWAssemblyComponentUsage.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_Share, None, RWStepRepr_RWAssemblyComponentUsage)
RWStepRepr_RWAssemblyComponentUsage.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_WriteStep, None, RWStepRepr_RWAssemblyComponentUsage)
RWStepRepr_RWAssemblyComponentUsage_swigregister = _RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_swigregister
RWStepRepr_RWAssemblyComponentUsage_swigregister(RWStepRepr_RWAssemblyComponentUsage)

class RWStepRepr_RWAssemblyComponentUsageSubstitute(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_swiginit(self, _RWStepRepr.new_RWStepRepr_RWAssemblyComponentUsageSubstitute(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_AssemblyComponentUsageSubstitute
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_AssemblyComponentUsageSubstitute
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_AssemblyComponentUsageSubstitute
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWAssemblyComponentUsageSubstitute
RWStepRepr_RWAssemblyComponentUsageSubstitute.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_ReadStep, None, RWStepRepr_RWAssemblyComponentUsageSubstitute)
RWStepRepr_RWAssemblyComponentUsageSubstitute.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_Share, None, RWStepRepr_RWAssemblyComponentUsageSubstitute)
RWStepRepr_RWAssemblyComponentUsageSubstitute.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_WriteStep, None, RWStepRepr_RWAssemblyComponentUsageSubstitute)
RWStepRepr_RWAssemblyComponentUsageSubstitute_swigregister = _RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_swigregister
RWStepRepr_RWAssemblyComponentUsageSubstitute_swigregister(RWStepRepr_RWAssemblyComponentUsageSubstitute)

class RWStepRepr_RWBetweenShapeAspect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWBetweenShapeAspect_swiginit(self, _RWStepRepr.new_RWStepRepr_RWBetweenShapeAspect(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads BetweenShapeAspect
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_BetweenShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWBetweenShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_BetweenShapeAspect
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWBetweenShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes BetweenShapeAspect
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_BetweenShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWBetweenShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWBetweenShapeAspect
RWStepRepr_RWBetweenShapeAspect.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWBetweenShapeAspect_ReadStep, None, RWStepRepr_RWBetweenShapeAspect)
RWStepRepr_RWBetweenShapeAspect.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWBetweenShapeAspect_Share, None, RWStepRepr_RWBetweenShapeAspect)
RWStepRepr_RWBetweenShapeAspect.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWBetweenShapeAspect_WriteStep, None, RWStepRepr_RWBetweenShapeAspect)
RWStepRepr_RWBetweenShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWBetweenShapeAspect_swigregister
RWStepRepr_RWBetweenShapeAspect_swigregister(RWStepRepr_RWBetweenShapeAspect)

class RWStepRepr_RWCentreOfSymmetry(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWCentreOfSymmetry_swiginit(self, _RWStepRepr.new_RWStepRepr_RWCentreOfSymmetry(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CentreOfSymmetry
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_CentreOfSymmetry
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCentreOfSymmetry_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_CentreOfSymmetry
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCentreOfSymmetry_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CentreOfSymmetry
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_CentreOfSymmetry
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCentreOfSymmetry_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCentreOfSymmetry
RWStepRepr_RWCentreOfSymmetry.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCentreOfSymmetry_ReadStep, None, RWStepRepr_RWCentreOfSymmetry)
RWStepRepr_RWCentreOfSymmetry.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWCentreOfSymmetry_Share, None, RWStepRepr_RWCentreOfSymmetry)
RWStepRepr_RWCentreOfSymmetry.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCentreOfSymmetry_WriteStep, None, RWStepRepr_RWCentreOfSymmetry)
RWStepRepr_RWCentreOfSymmetry_swigregister = _RWStepRepr.RWStepRepr_RWCentreOfSymmetry_swigregister
RWStepRepr_RWCentreOfSymmetry_swigregister(RWStepRepr_RWCentreOfSymmetry)

class RWStepRepr_RWCharacterizedRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWCharacterizedRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_CharacterizedRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_CharacterizedRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_CharacterizedRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCharacterizedRepresentation
RWStepRepr_RWCharacterizedRepresentation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_ReadStep, None, RWStepRepr_RWCharacterizedRepresentation)
RWStepRepr_RWCharacterizedRepresentation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_Share, None, RWStepRepr_RWCharacterizedRepresentation)
RWStepRepr_RWCharacterizedRepresentation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_WriteStep, None, RWStepRepr_RWCharacterizedRepresentation)
RWStepRepr_RWCharacterizedRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_swigregister
RWStepRepr_RWCharacterizedRepresentation_swigregister(RWStepRepr_RWCharacterizedRepresentation)

class RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swiginit(self, _RWStepRepr.new_RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp
RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_ReadStep, None, RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp)
RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_Share, None, RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp)
RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_WriteStep, None, RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp)
RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swigregister = _RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swigregister
RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swigregister(RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp)

class RWStepRepr_RWCompShAspAndDatumFeatAndShAsp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_swiginit(self, _RWStepRepr.new_RWStepRepr_RWCompShAspAndDatumFeatAndShAsp(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_CompShAspAndDatumFeatAndShAsp
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_CompShAspAndDatumFeatAndShAsp
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_CompShAspAndDatumFeatAndShAsp
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompShAspAndDatumFeatAndShAsp
RWStepRepr_RWCompShAspAndDatumFeatAndShAsp.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_ReadStep, None, RWStepRepr_RWCompShAspAndDatumFeatAndShAsp)
RWStepRepr_RWCompShAspAndDatumFeatAndShAsp.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_Share, None, RWStepRepr_RWCompShAspAndDatumFeatAndShAsp)
RWStepRepr_RWCompShAspAndDatumFeatAndShAsp.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_WriteStep, None, RWStepRepr_RWCompShAspAndDatumFeatAndShAsp)
RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_swigregister = _RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_swigregister
RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_swigregister(RWStepRepr_RWCompShAspAndDatumFeatAndShAsp)

class RWStepRepr_RWCompositeGroupShapeAspect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_swiginit(self, _RWStepRepr.new_RWStepRepr_RWCompositeGroupShapeAspect(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CompositeGroupShapeAspect
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_CompositeGroupShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_CompositeGroupShapeAspect
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CompositeGroupShapeAspect
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_CompositeGroupShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompositeGroupShapeAspect
RWStepRepr_RWCompositeGroupShapeAspect.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_ReadStep, None, RWStepRepr_RWCompositeGroupShapeAspect)
RWStepRepr_RWCompositeGroupShapeAspect.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_Share, None, RWStepRepr_RWCompositeGroupShapeAspect)
RWStepRepr_RWCompositeGroupShapeAspect.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_WriteStep, None, RWStepRepr_RWCompositeGroupShapeAspect)
RWStepRepr_RWCompositeGroupShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_swigregister
RWStepRepr_RWCompositeGroupShapeAspect_swigregister(RWStepRepr_RWCompositeGroupShapeAspect)

class RWStepRepr_RWCompositeShapeAspect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWCompositeShapeAspect_swiginit(self, _RWStepRepr.new_RWStepRepr_RWCompositeShapeAspect(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CompositeShapeAspect
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_CompositeShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompositeShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_CompositeShapeAspect
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompositeShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CompositeShapeAspect
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_CompositeShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompositeShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompositeShapeAspect
RWStepRepr_RWCompositeShapeAspect.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompositeShapeAspect_ReadStep, None, RWStepRepr_RWCompositeShapeAspect)
RWStepRepr_RWCompositeShapeAspect.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompositeShapeAspect_Share, None, RWStepRepr_RWCompositeShapeAspect)
RWStepRepr_RWCompositeShapeAspect.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompositeShapeAspect_WriteStep, None, RWStepRepr_RWCompositeShapeAspect)
RWStepRepr_RWCompositeShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWCompositeShapeAspect_swigregister
RWStepRepr_RWCompositeShapeAspect_swigregister(RWStepRepr_RWCompositeShapeAspect)

class RWStepRepr_RWCompoundRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_swiginit(self, _RWStepRepr.new_RWStepRepr_RWCompoundRepresentationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_CompoundRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_CompoundRepresentationItem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_CompoundRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompoundRepresentationItem
RWStepRepr_RWCompoundRepresentationItem.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_ReadStep, None, RWStepRepr_RWCompoundRepresentationItem)
RWStepRepr_RWCompoundRepresentationItem.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_Share, None, RWStepRepr_RWCompoundRepresentationItem)
RWStepRepr_RWCompoundRepresentationItem.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_WriteStep, None, RWStepRepr_RWCompoundRepresentationItem)
RWStepRepr_RWCompoundRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_swigregister
RWStepRepr_RWCompoundRepresentationItem_swigregister(RWStepRepr_RWCompoundRepresentationItem)

class RWStepRepr_RWConfigurationDesign(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWConfigurationDesign_swiginit(self, _RWStepRepr.new_RWStepRepr_RWConfigurationDesign(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ConfigurationDesign
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ConfigurationDesign
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConfigurationDesign_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ConfigurationDesign
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConfigurationDesign_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ConfigurationDesign
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ConfigurationDesign
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConfigurationDesign_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConfigurationDesign
RWStepRepr_RWConfigurationDesign.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConfigurationDesign_ReadStep, None, RWStepRepr_RWConfigurationDesign)
RWStepRepr_RWConfigurationDesign.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWConfigurationDesign_Share, None, RWStepRepr_RWConfigurationDesign)
RWStepRepr_RWConfigurationDesign.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConfigurationDesign_WriteStep, None, RWStepRepr_RWConfigurationDesign)
RWStepRepr_RWConfigurationDesign_swigregister = _RWStepRepr.RWStepRepr_RWConfigurationDesign_swigregister
RWStepRepr_RWConfigurationDesign_swigregister(RWStepRepr_RWConfigurationDesign)

class RWStepRepr_RWConfigurationEffectivity(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWConfigurationEffectivity_swiginit(self, _RWStepRepr.new_RWStepRepr_RWConfigurationEffectivity(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ConfigurationEffectivity
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ConfigurationEffectivity
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConfigurationEffectivity_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ConfigurationEffectivity
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConfigurationEffectivity_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ConfigurationEffectivity
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ConfigurationEffectivity
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConfigurationEffectivity_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConfigurationEffectivity
RWStepRepr_RWConfigurationEffectivity.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConfigurationEffectivity_ReadStep, None, RWStepRepr_RWConfigurationEffectivity)
RWStepRepr_RWConfigurationEffectivity.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWConfigurationEffectivity_Share, None, RWStepRepr_RWConfigurationEffectivity)
RWStepRepr_RWConfigurationEffectivity.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConfigurationEffectivity_WriteStep, None, RWStepRepr_RWConfigurationEffectivity)
RWStepRepr_RWConfigurationEffectivity_swigregister = _RWStepRepr.RWStepRepr_RWConfigurationEffectivity_swigregister
RWStepRepr_RWConfigurationEffectivity_swigregister(RWStepRepr_RWConfigurationEffectivity)

class RWStepRepr_RWConfigurationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWConfigurationItem_swiginit(self, _RWStepRepr.new_RWStepRepr_RWConfigurationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ConfigurationItem
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ConfigurationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConfigurationItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ConfigurationItem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConfigurationItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ConfigurationItem
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ConfigurationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConfigurationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConfigurationItem
RWStepRepr_RWConfigurationItem.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConfigurationItem_ReadStep, None, RWStepRepr_RWConfigurationItem)
RWStepRepr_RWConfigurationItem.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWConfigurationItem_Share, None, RWStepRepr_RWConfigurationItem)
RWStepRepr_RWConfigurationItem.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConfigurationItem_WriteStep, None, RWStepRepr_RWConfigurationItem)
RWStepRepr_RWConfigurationItem_swigregister = _RWStepRepr.RWStepRepr_RWConfigurationItem_swigregister
RWStepRepr_RWConfigurationItem_swigregister(RWStepRepr_RWConfigurationItem)

class RWStepRepr_RWConstructiveGeometryRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWConstructiveGeometryRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ConstructiveGeometryRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_ConstructiveGeometryRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ConstructiveGeometryRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConstructiveGeometryRepresentation
RWStepRepr_RWConstructiveGeometryRepresentation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_ReadStep, None, RWStepRepr_RWConstructiveGeometryRepresentation)
RWStepRepr_RWConstructiveGeometryRepresentation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_Share, None, RWStepRepr_RWConstructiveGeometryRepresentation)
RWStepRepr_RWConstructiveGeometryRepresentation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_WriteStep, None, RWStepRepr_RWConstructiveGeometryRepresentation)
RWStepRepr_RWConstructiveGeometryRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_swigregister
RWStepRepr_RWConstructiveGeometryRepresentation_swigregister(RWStepRepr_RWConstructiveGeometryRepresentation)

class RWStepRepr_RWConstructiveGeometryRepresentationRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_swiginit(self, _RWStepRepr.new_RWStepRepr_RWConstructiveGeometryRepresentationRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ConstructiveGeometryRepresentationRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_ConstructiveGeometryRepresentationRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ConstructiveGeometryRepresentationRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConstructiveGeometryRepresentationRelationship
RWStepRepr_RWConstructiveGeometryRepresentationRelationship.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_ReadStep, None, RWStepRepr_RWConstructiveGeometryRepresentationRelationship)
RWStepRepr_RWConstructiveGeometryRepresentationRelationship.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_Share, None, RWStepRepr_RWConstructiveGeometryRepresentationRelationship)
RWStepRepr_RWConstructiveGeometryRepresentationRelationship.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_WriteStep, None, RWStepRepr_RWConstructiveGeometryRepresentationRelationship)
RWStepRepr_RWConstructiveGeometryRepresentationRelationship_swigregister = _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_swigregister
RWStepRepr_RWConstructiveGeometryRepresentationRelationship_swigregister(RWStepRepr_RWConstructiveGeometryRepresentationRelationship)

class RWStepRepr_RWContinuosShapeAspect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWContinuosShapeAspect_swiginit(self, _RWStepRepr.new_RWStepRepr_RWContinuosShapeAspect(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ContinuosShapeAspect
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ContinuosShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWContinuosShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ContinuosShapeAspect
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWContinuosShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ContinuosShapeAspect
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ContinuosShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWContinuosShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWContinuosShapeAspect
RWStepRepr_RWContinuosShapeAspect.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWContinuosShapeAspect_ReadStep, None, RWStepRepr_RWContinuosShapeAspect)
RWStepRepr_RWContinuosShapeAspect.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWContinuosShapeAspect_Share, None, RWStepRepr_RWContinuosShapeAspect)
RWStepRepr_RWContinuosShapeAspect.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWContinuosShapeAspect_WriteStep, None, RWStepRepr_RWContinuosShapeAspect)
RWStepRepr_RWContinuosShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWContinuosShapeAspect_swigregister
RWStepRepr_RWContinuosShapeAspect_swigregister(RWStepRepr_RWContinuosShapeAspect)

class RWStepRepr_RWDataEnvironment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWDataEnvironment_swiginit(self, _RWStepRepr.new_RWStepRepr_RWDataEnvironment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DataEnvironment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_DataEnvironment
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDataEnvironment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_DataEnvironment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDataEnvironment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DataEnvironment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_DataEnvironment
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDataEnvironment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWDataEnvironment
RWStepRepr_RWDataEnvironment.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWDataEnvironment_ReadStep, None, RWStepRepr_RWDataEnvironment)
RWStepRepr_RWDataEnvironment.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWDataEnvironment_Share, None, RWStepRepr_RWDataEnvironment)
RWStepRepr_RWDataEnvironment.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWDataEnvironment_WriteStep, None, RWStepRepr_RWDataEnvironment)
RWStepRepr_RWDataEnvironment_swigregister = _RWStepRepr.RWStepRepr_RWDataEnvironment_swigregister
RWStepRepr_RWDataEnvironment_swigregister(RWStepRepr_RWDataEnvironment)

class RWStepRepr_RWDefinitionalRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWDefinitionalRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_DefinitionalRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_DefinitionalRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_DefinitionalRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWDefinitionalRepresentation
RWStepRepr_RWDefinitionalRepresentation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_ReadStep, None, RWStepRepr_RWDefinitionalRepresentation)
RWStepRepr_RWDefinitionalRepresentation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_Share, None, RWStepRepr_RWDefinitionalRepresentation)
RWStepRepr_RWDefinitionalRepresentation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_WriteStep, None, RWStepRepr_RWDefinitionalRepresentation)
RWStepRepr_RWDefinitionalRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_swigregister
RWStepRepr_RWDefinitionalRepresentation_swigregister(RWStepRepr_RWDefinitionalRepresentation)

class RWStepRepr_RWDerivedShapeAspect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWDerivedShapeAspect_swiginit(self, _RWStepRepr.new_RWStepRepr_RWDerivedShapeAspect(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads DerivedShapeAspect
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_DerivedShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDerivedShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_DerivedShapeAspect
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDerivedShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes DerivedShapeAspect
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_DerivedShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDerivedShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWDerivedShapeAspect
RWStepRepr_RWDerivedShapeAspect.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWDerivedShapeAspect_ReadStep, None, RWStepRepr_RWDerivedShapeAspect)
RWStepRepr_RWDerivedShapeAspect.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWDerivedShapeAspect_Share, None, RWStepRepr_RWDerivedShapeAspect)
RWStepRepr_RWDerivedShapeAspect.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWDerivedShapeAspect_WriteStep, None, RWStepRepr_RWDerivedShapeAspect)
RWStepRepr_RWDerivedShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWDerivedShapeAspect_swigregister
RWStepRepr_RWDerivedShapeAspect_swigregister(RWStepRepr_RWDerivedShapeAspect)

class RWStepRepr_RWDescriptiveRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWDescriptiveRepresentationItem_swiginit(self, _RWStepRepr.new_RWStepRepr_RWDescriptiveRepresentationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_DescriptiveRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDescriptiveRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_DescriptiveRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWDescriptiveRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWDescriptiveRepresentationItem
RWStepRepr_RWDescriptiveRepresentationItem.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWDescriptiveRepresentationItem_ReadStep, None, RWStepRepr_RWDescriptiveRepresentationItem)
RWStepRepr_RWDescriptiveRepresentationItem.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWDescriptiveRepresentationItem_WriteStep, None, RWStepRepr_RWDescriptiveRepresentationItem)
RWStepRepr_RWDescriptiveRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWDescriptiveRepresentationItem_swigregister
RWStepRepr_RWDescriptiveRepresentationItem_swigregister(RWStepRepr_RWDescriptiveRepresentationItem)

class RWStepRepr_RWExtension(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWExtension_swiginit(self, _RWStepRepr.new_RWStepRepr_RWExtension(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Extension
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_Extension
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWExtension_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_Extension
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWExtension_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Extension
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_Extension
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWExtension_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWExtension
RWStepRepr_RWExtension.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWExtension_ReadStep, None, RWStepRepr_RWExtension)
RWStepRepr_RWExtension.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWExtension_Share, None, RWStepRepr_RWExtension)
RWStepRepr_RWExtension.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWExtension_WriteStep, None, RWStepRepr_RWExtension)
RWStepRepr_RWExtension_swigregister = _RWStepRepr.RWStepRepr_RWExtension_swigregister
RWStepRepr_RWExtension_swigregister(RWStepRepr_RWExtension)

class RWStepRepr_RWFeatureForDatumTargetRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_swiginit(self, _RWStepRepr.new_RWStepRepr_RWFeatureForDatumTargetRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ShapeAspectRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_FeatureForDatumTargetRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_FeatureForDatumTargetRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ShapeAspectRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_FeatureForDatumTargetRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWFeatureForDatumTargetRelationship
RWStepRepr_RWFeatureForDatumTargetRelationship.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_ReadStep, None, RWStepRepr_RWFeatureForDatumTargetRelationship)
RWStepRepr_RWFeatureForDatumTargetRelationship.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_Share, None, RWStepRepr_RWFeatureForDatumTargetRelationship)
RWStepRepr_RWFeatureForDatumTargetRelationship.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_WriteStep, None, RWStepRepr_RWFeatureForDatumTargetRelationship)
RWStepRepr_RWFeatureForDatumTargetRelationship_swigregister = _RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_swigregister
RWStepRepr_RWFeatureForDatumTargetRelationship_swigregister(RWStepRepr_RWFeatureForDatumTargetRelationship)

class RWStepRepr_RWFunctionallyDefinedTransformation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWFunctionallyDefinedTransformation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWFunctionallyDefinedTransformation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_FunctionallyDefinedTransformation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWFunctionallyDefinedTransformation_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_FunctionallyDefinedTransformation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWFunctionallyDefinedTransformation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWFunctionallyDefinedTransformation
RWStepRepr_RWFunctionallyDefinedTransformation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWFunctionallyDefinedTransformation_ReadStep, None, RWStepRepr_RWFunctionallyDefinedTransformation)
RWStepRepr_RWFunctionallyDefinedTransformation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWFunctionallyDefinedTransformation_WriteStep, None, RWStepRepr_RWFunctionallyDefinedTransformation)
RWStepRepr_RWFunctionallyDefinedTransformation_swigregister = _RWStepRepr.RWStepRepr_RWFunctionallyDefinedTransformation_swigregister
RWStepRepr_RWFunctionallyDefinedTransformation_swigregister(RWStepRepr_RWFunctionallyDefinedTransformation)

class RWStepRepr_RWGeometricAlignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWGeometricAlignment_swiginit(self, _RWStepRepr.new_RWStepRepr_RWGeometricAlignment(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads GeometricAlignment
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_GeometricAlignment
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWGeometricAlignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_GeometricAlignment
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWGeometricAlignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes GeometricAlignment
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_GeometricAlignment
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWGeometricAlignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWGeometricAlignment
RWStepRepr_RWGeometricAlignment.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWGeometricAlignment_ReadStep, None, RWStepRepr_RWGeometricAlignment)
RWStepRepr_RWGeometricAlignment.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWGeometricAlignment_Share, None, RWStepRepr_RWGeometricAlignment)
RWStepRepr_RWGeometricAlignment.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWGeometricAlignment_WriteStep, None, RWStepRepr_RWGeometricAlignment)
RWStepRepr_RWGeometricAlignment_swigregister = _RWStepRepr.RWStepRepr_RWGeometricAlignment_swigregister
RWStepRepr_RWGeometricAlignment_swigregister(RWStepRepr_RWGeometricAlignment)

class RWStepRepr_RWGlobalUncertaintyAssignedContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_swiginit(self, _RWStepRepr.new_RWStepRepr_RWGlobalUncertaintyAssignedContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_GlobalUncertaintyAssignedContext
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_GlobalUncertaintyAssignedContext
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_GlobalUncertaintyAssignedContext
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWGlobalUncertaintyAssignedContext
RWStepRepr_RWGlobalUncertaintyAssignedContext.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_ReadStep, None, RWStepRepr_RWGlobalUncertaintyAssignedContext)
RWStepRepr_RWGlobalUncertaintyAssignedContext.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_Share, None, RWStepRepr_RWGlobalUncertaintyAssignedContext)
RWStepRepr_RWGlobalUncertaintyAssignedContext.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_WriteStep, None, RWStepRepr_RWGlobalUncertaintyAssignedContext)
RWStepRepr_RWGlobalUncertaintyAssignedContext_swigregister = _RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_swigregister
RWStepRepr_RWGlobalUncertaintyAssignedContext_swigregister(RWStepRepr_RWGlobalUncertaintyAssignedContext)

class RWStepRepr_RWGlobalUnitAssignedContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_swiginit(self, _RWStepRepr.new_RWStepRepr_RWGlobalUnitAssignedContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_GlobalUnitAssignedContext
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_GlobalUnitAssignedContext
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_GlobalUnitAssignedContext
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWGlobalUnitAssignedContext
RWStepRepr_RWGlobalUnitAssignedContext.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_ReadStep, None, RWStepRepr_RWGlobalUnitAssignedContext)
RWStepRepr_RWGlobalUnitAssignedContext.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_Share, None, RWStepRepr_RWGlobalUnitAssignedContext)
RWStepRepr_RWGlobalUnitAssignedContext.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_WriteStep, None, RWStepRepr_RWGlobalUnitAssignedContext)
RWStepRepr_RWGlobalUnitAssignedContext_swigregister = _RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_swigregister
RWStepRepr_RWGlobalUnitAssignedContext_swigregister(RWStepRepr_RWGlobalUnitAssignedContext)

class RWStepRepr_RWIntegerRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWIntegerRepresentationItem_swiginit(self, _RWStepRepr.new_RWStepRepr_RWIntegerRepresentationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_IntegerRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWIntegerRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_IntegerRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWIntegerRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWIntegerRepresentationItem
RWStepRepr_RWIntegerRepresentationItem.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWIntegerRepresentationItem_ReadStep, None, RWStepRepr_RWIntegerRepresentationItem)
RWStepRepr_RWIntegerRepresentationItem.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWIntegerRepresentationItem_WriteStep, None, RWStepRepr_RWIntegerRepresentationItem)
RWStepRepr_RWIntegerRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWIntegerRepresentationItem_swigregister
RWStepRepr_RWIntegerRepresentationItem_swigregister(RWStepRepr_RWIntegerRepresentationItem)

class RWStepRepr_RWItemDefinedTransformation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWItemDefinedTransformation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWItemDefinedTransformation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ItemDefinedTransformation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWItemDefinedTransformation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_ItemDefinedTransformation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWItemDefinedTransformation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ItemDefinedTransformation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWItemDefinedTransformation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWItemDefinedTransformation
RWStepRepr_RWItemDefinedTransformation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWItemDefinedTransformation_ReadStep, None, RWStepRepr_RWItemDefinedTransformation)
RWStepRepr_RWItemDefinedTransformation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWItemDefinedTransformation_Share, None, RWStepRepr_RWItemDefinedTransformation)
RWStepRepr_RWItemDefinedTransformation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWItemDefinedTransformation_WriteStep, None, RWStepRepr_RWItemDefinedTransformation)
RWStepRepr_RWItemDefinedTransformation_swigregister = _RWStepRepr.RWStepRepr_RWItemDefinedTransformation_swigregister
RWStepRepr_RWItemDefinedTransformation_swigregister(RWStepRepr_RWItemDefinedTransformation)

class RWStepRepr_RWMakeFromUsageOption(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWMakeFromUsageOption_swiginit(self, _RWStepRepr.new_RWStepRepr_RWMakeFromUsageOption(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads MakeFromUsageOption
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_MakeFromUsageOption
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMakeFromUsageOption_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_MakeFromUsageOption
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMakeFromUsageOption_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes MakeFromUsageOption
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_MakeFromUsageOption
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMakeFromUsageOption_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMakeFromUsageOption
RWStepRepr_RWMakeFromUsageOption.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMakeFromUsageOption_ReadStep, None, RWStepRepr_RWMakeFromUsageOption)
RWStepRepr_RWMakeFromUsageOption.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWMakeFromUsageOption_Share, None, RWStepRepr_RWMakeFromUsageOption)
RWStepRepr_RWMakeFromUsageOption.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMakeFromUsageOption_WriteStep, None, RWStepRepr_RWMakeFromUsageOption)
RWStepRepr_RWMakeFromUsageOption_swigregister = _RWStepRepr.RWStepRepr_RWMakeFromUsageOption_swigregister
RWStepRepr_RWMakeFromUsageOption_swigregister(RWStepRepr_RWMakeFromUsageOption)

class RWStepRepr_RWMappedItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWMappedItem_swiginit(self, _RWStepRepr.new_RWStepRepr_RWMappedItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_MappedItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMappedItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_MappedItem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMappedItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_MappedItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMappedItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMappedItem
RWStepRepr_RWMappedItem.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMappedItem_ReadStep, None, RWStepRepr_RWMappedItem)
RWStepRepr_RWMappedItem.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWMappedItem_Share, None, RWStepRepr_RWMappedItem)
RWStepRepr_RWMappedItem.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMappedItem_WriteStep, None, RWStepRepr_RWMappedItem)
RWStepRepr_RWMappedItem_swigregister = _RWStepRepr.RWStepRepr_RWMappedItem_swigregister
RWStepRepr_RWMappedItem_swigregister(RWStepRepr_RWMappedItem)

class RWStepRepr_RWMaterialDesignation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWMaterialDesignation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWMaterialDesignation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_MaterialDesignation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMaterialDesignation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_MaterialDesignation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMaterialDesignation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_MaterialDesignation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMaterialDesignation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMaterialDesignation
RWStepRepr_RWMaterialDesignation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMaterialDesignation_ReadStep, None, RWStepRepr_RWMaterialDesignation)
RWStepRepr_RWMaterialDesignation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWMaterialDesignation_Share, None, RWStepRepr_RWMaterialDesignation)
RWStepRepr_RWMaterialDesignation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMaterialDesignation_WriteStep, None, RWStepRepr_RWMaterialDesignation)
RWStepRepr_RWMaterialDesignation_swigregister = _RWStepRepr.RWStepRepr_RWMaterialDesignation_swigregister
RWStepRepr_RWMaterialDesignation_swigregister(RWStepRepr_RWMaterialDesignation)

class RWStepRepr_RWMaterialProperty(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWMaterialProperty_swiginit(self, _RWStepRepr.new_RWStepRepr_RWMaterialProperty(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads MaterialProperty
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_MaterialProperty
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMaterialProperty_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_MaterialProperty
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMaterialProperty_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes MaterialProperty
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_MaterialProperty
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMaterialProperty_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMaterialProperty
RWStepRepr_RWMaterialProperty.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMaterialProperty_ReadStep, None, RWStepRepr_RWMaterialProperty)
RWStepRepr_RWMaterialProperty.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWMaterialProperty_Share, None, RWStepRepr_RWMaterialProperty)
RWStepRepr_RWMaterialProperty.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMaterialProperty_WriteStep, None, RWStepRepr_RWMaterialProperty)
RWStepRepr_RWMaterialProperty_swigregister = _RWStepRepr.RWStepRepr_RWMaterialProperty_swigregister
RWStepRepr_RWMaterialProperty_swigregister(RWStepRepr_RWMaterialProperty)

class RWStepRepr_RWMaterialPropertyRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWMaterialPropertyRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads MaterialPropertyRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_MaterialPropertyRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_MaterialPropertyRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes MaterialPropertyRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_MaterialPropertyRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMaterialPropertyRepresentation
RWStepRepr_RWMaterialPropertyRepresentation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_ReadStep, None, RWStepRepr_RWMaterialPropertyRepresentation)
RWStepRepr_RWMaterialPropertyRepresentation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_Share, None, RWStepRepr_RWMaterialPropertyRepresentation)
RWStepRepr_RWMaterialPropertyRepresentation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_WriteStep, None, RWStepRepr_RWMaterialPropertyRepresentation)
RWStepRepr_RWMaterialPropertyRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_swigregister
RWStepRepr_RWMaterialPropertyRepresentation_swigregister(RWStepRepr_RWMaterialPropertyRepresentation)

class RWStepRepr_RWMeasureRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_swiginit(self, _RWStepRepr.new_RWStepRepr_RWMeasureRepresentationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_MeasureRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_MeasureRepresentationItem
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_MeasureRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMeasureRepresentationItem
RWStepRepr_RWMeasureRepresentationItem.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_ReadStep, None, RWStepRepr_RWMeasureRepresentationItem)
RWStepRepr_RWMeasureRepresentationItem.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_Share, None, RWStepRepr_RWMeasureRepresentationItem)
RWStepRepr_RWMeasureRepresentationItem.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_WriteStep, None, RWStepRepr_RWMeasureRepresentationItem)
RWStepRepr_RWMeasureRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_swigregister
RWStepRepr_RWMeasureRepresentationItem_swigregister(RWStepRepr_RWMeasureRepresentationItem)

class RWStepRepr_RWParallelOffset(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWParallelOffset_swiginit(self, _RWStepRepr.new_RWStepRepr_RWParallelOffset(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ParallelOffset
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ParallelOffset
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWParallelOffset_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ParallelOffset
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWParallelOffset_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ParallelOffset
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ParallelOffset
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWParallelOffset_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWParallelOffset
RWStepRepr_RWParallelOffset.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWParallelOffset_ReadStep, None, RWStepRepr_RWParallelOffset)
RWStepRepr_RWParallelOffset.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWParallelOffset_Share, None, RWStepRepr_RWParallelOffset)
RWStepRepr_RWParallelOffset.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWParallelOffset_WriteStep, None, RWStepRepr_RWParallelOffset)
RWStepRepr_RWParallelOffset_swigregister = _RWStepRepr.RWStepRepr_RWParallelOffset_swigregister
RWStepRepr_RWParallelOffset_swigregister(RWStepRepr_RWParallelOffset)

class RWStepRepr_RWParametricRepresentationContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWParametricRepresentationContext_swiginit(self, _RWStepRepr.new_RWStepRepr_RWParametricRepresentationContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ParametricRepresentationContext
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWParametricRepresentationContext_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ParametricRepresentationContext
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWParametricRepresentationContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWParametricRepresentationContext
RWStepRepr_RWParametricRepresentationContext.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWParametricRepresentationContext_ReadStep, None, RWStepRepr_RWParametricRepresentationContext)
RWStepRepr_RWParametricRepresentationContext.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWParametricRepresentationContext_WriteStep, None, RWStepRepr_RWParametricRepresentationContext)
RWStepRepr_RWParametricRepresentationContext_swigregister = _RWStepRepr.RWStepRepr_RWParametricRepresentationContext_swigregister
RWStepRepr_RWParametricRepresentationContext_swigregister(RWStepRepr_RWParametricRepresentationContext)

class RWStepRepr_RWPerpendicularTo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWPerpendicularTo_swiginit(self, _RWStepRepr.new_RWStepRepr_RWPerpendicularTo(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads PerpendicularTo
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_PerpendicularTo
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPerpendicularTo_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_PerpendicularTo
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPerpendicularTo_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes PerpendicularTo
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_PerpendicularTo
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPerpendicularTo_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWPerpendicularTo
RWStepRepr_RWPerpendicularTo.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWPerpendicularTo_ReadStep, None, RWStepRepr_RWPerpendicularTo)
RWStepRepr_RWPerpendicularTo.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWPerpendicularTo_Share, None, RWStepRepr_RWPerpendicularTo)
RWStepRepr_RWPerpendicularTo.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWPerpendicularTo_WriteStep, None, RWStepRepr_RWPerpendicularTo)
RWStepRepr_RWPerpendicularTo_swigregister = _RWStepRepr.RWStepRepr_RWPerpendicularTo_swigregister
RWStepRepr_RWPerpendicularTo_swigregister(RWStepRepr_RWPerpendicularTo)

class RWStepRepr_RWProductConcept(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWProductConcept_swiginit(self, _RWStepRepr.new_RWStepRepr_RWProductConcept(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ProductConcept
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ProductConcept
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWProductConcept_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ProductConcept
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWProductConcept_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ProductConcept
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ProductConcept
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWProductConcept_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWProductConcept
RWStepRepr_RWProductConcept.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWProductConcept_ReadStep, None, RWStepRepr_RWProductConcept)
RWStepRepr_RWProductConcept.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWProductConcept_Share, None, RWStepRepr_RWProductConcept)
RWStepRepr_RWProductConcept.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWProductConcept_WriteStep, None, RWStepRepr_RWProductConcept)
RWStepRepr_RWProductConcept_swigregister = _RWStepRepr.RWStepRepr_RWProductConcept_swigregister
RWStepRepr_RWProductConcept_swigregister(RWStepRepr_RWProductConcept)

class RWStepRepr_RWProductDefinitionShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWProductDefinitionShape_swiginit(self, _RWStepRepr.new_RWStepRepr_RWProductDefinitionShape(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ProductDefinitionShape
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ProductDefinitionShape
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWProductDefinitionShape_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ProductDefinitionShape
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWProductDefinitionShape_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ProductDefinitionShape
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ProductDefinitionShape
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWProductDefinitionShape_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWProductDefinitionShape
RWStepRepr_RWProductDefinitionShape.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWProductDefinitionShape_ReadStep, None, RWStepRepr_RWProductDefinitionShape)
RWStepRepr_RWProductDefinitionShape.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWProductDefinitionShape_Share, None, RWStepRepr_RWProductDefinitionShape)
RWStepRepr_RWProductDefinitionShape.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWProductDefinitionShape_WriteStep, None, RWStepRepr_RWProductDefinitionShape)
RWStepRepr_RWProductDefinitionShape_swigregister = _RWStepRepr.RWStepRepr_RWProductDefinitionShape_swigregister
RWStepRepr_RWProductDefinitionShape_swigregister(RWStepRepr_RWProductDefinitionShape)

class RWStepRepr_RWPropertyDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWPropertyDefinition_swiginit(self, _RWStepRepr.new_RWStepRepr_RWPropertyDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads PropertyDefinition
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_PropertyDefinition
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_PropertyDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes PropertyDefinition
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_PropertyDefinition
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWPropertyDefinition
RWStepRepr_RWPropertyDefinition.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWPropertyDefinition_ReadStep, None, RWStepRepr_RWPropertyDefinition)
RWStepRepr_RWPropertyDefinition.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWPropertyDefinition_Share, None, RWStepRepr_RWPropertyDefinition)
RWStepRepr_RWPropertyDefinition.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWPropertyDefinition_WriteStep, None, RWStepRepr_RWPropertyDefinition)
RWStepRepr_RWPropertyDefinition_swigregister = _RWStepRepr.RWStepRepr_RWPropertyDefinition_swigregister
RWStepRepr_RWPropertyDefinition_swigregister(RWStepRepr_RWPropertyDefinition)

class RWStepRepr_RWPropertyDefinitionRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_swiginit(self, _RWStepRepr.new_RWStepRepr_RWPropertyDefinitionRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads PropertyDefinitionRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_PropertyDefinitionRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_PropertyDefinitionRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes PropertyDefinitionRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_PropertyDefinitionRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWPropertyDefinitionRelationship
RWStepRepr_RWPropertyDefinitionRelationship.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_ReadStep, None, RWStepRepr_RWPropertyDefinitionRelationship)
RWStepRepr_RWPropertyDefinitionRelationship.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_Share, None, RWStepRepr_RWPropertyDefinitionRelationship)
RWStepRepr_RWPropertyDefinitionRelationship.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_WriteStep, None, RWStepRepr_RWPropertyDefinitionRelationship)
RWStepRepr_RWPropertyDefinitionRelationship_swigregister = _RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_swigregister
RWStepRepr_RWPropertyDefinitionRelationship_swigregister(RWStepRepr_RWPropertyDefinitionRelationship)

class RWStepRepr_RWPropertyDefinitionRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWPropertyDefinitionRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads PropertyDefinitionRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_PropertyDefinitionRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_PropertyDefinitionRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes PropertyDefinitionRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_PropertyDefinitionRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWPropertyDefinitionRepresentation
RWStepRepr_RWPropertyDefinitionRepresentation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_ReadStep, None, RWStepRepr_RWPropertyDefinitionRepresentation)
RWStepRepr_RWPropertyDefinitionRepresentation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_Share, None, RWStepRepr_RWPropertyDefinitionRepresentation)
RWStepRepr_RWPropertyDefinitionRepresentation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_WriteStep, None, RWStepRepr_RWPropertyDefinitionRepresentation)
RWStepRepr_RWPropertyDefinitionRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_swigregister
RWStepRepr_RWPropertyDefinitionRepresentation_swigregister(RWStepRepr_RWPropertyDefinitionRepresentation)

class RWStepRepr_RWQuantifiedAssemblyComponentUsage(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_swiginit(self, _RWStepRepr.new_RWStepRepr_RWQuantifiedAssemblyComponentUsage(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads QuantifiedAssemblyComponentUsage
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_QuantifiedAssemblyComponentUsage
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_QuantifiedAssemblyComponentUsage
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes QuantifiedAssemblyComponentUsage
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_QuantifiedAssemblyComponentUsage
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWQuantifiedAssemblyComponentUsage
RWStepRepr_RWQuantifiedAssemblyComponentUsage.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_ReadStep, None, RWStepRepr_RWQuantifiedAssemblyComponentUsage)
RWStepRepr_RWQuantifiedAssemblyComponentUsage.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_Share, None, RWStepRepr_RWQuantifiedAssemblyComponentUsage)
RWStepRepr_RWQuantifiedAssemblyComponentUsage.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_WriteStep, None, RWStepRepr_RWQuantifiedAssemblyComponentUsage)
RWStepRepr_RWQuantifiedAssemblyComponentUsage_swigregister = _RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_swigregister
RWStepRepr_RWQuantifiedAssemblyComponentUsage_swigregister(RWStepRepr_RWQuantifiedAssemblyComponentUsage)

class RWStepRepr_RWReprItemAndLengthMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnit_swiginit(self, _RWStepRepr.new_RWStepRepr_RWReprItemAndLengthMeasureWithUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ReprItemAndLengthMeasureWithUnit
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ReprItemAndLengthMeasureWithUnit
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWReprItemAndLengthMeasureWithUnit
RWStepRepr_RWReprItemAndLengthMeasureWithUnit.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnit_ReadStep, None, RWStepRepr_RWReprItemAndLengthMeasureWithUnit)
RWStepRepr_RWReprItemAndLengthMeasureWithUnit.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnit_WriteStep, None, RWStepRepr_RWReprItemAndLengthMeasureWithUnit)
RWStepRepr_RWReprItemAndLengthMeasureWithUnit_swigregister = _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnit_swigregister
RWStepRepr_RWReprItemAndLengthMeasureWithUnit_swigregister(RWStepRepr_RWReprItemAndLengthMeasureWithUnit)

class RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_swiginit(self, _RWStepRepr.new_RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI
RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_ReadStep, None, RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI)
RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_WriteStep, None, RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI)
RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_swigregister = _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_swigregister
RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_swigregister(RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI)

class RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_swiginit(self, _RWStepRepr.new_RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ReprItemAndPlaneAngleMeasureWithUnit
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ReprItemAndPlaneAngleMeasureWithUnit
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_ReadStep, None, RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit)
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_WriteStep, None, RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit)
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_swigregister = _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_swigregister
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_swigregister(RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit)

class RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_swiginit(self, _RWStepRepr.new_RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_ReadStep, None, RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI)
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_WriteStep, None, RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI)
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_swigregister = _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_swigregister
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_swigregister(RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI)

class RWStepRepr_RWRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWRepresentation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_Representation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_Representation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_Representation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentation
RWStepRepr_RWRepresentation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentation_ReadStep, None, RWStepRepr_RWRepresentation)
RWStepRepr_RWRepresentation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentation_Share, None, RWStepRepr_RWRepresentation)
RWStepRepr_RWRepresentation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentation_WriteStep, None, RWStepRepr_RWRepresentation)
RWStepRepr_RWRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWRepresentation_swigregister
RWStepRepr_RWRepresentation_swigregister(RWStepRepr_RWRepresentation)

class RWStepRepr_RWRepresentationContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWRepresentationContext_swiginit(self, _RWStepRepr.new_RWStepRepr_RWRepresentationContext(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_RepresentationContext
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationContext_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_RepresentationContext
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationContext
RWStepRepr_RWRepresentationContext.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationContext_ReadStep, None, RWStepRepr_RWRepresentationContext)
RWStepRepr_RWRepresentationContext.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationContext_WriteStep, None, RWStepRepr_RWRepresentationContext)
RWStepRepr_RWRepresentationContext_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationContext_swigregister
RWStepRepr_RWRepresentationContext_swigregister(RWStepRepr_RWRepresentationContext)

class RWStepRepr_RWRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWRepresentationItem_swiginit(self, _RWStepRepr.new_RWStepRepr_RWRepresentationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_RepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_RepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationItem
RWStepRepr_RWRepresentationItem.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationItem_ReadStep, None, RWStepRepr_RWRepresentationItem)
RWStepRepr_RWRepresentationItem.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationItem_WriteStep, None, RWStepRepr_RWRepresentationItem)
RWStepRepr_RWRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationItem_swigregister
RWStepRepr_RWRepresentationItem_swigregister(RWStepRepr_RWRepresentationItem)

class RWStepRepr_RWRepresentationMap(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWRepresentationMap_swiginit(self, _RWStepRepr.new_RWStepRepr_RWRepresentationMap(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_RepresentationMap
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationMap_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_RepresentationMap
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationMap_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_RepresentationMap
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationMap_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationMap
RWStepRepr_RWRepresentationMap.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationMap_ReadStep, None, RWStepRepr_RWRepresentationMap)
RWStepRepr_RWRepresentationMap.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationMap_Share, None, RWStepRepr_RWRepresentationMap)
RWStepRepr_RWRepresentationMap.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationMap_WriteStep, None, RWStepRepr_RWRepresentationMap)
RWStepRepr_RWRepresentationMap_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationMap_swigregister
RWStepRepr_RWRepresentationMap_swigregister(RWStepRepr_RWRepresentationMap)

class RWStepRepr_RWRepresentationRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWRepresentationRelationship_swiginit(self, _RWStepRepr.new_RWStepRepr_RWRepresentationRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_RepresentationRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_RepresentationRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_RepresentationRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationRelationship
RWStepRepr_RWRepresentationRelationship.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationRelationship_ReadStep, None, RWStepRepr_RWRepresentationRelationship)
RWStepRepr_RWRepresentationRelationship.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationRelationship_Share, None, RWStepRepr_RWRepresentationRelationship)
RWStepRepr_RWRepresentationRelationship.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationRelationship_WriteStep, None, RWStepRepr_RWRepresentationRelationship)
RWStepRepr_RWRepresentationRelationship_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationRelationship_swigregister
RWStepRepr_RWRepresentationRelationship_swigregister(RWStepRepr_RWRepresentationRelationship)

class RWStepRepr_RWRepresentationRelationshipWithTransformation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWRepresentationRelationshipWithTransformation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_RepresentationRelationshipWithTransformation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_RepresentationRelationshipWithTransformation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_RepresentationRelationshipWithTransformation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationRelationshipWithTransformation
RWStepRepr_RWRepresentationRelationshipWithTransformation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_ReadStep, None, RWStepRepr_RWRepresentationRelationshipWithTransformation)
RWStepRepr_RWRepresentationRelationshipWithTransformation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_Share, None, RWStepRepr_RWRepresentationRelationshipWithTransformation)
RWStepRepr_RWRepresentationRelationshipWithTransformation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_WriteStep, None, RWStepRepr_RWRepresentationRelationshipWithTransformation)
RWStepRepr_RWRepresentationRelationshipWithTransformation_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_swigregister
RWStepRepr_RWRepresentationRelationshipWithTransformation_swigregister(RWStepRepr_RWRepresentationRelationshipWithTransformation)

class RWStepRepr_RWShapeAspect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWShapeAspect_swiginit(self, _RWStepRepr.new_RWStepRepr_RWShapeAspect(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_ShapeAspect
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ShapeAspect
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeAspect
RWStepRepr_RWShapeAspect.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspect_ReadStep, None, RWStepRepr_RWShapeAspect)
RWStepRepr_RWShapeAspect.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspect_Share, None, RWStepRepr_RWShapeAspect)
RWStepRepr_RWShapeAspect.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspect_WriteStep, None, RWStepRepr_RWShapeAspect)
RWStepRepr_RWShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWShapeAspect_swigregister
RWStepRepr_RWShapeAspect_swigregister(RWStepRepr_RWShapeAspect)

class RWStepRepr_RWShapeAspectDerivingRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_swiginit(self, _RWStepRepr.new_RWStepRepr_RWShapeAspectDerivingRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ShapeAspectDerivingRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ShapeAspectDerivingRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ShapeAspectDerivingRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ShapeAspectDerivingRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ShapeAspectDerivingRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeAspectDerivingRelationship
RWStepRepr_RWShapeAspectDerivingRelationship.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_ReadStep, None, RWStepRepr_RWShapeAspectDerivingRelationship)
RWStepRepr_RWShapeAspectDerivingRelationship.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_Share, None, RWStepRepr_RWShapeAspectDerivingRelationship)
RWStepRepr_RWShapeAspectDerivingRelationship.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_WriteStep, None, RWStepRepr_RWShapeAspectDerivingRelationship)
RWStepRepr_RWShapeAspectDerivingRelationship_swigregister = _RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_swigregister
RWStepRepr_RWShapeAspectDerivingRelationship_swigregister(RWStepRepr_RWShapeAspectDerivingRelationship)

class RWStepRepr_RWShapeAspectRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWShapeAspectRelationship_swiginit(self, _RWStepRepr.new_RWStepRepr_RWShapeAspectRelationship(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ShapeAspectRelationship
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ShapeAspectRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ShapeAspectRelationship
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ShapeAspectRelationship
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ShapeAspectRelationship
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeAspectRelationship
RWStepRepr_RWShapeAspectRelationship.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspectRelationship_ReadStep, None, RWStepRepr_RWShapeAspectRelationship)
RWStepRepr_RWShapeAspectRelationship.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspectRelationship_Share, None, RWStepRepr_RWShapeAspectRelationship)
RWStepRepr_RWShapeAspectRelationship.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspectRelationship_WriteStep, None, RWStepRepr_RWShapeAspectRelationship)
RWStepRepr_RWShapeAspectRelationship_swigregister = _RWStepRepr.RWStepRepr_RWShapeAspectRelationship_swigregister
RWStepRepr_RWShapeAspectRelationship_swigregister(RWStepRepr_RWShapeAspectRelationship)

class RWStepRepr_RWShapeAspectTransition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWShapeAspectTransition_swiginit(self, _RWStepRepr.new_RWStepRepr_RWShapeAspectTransition(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ShapeAspectTransition
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ShapeAspectTransition
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectTransition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_ShapeAspectTransition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectTransition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ShapeAspectTransition
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ShapeAspectTransition
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectTransition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeAspectTransition
RWStepRepr_RWShapeAspectTransition.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspectTransition_ReadStep, None, RWStepRepr_RWShapeAspectTransition)
RWStepRepr_RWShapeAspectTransition.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspectTransition_Share, None, RWStepRepr_RWShapeAspectTransition)
RWStepRepr_RWShapeAspectTransition.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeAspectTransition_WriteStep, None, RWStepRepr_RWShapeAspectTransition)
RWStepRepr_RWShapeAspectTransition_swigregister = _RWStepRepr.RWStepRepr_RWShapeAspectTransition_swigregister
RWStepRepr_RWShapeAspectTransition_swigregister(RWStepRepr_RWShapeAspectTransition)

class RWStepRepr_RWShapeRepresentationRelationshipWithTransformation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWShapeRepresentationRelationshipWithTransformation(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ShapeRepresentationRelationshipWithTransformation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        :param ent:
        	:type ent: StepRepr_ShapeRepresentationRelationshipWithTransformation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ShapeRepresentationRelationshipWithTransformation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeRepresentationRelationshipWithTransformation
RWStepRepr_RWShapeRepresentationRelationshipWithTransformation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_ReadStep, None, RWStepRepr_RWShapeRepresentationRelationshipWithTransformation)
RWStepRepr_RWShapeRepresentationRelationshipWithTransformation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_Share, None, RWStepRepr_RWShapeRepresentationRelationshipWithTransformation)
RWStepRepr_RWShapeRepresentationRelationshipWithTransformation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_WriteStep, None, RWStepRepr_RWShapeRepresentationRelationshipWithTransformation)
RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_swigregister = _RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_swigregister
RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_swigregister(RWStepRepr_RWShapeRepresentationRelationshipWithTransformation)

class RWStepRepr_RWSpecifiedHigherUsageOccurrence(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_swiginit(self, _RWStepRepr.new_RWStepRepr_RWSpecifiedHigherUsageOccurrence(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads SpecifiedHigherUsageOccurrence
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_SpecifiedHigherUsageOccurrence
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_SpecifiedHigherUsageOccurrence
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes SpecifiedHigherUsageOccurrence
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_SpecifiedHigherUsageOccurrence
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWSpecifiedHigherUsageOccurrence
RWStepRepr_RWSpecifiedHigherUsageOccurrence.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_ReadStep, None, RWStepRepr_RWSpecifiedHigherUsageOccurrence)
RWStepRepr_RWSpecifiedHigherUsageOccurrence.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_Share, None, RWStepRepr_RWSpecifiedHigherUsageOccurrence)
RWStepRepr_RWSpecifiedHigherUsageOccurrence.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_WriteStep, None, RWStepRepr_RWSpecifiedHigherUsageOccurrence)
RWStepRepr_RWSpecifiedHigherUsageOccurrence_swigregister = _RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_swigregister
RWStepRepr_RWSpecifiedHigherUsageOccurrence_swigregister(RWStepRepr_RWSpecifiedHigherUsageOccurrence)

class RWStepRepr_RWStructuralResponseProperty(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWStructuralResponseProperty_swiginit(self, _RWStepRepr.new_RWStepRepr_RWStructuralResponseProperty(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads StructuralResponseProperty
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_StructuralResponseProperty
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponseProperty_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_StructuralResponseProperty
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponseProperty_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes StructuralResponseProperty
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_StructuralResponseProperty
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponseProperty_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWStructuralResponseProperty
RWStepRepr_RWStructuralResponseProperty.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWStructuralResponseProperty_ReadStep, None, RWStepRepr_RWStructuralResponseProperty)
RWStepRepr_RWStructuralResponseProperty.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWStructuralResponseProperty_Share, None, RWStepRepr_RWStructuralResponseProperty)
RWStepRepr_RWStructuralResponseProperty.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWStructuralResponseProperty_WriteStep, None, RWStepRepr_RWStructuralResponseProperty)
RWStepRepr_RWStructuralResponseProperty_swigregister = _RWStepRepr.RWStepRepr_RWStructuralResponseProperty_swigregister
RWStepRepr_RWStructuralResponseProperty_swigregister(RWStepRepr_RWStructuralResponseProperty)

class RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_swiginit(self, _RWStepRepr.new_RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads StructuralResponsePropertyDefinitionRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_StructuralResponsePropertyDefinitionRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_StructuralResponsePropertyDefinitionRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes StructuralResponsePropertyDefinitionRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_StructuralResponsePropertyDefinitionRepresentation
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation
RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_ReadStep, None, RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation)
RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_Share, None, RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation)
RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_WriteStep, None, RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation)
RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_swigregister
RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_swigregister(RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation)

class RWStepRepr_RWTangent(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepRepr.RWStepRepr_RWTangent_swiginit(self, _RWStepRepr.new_RWStepRepr_RWTangent(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Tangent
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_Tangent
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWTangent_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepRepr_Tangent
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWTangent_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Tangent
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_Tangent
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWTangent_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWTangent
RWStepRepr_RWTangent.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWTangent_ReadStep, None, RWStepRepr_RWTangent)
RWStepRepr_RWTangent.Share = new_instancemethod(_RWStepRepr.RWStepRepr_RWTangent_Share, None, RWStepRepr_RWTangent)
RWStepRepr_RWTangent.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWTangent_WriteStep, None, RWStepRepr_RWTangent)
RWStepRepr_RWTangent_swigregister = _RWStepRepr.RWStepRepr_RWTangent_swigregister
RWStepRepr_RWTangent_swigregister(RWStepRepr_RWTangent)

class RWStepRepr_RWValueRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _RWStepRepr.RWStepRepr_RWValueRepresentationItem_swiginit(self, _RWStepRepr.new_RWStepRepr_RWValueRepresentationItem(*args))

    def ReadStep(self, *args) -> "void":
        """
        :param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepRepr_ValueRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWValueRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        :param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepRepr_ValueRepresentationItem
        	:rtype: None
        """
        return _RWStepRepr.RWStepRepr_RWValueRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWValueRepresentationItem
RWStepRepr_RWValueRepresentationItem.ReadStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWValueRepresentationItem_ReadStep, None, RWStepRepr_RWValueRepresentationItem)
RWStepRepr_RWValueRepresentationItem.WriteStep = new_instancemethod(_RWStepRepr.RWStepRepr_RWValueRepresentationItem_WriteStep, None, RWStepRepr_RWValueRepresentationItem)
RWStepRepr_RWValueRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWValueRepresentationItem_swigregister
RWStepRepr_RWValueRepresentationItem_swigregister(RWStepRepr_RWValueRepresentationItem)



