# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepBasic module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepbasic.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StepBasic.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StepBasic')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StepBasic')
    _StepBasic = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepBasic', [dirname(__file__)])
        except ImportError:
            import _StepBasic
            return _StepBasic
        try:
            _mod = imp.load_module('_StepBasic', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _StepBasic = swig_import_helper()
    del swig_import_helper
else:
    import _StepBasic
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepBasic.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_StepBasic.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_StepBasic.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_StepBasic.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_StepBasic.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_StepBasic.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_StepBasic.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_StepBasic.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_StepBasic.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_StepBasic.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_StepBasic.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_StepBasic.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_StepBasic.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_StepBasic.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_StepBasic.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_StepBasic.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_StepBasic.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _StepBasic.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _StepBasic.process_exception(error, method_name, class_name)
process_exception = _StepBasic.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
StepBasic_sMade = _StepBasic.StepBasic_sMade
StepBasic_sBought = _StepBasic.StepBasic_sBought
StepBasic_sNotKnown = _StepBasic.StepBasic_sNotKnown
StepBasic_aobAhead = _StepBasic.StepBasic_aobAhead
StepBasic_aobExact = _StepBasic.StepBasic_aobExact
StepBasic_aobBehind = _StepBasic.StepBasic_aobBehind
StepBasic_sunMetre = _StepBasic.StepBasic_sunMetre
StepBasic_sunGram = _StepBasic.StepBasic_sunGram
StepBasic_sunSecond = _StepBasic.StepBasic_sunSecond
StepBasic_sunAmpere = _StepBasic.StepBasic_sunAmpere
StepBasic_sunKelvin = _StepBasic.StepBasic_sunKelvin
StepBasic_sunMole = _StepBasic.StepBasic_sunMole
StepBasic_sunCandela = _StepBasic.StepBasic_sunCandela
StepBasic_sunRadian = _StepBasic.StepBasic_sunRadian
StepBasic_sunSteradian = _StepBasic.StepBasic_sunSteradian
StepBasic_sunHertz = _StepBasic.StepBasic_sunHertz
StepBasic_sunNewton = _StepBasic.StepBasic_sunNewton
StepBasic_sunPascal = _StepBasic.StepBasic_sunPascal
StepBasic_sunJoule = _StepBasic.StepBasic_sunJoule
StepBasic_sunWatt = _StepBasic.StepBasic_sunWatt
StepBasic_sunCoulomb = _StepBasic.StepBasic_sunCoulomb
StepBasic_sunVolt = _StepBasic.StepBasic_sunVolt
StepBasic_sunFarad = _StepBasic.StepBasic_sunFarad
StepBasic_sunOhm = _StepBasic.StepBasic_sunOhm
StepBasic_sunSiemens = _StepBasic.StepBasic_sunSiemens
StepBasic_sunWeber = _StepBasic.StepBasic_sunWeber
StepBasic_sunTesla = _StepBasic.StepBasic_sunTesla
StepBasic_sunHenry = _StepBasic.StepBasic_sunHenry
StepBasic_sunDegreeCelsius = _StepBasic.StepBasic_sunDegreeCelsius
StepBasic_sunLumen = _StepBasic.StepBasic_sunLumen
StepBasic_sunLux = _StepBasic.StepBasic_sunLux
StepBasic_sunBecquerel = _StepBasic.StepBasic_sunBecquerel
StepBasic_sunGray = _StepBasic.StepBasic_sunGray
StepBasic_sunSievert = _StepBasic.StepBasic_sunSievert
StepBasic_spExa = _StepBasic.StepBasic_spExa
StepBasic_spPeta = _StepBasic.StepBasic_spPeta
StepBasic_spTera = _StepBasic.StepBasic_spTera
StepBasic_spGiga = _StepBasic.StepBasic_spGiga
StepBasic_spMega = _StepBasic.StepBasic_spMega
StepBasic_spKilo = _StepBasic.StepBasic_spKilo
StepBasic_spHecto = _StepBasic.StepBasic_spHecto
StepBasic_spDeca = _StepBasic.StepBasic_spDeca
StepBasic_spDeci = _StepBasic.StepBasic_spDeci
StepBasic_spCenti = _StepBasic.StepBasic_spCenti
StepBasic_spMilli = _StepBasic.StepBasic_spMilli
StepBasic_spMicro = _StepBasic.StepBasic_spMicro
StepBasic_spNano = _StepBasic.StepBasic_spNano
StepBasic_spPico = _StepBasic.StepBasic_spPico
StepBasic_spFemto = _StepBasic.StepBasic_spFemto
StepBasic_spAtto = _StepBasic.StepBasic_spAtto

def Handle_StepBasic_Action_Create() -> "opencascade::handle< StepBasic_Action >":
    return _StepBasic.Handle_StepBasic_Action_Create()
Handle_StepBasic_Action_Create = _StepBasic.Handle_StepBasic_Action_Create

def Handle_StepBasic_Action_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Action >":
    return _StepBasic.Handle_StepBasic_Action_DownCast(t)
Handle_StepBasic_Action_DownCast = _StepBasic.Handle_StepBasic_Action_DownCast

def Handle_StepBasic_Action_IsNull(t: 'opencascade::handle< StepBasic_Action > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Action_IsNull(t)
Handle_StepBasic_Action_IsNull = _StepBasic.Handle_StepBasic_Action_IsNull

def Handle_StepBasic_ActionAssignment_Create() -> "opencascade::handle< StepBasic_ActionAssignment >":
    return _StepBasic.Handle_StepBasic_ActionAssignment_Create()
Handle_StepBasic_ActionAssignment_Create = _StepBasic.Handle_StepBasic_ActionAssignment_Create

def Handle_StepBasic_ActionAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ActionAssignment >":
    return _StepBasic.Handle_StepBasic_ActionAssignment_DownCast(t)
Handle_StepBasic_ActionAssignment_DownCast = _StepBasic.Handle_StepBasic_ActionAssignment_DownCast

def Handle_StepBasic_ActionAssignment_IsNull(t: 'opencascade::handle< StepBasic_ActionAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ActionAssignment_IsNull(t)
Handle_StepBasic_ActionAssignment_IsNull = _StepBasic.Handle_StepBasic_ActionAssignment_IsNull

def Handle_StepBasic_ActionMethod_Create() -> "opencascade::handle< StepBasic_ActionMethod >":
    return _StepBasic.Handle_StepBasic_ActionMethod_Create()
Handle_StepBasic_ActionMethod_Create = _StepBasic.Handle_StepBasic_ActionMethod_Create

def Handle_StepBasic_ActionMethod_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ActionMethod >":
    return _StepBasic.Handle_StepBasic_ActionMethod_DownCast(t)
Handle_StepBasic_ActionMethod_DownCast = _StepBasic.Handle_StepBasic_ActionMethod_DownCast

def Handle_StepBasic_ActionMethod_IsNull(t: 'opencascade::handle< StepBasic_ActionMethod > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ActionMethod_IsNull(t)
Handle_StepBasic_ActionMethod_IsNull = _StepBasic.Handle_StepBasic_ActionMethod_IsNull

def Handle_StepBasic_ActionRequestAssignment_Create() -> "opencascade::handle< StepBasic_ActionRequestAssignment >":
    return _StepBasic.Handle_StepBasic_ActionRequestAssignment_Create()
Handle_StepBasic_ActionRequestAssignment_Create = _StepBasic.Handle_StepBasic_ActionRequestAssignment_Create

def Handle_StepBasic_ActionRequestAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ActionRequestAssignment >":
    return _StepBasic.Handle_StepBasic_ActionRequestAssignment_DownCast(t)
Handle_StepBasic_ActionRequestAssignment_DownCast = _StepBasic.Handle_StepBasic_ActionRequestAssignment_DownCast

def Handle_StepBasic_ActionRequestAssignment_IsNull(t: 'opencascade::handle< StepBasic_ActionRequestAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ActionRequestAssignment_IsNull(t)
Handle_StepBasic_ActionRequestAssignment_IsNull = _StepBasic.Handle_StepBasic_ActionRequestAssignment_IsNull

def Handle_StepBasic_ActionRequestSolution_Create() -> "opencascade::handle< StepBasic_ActionRequestSolution >":
    return _StepBasic.Handle_StepBasic_ActionRequestSolution_Create()
Handle_StepBasic_ActionRequestSolution_Create = _StepBasic.Handle_StepBasic_ActionRequestSolution_Create

def Handle_StepBasic_ActionRequestSolution_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ActionRequestSolution >":
    return _StepBasic.Handle_StepBasic_ActionRequestSolution_DownCast(t)
Handle_StepBasic_ActionRequestSolution_DownCast = _StepBasic.Handle_StepBasic_ActionRequestSolution_DownCast

def Handle_StepBasic_ActionRequestSolution_IsNull(t: 'opencascade::handle< StepBasic_ActionRequestSolution > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ActionRequestSolution_IsNull(t)
Handle_StepBasic_ActionRequestSolution_IsNull = _StepBasic.Handle_StepBasic_ActionRequestSolution_IsNull

def Handle_StepBasic_Address_Create() -> "opencascade::handle< StepBasic_Address >":
    return _StepBasic.Handle_StepBasic_Address_Create()
Handle_StepBasic_Address_Create = _StepBasic.Handle_StepBasic_Address_Create

def Handle_StepBasic_Address_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Address >":
    return _StepBasic.Handle_StepBasic_Address_DownCast(t)
Handle_StepBasic_Address_DownCast = _StepBasic.Handle_StepBasic_Address_DownCast

def Handle_StepBasic_Address_IsNull(t: 'opencascade::handle< StepBasic_Address > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Address_IsNull(t)
Handle_StepBasic_Address_IsNull = _StepBasic.Handle_StepBasic_Address_IsNull

def Handle_StepBasic_ApplicationContext_Create() -> "opencascade::handle< StepBasic_ApplicationContext >":
    return _StepBasic.Handle_StepBasic_ApplicationContext_Create()
Handle_StepBasic_ApplicationContext_Create = _StepBasic.Handle_StepBasic_ApplicationContext_Create

def Handle_StepBasic_ApplicationContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ApplicationContext >":
    return _StepBasic.Handle_StepBasic_ApplicationContext_DownCast(t)
Handle_StepBasic_ApplicationContext_DownCast = _StepBasic.Handle_StepBasic_ApplicationContext_DownCast

def Handle_StepBasic_ApplicationContext_IsNull(t: 'opencascade::handle< StepBasic_ApplicationContext > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ApplicationContext_IsNull(t)
Handle_StepBasic_ApplicationContext_IsNull = _StepBasic.Handle_StepBasic_ApplicationContext_IsNull

def Handle_StepBasic_ApplicationContextElement_Create() -> "opencascade::handle< StepBasic_ApplicationContextElement >":
    return _StepBasic.Handle_StepBasic_ApplicationContextElement_Create()
Handle_StepBasic_ApplicationContextElement_Create = _StepBasic.Handle_StepBasic_ApplicationContextElement_Create

def Handle_StepBasic_ApplicationContextElement_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ApplicationContextElement >":
    return _StepBasic.Handle_StepBasic_ApplicationContextElement_DownCast(t)
Handle_StepBasic_ApplicationContextElement_DownCast = _StepBasic.Handle_StepBasic_ApplicationContextElement_DownCast

def Handle_StepBasic_ApplicationContextElement_IsNull(t: 'opencascade::handle< StepBasic_ApplicationContextElement > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ApplicationContextElement_IsNull(t)
Handle_StepBasic_ApplicationContextElement_IsNull = _StepBasic.Handle_StepBasic_ApplicationContextElement_IsNull

def Handle_StepBasic_ApplicationProtocolDefinition_Create() -> "opencascade::handle< StepBasic_ApplicationProtocolDefinition >":
    return _StepBasic.Handle_StepBasic_ApplicationProtocolDefinition_Create()
Handle_StepBasic_ApplicationProtocolDefinition_Create = _StepBasic.Handle_StepBasic_ApplicationProtocolDefinition_Create

def Handle_StepBasic_ApplicationProtocolDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ApplicationProtocolDefinition >":
    return _StepBasic.Handle_StepBasic_ApplicationProtocolDefinition_DownCast(t)
Handle_StepBasic_ApplicationProtocolDefinition_DownCast = _StepBasic.Handle_StepBasic_ApplicationProtocolDefinition_DownCast

def Handle_StepBasic_ApplicationProtocolDefinition_IsNull(t: 'opencascade::handle< StepBasic_ApplicationProtocolDefinition > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ApplicationProtocolDefinition_IsNull(t)
Handle_StepBasic_ApplicationProtocolDefinition_IsNull = _StepBasic.Handle_StepBasic_ApplicationProtocolDefinition_IsNull

def Handle_StepBasic_Approval_Create() -> "opencascade::handle< StepBasic_Approval >":
    return _StepBasic.Handle_StepBasic_Approval_Create()
Handle_StepBasic_Approval_Create = _StepBasic.Handle_StepBasic_Approval_Create

def Handle_StepBasic_Approval_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Approval >":
    return _StepBasic.Handle_StepBasic_Approval_DownCast(t)
Handle_StepBasic_Approval_DownCast = _StepBasic.Handle_StepBasic_Approval_DownCast

def Handle_StepBasic_Approval_IsNull(t: 'opencascade::handle< StepBasic_Approval > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Approval_IsNull(t)
Handle_StepBasic_Approval_IsNull = _StepBasic.Handle_StepBasic_Approval_IsNull

def Handle_StepBasic_ApprovalAssignment_Create() -> "opencascade::handle< StepBasic_ApprovalAssignment >":
    return _StepBasic.Handle_StepBasic_ApprovalAssignment_Create()
Handle_StepBasic_ApprovalAssignment_Create = _StepBasic.Handle_StepBasic_ApprovalAssignment_Create

def Handle_StepBasic_ApprovalAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ApprovalAssignment >":
    return _StepBasic.Handle_StepBasic_ApprovalAssignment_DownCast(t)
Handle_StepBasic_ApprovalAssignment_DownCast = _StepBasic.Handle_StepBasic_ApprovalAssignment_DownCast

def Handle_StepBasic_ApprovalAssignment_IsNull(t: 'opencascade::handle< StepBasic_ApprovalAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ApprovalAssignment_IsNull(t)
Handle_StepBasic_ApprovalAssignment_IsNull = _StepBasic.Handle_StepBasic_ApprovalAssignment_IsNull

def Handle_StepBasic_ApprovalDateTime_Create() -> "opencascade::handle< StepBasic_ApprovalDateTime >":
    return _StepBasic.Handle_StepBasic_ApprovalDateTime_Create()
Handle_StepBasic_ApprovalDateTime_Create = _StepBasic.Handle_StepBasic_ApprovalDateTime_Create

def Handle_StepBasic_ApprovalDateTime_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ApprovalDateTime >":
    return _StepBasic.Handle_StepBasic_ApprovalDateTime_DownCast(t)
Handle_StepBasic_ApprovalDateTime_DownCast = _StepBasic.Handle_StepBasic_ApprovalDateTime_DownCast

def Handle_StepBasic_ApprovalDateTime_IsNull(t: 'opencascade::handle< StepBasic_ApprovalDateTime > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ApprovalDateTime_IsNull(t)
Handle_StepBasic_ApprovalDateTime_IsNull = _StepBasic.Handle_StepBasic_ApprovalDateTime_IsNull

def Handle_StepBasic_ApprovalPersonOrganization_Create() -> "opencascade::handle< StepBasic_ApprovalPersonOrganization >":
    return _StepBasic.Handle_StepBasic_ApprovalPersonOrganization_Create()
Handle_StepBasic_ApprovalPersonOrganization_Create = _StepBasic.Handle_StepBasic_ApprovalPersonOrganization_Create

def Handle_StepBasic_ApprovalPersonOrganization_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ApprovalPersonOrganization >":
    return _StepBasic.Handle_StepBasic_ApprovalPersonOrganization_DownCast(t)
Handle_StepBasic_ApprovalPersonOrganization_DownCast = _StepBasic.Handle_StepBasic_ApprovalPersonOrganization_DownCast

def Handle_StepBasic_ApprovalPersonOrganization_IsNull(t: 'opencascade::handle< StepBasic_ApprovalPersonOrganization > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ApprovalPersonOrganization_IsNull(t)
Handle_StepBasic_ApprovalPersonOrganization_IsNull = _StepBasic.Handle_StepBasic_ApprovalPersonOrganization_IsNull

def Handle_StepBasic_ApprovalRelationship_Create() -> "opencascade::handle< StepBasic_ApprovalRelationship >":
    return _StepBasic.Handle_StepBasic_ApprovalRelationship_Create()
Handle_StepBasic_ApprovalRelationship_Create = _StepBasic.Handle_StepBasic_ApprovalRelationship_Create

def Handle_StepBasic_ApprovalRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ApprovalRelationship >":
    return _StepBasic.Handle_StepBasic_ApprovalRelationship_DownCast(t)
Handle_StepBasic_ApprovalRelationship_DownCast = _StepBasic.Handle_StepBasic_ApprovalRelationship_DownCast

def Handle_StepBasic_ApprovalRelationship_IsNull(t: 'opencascade::handle< StepBasic_ApprovalRelationship > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ApprovalRelationship_IsNull(t)
Handle_StepBasic_ApprovalRelationship_IsNull = _StepBasic.Handle_StepBasic_ApprovalRelationship_IsNull

def Handle_StepBasic_ApprovalRole_Create() -> "opencascade::handle< StepBasic_ApprovalRole >":
    return _StepBasic.Handle_StepBasic_ApprovalRole_Create()
Handle_StepBasic_ApprovalRole_Create = _StepBasic.Handle_StepBasic_ApprovalRole_Create

def Handle_StepBasic_ApprovalRole_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ApprovalRole >":
    return _StepBasic.Handle_StepBasic_ApprovalRole_DownCast(t)
Handle_StepBasic_ApprovalRole_DownCast = _StepBasic.Handle_StepBasic_ApprovalRole_DownCast

def Handle_StepBasic_ApprovalRole_IsNull(t: 'opencascade::handle< StepBasic_ApprovalRole > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ApprovalRole_IsNull(t)
Handle_StepBasic_ApprovalRole_IsNull = _StepBasic.Handle_StepBasic_ApprovalRole_IsNull

def Handle_StepBasic_ApprovalStatus_Create() -> "opencascade::handle< StepBasic_ApprovalStatus >":
    return _StepBasic.Handle_StepBasic_ApprovalStatus_Create()
Handle_StepBasic_ApprovalStatus_Create = _StepBasic.Handle_StepBasic_ApprovalStatus_Create

def Handle_StepBasic_ApprovalStatus_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ApprovalStatus >":
    return _StepBasic.Handle_StepBasic_ApprovalStatus_DownCast(t)
Handle_StepBasic_ApprovalStatus_DownCast = _StepBasic.Handle_StepBasic_ApprovalStatus_DownCast

def Handle_StepBasic_ApprovalStatus_IsNull(t: 'opencascade::handle< StepBasic_ApprovalStatus > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ApprovalStatus_IsNull(t)
Handle_StepBasic_ApprovalStatus_IsNull = _StepBasic.Handle_StepBasic_ApprovalStatus_IsNull

def Handle_StepBasic_Certification_Create() -> "opencascade::handle< StepBasic_Certification >":
    return _StepBasic.Handle_StepBasic_Certification_Create()
Handle_StepBasic_Certification_Create = _StepBasic.Handle_StepBasic_Certification_Create

def Handle_StepBasic_Certification_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Certification >":
    return _StepBasic.Handle_StepBasic_Certification_DownCast(t)
Handle_StepBasic_Certification_DownCast = _StepBasic.Handle_StepBasic_Certification_DownCast

def Handle_StepBasic_Certification_IsNull(t: 'opencascade::handle< StepBasic_Certification > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Certification_IsNull(t)
Handle_StepBasic_Certification_IsNull = _StepBasic.Handle_StepBasic_Certification_IsNull

def Handle_StepBasic_CertificationAssignment_Create() -> "opencascade::handle< StepBasic_CertificationAssignment >":
    return _StepBasic.Handle_StepBasic_CertificationAssignment_Create()
Handle_StepBasic_CertificationAssignment_Create = _StepBasic.Handle_StepBasic_CertificationAssignment_Create

def Handle_StepBasic_CertificationAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_CertificationAssignment >":
    return _StepBasic.Handle_StepBasic_CertificationAssignment_DownCast(t)
Handle_StepBasic_CertificationAssignment_DownCast = _StepBasic.Handle_StepBasic_CertificationAssignment_DownCast

def Handle_StepBasic_CertificationAssignment_IsNull(t: 'opencascade::handle< StepBasic_CertificationAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_CertificationAssignment_IsNull(t)
Handle_StepBasic_CertificationAssignment_IsNull = _StepBasic.Handle_StepBasic_CertificationAssignment_IsNull

def Handle_StepBasic_CertificationType_Create() -> "opencascade::handle< StepBasic_CertificationType >":
    return _StepBasic.Handle_StepBasic_CertificationType_Create()
Handle_StepBasic_CertificationType_Create = _StepBasic.Handle_StepBasic_CertificationType_Create

def Handle_StepBasic_CertificationType_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_CertificationType >":
    return _StepBasic.Handle_StepBasic_CertificationType_DownCast(t)
Handle_StepBasic_CertificationType_DownCast = _StepBasic.Handle_StepBasic_CertificationType_DownCast

def Handle_StepBasic_CertificationType_IsNull(t: 'opencascade::handle< StepBasic_CertificationType > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_CertificationType_IsNull(t)
Handle_StepBasic_CertificationType_IsNull = _StepBasic.Handle_StepBasic_CertificationType_IsNull

def Handle_StepBasic_CharacterizedObject_Create() -> "opencascade::handle< StepBasic_CharacterizedObject >":
    return _StepBasic.Handle_StepBasic_CharacterizedObject_Create()
Handle_StepBasic_CharacterizedObject_Create = _StepBasic.Handle_StepBasic_CharacterizedObject_Create

def Handle_StepBasic_CharacterizedObject_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_CharacterizedObject >":
    return _StepBasic.Handle_StepBasic_CharacterizedObject_DownCast(t)
Handle_StepBasic_CharacterizedObject_DownCast = _StepBasic.Handle_StepBasic_CharacterizedObject_DownCast

def Handle_StepBasic_CharacterizedObject_IsNull(t: 'opencascade::handle< StepBasic_CharacterizedObject > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_CharacterizedObject_IsNull(t)
Handle_StepBasic_CharacterizedObject_IsNull = _StepBasic.Handle_StepBasic_CharacterizedObject_IsNull

def Handle_StepBasic_Contract_Create() -> "opencascade::handle< StepBasic_Contract >":
    return _StepBasic.Handle_StepBasic_Contract_Create()
Handle_StepBasic_Contract_Create = _StepBasic.Handle_StepBasic_Contract_Create

def Handle_StepBasic_Contract_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Contract >":
    return _StepBasic.Handle_StepBasic_Contract_DownCast(t)
Handle_StepBasic_Contract_DownCast = _StepBasic.Handle_StepBasic_Contract_DownCast

def Handle_StepBasic_Contract_IsNull(t: 'opencascade::handle< StepBasic_Contract > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Contract_IsNull(t)
Handle_StepBasic_Contract_IsNull = _StepBasic.Handle_StepBasic_Contract_IsNull

def Handle_StepBasic_ContractAssignment_Create() -> "opencascade::handle< StepBasic_ContractAssignment >":
    return _StepBasic.Handle_StepBasic_ContractAssignment_Create()
Handle_StepBasic_ContractAssignment_Create = _StepBasic.Handle_StepBasic_ContractAssignment_Create

def Handle_StepBasic_ContractAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ContractAssignment >":
    return _StepBasic.Handle_StepBasic_ContractAssignment_DownCast(t)
Handle_StepBasic_ContractAssignment_DownCast = _StepBasic.Handle_StepBasic_ContractAssignment_DownCast

def Handle_StepBasic_ContractAssignment_IsNull(t: 'opencascade::handle< StepBasic_ContractAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ContractAssignment_IsNull(t)
Handle_StepBasic_ContractAssignment_IsNull = _StepBasic.Handle_StepBasic_ContractAssignment_IsNull

def Handle_StepBasic_ContractType_Create() -> "opencascade::handle< StepBasic_ContractType >":
    return _StepBasic.Handle_StepBasic_ContractType_Create()
Handle_StepBasic_ContractType_Create = _StepBasic.Handle_StepBasic_ContractType_Create

def Handle_StepBasic_ContractType_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ContractType >":
    return _StepBasic.Handle_StepBasic_ContractType_DownCast(t)
Handle_StepBasic_ContractType_DownCast = _StepBasic.Handle_StepBasic_ContractType_DownCast

def Handle_StepBasic_ContractType_IsNull(t: 'opencascade::handle< StepBasic_ContractType > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ContractType_IsNull(t)
Handle_StepBasic_ContractType_IsNull = _StepBasic.Handle_StepBasic_ContractType_IsNull

def Handle_StepBasic_CoordinatedUniversalTimeOffset_Create() -> "opencascade::handle< StepBasic_CoordinatedUniversalTimeOffset >":
    return _StepBasic.Handle_StepBasic_CoordinatedUniversalTimeOffset_Create()
Handle_StepBasic_CoordinatedUniversalTimeOffset_Create = _StepBasic.Handle_StepBasic_CoordinatedUniversalTimeOffset_Create

def Handle_StepBasic_CoordinatedUniversalTimeOffset_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_CoordinatedUniversalTimeOffset >":
    return _StepBasic.Handle_StepBasic_CoordinatedUniversalTimeOffset_DownCast(t)
Handle_StepBasic_CoordinatedUniversalTimeOffset_DownCast = _StepBasic.Handle_StepBasic_CoordinatedUniversalTimeOffset_DownCast

def Handle_StepBasic_CoordinatedUniversalTimeOffset_IsNull(t: 'opencascade::handle< StepBasic_CoordinatedUniversalTimeOffset > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_CoordinatedUniversalTimeOffset_IsNull(t)
Handle_StepBasic_CoordinatedUniversalTimeOffset_IsNull = _StepBasic.Handle_StepBasic_CoordinatedUniversalTimeOffset_IsNull

def Handle_StepBasic_Date_Create() -> "opencascade::handle< StepBasic_Date >":
    return _StepBasic.Handle_StepBasic_Date_Create()
Handle_StepBasic_Date_Create = _StepBasic.Handle_StepBasic_Date_Create

def Handle_StepBasic_Date_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Date >":
    return _StepBasic.Handle_StepBasic_Date_DownCast(t)
Handle_StepBasic_Date_DownCast = _StepBasic.Handle_StepBasic_Date_DownCast

def Handle_StepBasic_Date_IsNull(t: 'opencascade::handle< StepBasic_Date > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Date_IsNull(t)
Handle_StepBasic_Date_IsNull = _StepBasic.Handle_StepBasic_Date_IsNull

def Handle_StepBasic_DateAndTime_Create() -> "opencascade::handle< StepBasic_DateAndTime >":
    return _StepBasic.Handle_StepBasic_DateAndTime_Create()
Handle_StepBasic_DateAndTime_Create = _StepBasic.Handle_StepBasic_DateAndTime_Create

def Handle_StepBasic_DateAndTime_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DateAndTime >":
    return _StepBasic.Handle_StepBasic_DateAndTime_DownCast(t)
Handle_StepBasic_DateAndTime_DownCast = _StepBasic.Handle_StepBasic_DateAndTime_DownCast

def Handle_StepBasic_DateAndTime_IsNull(t: 'opencascade::handle< StepBasic_DateAndTime > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DateAndTime_IsNull(t)
Handle_StepBasic_DateAndTime_IsNull = _StepBasic.Handle_StepBasic_DateAndTime_IsNull

def Handle_StepBasic_DateAndTimeAssignment_Create() -> "opencascade::handle< StepBasic_DateAndTimeAssignment >":
    return _StepBasic.Handle_StepBasic_DateAndTimeAssignment_Create()
Handle_StepBasic_DateAndTimeAssignment_Create = _StepBasic.Handle_StepBasic_DateAndTimeAssignment_Create

def Handle_StepBasic_DateAndTimeAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DateAndTimeAssignment >":
    return _StepBasic.Handle_StepBasic_DateAndTimeAssignment_DownCast(t)
Handle_StepBasic_DateAndTimeAssignment_DownCast = _StepBasic.Handle_StepBasic_DateAndTimeAssignment_DownCast

def Handle_StepBasic_DateAndTimeAssignment_IsNull(t: 'opencascade::handle< StepBasic_DateAndTimeAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DateAndTimeAssignment_IsNull(t)
Handle_StepBasic_DateAndTimeAssignment_IsNull = _StepBasic.Handle_StepBasic_DateAndTimeAssignment_IsNull

def Handle_StepBasic_DateAssignment_Create() -> "opencascade::handle< StepBasic_DateAssignment >":
    return _StepBasic.Handle_StepBasic_DateAssignment_Create()
Handle_StepBasic_DateAssignment_Create = _StepBasic.Handle_StepBasic_DateAssignment_Create

def Handle_StepBasic_DateAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DateAssignment >":
    return _StepBasic.Handle_StepBasic_DateAssignment_DownCast(t)
Handle_StepBasic_DateAssignment_DownCast = _StepBasic.Handle_StepBasic_DateAssignment_DownCast

def Handle_StepBasic_DateAssignment_IsNull(t: 'opencascade::handle< StepBasic_DateAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DateAssignment_IsNull(t)
Handle_StepBasic_DateAssignment_IsNull = _StepBasic.Handle_StepBasic_DateAssignment_IsNull

def Handle_StepBasic_DateRole_Create() -> "opencascade::handle< StepBasic_DateRole >":
    return _StepBasic.Handle_StepBasic_DateRole_Create()
Handle_StepBasic_DateRole_Create = _StepBasic.Handle_StepBasic_DateRole_Create

def Handle_StepBasic_DateRole_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DateRole >":
    return _StepBasic.Handle_StepBasic_DateRole_DownCast(t)
Handle_StepBasic_DateRole_DownCast = _StepBasic.Handle_StepBasic_DateRole_DownCast

def Handle_StepBasic_DateRole_IsNull(t: 'opencascade::handle< StepBasic_DateRole > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DateRole_IsNull(t)
Handle_StepBasic_DateRole_IsNull = _StepBasic.Handle_StepBasic_DateRole_IsNull

def Handle_StepBasic_DateTimeRole_Create() -> "opencascade::handle< StepBasic_DateTimeRole >":
    return _StepBasic.Handle_StepBasic_DateTimeRole_Create()
Handle_StepBasic_DateTimeRole_Create = _StepBasic.Handle_StepBasic_DateTimeRole_Create

def Handle_StepBasic_DateTimeRole_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DateTimeRole >":
    return _StepBasic.Handle_StepBasic_DateTimeRole_DownCast(t)
Handle_StepBasic_DateTimeRole_DownCast = _StepBasic.Handle_StepBasic_DateTimeRole_DownCast

def Handle_StepBasic_DateTimeRole_IsNull(t: 'opencascade::handle< StepBasic_DateTimeRole > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DateTimeRole_IsNull(t)
Handle_StepBasic_DateTimeRole_IsNull = _StepBasic.Handle_StepBasic_DateTimeRole_IsNull

def Handle_StepBasic_DerivedUnit_Create() -> "opencascade::handle< StepBasic_DerivedUnit >":
    return _StepBasic.Handle_StepBasic_DerivedUnit_Create()
Handle_StepBasic_DerivedUnit_Create = _StepBasic.Handle_StepBasic_DerivedUnit_Create

def Handle_StepBasic_DerivedUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DerivedUnit >":
    return _StepBasic.Handle_StepBasic_DerivedUnit_DownCast(t)
Handle_StepBasic_DerivedUnit_DownCast = _StepBasic.Handle_StepBasic_DerivedUnit_DownCast

def Handle_StepBasic_DerivedUnit_IsNull(t: 'opencascade::handle< StepBasic_DerivedUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DerivedUnit_IsNull(t)
Handle_StepBasic_DerivedUnit_IsNull = _StepBasic.Handle_StepBasic_DerivedUnit_IsNull

def Handle_StepBasic_DerivedUnitElement_Create() -> "opencascade::handle< StepBasic_DerivedUnitElement >":
    return _StepBasic.Handle_StepBasic_DerivedUnitElement_Create()
Handle_StepBasic_DerivedUnitElement_Create = _StepBasic.Handle_StepBasic_DerivedUnitElement_Create

def Handle_StepBasic_DerivedUnitElement_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DerivedUnitElement >":
    return _StepBasic.Handle_StepBasic_DerivedUnitElement_DownCast(t)
Handle_StepBasic_DerivedUnitElement_DownCast = _StepBasic.Handle_StepBasic_DerivedUnitElement_DownCast

def Handle_StepBasic_DerivedUnitElement_IsNull(t: 'opencascade::handle< StepBasic_DerivedUnitElement > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DerivedUnitElement_IsNull(t)
Handle_StepBasic_DerivedUnitElement_IsNull = _StepBasic.Handle_StepBasic_DerivedUnitElement_IsNull

def Handle_StepBasic_DimensionalExponents_Create() -> "opencascade::handle< StepBasic_DimensionalExponents >":
    return _StepBasic.Handle_StepBasic_DimensionalExponents_Create()
Handle_StepBasic_DimensionalExponents_Create = _StepBasic.Handle_StepBasic_DimensionalExponents_Create

def Handle_StepBasic_DimensionalExponents_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DimensionalExponents >":
    return _StepBasic.Handle_StepBasic_DimensionalExponents_DownCast(t)
Handle_StepBasic_DimensionalExponents_DownCast = _StepBasic.Handle_StepBasic_DimensionalExponents_DownCast

def Handle_StepBasic_DimensionalExponents_IsNull(t: 'opencascade::handle< StepBasic_DimensionalExponents > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DimensionalExponents_IsNull(t)
Handle_StepBasic_DimensionalExponents_IsNull = _StepBasic.Handle_StepBasic_DimensionalExponents_IsNull

def Handle_StepBasic_Document_Create() -> "opencascade::handle< StepBasic_Document >":
    return _StepBasic.Handle_StepBasic_Document_Create()
Handle_StepBasic_Document_Create = _StepBasic.Handle_StepBasic_Document_Create

def Handle_StepBasic_Document_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Document >":
    return _StepBasic.Handle_StepBasic_Document_DownCast(t)
Handle_StepBasic_Document_DownCast = _StepBasic.Handle_StepBasic_Document_DownCast

def Handle_StepBasic_Document_IsNull(t: 'opencascade::handle< StepBasic_Document > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Document_IsNull(t)
Handle_StepBasic_Document_IsNull = _StepBasic.Handle_StepBasic_Document_IsNull

def Handle_StepBasic_DocumentProductAssociation_Create() -> "opencascade::handle< StepBasic_DocumentProductAssociation >":
    return _StepBasic.Handle_StepBasic_DocumentProductAssociation_Create()
Handle_StepBasic_DocumentProductAssociation_Create = _StepBasic.Handle_StepBasic_DocumentProductAssociation_Create

def Handle_StepBasic_DocumentProductAssociation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DocumentProductAssociation >":
    return _StepBasic.Handle_StepBasic_DocumentProductAssociation_DownCast(t)
Handle_StepBasic_DocumentProductAssociation_DownCast = _StepBasic.Handle_StepBasic_DocumentProductAssociation_DownCast

def Handle_StepBasic_DocumentProductAssociation_IsNull(t: 'opencascade::handle< StepBasic_DocumentProductAssociation > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DocumentProductAssociation_IsNull(t)
Handle_StepBasic_DocumentProductAssociation_IsNull = _StepBasic.Handle_StepBasic_DocumentProductAssociation_IsNull

def Handle_StepBasic_DocumentReference_Create() -> "opencascade::handle< StepBasic_DocumentReference >":
    return _StepBasic.Handle_StepBasic_DocumentReference_Create()
Handle_StepBasic_DocumentReference_Create = _StepBasic.Handle_StepBasic_DocumentReference_Create

def Handle_StepBasic_DocumentReference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DocumentReference >":
    return _StepBasic.Handle_StepBasic_DocumentReference_DownCast(t)
Handle_StepBasic_DocumentReference_DownCast = _StepBasic.Handle_StepBasic_DocumentReference_DownCast

def Handle_StepBasic_DocumentReference_IsNull(t: 'opencascade::handle< StepBasic_DocumentReference > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DocumentReference_IsNull(t)
Handle_StepBasic_DocumentReference_IsNull = _StepBasic.Handle_StepBasic_DocumentReference_IsNull

def Handle_StepBasic_DocumentRelationship_Create() -> "opencascade::handle< StepBasic_DocumentRelationship >":
    return _StepBasic.Handle_StepBasic_DocumentRelationship_Create()
Handle_StepBasic_DocumentRelationship_Create = _StepBasic.Handle_StepBasic_DocumentRelationship_Create

def Handle_StepBasic_DocumentRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DocumentRelationship >":
    return _StepBasic.Handle_StepBasic_DocumentRelationship_DownCast(t)
Handle_StepBasic_DocumentRelationship_DownCast = _StepBasic.Handle_StepBasic_DocumentRelationship_DownCast

def Handle_StepBasic_DocumentRelationship_IsNull(t: 'opencascade::handle< StepBasic_DocumentRelationship > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DocumentRelationship_IsNull(t)
Handle_StepBasic_DocumentRelationship_IsNull = _StepBasic.Handle_StepBasic_DocumentRelationship_IsNull

def Handle_StepBasic_DocumentRepresentationType_Create() -> "opencascade::handle< StepBasic_DocumentRepresentationType >":
    return _StepBasic.Handle_StepBasic_DocumentRepresentationType_Create()
Handle_StepBasic_DocumentRepresentationType_Create = _StepBasic.Handle_StepBasic_DocumentRepresentationType_Create

def Handle_StepBasic_DocumentRepresentationType_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DocumentRepresentationType >":
    return _StepBasic.Handle_StepBasic_DocumentRepresentationType_DownCast(t)
Handle_StepBasic_DocumentRepresentationType_DownCast = _StepBasic.Handle_StepBasic_DocumentRepresentationType_DownCast

def Handle_StepBasic_DocumentRepresentationType_IsNull(t: 'opencascade::handle< StepBasic_DocumentRepresentationType > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DocumentRepresentationType_IsNull(t)
Handle_StepBasic_DocumentRepresentationType_IsNull = _StepBasic.Handle_StepBasic_DocumentRepresentationType_IsNull

def Handle_StepBasic_DocumentType_Create() -> "opencascade::handle< StepBasic_DocumentType >":
    return _StepBasic.Handle_StepBasic_DocumentType_Create()
Handle_StepBasic_DocumentType_Create = _StepBasic.Handle_StepBasic_DocumentType_Create

def Handle_StepBasic_DocumentType_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DocumentType >":
    return _StepBasic.Handle_StepBasic_DocumentType_DownCast(t)
Handle_StepBasic_DocumentType_DownCast = _StepBasic.Handle_StepBasic_DocumentType_DownCast

def Handle_StepBasic_DocumentType_IsNull(t: 'opencascade::handle< StepBasic_DocumentType > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DocumentType_IsNull(t)
Handle_StepBasic_DocumentType_IsNull = _StepBasic.Handle_StepBasic_DocumentType_IsNull

def Handle_StepBasic_DocumentUsageConstraint_Create() -> "opencascade::handle< StepBasic_DocumentUsageConstraint >":
    return _StepBasic.Handle_StepBasic_DocumentUsageConstraint_Create()
Handle_StepBasic_DocumentUsageConstraint_Create = _StepBasic.Handle_StepBasic_DocumentUsageConstraint_Create

def Handle_StepBasic_DocumentUsageConstraint_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DocumentUsageConstraint >":
    return _StepBasic.Handle_StepBasic_DocumentUsageConstraint_DownCast(t)
Handle_StepBasic_DocumentUsageConstraint_DownCast = _StepBasic.Handle_StepBasic_DocumentUsageConstraint_DownCast

def Handle_StepBasic_DocumentUsageConstraint_IsNull(t: 'opencascade::handle< StepBasic_DocumentUsageConstraint > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DocumentUsageConstraint_IsNull(t)
Handle_StepBasic_DocumentUsageConstraint_IsNull = _StepBasic.Handle_StepBasic_DocumentUsageConstraint_IsNull

def Handle_StepBasic_Effectivity_Create() -> "opencascade::handle< StepBasic_Effectivity >":
    return _StepBasic.Handle_StepBasic_Effectivity_Create()
Handle_StepBasic_Effectivity_Create = _StepBasic.Handle_StepBasic_Effectivity_Create

def Handle_StepBasic_Effectivity_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Effectivity >":
    return _StepBasic.Handle_StepBasic_Effectivity_DownCast(t)
Handle_StepBasic_Effectivity_DownCast = _StepBasic.Handle_StepBasic_Effectivity_DownCast

def Handle_StepBasic_Effectivity_IsNull(t: 'opencascade::handle< StepBasic_Effectivity > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Effectivity_IsNull(t)
Handle_StepBasic_Effectivity_IsNull = _StepBasic.Handle_StepBasic_Effectivity_IsNull

def Handle_StepBasic_EffectivityAssignment_Create() -> "opencascade::handle< StepBasic_EffectivityAssignment >":
    return _StepBasic.Handle_StepBasic_EffectivityAssignment_Create()
Handle_StepBasic_EffectivityAssignment_Create = _StepBasic.Handle_StepBasic_EffectivityAssignment_Create

def Handle_StepBasic_EffectivityAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_EffectivityAssignment >":
    return _StepBasic.Handle_StepBasic_EffectivityAssignment_DownCast(t)
Handle_StepBasic_EffectivityAssignment_DownCast = _StepBasic.Handle_StepBasic_EffectivityAssignment_DownCast

def Handle_StepBasic_EffectivityAssignment_IsNull(t: 'opencascade::handle< StepBasic_EffectivityAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_EffectivityAssignment_IsNull(t)
Handle_StepBasic_EffectivityAssignment_IsNull = _StepBasic.Handle_StepBasic_EffectivityAssignment_IsNull

def Handle_StepBasic_EulerAngles_Create() -> "opencascade::handle< StepBasic_EulerAngles >":
    return _StepBasic.Handle_StepBasic_EulerAngles_Create()
Handle_StepBasic_EulerAngles_Create = _StepBasic.Handle_StepBasic_EulerAngles_Create

def Handle_StepBasic_EulerAngles_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_EulerAngles >":
    return _StepBasic.Handle_StepBasic_EulerAngles_DownCast(t)
Handle_StepBasic_EulerAngles_DownCast = _StepBasic.Handle_StepBasic_EulerAngles_DownCast

def Handle_StepBasic_EulerAngles_IsNull(t: 'opencascade::handle< StepBasic_EulerAngles > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_EulerAngles_IsNull(t)
Handle_StepBasic_EulerAngles_IsNull = _StepBasic.Handle_StepBasic_EulerAngles_IsNull

def Handle_StepBasic_ExternalSource_Create() -> "opencascade::handle< StepBasic_ExternalSource >":
    return _StepBasic.Handle_StepBasic_ExternalSource_Create()
Handle_StepBasic_ExternalSource_Create = _StepBasic.Handle_StepBasic_ExternalSource_Create

def Handle_StepBasic_ExternalSource_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ExternalSource >":
    return _StepBasic.Handle_StepBasic_ExternalSource_DownCast(t)
Handle_StepBasic_ExternalSource_DownCast = _StepBasic.Handle_StepBasic_ExternalSource_DownCast

def Handle_StepBasic_ExternalSource_IsNull(t: 'opencascade::handle< StepBasic_ExternalSource > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ExternalSource_IsNull(t)
Handle_StepBasic_ExternalSource_IsNull = _StepBasic.Handle_StepBasic_ExternalSource_IsNull

def Handle_StepBasic_ExternallyDefinedItem_Create() -> "opencascade::handle< StepBasic_ExternallyDefinedItem >":
    return _StepBasic.Handle_StepBasic_ExternallyDefinedItem_Create()
Handle_StepBasic_ExternallyDefinedItem_Create = _StepBasic.Handle_StepBasic_ExternallyDefinedItem_Create

def Handle_StepBasic_ExternallyDefinedItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ExternallyDefinedItem >":
    return _StepBasic.Handle_StepBasic_ExternallyDefinedItem_DownCast(t)
Handle_StepBasic_ExternallyDefinedItem_DownCast = _StepBasic.Handle_StepBasic_ExternallyDefinedItem_DownCast

def Handle_StepBasic_ExternallyDefinedItem_IsNull(t: 'opencascade::handle< StepBasic_ExternallyDefinedItem > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ExternallyDefinedItem_IsNull(t)
Handle_StepBasic_ExternallyDefinedItem_IsNull = _StepBasic.Handle_StepBasic_ExternallyDefinedItem_IsNull

def Handle_StepBasic_GeneralProperty_Create() -> "opencascade::handle< StepBasic_GeneralProperty >":
    return _StepBasic.Handle_StepBasic_GeneralProperty_Create()
Handle_StepBasic_GeneralProperty_Create = _StepBasic.Handle_StepBasic_GeneralProperty_Create

def Handle_StepBasic_GeneralProperty_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_GeneralProperty >":
    return _StepBasic.Handle_StepBasic_GeneralProperty_DownCast(t)
Handle_StepBasic_GeneralProperty_DownCast = _StepBasic.Handle_StepBasic_GeneralProperty_DownCast

def Handle_StepBasic_GeneralProperty_IsNull(t: 'opencascade::handle< StepBasic_GeneralProperty > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_GeneralProperty_IsNull(t)
Handle_StepBasic_GeneralProperty_IsNull = _StepBasic.Handle_StepBasic_GeneralProperty_IsNull

def Handle_StepBasic_Group_Create() -> "opencascade::handle< StepBasic_Group >":
    return _StepBasic.Handle_StepBasic_Group_Create()
Handle_StepBasic_Group_Create = _StepBasic.Handle_StepBasic_Group_Create

def Handle_StepBasic_Group_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Group >":
    return _StepBasic.Handle_StepBasic_Group_DownCast(t)
Handle_StepBasic_Group_DownCast = _StepBasic.Handle_StepBasic_Group_DownCast

def Handle_StepBasic_Group_IsNull(t: 'opencascade::handle< StepBasic_Group > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Group_IsNull(t)
Handle_StepBasic_Group_IsNull = _StepBasic.Handle_StepBasic_Group_IsNull

def Handle_StepBasic_GroupAssignment_Create() -> "opencascade::handle< StepBasic_GroupAssignment >":
    return _StepBasic.Handle_StepBasic_GroupAssignment_Create()
Handle_StepBasic_GroupAssignment_Create = _StepBasic.Handle_StepBasic_GroupAssignment_Create

def Handle_StepBasic_GroupAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_GroupAssignment >":
    return _StepBasic.Handle_StepBasic_GroupAssignment_DownCast(t)
Handle_StepBasic_GroupAssignment_DownCast = _StepBasic.Handle_StepBasic_GroupAssignment_DownCast

def Handle_StepBasic_GroupAssignment_IsNull(t: 'opencascade::handle< StepBasic_GroupAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_GroupAssignment_IsNull(t)
Handle_StepBasic_GroupAssignment_IsNull = _StepBasic.Handle_StepBasic_GroupAssignment_IsNull

def Handle_StepBasic_GroupRelationship_Create() -> "opencascade::handle< StepBasic_GroupRelationship >":
    return _StepBasic.Handle_StepBasic_GroupRelationship_Create()
Handle_StepBasic_GroupRelationship_Create = _StepBasic.Handle_StepBasic_GroupRelationship_Create

def Handle_StepBasic_GroupRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_GroupRelationship >":
    return _StepBasic.Handle_StepBasic_GroupRelationship_DownCast(t)
Handle_StepBasic_GroupRelationship_DownCast = _StepBasic.Handle_StepBasic_GroupRelationship_DownCast

def Handle_StepBasic_GroupRelationship_IsNull(t: 'opencascade::handle< StepBasic_GroupRelationship > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_GroupRelationship_IsNull(t)
Handle_StepBasic_GroupRelationship_IsNull = _StepBasic.Handle_StepBasic_GroupRelationship_IsNull

def Handle_StepBasic_IdentificationAssignment_Create() -> "opencascade::handle< StepBasic_IdentificationAssignment >":
    return _StepBasic.Handle_StepBasic_IdentificationAssignment_Create()
Handle_StepBasic_IdentificationAssignment_Create = _StepBasic.Handle_StepBasic_IdentificationAssignment_Create

def Handle_StepBasic_IdentificationAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_IdentificationAssignment >":
    return _StepBasic.Handle_StepBasic_IdentificationAssignment_DownCast(t)
Handle_StepBasic_IdentificationAssignment_DownCast = _StepBasic.Handle_StepBasic_IdentificationAssignment_DownCast

def Handle_StepBasic_IdentificationAssignment_IsNull(t: 'opencascade::handle< StepBasic_IdentificationAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_IdentificationAssignment_IsNull(t)
Handle_StepBasic_IdentificationAssignment_IsNull = _StepBasic.Handle_StepBasic_IdentificationAssignment_IsNull

def Handle_StepBasic_IdentificationRole_Create() -> "opencascade::handle< StepBasic_IdentificationRole >":
    return _StepBasic.Handle_StepBasic_IdentificationRole_Create()
Handle_StepBasic_IdentificationRole_Create = _StepBasic.Handle_StepBasic_IdentificationRole_Create

def Handle_StepBasic_IdentificationRole_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_IdentificationRole >":
    return _StepBasic.Handle_StepBasic_IdentificationRole_DownCast(t)
Handle_StepBasic_IdentificationRole_DownCast = _StepBasic.Handle_StepBasic_IdentificationRole_DownCast

def Handle_StepBasic_IdentificationRole_IsNull(t: 'opencascade::handle< StepBasic_IdentificationRole > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_IdentificationRole_IsNull(t)
Handle_StepBasic_IdentificationRole_IsNull = _StepBasic.Handle_StepBasic_IdentificationRole_IsNull

def Handle_StepBasic_LocalTime_Create() -> "opencascade::handle< StepBasic_LocalTime >":
    return _StepBasic.Handle_StepBasic_LocalTime_Create()
Handle_StepBasic_LocalTime_Create = _StepBasic.Handle_StepBasic_LocalTime_Create

def Handle_StepBasic_LocalTime_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_LocalTime >":
    return _StepBasic.Handle_StepBasic_LocalTime_DownCast(t)
Handle_StepBasic_LocalTime_DownCast = _StepBasic.Handle_StepBasic_LocalTime_DownCast

def Handle_StepBasic_LocalTime_IsNull(t: 'opencascade::handle< StepBasic_LocalTime > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_LocalTime_IsNull(t)
Handle_StepBasic_LocalTime_IsNull = _StepBasic.Handle_StepBasic_LocalTime_IsNull

def Handle_StepBasic_MeasureValueMember_Create() -> "opencascade::handle< StepBasic_MeasureValueMember >":
    return _StepBasic.Handle_StepBasic_MeasureValueMember_Create()
Handle_StepBasic_MeasureValueMember_Create = _StepBasic.Handle_StepBasic_MeasureValueMember_Create

def Handle_StepBasic_MeasureValueMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_MeasureValueMember >":
    return _StepBasic.Handle_StepBasic_MeasureValueMember_DownCast(t)
Handle_StepBasic_MeasureValueMember_DownCast = _StepBasic.Handle_StepBasic_MeasureValueMember_DownCast

def Handle_StepBasic_MeasureValueMember_IsNull(t: 'opencascade::handle< StepBasic_MeasureValueMember > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_MeasureValueMember_IsNull(t)
Handle_StepBasic_MeasureValueMember_IsNull = _StepBasic.Handle_StepBasic_MeasureValueMember_IsNull

def Handle_StepBasic_MeasureWithUnit_Create() -> "opencascade::handle< StepBasic_MeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_MeasureWithUnit_Create()
Handle_StepBasic_MeasureWithUnit_Create = _StepBasic.Handle_StepBasic_MeasureWithUnit_Create

def Handle_StepBasic_MeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_MeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_MeasureWithUnit_DownCast(t)
Handle_StepBasic_MeasureWithUnit_DownCast = _StepBasic.Handle_StepBasic_MeasureWithUnit_DownCast

def Handle_StepBasic_MeasureWithUnit_IsNull(t: 'opencascade::handle< StepBasic_MeasureWithUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_MeasureWithUnit_IsNull(t)
Handle_StepBasic_MeasureWithUnit_IsNull = _StepBasic.Handle_StepBasic_MeasureWithUnit_IsNull

def Handle_StepBasic_NameAssignment_Create() -> "opencascade::handle< StepBasic_NameAssignment >":
    return _StepBasic.Handle_StepBasic_NameAssignment_Create()
Handle_StepBasic_NameAssignment_Create = _StepBasic.Handle_StepBasic_NameAssignment_Create

def Handle_StepBasic_NameAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_NameAssignment >":
    return _StepBasic.Handle_StepBasic_NameAssignment_DownCast(t)
Handle_StepBasic_NameAssignment_DownCast = _StepBasic.Handle_StepBasic_NameAssignment_DownCast

def Handle_StepBasic_NameAssignment_IsNull(t: 'opencascade::handle< StepBasic_NameAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_NameAssignment_IsNull(t)
Handle_StepBasic_NameAssignment_IsNull = _StepBasic.Handle_StepBasic_NameAssignment_IsNull

def Handle_StepBasic_NamedUnit_Create() -> "opencascade::handle< StepBasic_NamedUnit >":
    return _StepBasic.Handle_StepBasic_NamedUnit_Create()
Handle_StepBasic_NamedUnit_Create = _StepBasic.Handle_StepBasic_NamedUnit_Create

def Handle_StepBasic_NamedUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_NamedUnit >":
    return _StepBasic.Handle_StepBasic_NamedUnit_DownCast(t)
Handle_StepBasic_NamedUnit_DownCast = _StepBasic.Handle_StepBasic_NamedUnit_DownCast

def Handle_StepBasic_NamedUnit_IsNull(t: 'opencascade::handle< StepBasic_NamedUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_NamedUnit_IsNull(t)
Handle_StepBasic_NamedUnit_IsNull = _StepBasic.Handle_StepBasic_NamedUnit_IsNull

def Handle_StepBasic_ObjectRole_Create() -> "opencascade::handle< StepBasic_ObjectRole >":
    return _StepBasic.Handle_StepBasic_ObjectRole_Create()
Handle_StepBasic_ObjectRole_Create = _StepBasic.Handle_StepBasic_ObjectRole_Create

def Handle_StepBasic_ObjectRole_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ObjectRole >":
    return _StepBasic.Handle_StepBasic_ObjectRole_DownCast(t)
Handle_StepBasic_ObjectRole_DownCast = _StepBasic.Handle_StepBasic_ObjectRole_DownCast

def Handle_StepBasic_ObjectRole_IsNull(t: 'opencascade::handle< StepBasic_ObjectRole > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ObjectRole_IsNull(t)
Handle_StepBasic_ObjectRole_IsNull = _StepBasic.Handle_StepBasic_ObjectRole_IsNull

def Handle_StepBasic_Organization_Create() -> "opencascade::handle< StepBasic_Organization >":
    return _StepBasic.Handle_StepBasic_Organization_Create()
Handle_StepBasic_Organization_Create = _StepBasic.Handle_StepBasic_Organization_Create

def Handle_StepBasic_Organization_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Organization >":
    return _StepBasic.Handle_StepBasic_Organization_DownCast(t)
Handle_StepBasic_Organization_DownCast = _StepBasic.Handle_StepBasic_Organization_DownCast

def Handle_StepBasic_Organization_IsNull(t: 'opencascade::handle< StepBasic_Organization > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Organization_IsNull(t)
Handle_StepBasic_Organization_IsNull = _StepBasic.Handle_StepBasic_Organization_IsNull

def Handle_StepBasic_OrganizationAssignment_Create() -> "opencascade::handle< StepBasic_OrganizationAssignment >":
    return _StepBasic.Handle_StepBasic_OrganizationAssignment_Create()
Handle_StepBasic_OrganizationAssignment_Create = _StepBasic.Handle_StepBasic_OrganizationAssignment_Create

def Handle_StepBasic_OrganizationAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_OrganizationAssignment >":
    return _StepBasic.Handle_StepBasic_OrganizationAssignment_DownCast(t)
Handle_StepBasic_OrganizationAssignment_DownCast = _StepBasic.Handle_StepBasic_OrganizationAssignment_DownCast

def Handle_StepBasic_OrganizationAssignment_IsNull(t: 'opencascade::handle< StepBasic_OrganizationAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_OrganizationAssignment_IsNull(t)
Handle_StepBasic_OrganizationAssignment_IsNull = _StepBasic.Handle_StepBasic_OrganizationAssignment_IsNull

def Handle_StepBasic_OrganizationRole_Create() -> "opencascade::handle< StepBasic_OrganizationRole >":
    return _StepBasic.Handle_StepBasic_OrganizationRole_Create()
Handle_StepBasic_OrganizationRole_Create = _StepBasic.Handle_StepBasic_OrganizationRole_Create

def Handle_StepBasic_OrganizationRole_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_OrganizationRole >":
    return _StepBasic.Handle_StepBasic_OrganizationRole_DownCast(t)
Handle_StepBasic_OrganizationRole_DownCast = _StepBasic.Handle_StepBasic_OrganizationRole_DownCast

def Handle_StepBasic_OrganizationRole_IsNull(t: 'opencascade::handle< StepBasic_OrganizationRole > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_OrganizationRole_IsNull(t)
Handle_StepBasic_OrganizationRole_IsNull = _StepBasic.Handle_StepBasic_OrganizationRole_IsNull

def Handle_StepBasic_Person_Create() -> "opencascade::handle< StepBasic_Person >":
    return _StepBasic.Handle_StepBasic_Person_Create()
Handle_StepBasic_Person_Create = _StepBasic.Handle_StepBasic_Person_Create

def Handle_StepBasic_Person_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Person >":
    return _StepBasic.Handle_StepBasic_Person_DownCast(t)
Handle_StepBasic_Person_DownCast = _StepBasic.Handle_StepBasic_Person_DownCast

def Handle_StepBasic_Person_IsNull(t: 'opencascade::handle< StepBasic_Person > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Person_IsNull(t)
Handle_StepBasic_Person_IsNull = _StepBasic.Handle_StepBasic_Person_IsNull

def Handle_StepBasic_PersonAndOrganization_Create() -> "opencascade::handle< StepBasic_PersonAndOrganization >":
    return _StepBasic.Handle_StepBasic_PersonAndOrganization_Create()
Handle_StepBasic_PersonAndOrganization_Create = _StepBasic.Handle_StepBasic_PersonAndOrganization_Create

def Handle_StepBasic_PersonAndOrganization_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_PersonAndOrganization >":
    return _StepBasic.Handle_StepBasic_PersonAndOrganization_DownCast(t)
Handle_StepBasic_PersonAndOrganization_DownCast = _StepBasic.Handle_StepBasic_PersonAndOrganization_DownCast

def Handle_StepBasic_PersonAndOrganization_IsNull(t: 'opencascade::handle< StepBasic_PersonAndOrganization > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_PersonAndOrganization_IsNull(t)
Handle_StepBasic_PersonAndOrganization_IsNull = _StepBasic.Handle_StepBasic_PersonAndOrganization_IsNull

def Handle_StepBasic_PersonAndOrganizationAssignment_Create() -> "opencascade::handle< StepBasic_PersonAndOrganizationAssignment >":
    return _StepBasic.Handle_StepBasic_PersonAndOrganizationAssignment_Create()
Handle_StepBasic_PersonAndOrganizationAssignment_Create = _StepBasic.Handle_StepBasic_PersonAndOrganizationAssignment_Create

def Handle_StepBasic_PersonAndOrganizationAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_PersonAndOrganizationAssignment >":
    return _StepBasic.Handle_StepBasic_PersonAndOrganizationAssignment_DownCast(t)
Handle_StepBasic_PersonAndOrganizationAssignment_DownCast = _StepBasic.Handle_StepBasic_PersonAndOrganizationAssignment_DownCast

def Handle_StepBasic_PersonAndOrganizationAssignment_IsNull(t: 'opencascade::handle< StepBasic_PersonAndOrganizationAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_PersonAndOrganizationAssignment_IsNull(t)
Handle_StepBasic_PersonAndOrganizationAssignment_IsNull = _StepBasic.Handle_StepBasic_PersonAndOrganizationAssignment_IsNull

def Handle_StepBasic_PersonAndOrganizationRole_Create() -> "opencascade::handle< StepBasic_PersonAndOrganizationRole >":
    return _StepBasic.Handle_StepBasic_PersonAndOrganizationRole_Create()
Handle_StepBasic_PersonAndOrganizationRole_Create = _StepBasic.Handle_StepBasic_PersonAndOrganizationRole_Create

def Handle_StepBasic_PersonAndOrganizationRole_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_PersonAndOrganizationRole >":
    return _StepBasic.Handle_StepBasic_PersonAndOrganizationRole_DownCast(t)
Handle_StepBasic_PersonAndOrganizationRole_DownCast = _StepBasic.Handle_StepBasic_PersonAndOrganizationRole_DownCast

def Handle_StepBasic_PersonAndOrganizationRole_IsNull(t: 'opencascade::handle< StepBasic_PersonAndOrganizationRole > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_PersonAndOrganizationRole_IsNull(t)
Handle_StepBasic_PersonAndOrganizationRole_IsNull = _StepBasic.Handle_StepBasic_PersonAndOrganizationRole_IsNull

def Handle_StepBasic_Product_Create() -> "opencascade::handle< StepBasic_Product >":
    return _StepBasic.Handle_StepBasic_Product_Create()
Handle_StepBasic_Product_Create = _StepBasic.Handle_StepBasic_Product_Create

def Handle_StepBasic_Product_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_Product >":
    return _StepBasic.Handle_StepBasic_Product_DownCast(t)
Handle_StepBasic_Product_DownCast = _StepBasic.Handle_StepBasic_Product_DownCast

def Handle_StepBasic_Product_IsNull(t: 'opencascade::handle< StepBasic_Product > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_Product_IsNull(t)
Handle_StepBasic_Product_IsNull = _StepBasic.Handle_StepBasic_Product_IsNull

def Handle_StepBasic_ProductCategory_Create() -> "opencascade::handle< StepBasic_ProductCategory >":
    return _StepBasic.Handle_StepBasic_ProductCategory_Create()
Handle_StepBasic_ProductCategory_Create = _StepBasic.Handle_StepBasic_ProductCategory_Create

def Handle_StepBasic_ProductCategory_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductCategory >":
    return _StepBasic.Handle_StepBasic_ProductCategory_DownCast(t)
Handle_StepBasic_ProductCategory_DownCast = _StepBasic.Handle_StepBasic_ProductCategory_DownCast

def Handle_StepBasic_ProductCategory_IsNull(t: 'opencascade::handle< StepBasic_ProductCategory > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductCategory_IsNull(t)
Handle_StepBasic_ProductCategory_IsNull = _StepBasic.Handle_StepBasic_ProductCategory_IsNull

def Handle_StepBasic_ProductCategoryRelationship_Create() -> "opencascade::handle< StepBasic_ProductCategoryRelationship >":
    return _StepBasic.Handle_StepBasic_ProductCategoryRelationship_Create()
Handle_StepBasic_ProductCategoryRelationship_Create = _StepBasic.Handle_StepBasic_ProductCategoryRelationship_Create

def Handle_StepBasic_ProductCategoryRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductCategoryRelationship >":
    return _StepBasic.Handle_StepBasic_ProductCategoryRelationship_DownCast(t)
Handle_StepBasic_ProductCategoryRelationship_DownCast = _StepBasic.Handle_StepBasic_ProductCategoryRelationship_DownCast

def Handle_StepBasic_ProductCategoryRelationship_IsNull(t: 'opencascade::handle< StepBasic_ProductCategoryRelationship > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductCategoryRelationship_IsNull(t)
Handle_StepBasic_ProductCategoryRelationship_IsNull = _StepBasic.Handle_StepBasic_ProductCategoryRelationship_IsNull

def Handle_StepBasic_ProductDefinition_Create() -> "opencascade::handle< StepBasic_ProductDefinition >":
    return _StepBasic.Handle_StepBasic_ProductDefinition_Create()
Handle_StepBasic_ProductDefinition_Create = _StepBasic.Handle_StepBasic_ProductDefinition_Create

def Handle_StepBasic_ProductDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinition >":
    return _StepBasic.Handle_StepBasic_ProductDefinition_DownCast(t)
Handle_StepBasic_ProductDefinition_DownCast = _StepBasic.Handle_StepBasic_ProductDefinition_DownCast

def Handle_StepBasic_ProductDefinition_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinition > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinition_IsNull(t)
Handle_StepBasic_ProductDefinition_IsNull = _StepBasic.Handle_StepBasic_ProductDefinition_IsNull

def Handle_StepBasic_ProductDefinitionFormation_Create() -> "opencascade::handle< StepBasic_ProductDefinitionFormation >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionFormation_Create()
Handle_StepBasic_ProductDefinitionFormation_Create = _StepBasic.Handle_StepBasic_ProductDefinitionFormation_Create

def Handle_StepBasic_ProductDefinitionFormation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinitionFormation >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionFormation_DownCast(t)
Handle_StepBasic_ProductDefinitionFormation_DownCast = _StepBasic.Handle_StepBasic_ProductDefinitionFormation_DownCast

def Handle_StepBasic_ProductDefinitionFormation_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinitionFormation > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinitionFormation_IsNull(t)
Handle_StepBasic_ProductDefinitionFormation_IsNull = _StepBasic.Handle_StepBasic_ProductDefinitionFormation_IsNull

def Handle_StepBasic_ProductDefinitionFormationRelationship_Create() -> "opencascade::handle< StepBasic_ProductDefinitionFormationRelationship >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionFormationRelationship_Create()
Handle_StepBasic_ProductDefinitionFormationRelationship_Create = _StepBasic.Handle_StepBasic_ProductDefinitionFormationRelationship_Create

def Handle_StepBasic_ProductDefinitionFormationRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinitionFormationRelationship >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionFormationRelationship_DownCast(t)
Handle_StepBasic_ProductDefinitionFormationRelationship_DownCast = _StepBasic.Handle_StepBasic_ProductDefinitionFormationRelationship_DownCast

def Handle_StepBasic_ProductDefinitionFormationRelationship_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinitionFormationRelationship > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinitionFormationRelationship_IsNull(t)
Handle_StepBasic_ProductDefinitionFormationRelationship_IsNull = _StepBasic.Handle_StepBasic_ProductDefinitionFormationRelationship_IsNull

def Handle_StepBasic_ProductDefinitionReference_Create() -> "opencascade::handle< StepBasic_ProductDefinitionReference >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionReference_Create()
Handle_StepBasic_ProductDefinitionReference_Create = _StepBasic.Handle_StepBasic_ProductDefinitionReference_Create

def Handle_StepBasic_ProductDefinitionReference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinitionReference >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionReference_DownCast(t)
Handle_StepBasic_ProductDefinitionReference_DownCast = _StepBasic.Handle_StepBasic_ProductDefinitionReference_DownCast

def Handle_StepBasic_ProductDefinitionReference_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinitionReference > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinitionReference_IsNull(t)
Handle_StepBasic_ProductDefinitionReference_IsNull = _StepBasic.Handle_StepBasic_ProductDefinitionReference_IsNull

def Handle_StepBasic_ProductDefinitionRelationship_Create() -> "opencascade::handle< StepBasic_ProductDefinitionRelationship >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionRelationship_Create()
Handle_StepBasic_ProductDefinitionRelationship_Create = _StepBasic.Handle_StepBasic_ProductDefinitionRelationship_Create

def Handle_StepBasic_ProductDefinitionRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinitionRelationship >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionRelationship_DownCast(t)
Handle_StepBasic_ProductDefinitionRelationship_DownCast = _StepBasic.Handle_StepBasic_ProductDefinitionRelationship_DownCast

def Handle_StepBasic_ProductDefinitionRelationship_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinitionRelationship > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinitionRelationship_IsNull(t)
Handle_StepBasic_ProductDefinitionRelationship_IsNull = _StepBasic.Handle_StepBasic_ProductDefinitionRelationship_IsNull

def Handle_StepBasic_RoleAssociation_Create() -> "opencascade::handle< StepBasic_RoleAssociation >":
    return _StepBasic.Handle_StepBasic_RoleAssociation_Create()
Handle_StepBasic_RoleAssociation_Create = _StepBasic.Handle_StepBasic_RoleAssociation_Create

def Handle_StepBasic_RoleAssociation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_RoleAssociation >":
    return _StepBasic.Handle_StepBasic_RoleAssociation_DownCast(t)
Handle_StepBasic_RoleAssociation_DownCast = _StepBasic.Handle_StepBasic_RoleAssociation_DownCast

def Handle_StepBasic_RoleAssociation_IsNull(t: 'opencascade::handle< StepBasic_RoleAssociation > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_RoleAssociation_IsNull(t)
Handle_StepBasic_RoleAssociation_IsNull = _StepBasic.Handle_StepBasic_RoleAssociation_IsNull

def Handle_StepBasic_SecurityClassification_Create() -> "opencascade::handle< StepBasic_SecurityClassification >":
    return _StepBasic.Handle_StepBasic_SecurityClassification_Create()
Handle_StepBasic_SecurityClassification_Create = _StepBasic.Handle_StepBasic_SecurityClassification_Create

def Handle_StepBasic_SecurityClassification_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SecurityClassification >":
    return _StepBasic.Handle_StepBasic_SecurityClassification_DownCast(t)
Handle_StepBasic_SecurityClassification_DownCast = _StepBasic.Handle_StepBasic_SecurityClassification_DownCast

def Handle_StepBasic_SecurityClassification_IsNull(t: 'opencascade::handle< StepBasic_SecurityClassification > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SecurityClassification_IsNull(t)
Handle_StepBasic_SecurityClassification_IsNull = _StepBasic.Handle_StepBasic_SecurityClassification_IsNull

def Handle_StepBasic_SecurityClassificationAssignment_Create() -> "opencascade::handle< StepBasic_SecurityClassificationAssignment >":
    return _StepBasic.Handle_StepBasic_SecurityClassificationAssignment_Create()
Handle_StepBasic_SecurityClassificationAssignment_Create = _StepBasic.Handle_StepBasic_SecurityClassificationAssignment_Create

def Handle_StepBasic_SecurityClassificationAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SecurityClassificationAssignment >":
    return _StepBasic.Handle_StepBasic_SecurityClassificationAssignment_DownCast(t)
Handle_StepBasic_SecurityClassificationAssignment_DownCast = _StepBasic.Handle_StepBasic_SecurityClassificationAssignment_DownCast

def Handle_StepBasic_SecurityClassificationAssignment_IsNull(t: 'opencascade::handle< StepBasic_SecurityClassificationAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SecurityClassificationAssignment_IsNull(t)
Handle_StepBasic_SecurityClassificationAssignment_IsNull = _StepBasic.Handle_StepBasic_SecurityClassificationAssignment_IsNull

def Handle_StepBasic_SecurityClassificationLevel_Create() -> "opencascade::handle< StepBasic_SecurityClassificationLevel >":
    return _StepBasic.Handle_StepBasic_SecurityClassificationLevel_Create()
Handle_StepBasic_SecurityClassificationLevel_Create = _StepBasic.Handle_StepBasic_SecurityClassificationLevel_Create

def Handle_StepBasic_SecurityClassificationLevel_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SecurityClassificationLevel >":
    return _StepBasic.Handle_StepBasic_SecurityClassificationLevel_DownCast(t)
Handle_StepBasic_SecurityClassificationLevel_DownCast = _StepBasic.Handle_StepBasic_SecurityClassificationLevel_DownCast

def Handle_StepBasic_SecurityClassificationLevel_IsNull(t: 'opencascade::handle< StepBasic_SecurityClassificationLevel > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SecurityClassificationLevel_IsNull(t)
Handle_StepBasic_SecurityClassificationLevel_IsNull = _StepBasic.Handle_StepBasic_SecurityClassificationLevel_IsNull

def Handle_StepBasic_SizeMember_Create() -> "opencascade::handle< StepBasic_SizeMember >":
    return _StepBasic.Handle_StepBasic_SizeMember_Create()
Handle_StepBasic_SizeMember_Create = _StepBasic.Handle_StepBasic_SizeMember_Create

def Handle_StepBasic_SizeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SizeMember >":
    return _StepBasic.Handle_StepBasic_SizeMember_DownCast(t)
Handle_StepBasic_SizeMember_DownCast = _StepBasic.Handle_StepBasic_SizeMember_DownCast

def Handle_StepBasic_SizeMember_IsNull(t: 'opencascade::handle< StepBasic_SizeMember > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SizeMember_IsNull(t)
Handle_StepBasic_SizeMember_IsNull = _StepBasic.Handle_StepBasic_SizeMember_IsNull

def Handle_StepBasic_VersionedActionRequest_Create() -> "opencascade::handle< StepBasic_VersionedActionRequest >":
    return _StepBasic.Handle_StepBasic_VersionedActionRequest_Create()
Handle_StepBasic_VersionedActionRequest_Create = _StepBasic.Handle_StepBasic_VersionedActionRequest_Create

def Handle_StepBasic_VersionedActionRequest_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_VersionedActionRequest >":
    return _StepBasic.Handle_StepBasic_VersionedActionRequest_DownCast(t)
Handle_StepBasic_VersionedActionRequest_DownCast = _StepBasic.Handle_StepBasic_VersionedActionRequest_DownCast

def Handle_StepBasic_VersionedActionRequest_IsNull(t: 'opencascade::handle< StepBasic_VersionedActionRequest > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_VersionedActionRequest_IsNull(t)
Handle_StepBasic_VersionedActionRequest_IsNull = _StepBasic.Handle_StepBasic_VersionedActionRequest_IsNull

def Handle_StepBasic_AreaUnit_Create() -> "opencascade::handle< StepBasic_AreaUnit >":
    return _StepBasic.Handle_StepBasic_AreaUnit_Create()
Handle_StepBasic_AreaUnit_Create = _StepBasic.Handle_StepBasic_AreaUnit_Create

def Handle_StepBasic_AreaUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_AreaUnit >":
    return _StepBasic.Handle_StepBasic_AreaUnit_DownCast(t)
Handle_StepBasic_AreaUnit_DownCast = _StepBasic.Handle_StepBasic_AreaUnit_DownCast

def Handle_StepBasic_AreaUnit_IsNull(t: 'opencascade::handle< StepBasic_AreaUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_AreaUnit_IsNull(t)
Handle_StepBasic_AreaUnit_IsNull = _StepBasic.Handle_StepBasic_AreaUnit_IsNull

def Handle_StepBasic_CalendarDate_Create() -> "opencascade::handle< StepBasic_CalendarDate >":
    return _StepBasic.Handle_StepBasic_CalendarDate_Create()
Handle_StepBasic_CalendarDate_Create = _StepBasic.Handle_StepBasic_CalendarDate_Create

def Handle_StepBasic_CalendarDate_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_CalendarDate >":
    return _StepBasic.Handle_StepBasic_CalendarDate_DownCast(t)
Handle_StepBasic_CalendarDate_DownCast = _StepBasic.Handle_StepBasic_CalendarDate_DownCast

def Handle_StepBasic_CalendarDate_IsNull(t: 'opencascade::handle< StepBasic_CalendarDate > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_CalendarDate_IsNull(t)
Handle_StepBasic_CalendarDate_IsNull = _StepBasic.Handle_StepBasic_CalendarDate_IsNull

def Handle_StepBasic_ConversionBasedUnit_Create() -> "opencascade::handle< StepBasic_ConversionBasedUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnit_Create()
Handle_StepBasic_ConversionBasedUnit_Create = _StepBasic.Handle_StepBasic_ConversionBasedUnit_Create

def Handle_StepBasic_ConversionBasedUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ConversionBasedUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnit_DownCast(t)
Handle_StepBasic_ConversionBasedUnit_DownCast = _StepBasic.Handle_StepBasic_ConversionBasedUnit_DownCast

def Handle_StepBasic_ConversionBasedUnit_IsNull(t: 'opencascade::handle< StepBasic_ConversionBasedUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnit_IsNull(t)
Handle_StepBasic_ConversionBasedUnit_IsNull = _StepBasic.Handle_StepBasic_ConversionBasedUnit_IsNull

def Handle_StepBasic_DigitalDocument_Create() -> "opencascade::handle< StepBasic_DigitalDocument >":
    return _StepBasic.Handle_StepBasic_DigitalDocument_Create()
Handle_StepBasic_DigitalDocument_Create = _StepBasic.Handle_StepBasic_DigitalDocument_Create

def Handle_StepBasic_DigitalDocument_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DigitalDocument >":
    return _StepBasic.Handle_StepBasic_DigitalDocument_DownCast(t)
Handle_StepBasic_DigitalDocument_DownCast = _StepBasic.Handle_StepBasic_DigitalDocument_DownCast

def Handle_StepBasic_DigitalDocument_IsNull(t: 'opencascade::handle< StepBasic_DigitalDocument > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DigitalDocument_IsNull(t)
Handle_StepBasic_DigitalDocument_IsNull = _StepBasic.Handle_StepBasic_DigitalDocument_IsNull

def Handle_StepBasic_DocumentFile_Create() -> "opencascade::handle< StepBasic_DocumentFile >":
    return _StepBasic.Handle_StepBasic_DocumentFile_Create()
Handle_StepBasic_DocumentFile_Create = _StepBasic.Handle_StepBasic_DocumentFile_Create

def Handle_StepBasic_DocumentFile_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DocumentFile >":
    return _StepBasic.Handle_StepBasic_DocumentFile_DownCast(t)
Handle_StepBasic_DocumentFile_DownCast = _StepBasic.Handle_StepBasic_DocumentFile_DownCast

def Handle_StepBasic_DocumentFile_IsNull(t: 'opencascade::handle< StepBasic_DocumentFile > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DocumentFile_IsNull(t)
Handle_StepBasic_DocumentFile_IsNull = _StepBasic.Handle_StepBasic_DocumentFile_IsNull

def Handle_StepBasic_DocumentProductEquivalence_Create() -> "opencascade::handle< StepBasic_DocumentProductEquivalence >":
    return _StepBasic.Handle_StepBasic_DocumentProductEquivalence_Create()
Handle_StepBasic_DocumentProductEquivalence_Create = _StepBasic.Handle_StepBasic_DocumentProductEquivalence_Create

def Handle_StepBasic_DocumentProductEquivalence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DocumentProductEquivalence >":
    return _StepBasic.Handle_StepBasic_DocumentProductEquivalence_DownCast(t)
Handle_StepBasic_DocumentProductEquivalence_DownCast = _StepBasic.Handle_StepBasic_DocumentProductEquivalence_DownCast

def Handle_StepBasic_DocumentProductEquivalence_IsNull(t: 'opencascade::handle< StepBasic_DocumentProductEquivalence > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DocumentProductEquivalence_IsNull(t)
Handle_StepBasic_DocumentProductEquivalence_IsNull = _StepBasic.Handle_StepBasic_DocumentProductEquivalence_IsNull

def Handle_StepBasic_ExternalIdentificationAssignment_Create() -> "opencascade::handle< StepBasic_ExternalIdentificationAssignment >":
    return _StepBasic.Handle_StepBasic_ExternalIdentificationAssignment_Create()
Handle_StepBasic_ExternalIdentificationAssignment_Create = _StepBasic.Handle_StepBasic_ExternalIdentificationAssignment_Create

def Handle_StepBasic_ExternalIdentificationAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ExternalIdentificationAssignment >":
    return _StepBasic.Handle_StepBasic_ExternalIdentificationAssignment_DownCast(t)
Handle_StepBasic_ExternalIdentificationAssignment_DownCast = _StepBasic.Handle_StepBasic_ExternalIdentificationAssignment_DownCast

def Handle_StepBasic_ExternalIdentificationAssignment_IsNull(t: 'opencascade::handle< StepBasic_ExternalIdentificationAssignment > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ExternalIdentificationAssignment_IsNull(t)
Handle_StepBasic_ExternalIdentificationAssignment_IsNull = _StepBasic.Handle_StepBasic_ExternalIdentificationAssignment_IsNull

def Handle_StepBasic_LengthMeasureWithUnit_Create() -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_LengthMeasureWithUnit_Create()
Handle_StepBasic_LengthMeasureWithUnit_Create = _StepBasic.Handle_StepBasic_LengthMeasureWithUnit_Create

def Handle_StepBasic_LengthMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_LengthMeasureWithUnit_DownCast(t)
Handle_StepBasic_LengthMeasureWithUnit_DownCast = _StepBasic.Handle_StepBasic_LengthMeasureWithUnit_DownCast

def Handle_StepBasic_LengthMeasureWithUnit_IsNull(t: 'opencascade::handle< StepBasic_LengthMeasureWithUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_LengthMeasureWithUnit_IsNull(t)
Handle_StepBasic_LengthMeasureWithUnit_IsNull = _StepBasic.Handle_StepBasic_LengthMeasureWithUnit_IsNull

def Handle_StepBasic_LengthUnit_Create() -> "opencascade::handle< StepBasic_LengthUnit >":
    return _StepBasic.Handle_StepBasic_LengthUnit_Create()
Handle_StepBasic_LengthUnit_Create = _StepBasic.Handle_StepBasic_LengthUnit_Create

def Handle_StepBasic_LengthUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_LengthUnit >":
    return _StepBasic.Handle_StepBasic_LengthUnit_DownCast(t)
Handle_StepBasic_LengthUnit_DownCast = _StepBasic.Handle_StepBasic_LengthUnit_DownCast

def Handle_StepBasic_LengthUnit_IsNull(t: 'opencascade::handle< StepBasic_LengthUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_LengthUnit_IsNull(t)
Handle_StepBasic_LengthUnit_IsNull = _StepBasic.Handle_StepBasic_LengthUnit_IsNull

def Handle_StepBasic_MassMeasureWithUnit_Create() -> "opencascade::handle< StepBasic_MassMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_MassMeasureWithUnit_Create()
Handle_StepBasic_MassMeasureWithUnit_Create = _StepBasic.Handle_StepBasic_MassMeasureWithUnit_Create

def Handle_StepBasic_MassMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_MassMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_MassMeasureWithUnit_DownCast(t)
Handle_StepBasic_MassMeasureWithUnit_DownCast = _StepBasic.Handle_StepBasic_MassMeasureWithUnit_DownCast

def Handle_StepBasic_MassMeasureWithUnit_IsNull(t: 'opencascade::handle< StepBasic_MassMeasureWithUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_MassMeasureWithUnit_IsNull(t)
Handle_StepBasic_MassMeasureWithUnit_IsNull = _StepBasic.Handle_StepBasic_MassMeasureWithUnit_IsNull

def Handle_StepBasic_MassUnit_Create() -> "opencascade::handle< StepBasic_MassUnit >":
    return _StepBasic.Handle_StepBasic_MassUnit_Create()
Handle_StepBasic_MassUnit_Create = _StepBasic.Handle_StepBasic_MassUnit_Create

def Handle_StepBasic_MassUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_MassUnit >":
    return _StepBasic.Handle_StepBasic_MassUnit_DownCast(t)
Handle_StepBasic_MassUnit_DownCast = _StepBasic.Handle_StepBasic_MassUnit_DownCast

def Handle_StepBasic_MassUnit_IsNull(t: 'opencascade::handle< StepBasic_MassUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_MassUnit_IsNull(t)
Handle_StepBasic_MassUnit_IsNull = _StepBasic.Handle_StepBasic_MassUnit_IsNull

def Handle_StepBasic_OrdinalDate_Create() -> "opencascade::handle< StepBasic_OrdinalDate >":
    return _StepBasic.Handle_StepBasic_OrdinalDate_Create()
Handle_StepBasic_OrdinalDate_Create = _StepBasic.Handle_StepBasic_OrdinalDate_Create

def Handle_StepBasic_OrdinalDate_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_OrdinalDate >":
    return _StepBasic.Handle_StepBasic_OrdinalDate_DownCast(t)
Handle_StepBasic_OrdinalDate_DownCast = _StepBasic.Handle_StepBasic_OrdinalDate_DownCast

def Handle_StepBasic_OrdinalDate_IsNull(t: 'opencascade::handle< StepBasic_OrdinalDate > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_OrdinalDate_IsNull(t)
Handle_StepBasic_OrdinalDate_IsNull = _StepBasic.Handle_StepBasic_OrdinalDate_IsNull

def Handle_StepBasic_OrganizationalAddress_Create() -> "opencascade::handle< StepBasic_OrganizationalAddress >":
    return _StepBasic.Handle_StepBasic_OrganizationalAddress_Create()
Handle_StepBasic_OrganizationalAddress_Create = _StepBasic.Handle_StepBasic_OrganizationalAddress_Create

def Handle_StepBasic_OrganizationalAddress_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_OrganizationalAddress >":
    return _StepBasic.Handle_StepBasic_OrganizationalAddress_DownCast(t)
Handle_StepBasic_OrganizationalAddress_DownCast = _StepBasic.Handle_StepBasic_OrganizationalAddress_DownCast

def Handle_StepBasic_OrganizationalAddress_IsNull(t: 'opencascade::handle< StepBasic_OrganizationalAddress > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_OrganizationalAddress_IsNull(t)
Handle_StepBasic_OrganizationalAddress_IsNull = _StepBasic.Handle_StepBasic_OrganizationalAddress_IsNull

def Handle_StepBasic_PersonalAddress_Create() -> "opencascade::handle< StepBasic_PersonalAddress >":
    return _StepBasic.Handle_StepBasic_PersonalAddress_Create()
Handle_StepBasic_PersonalAddress_Create = _StepBasic.Handle_StepBasic_PersonalAddress_Create

def Handle_StepBasic_PersonalAddress_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_PersonalAddress >":
    return _StepBasic.Handle_StepBasic_PersonalAddress_DownCast(t)
Handle_StepBasic_PersonalAddress_DownCast = _StepBasic.Handle_StepBasic_PersonalAddress_DownCast

def Handle_StepBasic_PersonalAddress_IsNull(t: 'opencascade::handle< StepBasic_PersonalAddress > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_PersonalAddress_IsNull(t)
Handle_StepBasic_PersonalAddress_IsNull = _StepBasic.Handle_StepBasic_PersonalAddress_IsNull

def Handle_StepBasic_PhysicallyModeledProductDefinition_Create() -> "opencascade::handle< StepBasic_PhysicallyModeledProductDefinition >":
    return _StepBasic.Handle_StepBasic_PhysicallyModeledProductDefinition_Create()
Handle_StepBasic_PhysicallyModeledProductDefinition_Create = _StepBasic.Handle_StepBasic_PhysicallyModeledProductDefinition_Create

def Handle_StepBasic_PhysicallyModeledProductDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_PhysicallyModeledProductDefinition >":
    return _StepBasic.Handle_StepBasic_PhysicallyModeledProductDefinition_DownCast(t)
Handle_StepBasic_PhysicallyModeledProductDefinition_DownCast = _StepBasic.Handle_StepBasic_PhysicallyModeledProductDefinition_DownCast

def Handle_StepBasic_PhysicallyModeledProductDefinition_IsNull(t: 'opencascade::handle< StepBasic_PhysicallyModeledProductDefinition > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_PhysicallyModeledProductDefinition_IsNull(t)
Handle_StepBasic_PhysicallyModeledProductDefinition_IsNull = _StepBasic.Handle_StepBasic_PhysicallyModeledProductDefinition_IsNull

def Handle_StepBasic_PlaneAngleMeasureWithUnit_Create() -> "opencascade::handle< StepBasic_PlaneAngleMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_PlaneAngleMeasureWithUnit_Create()
Handle_StepBasic_PlaneAngleMeasureWithUnit_Create = _StepBasic.Handle_StepBasic_PlaneAngleMeasureWithUnit_Create

def Handle_StepBasic_PlaneAngleMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_PlaneAngleMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_PlaneAngleMeasureWithUnit_DownCast(t)
Handle_StepBasic_PlaneAngleMeasureWithUnit_DownCast = _StepBasic.Handle_StepBasic_PlaneAngleMeasureWithUnit_DownCast

def Handle_StepBasic_PlaneAngleMeasureWithUnit_IsNull(t: 'opencascade::handle< StepBasic_PlaneAngleMeasureWithUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_PlaneAngleMeasureWithUnit_IsNull(t)
Handle_StepBasic_PlaneAngleMeasureWithUnit_IsNull = _StepBasic.Handle_StepBasic_PlaneAngleMeasureWithUnit_IsNull

def Handle_StepBasic_PlaneAngleUnit_Create() -> "opencascade::handle< StepBasic_PlaneAngleUnit >":
    return _StepBasic.Handle_StepBasic_PlaneAngleUnit_Create()
Handle_StepBasic_PlaneAngleUnit_Create = _StepBasic.Handle_StepBasic_PlaneAngleUnit_Create

def Handle_StepBasic_PlaneAngleUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_PlaneAngleUnit >":
    return _StepBasic.Handle_StepBasic_PlaneAngleUnit_DownCast(t)
Handle_StepBasic_PlaneAngleUnit_DownCast = _StepBasic.Handle_StepBasic_PlaneAngleUnit_DownCast

def Handle_StepBasic_PlaneAngleUnit_IsNull(t: 'opencascade::handle< StepBasic_PlaneAngleUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_PlaneAngleUnit_IsNull(t)
Handle_StepBasic_PlaneAngleUnit_IsNull = _StepBasic.Handle_StepBasic_PlaneAngleUnit_IsNull

def Handle_StepBasic_ProductConceptContext_Create() -> "opencascade::handle< StepBasic_ProductConceptContext >":
    return _StepBasic.Handle_StepBasic_ProductConceptContext_Create()
Handle_StepBasic_ProductConceptContext_Create = _StepBasic.Handle_StepBasic_ProductConceptContext_Create

def Handle_StepBasic_ProductConceptContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductConceptContext >":
    return _StepBasic.Handle_StepBasic_ProductConceptContext_DownCast(t)
Handle_StepBasic_ProductConceptContext_DownCast = _StepBasic.Handle_StepBasic_ProductConceptContext_DownCast

def Handle_StepBasic_ProductConceptContext_IsNull(t: 'opencascade::handle< StepBasic_ProductConceptContext > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductConceptContext_IsNull(t)
Handle_StepBasic_ProductConceptContext_IsNull = _StepBasic.Handle_StepBasic_ProductConceptContext_IsNull

def Handle_StepBasic_ProductContext_Create() -> "opencascade::handle< StepBasic_ProductContext >":
    return _StepBasic.Handle_StepBasic_ProductContext_Create()
Handle_StepBasic_ProductContext_Create = _StepBasic.Handle_StepBasic_ProductContext_Create

def Handle_StepBasic_ProductContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductContext >":
    return _StepBasic.Handle_StepBasic_ProductContext_DownCast(t)
Handle_StepBasic_ProductContext_DownCast = _StepBasic.Handle_StepBasic_ProductContext_DownCast

def Handle_StepBasic_ProductContext_IsNull(t: 'opencascade::handle< StepBasic_ProductContext > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductContext_IsNull(t)
Handle_StepBasic_ProductContext_IsNull = _StepBasic.Handle_StepBasic_ProductContext_IsNull

def Handle_StepBasic_ProductDefinitionContext_Create() -> "opencascade::handle< StepBasic_ProductDefinitionContext >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionContext_Create()
Handle_StepBasic_ProductDefinitionContext_Create = _StepBasic.Handle_StepBasic_ProductDefinitionContext_Create

def Handle_StepBasic_ProductDefinitionContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinitionContext >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionContext_DownCast(t)
Handle_StepBasic_ProductDefinitionContext_DownCast = _StepBasic.Handle_StepBasic_ProductDefinitionContext_DownCast

def Handle_StepBasic_ProductDefinitionContext_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinitionContext > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinitionContext_IsNull(t)
Handle_StepBasic_ProductDefinitionContext_IsNull = _StepBasic.Handle_StepBasic_ProductDefinitionContext_IsNull

def Handle_StepBasic_ProductDefinitionEffectivity_Create() -> "opencascade::handle< StepBasic_ProductDefinitionEffectivity >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionEffectivity_Create()
Handle_StepBasic_ProductDefinitionEffectivity_Create = _StepBasic.Handle_StepBasic_ProductDefinitionEffectivity_Create

def Handle_StepBasic_ProductDefinitionEffectivity_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinitionEffectivity >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionEffectivity_DownCast(t)
Handle_StepBasic_ProductDefinitionEffectivity_DownCast = _StepBasic.Handle_StepBasic_ProductDefinitionEffectivity_DownCast

def Handle_StepBasic_ProductDefinitionEffectivity_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinitionEffectivity > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinitionEffectivity_IsNull(t)
Handle_StepBasic_ProductDefinitionEffectivity_IsNull = _StepBasic.Handle_StepBasic_ProductDefinitionEffectivity_IsNull

def Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_Create() -> "opencascade::handle< StepBasic_ProductDefinitionFormationWithSpecifiedSource >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_Create()
Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_Create = _StepBasic.Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_Create

def Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinitionFormationWithSpecifiedSource >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_DownCast(t)
Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_DownCast = _StepBasic.Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_DownCast

def Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinitionFormationWithSpecifiedSource > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_IsNull(t)
Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_IsNull = _StepBasic.Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_IsNull

def Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_Create() -> "opencascade::handle< StepBasic_ProductDefinitionReferenceWithLocalRepresentation >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_Create()
Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_Create = _StepBasic.Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_Create

def Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinitionReferenceWithLocalRepresentation >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_DownCast(t)
Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_DownCast = _StepBasic.Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_DownCast

def Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinitionReferenceWithLocalRepresentation > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_IsNull(t)
Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_IsNull = _StepBasic.Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_IsNull

def Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_Create() -> "opencascade::handle< StepBasic_ProductDefinitionWithAssociatedDocuments >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_Create()
Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_Create = _StepBasic.Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_Create

def Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductDefinitionWithAssociatedDocuments >":
    return _StepBasic.Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_DownCast(t)
Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_DownCast = _StepBasic.Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_DownCast

def Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_IsNull(t: 'opencascade::handle< StepBasic_ProductDefinitionWithAssociatedDocuments > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_IsNull(t)
Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_IsNull = _StepBasic.Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_IsNull

def Handle_StepBasic_ProductRelatedProductCategory_Create() -> "opencascade::handle< StepBasic_ProductRelatedProductCategory >":
    return _StepBasic.Handle_StepBasic_ProductRelatedProductCategory_Create()
Handle_StepBasic_ProductRelatedProductCategory_Create = _StepBasic.Handle_StepBasic_ProductRelatedProductCategory_Create

def Handle_StepBasic_ProductRelatedProductCategory_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductRelatedProductCategory >":
    return _StepBasic.Handle_StepBasic_ProductRelatedProductCategory_DownCast(t)
Handle_StepBasic_ProductRelatedProductCategory_DownCast = _StepBasic.Handle_StepBasic_ProductRelatedProductCategory_DownCast

def Handle_StepBasic_ProductRelatedProductCategory_IsNull(t: 'opencascade::handle< StepBasic_ProductRelatedProductCategory > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductRelatedProductCategory_IsNull(t)
Handle_StepBasic_ProductRelatedProductCategory_IsNull = _StepBasic.Handle_StepBasic_ProductRelatedProductCategory_IsNull

def Handle_StepBasic_RatioMeasureWithUnit_Create() -> "opencascade::handle< StepBasic_RatioMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_RatioMeasureWithUnit_Create()
Handle_StepBasic_RatioMeasureWithUnit_Create = _StepBasic.Handle_StepBasic_RatioMeasureWithUnit_Create

def Handle_StepBasic_RatioMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_RatioMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_RatioMeasureWithUnit_DownCast(t)
Handle_StepBasic_RatioMeasureWithUnit_DownCast = _StepBasic.Handle_StepBasic_RatioMeasureWithUnit_DownCast

def Handle_StepBasic_RatioMeasureWithUnit_IsNull(t: 'opencascade::handle< StepBasic_RatioMeasureWithUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_RatioMeasureWithUnit_IsNull(t)
Handle_StepBasic_RatioMeasureWithUnit_IsNull = _StepBasic.Handle_StepBasic_RatioMeasureWithUnit_IsNull

def Handle_StepBasic_RatioUnit_Create() -> "opencascade::handle< StepBasic_RatioUnit >":
    return _StepBasic.Handle_StepBasic_RatioUnit_Create()
Handle_StepBasic_RatioUnit_Create = _StepBasic.Handle_StepBasic_RatioUnit_Create

def Handle_StepBasic_RatioUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_RatioUnit >":
    return _StepBasic.Handle_StepBasic_RatioUnit_DownCast(t)
Handle_StepBasic_RatioUnit_DownCast = _StepBasic.Handle_StepBasic_RatioUnit_DownCast

def Handle_StepBasic_RatioUnit_IsNull(t: 'opencascade::handle< StepBasic_RatioUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_RatioUnit_IsNull(t)
Handle_StepBasic_RatioUnit_IsNull = _StepBasic.Handle_StepBasic_RatioUnit_IsNull

def Handle_StepBasic_SiUnit_Create() -> "opencascade::handle< StepBasic_SiUnit >":
    return _StepBasic.Handle_StepBasic_SiUnit_Create()
Handle_StepBasic_SiUnit_Create = _StepBasic.Handle_StepBasic_SiUnit_Create

def Handle_StepBasic_SiUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnit >":
    return _StepBasic.Handle_StepBasic_SiUnit_DownCast(t)
Handle_StepBasic_SiUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnit_DownCast

def Handle_StepBasic_SiUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnit_IsNull(t)
Handle_StepBasic_SiUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnit_IsNull

def Handle_StepBasic_SolidAngleMeasureWithUnit_Create() -> "opencascade::handle< StepBasic_SolidAngleMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_SolidAngleMeasureWithUnit_Create()
Handle_StepBasic_SolidAngleMeasureWithUnit_Create = _StepBasic.Handle_StepBasic_SolidAngleMeasureWithUnit_Create

def Handle_StepBasic_SolidAngleMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SolidAngleMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_SolidAngleMeasureWithUnit_DownCast(t)
Handle_StepBasic_SolidAngleMeasureWithUnit_DownCast = _StepBasic.Handle_StepBasic_SolidAngleMeasureWithUnit_DownCast

def Handle_StepBasic_SolidAngleMeasureWithUnit_IsNull(t: 'opencascade::handle< StepBasic_SolidAngleMeasureWithUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SolidAngleMeasureWithUnit_IsNull(t)
Handle_StepBasic_SolidAngleMeasureWithUnit_IsNull = _StepBasic.Handle_StepBasic_SolidAngleMeasureWithUnit_IsNull

def Handle_StepBasic_SolidAngleUnit_Create() -> "opencascade::handle< StepBasic_SolidAngleUnit >":
    return _StepBasic.Handle_StepBasic_SolidAngleUnit_Create()
Handle_StepBasic_SolidAngleUnit_Create = _StepBasic.Handle_StepBasic_SolidAngleUnit_Create

def Handle_StepBasic_SolidAngleUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SolidAngleUnit >":
    return _StepBasic.Handle_StepBasic_SolidAngleUnit_DownCast(t)
Handle_StepBasic_SolidAngleUnit_DownCast = _StepBasic.Handle_StepBasic_SolidAngleUnit_DownCast

def Handle_StepBasic_SolidAngleUnit_IsNull(t: 'opencascade::handle< StepBasic_SolidAngleUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SolidAngleUnit_IsNull(t)
Handle_StepBasic_SolidAngleUnit_IsNull = _StepBasic.Handle_StepBasic_SolidAngleUnit_IsNull

def Handle_StepBasic_ThermodynamicTemperatureUnit_Create() -> "opencascade::handle< StepBasic_ThermodynamicTemperatureUnit >":
    return _StepBasic.Handle_StepBasic_ThermodynamicTemperatureUnit_Create()
Handle_StepBasic_ThermodynamicTemperatureUnit_Create = _StepBasic.Handle_StepBasic_ThermodynamicTemperatureUnit_Create

def Handle_StepBasic_ThermodynamicTemperatureUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ThermodynamicTemperatureUnit >":
    return _StepBasic.Handle_StepBasic_ThermodynamicTemperatureUnit_DownCast(t)
Handle_StepBasic_ThermodynamicTemperatureUnit_DownCast = _StepBasic.Handle_StepBasic_ThermodynamicTemperatureUnit_DownCast

def Handle_StepBasic_ThermodynamicTemperatureUnit_IsNull(t: 'opencascade::handle< StepBasic_ThermodynamicTemperatureUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ThermodynamicTemperatureUnit_IsNull(t)
Handle_StepBasic_ThermodynamicTemperatureUnit_IsNull = _StepBasic.Handle_StepBasic_ThermodynamicTemperatureUnit_IsNull

def Handle_StepBasic_TimeMeasureWithUnit_Create() -> "opencascade::handle< StepBasic_TimeMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_TimeMeasureWithUnit_Create()
Handle_StepBasic_TimeMeasureWithUnit_Create = _StepBasic.Handle_StepBasic_TimeMeasureWithUnit_Create

def Handle_StepBasic_TimeMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_TimeMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_TimeMeasureWithUnit_DownCast(t)
Handle_StepBasic_TimeMeasureWithUnit_DownCast = _StepBasic.Handle_StepBasic_TimeMeasureWithUnit_DownCast

def Handle_StepBasic_TimeMeasureWithUnit_IsNull(t: 'opencascade::handle< StepBasic_TimeMeasureWithUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_TimeMeasureWithUnit_IsNull(t)
Handle_StepBasic_TimeMeasureWithUnit_IsNull = _StepBasic.Handle_StepBasic_TimeMeasureWithUnit_IsNull

def Handle_StepBasic_TimeUnit_Create() -> "opencascade::handle< StepBasic_TimeUnit >":
    return _StepBasic.Handle_StepBasic_TimeUnit_Create()
Handle_StepBasic_TimeUnit_Create = _StepBasic.Handle_StepBasic_TimeUnit_Create

def Handle_StepBasic_TimeUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_TimeUnit >":
    return _StepBasic.Handle_StepBasic_TimeUnit_DownCast(t)
Handle_StepBasic_TimeUnit_DownCast = _StepBasic.Handle_StepBasic_TimeUnit_DownCast

def Handle_StepBasic_TimeUnit_IsNull(t: 'opencascade::handle< StepBasic_TimeUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_TimeUnit_IsNull(t)
Handle_StepBasic_TimeUnit_IsNull = _StepBasic.Handle_StepBasic_TimeUnit_IsNull

def Handle_StepBasic_UncertaintyMeasureWithUnit_Create() -> "opencascade::handle< StepBasic_UncertaintyMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_UncertaintyMeasureWithUnit_Create()
Handle_StepBasic_UncertaintyMeasureWithUnit_Create = _StepBasic.Handle_StepBasic_UncertaintyMeasureWithUnit_Create

def Handle_StepBasic_UncertaintyMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_UncertaintyMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_UncertaintyMeasureWithUnit_DownCast(t)
Handle_StepBasic_UncertaintyMeasureWithUnit_DownCast = _StepBasic.Handle_StepBasic_UncertaintyMeasureWithUnit_DownCast

def Handle_StepBasic_UncertaintyMeasureWithUnit_IsNull(t: 'opencascade::handle< StepBasic_UncertaintyMeasureWithUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_UncertaintyMeasureWithUnit_IsNull(t)
Handle_StepBasic_UncertaintyMeasureWithUnit_IsNull = _StepBasic.Handle_StepBasic_UncertaintyMeasureWithUnit_IsNull

def Handle_StepBasic_VolumeUnit_Create() -> "opencascade::handle< StepBasic_VolumeUnit >":
    return _StepBasic.Handle_StepBasic_VolumeUnit_Create()
Handle_StepBasic_VolumeUnit_Create = _StepBasic.Handle_StepBasic_VolumeUnit_Create

def Handle_StepBasic_VolumeUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_VolumeUnit >":
    return _StepBasic.Handle_StepBasic_VolumeUnit_DownCast(t)
Handle_StepBasic_VolumeUnit_DownCast = _StepBasic.Handle_StepBasic_VolumeUnit_DownCast

def Handle_StepBasic_VolumeUnit_IsNull(t: 'opencascade::handle< StepBasic_VolumeUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_VolumeUnit_IsNull(t)
Handle_StepBasic_VolumeUnit_IsNull = _StepBasic.Handle_StepBasic_VolumeUnit_IsNull

def Handle_StepBasic_WeekOfYearAndDayDate_Create() -> "opencascade::handle< StepBasic_WeekOfYearAndDayDate >":
    return _StepBasic.Handle_StepBasic_WeekOfYearAndDayDate_Create()
Handle_StepBasic_WeekOfYearAndDayDate_Create = _StepBasic.Handle_StepBasic_WeekOfYearAndDayDate_Create

def Handle_StepBasic_WeekOfYearAndDayDate_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_WeekOfYearAndDayDate >":
    return _StepBasic.Handle_StepBasic_WeekOfYearAndDayDate_DownCast(t)
Handle_StepBasic_WeekOfYearAndDayDate_DownCast = _StepBasic.Handle_StepBasic_WeekOfYearAndDayDate_DownCast

def Handle_StepBasic_WeekOfYearAndDayDate_IsNull(t: 'opencascade::handle< StepBasic_WeekOfYearAndDayDate > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_WeekOfYearAndDayDate_IsNull(t)
Handle_StepBasic_WeekOfYearAndDayDate_IsNull = _StepBasic.Handle_StepBasic_WeekOfYearAndDayDate_IsNull

def Handle_StepBasic_ConversionBasedUnitAndAreaUnit_Create() -> "opencascade::handle< StepBasic_ConversionBasedUnitAndAreaUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndAreaUnit_Create()
Handle_StepBasic_ConversionBasedUnitAndAreaUnit_Create = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndAreaUnit_Create

def Handle_StepBasic_ConversionBasedUnitAndAreaUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ConversionBasedUnitAndAreaUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndAreaUnit_DownCast(t)
Handle_StepBasic_ConversionBasedUnitAndAreaUnit_DownCast = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndAreaUnit_DownCast

def Handle_StepBasic_ConversionBasedUnitAndAreaUnit_IsNull(t: 'opencascade::handle< StepBasic_ConversionBasedUnitAndAreaUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndAreaUnit_IsNull(t)
Handle_StepBasic_ConversionBasedUnitAndAreaUnit_IsNull = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndAreaUnit_IsNull

def Handle_StepBasic_ConversionBasedUnitAndLengthUnit_Create() -> "opencascade::handle< StepBasic_ConversionBasedUnitAndLengthUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndLengthUnit_Create()
Handle_StepBasic_ConversionBasedUnitAndLengthUnit_Create = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndLengthUnit_Create

def Handle_StepBasic_ConversionBasedUnitAndLengthUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ConversionBasedUnitAndLengthUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndLengthUnit_DownCast(t)
Handle_StepBasic_ConversionBasedUnitAndLengthUnit_DownCast = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndLengthUnit_DownCast

def Handle_StepBasic_ConversionBasedUnitAndLengthUnit_IsNull(t: 'opencascade::handle< StepBasic_ConversionBasedUnitAndLengthUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndLengthUnit_IsNull(t)
Handle_StepBasic_ConversionBasedUnitAndLengthUnit_IsNull = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndLengthUnit_IsNull

def Handle_StepBasic_ConversionBasedUnitAndMassUnit_Create() -> "opencascade::handle< StepBasic_ConversionBasedUnitAndMassUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndMassUnit_Create()
Handle_StepBasic_ConversionBasedUnitAndMassUnit_Create = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndMassUnit_Create

def Handle_StepBasic_ConversionBasedUnitAndMassUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ConversionBasedUnitAndMassUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndMassUnit_DownCast(t)
Handle_StepBasic_ConversionBasedUnitAndMassUnit_DownCast = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndMassUnit_DownCast

def Handle_StepBasic_ConversionBasedUnitAndMassUnit_IsNull(t: 'opencascade::handle< StepBasic_ConversionBasedUnitAndMassUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndMassUnit_IsNull(t)
Handle_StepBasic_ConversionBasedUnitAndMassUnit_IsNull = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndMassUnit_IsNull

def Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_Create() -> "opencascade::handle< StepBasic_ConversionBasedUnitAndPlaneAngleUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_Create()
Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_Create = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_Create

def Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ConversionBasedUnitAndPlaneAngleUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_DownCast(t)
Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_DownCast = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_DownCast

def Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_IsNull(t: 'opencascade::handle< StepBasic_ConversionBasedUnitAndPlaneAngleUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_IsNull(t)
Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_IsNull = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_IsNull

def Handle_StepBasic_ConversionBasedUnitAndRatioUnit_Create() -> "opencascade::handle< StepBasic_ConversionBasedUnitAndRatioUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndRatioUnit_Create()
Handle_StepBasic_ConversionBasedUnitAndRatioUnit_Create = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndRatioUnit_Create

def Handle_StepBasic_ConversionBasedUnitAndRatioUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ConversionBasedUnitAndRatioUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndRatioUnit_DownCast(t)
Handle_StepBasic_ConversionBasedUnitAndRatioUnit_DownCast = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndRatioUnit_DownCast

def Handle_StepBasic_ConversionBasedUnitAndRatioUnit_IsNull(t: 'opencascade::handle< StepBasic_ConversionBasedUnitAndRatioUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndRatioUnit_IsNull(t)
Handle_StepBasic_ConversionBasedUnitAndRatioUnit_IsNull = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndRatioUnit_IsNull

def Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_Create() -> "opencascade::handle< StepBasic_ConversionBasedUnitAndSolidAngleUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_Create()
Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_Create = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_Create

def Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ConversionBasedUnitAndSolidAngleUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_DownCast(t)
Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_DownCast = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_DownCast

def Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_IsNull(t: 'opencascade::handle< StepBasic_ConversionBasedUnitAndSolidAngleUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_IsNull(t)
Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_IsNull = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_IsNull

def Handle_StepBasic_ConversionBasedUnitAndTimeUnit_Create() -> "opencascade::handle< StepBasic_ConversionBasedUnitAndTimeUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndTimeUnit_Create()
Handle_StepBasic_ConversionBasedUnitAndTimeUnit_Create = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndTimeUnit_Create

def Handle_StepBasic_ConversionBasedUnitAndTimeUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ConversionBasedUnitAndTimeUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndTimeUnit_DownCast(t)
Handle_StepBasic_ConversionBasedUnitAndTimeUnit_DownCast = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndTimeUnit_DownCast

def Handle_StepBasic_ConversionBasedUnitAndTimeUnit_IsNull(t: 'opencascade::handle< StepBasic_ConversionBasedUnitAndTimeUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndTimeUnit_IsNull(t)
Handle_StepBasic_ConversionBasedUnitAndTimeUnit_IsNull = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndTimeUnit_IsNull

def Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_Create() -> "opencascade::handle< StepBasic_ConversionBasedUnitAndVolumeUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_Create()
Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_Create = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_Create

def Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ConversionBasedUnitAndVolumeUnit >":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_DownCast(t)
Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_DownCast = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_DownCast

def Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_IsNull(t: 'opencascade::handle< StepBasic_ConversionBasedUnitAndVolumeUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_IsNull(t)
Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_IsNull = _StepBasic.Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_IsNull

def Handle_StepBasic_DesignContext_Create() -> "opencascade::handle< StepBasic_DesignContext >":
    return _StepBasic.Handle_StepBasic_DesignContext_Create()
Handle_StepBasic_DesignContext_Create = _StepBasic.Handle_StepBasic_DesignContext_Create

def Handle_StepBasic_DesignContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_DesignContext >":
    return _StepBasic.Handle_StepBasic_DesignContext_DownCast(t)
Handle_StepBasic_DesignContext_DownCast = _StepBasic.Handle_StepBasic_DesignContext_DownCast

def Handle_StepBasic_DesignContext_IsNull(t: 'opencascade::handle< StepBasic_DesignContext > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_DesignContext_IsNull(t)
Handle_StepBasic_DesignContext_IsNull = _StepBasic.Handle_StepBasic_DesignContext_IsNull

def Handle_StepBasic_MechanicalContext_Create() -> "opencascade::handle< StepBasic_MechanicalContext >":
    return _StepBasic.Handle_StepBasic_MechanicalContext_Create()
Handle_StepBasic_MechanicalContext_Create = _StepBasic.Handle_StepBasic_MechanicalContext_Create

def Handle_StepBasic_MechanicalContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_MechanicalContext >":
    return _StepBasic.Handle_StepBasic_MechanicalContext_DownCast(t)
Handle_StepBasic_MechanicalContext_DownCast = _StepBasic.Handle_StepBasic_MechanicalContext_DownCast

def Handle_StepBasic_MechanicalContext_IsNull(t: 'opencascade::handle< StepBasic_MechanicalContext > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_MechanicalContext_IsNull(t)
Handle_StepBasic_MechanicalContext_IsNull = _StepBasic.Handle_StepBasic_MechanicalContext_IsNull

def Handle_StepBasic_ProductType_Create() -> "opencascade::handle< StepBasic_ProductType >":
    return _StepBasic.Handle_StepBasic_ProductType_Create()
Handle_StepBasic_ProductType_Create = _StepBasic.Handle_StepBasic_ProductType_Create

def Handle_StepBasic_ProductType_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_ProductType >":
    return _StepBasic.Handle_StepBasic_ProductType_DownCast(t)
Handle_StepBasic_ProductType_DownCast = _StepBasic.Handle_StepBasic_ProductType_DownCast

def Handle_StepBasic_ProductType_IsNull(t: 'opencascade::handle< StepBasic_ProductType > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_ProductType_IsNull(t)
Handle_StepBasic_ProductType_IsNull = _StepBasic.Handle_StepBasic_ProductType_IsNull

def Handle_StepBasic_SiUnitAndAreaUnit_Create() -> "opencascade::handle< StepBasic_SiUnitAndAreaUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndAreaUnit_Create()
Handle_StepBasic_SiUnitAndAreaUnit_Create = _StepBasic.Handle_StepBasic_SiUnitAndAreaUnit_Create

def Handle_StepBasic_SiUnitAndAreaUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnitAndAreaUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndAreaUnit_DownCast(t)
Handle_StepBasic_SiUnitAndAreaUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnitAndAreaUnit_DownCast

def Handle_StepBasic_SiUnitAndAreaUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnitAndAreaUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnitAndAreaUnit_IsNull(t)
Handle_StepBasic_SiUnitAndAreaUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnitAndAreaUnit_IsNull

def Handle_StepBasic_SiUnitAndLengthUnit_Create() -> "opencascade::handle< StepBasic_SiUnitAndLengthUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndLengthUnit_Create()
Handle_StepBasic_SiUnitAndLengthUnit_Create = _StepBasic.Handle_StepBasic_SiUnitAndLengthUnit_Create

def Handle_StepBasic_SiUnitAndLengthUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnitAndLengthUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndLengthUnit_DownCast(t)
Handle_StepBasic_SiUnitAndLengthUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnitAndLengthUnit_DownCast

def Handle_StepBasic_SiUnitAndLengthUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnitAndLengthUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnitAndLengthUnit_IsNull(t)
Handle_StepBasic_SiUnitAndLengthUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnitAndLengthUnit_IsNull

def Handle_StepBasic_SiUnitAndMassUnit_Create() -> "opencascade::handle< StepBasic_SiUnitAndMassUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndMassUnit_Create()
Handle_StepBasic_SiUnitAndMassUnit_Create = _StepBasic.Handle_StepBasic_SiUnitAndMassUnit_Create

def Handle_StepBasic_SiUnitAndMassUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnitAndMassUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndMassUnit_DownCast(t)
Handle_StepBasic_SiUnitAndMassUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnitAndMassUnit_DownCast

def Handle_StepBasic_SiUnitAndMassUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnitAndMassUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnitAndMassUnit_IsNull(t)
Handle_StepBasic_SiUnitAndMassUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnitAndMassUnit_IsNull

def Handle_StepBasic_SiUnitAndPlaneAngleUnit_Create() -> "opencascade::handle< StepBasic_SiUnitAndPlaneAngleUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndPlaneAngleUnit_Create()
Handle_StepBasic_SiUnitAndPlaneAngleUnit_Create = _StepBasic.Handle_StepBasic_SiUnitAndPlaneAngleUnit_Create

def Handle_StepBasic_SiUnitAndPlaneAngleUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnitAndPlaneAngleUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndPlaneAngleUnit_DownCast(t)
Handle_StepBasic_SiUnitAndPlaneAngleUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnitAndPlaneAngleUnit_DownCast

def Handle_StepBasic_SiUnitAndPlaneAngleUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnitAndPlaneAngleUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnitAndPlaneAngleUnit_IsNull(t)
Handle_StepBasic_SiUnitAndPlaneAngleUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnitAndPlaneAngleUnit_IsNull

def Handle_StepBasic_SiUnitAndRatioUnit_Create() -> "opencascade::handle< StepBasic_SiUnitAndRatioUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndRatioUnit_Create()
Handle_StepBasic_SiUnitAndRatioUnit_Create = _StepBasic.Handle_StepBasic_SiUnitAndRatioUnit_Create

def Handle_StepBasic_SiUnitAndRatioUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnitAndRatioUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndRatioUnit_DownCast(t)
Handle_StepBasic_SiUnitAndRatioUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnitAndRatioUnit_DownCast

def Handle_StepBasic_SiUnitAndRatioUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnitAndRatioUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnitAndRatioUnit_IsNull(t)
Handle_StepBasic_SiUnitAndRatioUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnitAndRatioUnit_IsNull

def Handle_StepBasic_SiUnitAndSolidAngleUnit_Create() -> "opencascade::handle< StepBasic_SiUnitAndSolidAngleUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndSolidAngleUnit_Create()
Handle_StepBasic_SiUnitAndSolidAngleUnit_Create = _StepBasic.Handle_StepBasic_SiUnitAndSolidAngleUnit_Create

def Handle_StepBasic_SiUnitAndSolidAngleUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnitAndSolidAngleUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndSolidAngleUnit_DownCast(t)
Handle_StepBasic_SiUnitAndSolidAngleUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnitAndSolidAngleUnit_DownCast

def Handle_StepBasic_SiUnitAndSolidAngleUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnitAndSolidAngleUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnitAndSolidAngleUnit_IsNull(t)
Handle_StepBasic_SiUnitAndSolidAngleUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnitAndSolidAngleUnit_IsNull

def Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_Create() -> "opencascade::handle< StepBasic_SiUnitAndThermodynamicTemperatureUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_Create()
Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_Create = _StepBasic.Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_Create

def Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnitAndThermodynamicTemperatureUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_DownCast(t)
Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_DownCast

def Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnitAndThermodynamicTemperatureUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_IsNull(t)
Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_IsNull

def Handle_StepBasic_SiUnitAndTimeUnit_Create() -> "opencascade::handle< StepBasic_SiUnitAndTimeUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndTimeUnit_Create()
Handle_StepBasic_SiUnitAndTimeUnit_Create = _StepBasic.Handle_StepBasic_SiUnitAndTimeUnit_Create

def Handle_StepBasic_SiUnitAndTimeUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnitAndTimeUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndTimeUnit_DownCast(t)
Handle_StepBasic_SiUnitAndTimeUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnitAndTimeUnit_DownCast

def Handle_StepBasic_SiUnitAndTimeUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnitAndTimeUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnitAndTimeUnit_IsNull(t)
Handle_StepBasic_SiUnitAndTimeUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnitAndTimeUnit_IsNull

def Handle_StepBasic_SiUnitAndVolumeUnit_Create() -> "opencascade::handle< StepBasic_SiUnitAndVolumeUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndVolumeUnit_Create()
Handle_StepBasic_SiUnitAndVolumeUnit_Create = _StepBasic.Handle_StepBasic_SiUnitAndVolumeUnit_Create

def Handle_StepBasic_SiUnitAndVolumeUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_SiUnitAndVolumeUnit >":
    return _StepBasic.Handle_StepBasic_SiUnitAndVolumeUnit_DownCast(t)
Handle_StepBasic_SiUnitAndVolumeUnit_DownCast = _StepBasic.Handle_StepBasic_SiUnitAndVolumeUnit_DownCast

def Handle_StepBasic_SiUnitAndVolumeUnit_IsNull(t: 'opencascade::handle< StepBasic_SiUnitAndVolumeUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_SiUnitAndVolumeUnit_IsNull(t)
Handle_StepBasic_SiUnitAndVolumeUnit_IsNull = _StepBasic.Handle_StepBasic_SiUnitAndVolumeUnit_IsNull

def Handle_StepBasic_HArray1OfOrganization_Create() -> "opencascade::handle< StepBasic_HArray1OfOrganization >":
    return _StepBasic.Handle_StepBasic_HArray1OfOrganization_Create()
Handle_StepBasic_HArray1OfOrganization_Create = _StepBasic.Handle_StepBasic_HArray1OfOrganization_Create

def Handle_StepBasic_HArray1OfOrganization_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfOrganization >":
    return _StepBasic.Handle_StepBasic_HArray1OfOrganization_DownCast(t)
Handle_StepBasic_HArray1OfOrganization_DownCast = _StepBasic.Handle_StepBasic_HArray1OfOrganization_DownCast

def Handle_StepBasic_HArray1OfOrganization_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfOrganization > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfOrganization_IsNull(t)
Handle_StepBasic_HArray1OfOrganization_IsNull = _StepBasic.Handle_StepBasic_HArray1OfOrganization_IsNull

def Handle_StepBasic_HArray1OfProductDefinition_Create() -> "opencascade::handle< StepBasic_HArray1OfProductDefinition >":
    return _StepBasic.Handle_StepBasic_HArray1OfProductDefinition_Create()
Handle_StepBasic_HArray1OfProductDefinition_Create = _StepBasic.Handle_StepBasic_HArray1OfProductDefinition_Create

def Handle_StepBasic_HArray1OfProductDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfProductDefinition >":
    return _StepBasic.Handle_StepBasic_HArray1OfProductDefinition_DownCast(t)
Handle_StepBasic_HArray1OfProductDefinition_DownCast = _StepBasic.Handle_StepBasic_HArray1OfProductDefinition_DownCast

def Handle_StepBasic_HArray1OfProductDefinition_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfProductDefinition > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfProductDefinition_IsNull(t)
Handle_StepBasic_HArray1OfProductDefinition_IsNull = _StepBasic.Handle_StepBasic_HArray1OfProductDefinition_IsNull

def Handle_StepBasic_HArray1OfDerivedUnitElement_Create() -> "opencascade::handle< StepBasic_HArray1OfDerivedUnitElement >":
    return _StepBasic.Handle_StepBasic_HArray1OfDerivedUnitElement_Create()
Handle_StepBasic_HArray1OfDerivedUnitElement_Create = _StepBasic.Handle_StepBasic_HArray1OfDerivedUnitElement_Create

def Handle_StepBasic_HArray1OfDerivedUnitElement_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfDerivedUnitElement >":
    return _StepBasic.Handle_StepBasic_HArray1OfDerivedUnitElement_DownCast(t)
Handle_StepBasic_HArray1OfDerivedUnitElement_DownCast = _StepBasic.Handle_StepBasic_HArray1OfDerivedUnitElement_DownCast

def Handle_StepBasic_HArray1OfDerivedUnitElement_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfDerivedUnitElement > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfDerivedUnitElement_IsNull(t)
Handle_StepBasic_HArray1OfDerivedUnitElement_IsNull = _StepBasic.Handle_StepBasic_HArray1OfDerivedUnitElement_IsNull

def Handle_StepBasic_HArray1OfPerson_Create() -> "opencascade::handle< StepBasic_HArray1OfPerson >":
    return _StepBasic.Handle_StepBasic_HArray1OfPerson_Create()
Handle_StepBasic_HArray1OfPerson_Create = _StepBasic.Handle_StepBasic_HArray1OfPerson_Create

def Handle_StepBasic_HArray1OfPerson_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfPerson >":
    return _StepBasic.Handle_StepBasic_HArray1OfPerson_DownCast(t)
Handle_StepBasic_HArray1OfPerson_DownCast = _StepBasic.Handle_StepBasic_HArray1OfPerson_DownCast

def Handle_StepBasic_HArray1OfPerson_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfPerson > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfPerson_IsNull(t)
Handle_StepBasic_HArray1OfPerson_IsNull = _StepBasic.Handle_StepBasic_HArray1OfPerson_IsNull

def Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_Create() -> "opencascade::handle< StepBasic_HArray1OfUncertaintyMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_Create()
Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_Create = _StepBasic.Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_Create

def Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfUncertaintyMeasureWithUnit >":
    return _StepBasic.Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_DownCast(t)
Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_DownCast = _StepBasic.Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_DownCast

def Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfUncertaintyMeasureWithUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_IsNull(t)
Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_IsNull = _StepBasic.Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_IsNull

def Handle_StepBasic_HArray1OfApproval_Create() -> "opencascade::handle< StepBasic_HArray1OfApproval >":
    return _StepBasic.Handle_StepBasic_HArray1OfApproval_Create()
Handle_StepBasic_HArray1OfApproval_Create = _StepBasic.Handle_StepBasic_HArray1OfApproval_Create

def Handle_StepBasic_HArray1OfApproval_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfApproval >":
    return _StepBasic.Handle_StepBasic_HArray1OfApproval_DownCast(t)
Handle_StepBasic_HArray1OfApproval_DownCast = _StepBasic.Handle_StepBasic_HArray1OfApproval_DownCast

def Handle_StepBasic_HArray1OfApproval_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfApproval > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfApproval_IsNull(t)
Handle_StepBasic_HArray1OfApproval_IsNull = _StepBasic.Handle_StepBasic_HArray1OfApproval_IsNull

def Handle_StepBasic_HArray1OfNamedUnit_Create() -> "opencascade::handle< StepBasic_HArray1OfNamedUnit >":
    return _StepBasic.Handle_StepBasic_HArray1OfNamedUnit_Create()
Handle_StepBasic_HArray1OfNamedUnit_Create = _StepBasic.Handle_StepBasic_HArray1OfNamedUnit_Create

def Handle_StepBasic_HArray1OfNamedUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfNamedUnit >":
    return _StepBasic.Handle_StepBasic_HArray1OfNamedUnit_DownCast(t)
Handle_StepBasic_HArray1OfNamedUnit_DownCast = _StepBasic.Handle_StepBasic_HArray1OfNamedUnit_DownCast

def Handle_StepBasic_HArray1OfNamedUnit_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfNamedUnit > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfNamedUnit_IsNull(t)
Handle_StepBasic_HArray1OfNamedUnit_IsNull = _StepBasic.Handle_StepBasic_HArray1OfNamedUnit_IsNull

def Handle_StepBasic_HArray1OfProductContext_Create() -> "opencascade::handle< StepBasic_HArray1OfProductContext >":
    return _StepBasic.Handle_StepBasic_HArray1OfProductContext_Create()
Handle_StepBasic_HArray1OfProductContext_Create = _StepBasic.Handle_StepBasic_HArray1OfProductContext_Create

def Handle_StepBasic_HArray1OfProductContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfProductContext >":
    return _StepBasic.Handle_StepBasic_HArray1OfProductContext_DownCast(t)
Handle_StepBasic_HArray1OfProductContext_DownCast = _StepBasic.Handle_StepBasic_HArray1OfProductContext_DownCast

def Handle_StepBasic_HArray1OfProductContext_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfProductContext > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfProductContext_IsNull(t)
Handle_StepBasic_HArray1OfProductContext_IsNull = _StepBasic.Handle_StepBasic_HArray1OfProductContext_IsNull

def Handle_StepBasic_HArray1OfDocument_Create() -> "opencascade::handle< StepBasic_HArray1OfDocument >":
    return _StepBasic.Handle_StepBasic_HArray1OfDocument_Create()
Handle_StepBasic_HArray1OfDocument_Create = _StepBasic.Handle_StepBasic_HArray1OfDocument_Create

def Handle_StepBasic_HArray1OfDocument_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfDocument >":
    return _StepBasic.Handle_StepBasic_HArray1OfDocument_DownCast(t)
Handle_StepBasic_HArray1OfDocument_DownCast = _StepBasic.Handle_StepBasic_HArray1OfDocument_DownCast

def Handle_StepBasic_HArray1OfDocument_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfDocument > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfDocument_IsNull(t)
Handle_StepBasic_HArray1OfDocument_IsNull = _StepBasic.Handle_StepBasic_HArray1OfDocument_IsNull

def Handle_StepBasic_HArray1OfProduct_Create() -> "opencascade::handle< StepBasic_HArray1OfProduct >":
    return _StepBasic.Handle_StepBasic_HArray1OfProduct_Create()
Handle_StepBasic_HArray1OfProduct_Create = _StepBasic.Handle_StepBasic_HArray1OfProduct_Create

def Handle_StepBasic_HArray1OfProduct_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepBasic_HArray1OfProduct >":
    return _StepBasic.Handle_StepBasic_HArray1OfProduct_DownCast(t)
Handle_StepBasic_HArray1OfProduct_DownCast = _StepBasic.Handle_StepBasic_HArray1OfProduct_DownCast

def Handle_StepBasic_HArray1OfProduct_IsNull(t: 'opencascade::handle< StepBasic_HArray1OfProduct > const &') -> "bool":
    return _StepBasic.Handle_StepBasic_HArray1OfProduct_IsNull(t)
Handle_StepBasic_HArray1OfProduct_IsNull = _StepBasic.Handle_StepBasic_HArray1OfProduct_IsNull
class StepBasic_Array1OfUncertaintyMeasureWithUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_Array1OfUncertaintyMeasureWithUnit(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfUncertaintyMeasureWithUnit

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfUncertaintyMeasureWithUnit.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_begin, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.end = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_end, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_cbegin, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_cend, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Init, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Size, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Length, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_IsEmpty, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Lower, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Upper, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_IsDeletable, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_IsAllocated, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Assign, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Move, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Set, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.First = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_First, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_ChangeFirst, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Last, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_ChangeLast, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Value, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_ChangeValue, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit___call__, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_SetValue, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_Resize, None, StepBasic_Array1OfUncertaintyMeasureWithUnit)
StepBasic_Array1OfUncertaintyMeasureWithUnit_swigregister = _StepBasic.StepBasic_Array1OfUncertaintyMeasureWithUnit_swigregister
StepBasic_Array1OfUncertaintyMeasureWithUnit_swigregister(StepBasic_Array1OfUncertaintyMeasureWithUnit)

class StepBasic_Array1OfDerivedUnitElement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfDerivedUnitElement_swiginit(self, _StepBasic.new_StepBasic_Array1OfDerivedUnitElement(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfDerivedUnitElement

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfDerivedUnitElement.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_begin, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.end = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_end, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_cbegin, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_cend, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Init, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Size, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Length, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_IsEmpty, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Lower, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Upper, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_IsDeletable, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_IsAllocated, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Assign, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Move, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Set, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.First = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_First, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_ChangeFirst, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Last, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_ChangeLast, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Value, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_ChangeValue, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement___call__, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_SetValue, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfDerivedUnitElement_Resize, None, StepBasic_Array1OfDerivedUnitElement)
StepBasic_Array1OfDerivedUnitElement_swigregister = _StepBasic.StepBasic_Array1OfDerivedUnitElement_swigregister
StepBasic_Array1OfDerivedUnitElement_swigregister(StepBasic_Array1OfDerivedUnitElement)

class StepBasic_Array1OfProductContext(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfProductContext_swiginit(self, _StepBasic.new_StepBasic_Array1OfProductContext(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfProductContext

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfProductContext.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_begin, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.end = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_end, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_cbegin, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_cend, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Init, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Size, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Length, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_IsEmpty, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Lower, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Upper, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_IsDeletable, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_IsAllocated, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Assign, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Move, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Set, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.First = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_First, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_ChangeFirst, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Last, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_ChangeLast, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Value, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_ChangeValue, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext___call__, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_SetValue, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfProductContext_Resize, None, StepBasic_Array1OfProductContext)
StepBasic_Array1OfProductContext_swigregister = _StepBasic.StepBasic_Array1OfProductContext_swigregister
StepBasic_Array1OfProductContext_swigregister(StepBasic_Array1OfProductContext)

class StepBasic_Array1OfApproval(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfApproval_swiginit(self, _StepBasic.new_StepBasic_Array1OfApproval(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfApproval

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfApproval.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_begin, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.end = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_end, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_cbegin, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_cend, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Init, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Size, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Length, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_IsEmpty, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Lower, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Upper, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_IsDeletable, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_IsAllocated, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Assign, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Move, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Set, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.First = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_First, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_ChangeFirst, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Last, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_ChangeLast, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Value, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_ChangeValue, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval___call__, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_SetValue, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfApproval_Resize, None, StepBasic_Array1OfApproval)
StepBasic_Array1OfApproval_swigregister = _StepBasic.StepBasic_Array1OfApproval_swigregister
StepBasic_Array1OfApproval_swigregister(StepBasic_Array1OfApproval)

class StepBasic_Array1OfProductDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfProductDefinition_swiginit(self, _StepBasic.new_StepBasic_Array1OfProductDefinition(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfProductDefinition

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfProductDefinition.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_begin, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.end = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_end, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_cbegin, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_cend, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Init, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Size, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Length, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_IsEmpty, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Lower, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Upper, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_IsDeletable, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_IsAllocated, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Assign, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Move, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Set, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.First = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_First, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_ChangeFirst, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Last, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_ChangeLast, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Value, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_ChangeValue, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition___call__, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_SetValue, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfProductDefinition_Resize, None, StepBasic_Array1OfProductDefinition)
StepBasic_Array1OfProductDefinition_swigregister = _StepBasic.StepBasic_Array1OfProductDefinition_swigregister
StepBasic_Array1OfProductDefinition_swigregister(StepBasic_Array1OfProductDefinition)

class StepBasic_Array1OfDocument(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfDocument_swiginit(self, _StepBasic.new_StepBasic_Array1OfDocument(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfDocument

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfDocument.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_begin, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.end = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_end, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_cbegin, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_cend, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Init, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Size, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Length, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_IsEmpty, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Lower, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Upper, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_IsDeletable, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_IsAllocated, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Assign, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Move, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Set, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.First = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_First, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_ChangeFirst, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Last, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_ChangeLast, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Value, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_ChangeValue, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument___call__, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_SetValue, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfDocument_Resize, None, StepBasic_Array1OfDocument)
StepBasic_Array1OfDocument_swigregister = _StepBasic.StepBasic_Array1OfDocument_swigregister
StepBasic_Array1OfDocument_swigregister(StepBasic_Array1OfDocument)

class StepBasic_Array1OfOrganization(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfOrganization_swiginit(self, _StepBasic.new_StepBasic_Array1OfOrganization(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfOrganization

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfOrganization.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_begin, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.end = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_end, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_cbegin, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_cend, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Init, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Size, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Length, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_IsEmpty, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Lower, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Upper, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_IsDeletable, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_IsAllocated, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Assign, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Move, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Set, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.First = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_First, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_ChangeFirst, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Last, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_ChangeLast, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Value, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_ChangeValue, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization___call__, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_SetValue, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfOrganization_Resize, None, StepBasic_Array1OfOrganization)
StepBasic_Array1OfOrganization_swigregister = _StepBasic.StepBasic_Array1OfOrganization_swigregister
StepBasic_Array1OfOrganization_swigregister(StepBasic_Array1OfOrganization)

class StepBasic_Array1OfProduct(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfProduct_swiginit(self, _StepBasic.new_StepBasic_Array1OfProduct(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfProduct

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfProduct.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_begin, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.end = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_end, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_cbegin, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_cend, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Init, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Size, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Length, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_IsEmpty, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Lower, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Upper, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_IsDeletable, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_IsAllocated, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Assign, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Move, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Set, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.First = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_First, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_ChangeFirst, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Last, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_ChangeLast, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Value, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_ChangeValue, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct___call__, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_SetValue, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfProduct_Resize, None, StepBasic_Array1OfProduct)
StepBasic_Array1OfProduct_swigregister = _StepBasic.StepBasic_Array1OfProduct_swigregister
StepBasic_Array1OfProduct_swigregister(StepBasic_Array1OfProduct)

class StepBasic_Array1OfNamedUnit(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfNamedUnit_swiginit(self, _StepBasic.new_StepBasic_Array1OfNamedUnit(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfNamedUnit

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfNamedUnit.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_begin, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.end = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_end, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_cbegin, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_cend, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Init, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Size, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Length, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_IsEmpty, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Lower, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Upper, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_IsDeletable, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_IsAllocated, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Assign, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Move, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Set, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.First = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_First, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_ChangeFirst, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Last, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_ChangeLast, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Value, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_ChangeValue, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit___call__, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_SetValue, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfNamedUnit_Resize, None, StepBasic_Array1OfNamedUnit)
StepBasic_Array1OfNamedUnit_swigregister = _StepBasic.StepBasic_Array1OfNamedUnit_swigregister
StepBasic_Array1OfNamedUnit_swigregister(StepBasic_Array1OfNamedUnit)

class StepBasic_Array1OfPerson(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_Array1OfPerson_swiginit(self, _StepBasic.new_StepBasic_Array1OfPerson(*args))
    __swig_destroy__ = _StepBasic.delete_StepBasic_Array1OfPerson

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepBasic_Array1OfPerson.begin = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_begin, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.end = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_end, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.cbegin = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_cbegin, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.cend = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_cend, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Init = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Init, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Size = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Size, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Length = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Length, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.IsEmpty = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_IsEmpty, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Lower = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Lower, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Upper = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Upper, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.IsDeletable = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_IsDeletable, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.IsAllocated = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_IsAllocated, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Assign = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Assign, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Move = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Move, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Set = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Set, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.First = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_First, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.ChangeFirst = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_ChangeFirst, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Last = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Last, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.ChangeLast = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_ChangeLast, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Value = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Value, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.ChangeValue = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_ChangeValue, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.__call__ = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson___call__, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.SetValue = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_SetValue, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson.Resize = new_instancemethod(_StepBasic.StepBasic_Array1OfPerson_Resize, None, StepBasic_Array1OfPerson)
StepBasic_Array1OfPerson_swigregister = _StepBasic.StepBasic_Array1OfPerson_swigregister
StepBasic_Array1OfPerson_swigregister(StepBasic_Array1OfPerson)

class StepBasic_Action(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChosenMethod(self, *args) -> "opencascade::handle< StepBasic_ActionMethod >":
        """
        * Returns field ChosenMethod
        	:rtype: opencascade::handle<StepBasic_ActionMethod>
        """
        return _StepBasic.StepBasic_Action_ChosenMethod(self, *args)


    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Action_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_Action_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aChosenMethod:
        	:type aChosenMethod: StepBasic_ActionMethod
        	:rtype: None
        """
        return _StepBasic.StepBasic_Action_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Action_Name(self, *args)


    def SetChosenMethod(self, *args) -> "void":
        """
        * Set field ChosenMethod
        	:param ChosenMethod:
        	:type ChosenMethod: StepBasic_ActionMethod
        	:rtype: None
        """
        return _StepBasic.StepBasic_Action_SetChosenMethod(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Action_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Action_SetName(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_Action_swiginit(self, _StepBasic.new_StepBasic_Action(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Action_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Action
StepBasic_Action.ChosenMethod = new_instancemethod(_StepBasic.StepBasic_Action_ChosenMethod, None, StepBasic_Action)
StepBasic_Action.Description = new_instancemethod(_StepBasic.StepBasic_Action_Description, None, StepBasic_Action)
StepBasic_Action.HasDescription = new_instancemethod(_StepBasic.StepBasic_Action_HasDescription, None, StepBasic_Action)
StepBasic_Action.Init = new_instancemethod(_StepBasic.StepBasic_Action_Init, None, StepBasic_Action)
StepBasic_Action.Name = new_instancemethod(_StepBasic.StepBasic_Action_Name, None, StepBasic_Action)
StepBasic_Action.SetChosenMethod = new_instancemethod(_StepBasic.StepBasic_Action_SetChosenMethod, None, StepBasic_Action)
StepBasic_Action.SetDescription = new_instancemethod(_StepBasic.StepBasic_Action_SetDescription, None, StepBasic_Action)
StepBasic_Action.SetName = new_instancemethod(_StepBasic.StepBasic_Action_SetName, None, StepBasic_Action)
StepBasic_Action_swigregister = _StepBasic.StepBasic_Action_swigregister
StepBasic_Action_swigregister(StepBasic_Action)

class StepBasic_ActionAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedAction(self, *args) -> "opencascade::handle< StepBasic_Action >":
        """
        * Returns field AssignedAction
        	:rtype: opencascade::handle<StepBasic_Action>
        """
        return _StepBasic.StepBasic_ActionAssignment_AssignedAction(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAssignedAction:
        	:type aAssignedAction: StepBasic_Action
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionAssignment_Init(self, *args)


    def SetAssignedAction(self, *args) -> "void":
        """
        * Set field AssignedAction
        	:param AssignedAction:
        	:type AssignedAction: StepBasic_Action
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionAssignment_SetAssignedAction(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ActionAssignment_swiginit(self, _StepBasic.new_StepBasic_ActionAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ActionAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ActionAssignment
StepBasic_ActionAssignment.AssignedAction = new_instancemethod(_StepBasic.StepBasic_ActionAssignment_AssignedAction, None, StepBasic_ActionAssignment)
StepBasic_ActionAssignment.Init = new_instancemethod(_StepBasic.StepBasic_ActionAssignment_Init, None, StepBasic_ActionAssignment)
StepBasic_ActionAssignment.SetAssignedAction = new_instancemethod(_StepBasic.StepBasic_ActionAssignment_SetAssignedAction, None, StepBasic_ActionAssignment)
StepBasic_ActionAssignment_swigregister = _StepBasic.StepBasic_ActionAssignment_swigregister
StepBasic_ActionAssignment_swigregister(StepBasic_ActionAssignment)

class StepBasic_ActionMethod(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Consequence(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Consequence
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ActionMethod_Consequence(self, *args)


    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ActionMethod_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_ActionMethod_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aConsequence:
        	:type aConsequence: TCollection_HAsciiString
        	:param aPurpose:
        	:type aPurpose: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionMethod_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ActionMethod_Name(self, *args)


    def Purpose(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Purpose
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ActionMethod_Purpose(self, *args)


    def SetConsequence(self, *args) -> "void":
        """
        * Set field Consequence
        	:param Consequence:
        	:type Consequence: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionMethod_SetConsequence(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionMethod_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionMethod_SetName(self, *args)


    def SetPurpose(self, *args) -> "void":
        """
        * Set field Purpose
        	:param Purpose:
        	:type Purpose: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionMethod_SetPurpose(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ActionMethod_swiginit(self, _StepBasic.new_StepBasic_ActionMethod(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ActionMethod_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ActionMethod
StepBasic_ActionMethod.Consequence = new_instancemethod(_StepBasic.StepBasic_ActionMethod_Consequence, None, StepBasic_ActionMethod)
StepBasic_ActionMethod.Description = new_instancemethod(_StepBasic.StepBasic_ActionMethod_Description, None, StepBasic_ActionMethod)
StepBasic_ActionMethod.HasDescription = new_instancemethod(_StepBasic.StepBasic_ActionMethod_HasDescription, None, StepBasic_ActionMethod)
StepBasic_ActionMethod.Init = new_instancemethod(_StepBasic.StepBasic_ActionMethod_Init, None, StepBasic_ActionMethod)
StepBasic_ActionMethod.Name = new_instancemethod(_StepBasic.StepBasic_ActionMethod_Name, None, StepBasic_ActionMethod)
StepBasic_ActionMethod.Purpose = new_instancemethod(_StepBasic.StepBasic_ActionMethod_Purpose, None, StepBasic_ActionMethod)
StepBasic_ActionMethod.SetConsequence = new_instancemethod(_StepBasic.StepBasic_ActionMethod_SetConsequence, None, StepBasic_ActionMethod)
StepBasic_ActionMethod.SetDescription = new_instancemethod(_StepBasic.StepBasic_ActionMethod_SetDescription, None, StepBasic_ActionMethod)
StepBasic_ActionMethod.SetName = new_instancemethod(_StepBasic.StepBasic_ActionMethod_SetName, None, StepBasic_ActionMethod)
StepBasic_ActionMethod.SetPurpose = new_instancemethod(_StepBasic.StepBasic_ActionMethod_SetPurpose, None, StepBasic_ActionMethod)
StepBasic_ActionMethod_swigregister = _StepBasic.StepBasic_ActionMethod_swigregister
StepBasic_ActionMethod_swigregister(StepBasic_ActionMethod)

class StepBasic_ActionRequestAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedActionRequest(self, *args) -> "opencascade::handle< StepBasic_VersionedActionRequest >":
        """
        * Returns field AssignedActionRequest
        	:rtype: opencascade::handle<StepBasic_VersionedActionRequest>
        """
        return _StepBasic.StepBasic_ActionRequestAssignment_AssignedActionRequest(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAssignedActionRequest:
        	:type aAssignedActionRequest: StepBasic_VersionedActionRequest
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionRequestAssignment_Init(self, *args)


    def SetAssignedActionRequest(self, *args) -> "void":
        """
        * Set field AssignedActionRequest
        	:param AssignedActionRequest:
        	:type AssignedActionRequest: StepBasic_VersionedActionRequest
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionRequestAssignment_SetAssignedActionRequest(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ActionRequestAssignment_swiginit(self, _StepBasic.new_StepBasic_ActionRequestAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ActionRequestAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ActionRequestAssignment
StepBasic_ActionRequestAssignment.AssignedActionRequest = new_instancemethod(_StepBasic.StepBasic_ActionRequestAssignment_AssignedActionRequest, None, StepBasic_ActionRequestAssignment)
StepBasic_ActionRequestAssignment.Init = new_instancemethod(_StepBasic.StepBasic_ActionRequestAssignment_Init, None, StepBasic_ActionRequestAssignment)
StepBasic_ActionRequestAssignment.SetAssignedActionRequest = new_instancemethod(_StepBasic.StepBasic_ActionRequestAssignment_SetAssignedActionRequest, None, StepBasic_ActionRequestAssignment)
StepBasic_ActionRequestAssignment_swigregister = _StepBasic.StepBasic_ActionRequestAssignment_swigregister
StepBasic_ActionRequestAssignment_swigregister(StepBasic_ActionRequestAssignment)

class StepBasic_ActionRequestSolution(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aMethod:
        	:type aMethod: StepBasic_ActionMethod
        	:param aRequest:
        	:type aRequest: StepBasic_VersionedActionRequest
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionRequestSolution_Init(self, *args)


    def Method(self, *args) -> "opencascade::handle< StepBasic_ActionMethod >":
        """
        * Returns field Method
        	:rtype: opencascade::handle<StepBasic_ActionMethod>
        """
        return _StepBasic.StepBasic_ActionRequestSolution_Method(self, *args)


    def Request(self, *args) -> "opencascade::handle< StepBasic_VersionedActionRequest >":
        """
        * Returns field Request
        	:rtype: opencascade::handle<StepBasic_VersionedActionRequest>
        """
        return _StepBasic.StepBasic_ActionRequestSolution_Request(self, *args)


    def SetMethod(self, *args) -> "void":
        """
        * Set field Method
        	:param Method:
        	:type Method: StepBasic_ActionMethod
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionRequestSolution_SetMethod(self, *args)


    def SetRequest(self, *args) -> "void":
        """
        * Set field Request
        	:param Request:
        	:type Request: StepBasic_VersionedActionRequest
        	:rtype: None
        """
        return _StepBasic.StepBasic_ActionRequestSolution_SetRequest(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ActionRequestSolution_swiginit(self, _StepBasic.new_StepBasic_ActionRequestSolution(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ActionRequestSolution_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ActionRequestSolution
StepBasic_ActionRequestSolution.Init = new_instancemethod(_StepBasic.StepBasic_ActionRequestSolution_Init, None, StepBasic_ActionRequestSolution)
StepBasic_ActionRequestSolution.Method = new_instancemethod(_StepBasic.StepBasic_ActionRequestSolution_Method, None, StepBasic_ActionRequestSolution)
StepBasic_ActionRequestSolution.Request = new_instancemethod(_StepBasic.StepBasic_ActionRequestSolution_Request, None, StepBasic_ActionRequestSolution)
StepBasic_ActionRequestSolution.SetMethod = new_instancemethod(_StepBasic.StepBasic_ActionRequestSolution_SetMethod, None, StepBasic_ActionRequestSolution)
StepBasic_ActionRequestSolution.SetRequest = new_instancemethod(_StepBasic.StepBasic_ActionRequestSolution_SetRequest, None, StepBasic_ActionRequestSolution)
StepBasic_ActionRequestSolution_swigregister = _StepBasic.StepBasic_ActionRequestSolution_swigregister
StepBasic_ActionRequestSolution_swigregister(StepBasic_ActionRequestSolution)

class StepBasic_Address(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Country(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_Country(self, *args)


    def ElectronicMailAddress(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_ElectronicMailAddress(self, *args)


    def FacsimileNumber(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_FacsimileNumber(self, *args)


    def HasCountry(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasCountry(self, *args)


    def HasElectronicMailAddress(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasElectronicMailAddress(self, *args)


    def HasFacsimileNumber(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasFacsimileNumber(self, *args)


    def HasInternalLocation(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasInternalLocation(self, *args)


    def HasPostalBox(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasPostalBox(self, *args)


    def HasPostalCode(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasPostalCode(self, *args)


    def HasRegion(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasRegion(self, *args)


    def HasStreet(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasStreet(self, *args)


    def HasStreetNumber(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasStreetNumber(self, *args)


    def HasTelephoneNumber(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasTelephoneNumber(self, *args)


    def HasTelexNumber(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasTelexNumber(self, *args)


    def HasTown(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Address_HasTown(self, *args)


    def Init(self, *args) -> "void":
        """
        :param hasAinternalLocation:
        	:type hasAinternalLocation: bool
        	:param aInternalLocation:
        	:type aInternalLocation: TCollection_HAsciiString
        	:param hasAstreetNumber:
        	:type hasAstreetNumber: bool
        	:param aStreetNumber:
        	:type aStreetNumber: TCollection_HAsciiString
        	:param hasAstreet:
        	:type hasAstreet: bool
        	:param aStreet:
        	:type aStreet: TCollection_HAsciiString
        	:param hasApostalBox:
        	:type hasApostalBox: bool
        	:param aPostalBox:
        	:type aPostalBox: TCollection_HAsciiString
        	:param hasAtown:
        	:type hasAtown: bool
        	:param aTown:
        	:type aTown: TCollection_HAsciiString
        	:param hasAregion:
        	:type hasAregion: bool
        	:param aRegion:
        	:type aRegion: TCollection_HAsciiString
        	:param hasApostalCode:
        	:type hasApostalCode: bool
        	:param aPostalCode:
        	:type aPostalCode: TCollection_HAsciiString
        	:param hasAcountry:
        	:type hasAcountry: bool
        	:param aCountry:
        	:type aCountry: TCollection_HAsciiString
        	:param hasAfacsimileNumber:
        	:type hasAfacsimileNumber: bool
        	:param aFacsimileNumber:
        	:type aFacsimileNumber: TCollection_HAsciiString
        	:param hasAtelephoneNumber:
        	:type hasAtelephoneNumber: bool
        	:param aTelephoneNumber:
        	:type aTelephoneNumber: TCollection_HAsciiString
        	:param hasAelectronicMailAddress:
        	:type hasAelectronicMailAddress: bool
        	:param aElectronicMailAddress:
        	:type aElectronicMailAddress: TCollection_HAsciiString
        	:param hasAtelexNumber:
        	:type hasAtelexNumber: bool
        	:param aTelexNumber:
        	:type aTelexNumber: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_Init(self, *args)


    def InternalLocation(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_InternalLocation(self, *args)


    def PostalBox(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_PostalBox(self, *args)


    def PostalCode(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_PostalCode(self, *args)


    def Region(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_Region(self, *args)


    def SetCountry(self, *args) -> "void":
        """
        :param aCountry:
        	:type aCountry: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetCountry(self, *args)


    def SetElectronicMailAddress(self, *args) -> "void":
        """
        :param aElectronicMailAddress:
        	:type aElectronicMailAddress: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetElectronicMailAddress(self, *args)


    def SetFacsimileNumber(self, *args) -> "void":
        """
        :param aFacsimileNumber:
        	:type aFacsimileNumber: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetFacsimileNumber(self, *args)


    def SetInternalLocation(self, *args) -> "void":
        """
        :param aInternalLocation:
        	:type aInternalLocation: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetInternalLocation(self, *args)


    def SetPostalBox(self, *args) -> "void":
        """
        :param aPostalBox:
        	:type aPostalBox: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetPostalBox(self, *args)


    def SetPostalCode(self, *args) -> "void":
        """
        :param aPostalCode:
        	:type aPostalCode: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetPostalCode(self, *args)


    def SetRegion(self, *args) -> "void":
        """
        :param aRegion:
        	:type aRegion: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetRegion(self, *args)


    def SetStreet(self, *args) -> "void":
        """
        :param aStreet:
        	:type aStreet: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetStreet(self, *args)


    def SetStreetNumber(self, *args) -> "void":
        """
        :param aStreetNumber:
        	:type aStreetNumber: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetStreetNumber(self, *args)


    def SetTelephoneNumber(self, *args) -> "void":
        """
        :param aTelephoneNumber:
        	:type aTelephoneNumber: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetTelephoneNumber(self, *args)


    def SetTelexNumber(self, *args) -> "void":
        """
        :param aTelexNumber:
        	:type aTelexNumber: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetTelexNumber(self, *args)


    def SetTown(self, *args) -> "void":
        """
        :param aTown:
        	:type aTown: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Address_SetTown(self, *args)


    def __init__(self, *args):
        """
        * Returns a Address
        	:rtype: None
        """
        _StepBasic.StepBasic_Address_swiginit(self, _StepBasic.new_StepBasic_Address(*args))

    def Street(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_Street(self, *args)


    def StreetNumber(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_StreetNumber(self, *args)


    def TelephoneNumber(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_TelephoneNumber(self, *args)


    def TelexNumber(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_TelexNumber(self, *args)


    def Town(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Address_Town(self, *args)


    def UnSetCountry(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetCountry(self, *args)


    def UnSetElectronicMailAddress(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetElectronicMailAddress(self, *args)


    def UnSetFacsimileNumber(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetFacsimileNumber(self, *args)


    def UnSetInternalLocation(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetInternalLocation(self, *args)


    def UnSetPostalBox(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetPostalBox(self, *args)


    def UnSetPostalCode(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetPostalCode(self, *args)


    def UnSetRegion(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetRegion(self, *args)


    def UnSetStreet(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetStreet(self, *args)


    def UnSetStreetNumber(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetStreetNumber(self, *args)


    def UnSetTelephoneNumber(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetTelephoneNumber(self, *args)


    def UnSetTelexNumber(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetTelexNumber(self, *args)


    def UnSetTown(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Address_UnSetTown(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Address_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Address
StepBasic_Address.Country = new_instancemethod(_StepBasic.StepBasic_Address_Country, None, StepBasic_Address)
StepBasic_Address.ElectronicMailAddress = new_instancemethod(_StepBasic.StepBasic_Address_ElectronicMailAddress, None, StepBasic_Address)
StepBasic_Address.FacsimileNumber = new_instancemethod(_StepBasic.StepBasic_Address_FacsimileNumber, None, StepBasic_Address)
StepBasic_Address.HasCountry = new_instancemethod(_StepBasic.StepBasic_Address_HasCountry, None, StepBasic_Address)
StepBasic_Address.HasElectronicMailAddress = new_instancemethod(_StepBasic.StepBasic_Address_HasElectronicMailAddress, None, StepBasic_Address)
StepBasic_Address.HasFacsimileNumber = new_instancemethod(_StepBasic.StepBasic_Address_HasFacsimileNumber, None, StepBasic_Address)
StepBasic_Address.HasInternalLocation = new_instancemethod(_StepBasic.StepBasic_Address_HasInternalLocation, None, StepBasic_Address)
StepBasic_Address.HasPostalBox = new_instancemethod(_StepBasic.StepBasic_Address_HasPostalBox, None, StepBasic_Address)
StepBasic_Address.HasPostalCode = new_instancemethod(_StepBasic.StepBasic_Address_HasPostalCode, None, StepBasic_Address)
StepBasic_Address.HasRegion = new_instancemethod(_StepBasic.StepBasic_Address_HasRegion, None, StepBasic_Address)
StepBasic_Address.HasStreet = new_instancemethod(_StepBasic.StepBasic_Address_HasStreet, None, StepBasic_Address)
StepBasic_Address.HasStreetNumber = new_instancemethod(_StepBasic.StepBasic_Address_HasStreetNumber, None, StepBasic_Address)
StepBasic_Address.HasTelephoneNumber = new_instancemethod(_StepBasic.StepBasic_Address_HasTelephoneNumber, None, StepBasic_Address)
StepBasic_Address.HasTelexNumber = new_instancemethod(_StepBasic.StepBasic_Address_HasTelexNumber, None, StepBasic_Address)
StepBasic_Address.HasTown = new_instancemethod(_StepBasic.StepBasic_Address_HasTown, None, StepBasic_Address)
StepBasic_Address.Init = new_instancemethod(_StepBasic.StepBasic_Address_Init, None, StepBasic_Address)
StepBasic_Address.InternalLocation = new_instancemethod(_StepBasic.StepBasic_Address_InternalLocation, None, StepBasic_Address)
StepBasic_Address.PostalBox = new_instancemethod(_StepBasic.StepBasic_Address_PostalBox, None, StepBasic_Address)
StepBasic_Address.PostalCode = new_instancemethod(_StepBasic.StepBasic_Address_PostalCode, None, StepBasic_Address)
StepBasic_Address.Region = new_instancemethod(_StepBasic.StepBasic_Address_Region, None, StepBasic_Address)
StepBasic_Address.SetCountry = new_instancemethod(_StepBasic.StepBasic_Address_SetCountry, None, StepBasic_Address)
StepBasic_Address.SetElectronicMailAddress = new_instancemethod(_StepBasic.StepBasic_Address_SetElectronicMailAddress, None, StepBasic_Address)
StepBasic_Address.SetFacsimileNumber = new_instancemethod(_StepBasic.StepBasic_Address_SetFacsimileNumber, None, StepBasic_Address)
StepBasic_Address.SetInternalLocation = new_instancemethod(_StepBasic.StepBasic_Address_SetInternalLocation, None, StepBasic_Address)
StepBasic_Address.SetPostalBox = new_instancemethod(_StepBasic.StepBasic_Address_SetPostalBox, None, StepBasic_Address)
StepBasic_Address.SetPostalCode = new_instancemethod(_StepBasic.StepBasic_Address_SetPostalCode, None, StepBasic_Address)
StepBasic_Address.SetRegion = new_instancemethod(_StepBasic.StepBasic_Address_SetRegion, None, StepBasic_Address)
StepBasic_Address.SetStreet = new_instancemethod(_StepBasic.StepBasic_Address_SetStreet, None, StepBasic_Address)
StepBasic_Address.SetStreetNumber = new_instancemethod(_StepBasic.StepBasic_Address_SetStreetNumber, None, StepBasic_Address)
StepBasic_Address.SetTelephoneNumber = new_instancemethod(_StepBasic.StepBasic_Address_SetTelephoneNumber, None, StepBasic_Address)
StepBasic_Address.SetTelexNumber = new_instancemethod(_StepBasic.StepBasic_Address_SetTelexNumber, None, StepBasic_Address)
StepBasic_Address.SetTown = new_instancemethod(_StepBasic.StepBasic_Address_SetTown, None, StepBasic_Address)
StepBasic_Address.Street = new_instancemethod(_StepBasic.StepBasic_Address_Street, None, StepBasic_Address)
StepBasic_Address.StreetNumber = new_instancemethod(_StepBasic.StepBasic_Address_StreetNumber, None, StepBasic_Address)
StepBasic_Address.TelephoneNumber = new_instancemethod(_StepBasic.StepBasic_Address_TelephoneNumber, None, StepBasic_Address)
StepBasic_Address.TelexNumber = new_instancemethod(_StepBasic.StepBasic_Address_TelexNumber, None, StepBasic_Address)
StepBasic_Address.Town = new_instancemethod(_StepBasic.StepBasic_Address_Town, None, StepBasic_Address)
StepBasic_Address.UnSetCountry = new_instancemethod(_StepBasic.StepBasic_Address_UnSetCountry, None, StepBasic_Address)
StepBasic_Address.UnSetElectronicMailAddress = new_instancemethod(_StepBasic.StepBasic_Address_UnSetElectronicMailAddress, None, StepBasic_Address)
StepBasic_Address.UnSetFacsimileNumber = new_instancemethod(_StepBasic.StepBasic_Address_UnSetFacsimileNumber, None, StepBasic_Address)
StepBasic_Address.UnSetInternalLocation = new_instancemethod(_StepBasic.StepBasic_Address_UnSetInternalLocation, None, StepBasic_Address)
StepBasic_Address.UnSetPostalBox = new_instancemethod(_StepBasic.StepBasic_Address_UnSetPostalBox, None, StepBasic_Address)
StepBasic_Address.UnSetPostalCode = new_instancemethod(_StepBasic.StepBasic_Address_UnSetPostalCode, None, StepBasic_Address)
StepBasic_Address.UnSetRegion = new_instancemethod(_StepBasic.StepBasic_Address_UnSetRegion, None, StepBasic_Address)
StepBasic_Address.UnSetStreet = new_instancemethod(_StepBasic.StepBasic_Address_UnSetStreet, None, StepBasic_Address)
StepBasic_Address.UnSetStreetNumber = new_instancemethod(_StepBasic.StepBasic_Address_UnSetStreetNumber, None, StepBasic_Address)
StepBasic_Address.UnSetTelephoneNumber = new_instancemethod(_StepBasic.StepBasic_Address_UnSetTelephoneNumber, None, StepBasic_Address)
StepBasic_Address.UnSetTelexNumber = new_instancemethod(_StepBasic.StepBasic_Address_UnSetTelexNumber, None, StepBasic_Address)
StepBasic_Address.UnSetTown = new_instancemethod(_StepBasic.StepBasic_Address_UnSetTown, None, StepBasic_Address)
StepBasic_Address_swigregister = _StepBasic.StepBasic_Address_swigregister
StepBasic_Address_swigregister(StepBasic_Address)

class StepBasic_ApplicationContext(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Application(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ApplicationContext_Application(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aApplication:
        	:type aApplication: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationContext_Init(self, *args)


    def SetApplication(self, *args) -> "void":
        """
        :param aApplication:
        	:type aApplication: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationContext_SetApplication(self, *args)


    def __init__(self, *args):
        """
        * Returns a ApplicationContext
        	:rtype: None
        """
        _StepBasic.StepBasic_ApplicationContext_swiginit(self, _StepBasic.new_StepBasic_ApplicationContext(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ApplicationContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ApplicationContext
StepBasic_ApplicationContext.Application = new_instancemethod(_StepBasic.StepBasic_ApplicationContext_Application, None, StepBasic_ApplicationContext)
StepBasic_ApplicationContext.Init = new_instancemethod(_StepBasic.StepBasic_ApplicationContext_Init, None, StepBasic_ApplicationContext)
StepBasic_ApplicationContext.SetApplication = new_instancemethod(_StepBasic.StepBasic_ApplicationContext_SetApplication, None, StepBasic_ApplicationContext)
StepBasic_ApplicationContext_swigregister = _StepBasic.StepBasic_ApplicationContext_swigregister
StepBasic_ApplicationContext_swigregister(StepBasic_ApplicationContext)

class StepBasic_ApplicationContextElement(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FrameOfReference(self, *args) -> "opencascade::handle< StepBasic_ApplicationContext >":
        """:rtype: opencascade::handle<StepBasic_ApplicationContext>"""
        return _StepBasic.StepBasic_ApplicationContextElement_FrameOfReference(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aFrameOfReference:
        	:type aFrameOfReference: StepBasic_ApplicationContext
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationContextElement_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ApplicationContextElement_Name(self, *args)


    def SetFrameOfReference(self, *args) -> "void":
        """
        :param aFrameOfReference:
        	:type aFrameOfReference: StepBasic_ApplicationContext
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationContextElement_SetFrameOfReference(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationContextElement_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a ApplicationContextElement
        	:rtype: None
        """
        _StepBasic.StepBasic_ApplicationContextElement_swiginit(self, _StepBasic.new_StepBasic_ApplicationContextElement(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ApplicationContextElement_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ApplicationContextElement
StepBasic_ApplicationContextElement.FrameOfReference = new_instancemethod(_StepBasic.StepBasic_ApplicationContextElement_FrameOfReference, None, StepBasic_ApplicationContextElement)
StepBasic_ApplicationContextElement.Init = new_instancemethod(_StepBasic.StepBasic_ApplicationContextElement_Init, None, StepBasic_ApplicationContextElement)
StepBasic_ApplicationContextElement.Name = new_instancemethod(_StepBasic.StepBasic_ApplicationContextElement_Name, None, StepBasic_ApplicationContextElement)
StepBasic_ApplicationContextElement.SetFrameOfReference = new_instancemethod(_StepBasic.StepBasic_ApplicationContextElement_SetFrameOfReference, None, StepBasic_ApplicationContextElement)
StepBasic_ApplicationContextElement.SetName = new_instancemethod(_StepBasic.StepBasic_ApplicationContextElement_SetName, None, StepBasic_ApplicationContextElement)
StepBasic_ApplicationContextElement_swigregister = _StepBasic.StepBasic_ApplicationContextElement_swigregister
StepBasic_ApplicationContextElement_swigregister(StepBasic_ApplicationContextElement)

class StepBasic_ApplicationProtocolDefinition(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Application(self, *args) -> "opencascade::handle< StepBasic_ApplicationContext >":
        """:rtype: opencascade::handle<StepBasic_ApplicationContext>"""
        return _StepBasic.StepBasic_ApplicationProtocolDefinition_Application(self, *args)


    def ApplicationInterpretedModelSchemaName(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ApplicationProtocolDefinition_ApplicationInterpretedModelSchemaName(self, *args)


    def ApplicationProtocolYear(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_ApplicationProtocolDefinition_ApplicationProtocolYear(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aStatus:
        	:type aStatus: TCollection_HAsciiString
        	:param aApplicationInterpretedModelSchemaName:
        	:type aApplicationInterpretedModelSchemaName: TCollection_HAsciiString
        	:param aApplicationProtocolYear:
        	:type aApplicationProtocolYear: int
        	:param aApplication:
        	:type aApplication: StepBasic_ApplicationContext
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationProtocolDefinition_Init(self, *args)


    def SetApplication(self, *args) -> "void":
        """
        :param aApplication:
        	:type aApplication: StepBasic_ApplicationContext
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationProtocolDefinition_SetApplication(self, *args)


    def SetApplicationInterpretedModelSchemaName(self, *args) -> "void":
        """
        :param aApplicationInterpretedModelSchemaName:
        	:type aApplicationInterpretedModelSchemaName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationProtocolDefinition_SetApplicationInterpretedModelSchemaName(self, *args)


    def SetApplicationProtocolYear(self, *args) -> "void":
        """
        :param aApplicationProtocolYear:
        	:type aApplicationProtocolYear: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationProtocolDefinition_SetApplicationProtocolYear(self, *args)


    def SetStatus(self, *args) -> "void":
        """
        :param aStatus:
        	:type aStatus: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApplicationProtocolDefinition_SetStatus(self, *args)


    def Status(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ApplicationProtocolDefinition_Status(self, *args)


    def __init__(self, *args):
        """
        * Returns a ApplicationProtocolDefinition
        	:rtype: None
        """
        _StepBasic.StepBasic_ApplicationProtocolDefinition_swiginit(self, _StepBasic.new_StepBasic_ApplicationProtocolDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ApplicationProtocolDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ApplicationProtocolDefinition
StepBasic_ApplicationProtocolDefinition.Application = new_instancemethod(_StepBasic.StepBasic_ApplicationProtocolDefinition_Application, None, StepBasic_ApplicationProtocolDefinition)
StepBasic_ApplicationProtocolDefinition.ApplicationInterpretedModelSchemaName = new_instancemethod(_StepBasic.StepBasic_ApplicationProtocolDefinition_ApplicationInterpretedModelSchemaName, None, StepBasic_ApplicationProtocolDefinition)
StepBasic_ApplicationProtocolDefinition.ApplicationProtocolYear = new_instancemethod(_StepBasic.StepBasic_ApplicationProtocolDefinition_ApplicationProtocolYear, None, StepBasic_ApplicationProtocolDefinition)
StepBasic_ApplicationProtocolDefinition.Init = new_instancemethod(_StepBasic.StepBasic_ApplicationProtocolDefinition_Init, None, StepBasic_ApplicationProtocolDefinition)
StepBasic_ApplicationProtocolDefinition.SetApplication = new_instancemethod(_StepBasic.StepBasic_ApplicationProtocolDefinition_SetApplication, None, StepBasic_ApplicationProtocolDefinition)
StepBasic_ApplicationProtocolDefinition.SetApplicationInterpretedModelSchemaName = new_instancemethod(_StepBasic.StepBasic_ApplicationProtocolDefinition_SetApplicationInterpretedModelSchemaName, None, StepBasic_ApplicationProtocolDefinition)
StepBasic_ApplicationProtocolDefinition.SetApplicationProtocolYear = new_instancemethod(_StepBasic.StepBasic_ApplicationProtocolDefinition_SetApplicationProtocolYear, None, StepBasic_ApplicationProtocolDefinition)
StepBasic_ApplicationProtocolDefinition.SetStatus = new_instancemethod(_StepBasic.StepBasic_ApplicationProtocolDefinition_SetStatus, None, StepBasic_ApplicationProtocolDefinition)
StepBasic_ApplicationProtocolDefinition.Status = new_instancemethod(_StepBasic.StepBasic_ApplicationProtocolDefinition_Status, None, StepBasic_ApplicationProtocolDefinition)
StepBasic_ApplicationProtocolDefinition_swigregister = _StepBasic.StepBasic_ApplicationProtocolDefinition_swigregister
StepBasic_ApplicationProtocolDefinition_swigregister(StepBasic_ApplicationProtocolDefinition)

class StepBasic_Approval(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aStatus:
        	:type aStatus: StepBasic_ApprovalStatus
        	:param aLevel:
        	:type aLevel: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Approval_Init(self, *args)


    def Level(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Approval_Level(self, *args)


    def SetLevel(self, *args) -> "void":
        """
        :param aLevel:
        	:type aLevel: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Approval_SetLevel(self, *args)


    def SetStatus(self, *args) -> "void":
        """
        :param aStatus:
        	:type aStatus: StepBasic_ApprovalStatus
        	:rtype: None
        """
        return _StepBasic.StepBasic_Approval_SetStatus(self, *args)


    def Status(self, *args) -> "opencascade::handle< StepBasic_ApprovalStatus >":
        """:rtype: opencascade::handle<StepBasic_ApprovalStatus>"""
        return _StepBasic.StepBasic_Approval_Status(self, *args)


    def __init__(self, *args):
        """
        * Returns a Approval
        	:rtype: None
        """
        _StepBasic.StepBasic_Approval_swiginit(self, _StepBasic.new_StepBasic_Approval(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Approval_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Approval
StepBasic_Approval.Init = new_instancemethod(_StepBasic.StepBasic_Approval_Init, None, StepBasic_Approval)
StepBasic_Approval.Level = new_instancemethod(_StepBasic.StepBasic_Approval_Level, None, StepBasic_Approval)
StepBasic_Approval.SetLevel = new_instancemethod(_StepBasic.StepBasic_Approval_SetLevel, None, StepBasic_Approval)
StepBasic_Approval.SetStatus = new_instancemethod(_StepBasic.StepBasic_Approval_SetStatus, None, StepBasic_Approval)
StepBasic_Approval.Status = new_instancemethod(_StepBasic.StepBasic_Approval_Status, None, StepBasic_Approval)
StepBasic_Approval_swigregister = _StepBasic.StepBasic_Approval_swigregister
StepBasic_Approval_swigregister(StepBasic_Approval)

class StepBasic_ApprovalAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedApproval(self, *args) -> "opencascade::handle< StepBasic_Approval >":
        """:rtype: opencascade::handle<StepBasic_Approval>"""
        return _StepBasic.StepBasic_ApprovalAssignment_AssignedApproval(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aAssignedApproval:
        	:type aAssignedApproval: StepBasic_Approval
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalAssignment_Init(self, *args)


    def SetAssignedApproval(self, *args) -> "void":
        """
        :param aAssignedApproval:
        	:type aAssignedApproval: StepBasic_Approval
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalAssignment_SetAssignedApproval(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ApprovalAssignment_DownCast(t)


    __repr__ = _dumps_object


    def __init__(self):
        _StepBasic.StepBasic_ApprovalAssignment_swiginit(self, _StepBasic.new_StepBasic_ApprovalAssignment())
    __swig_destroy__ = _StepBasic.delete_StepBasic_ApprovalAssignment
StepBasic_ApprovalAssignment.AssignedApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalAssignment_AssignedApproval, None, StepBasic_ApprovalAssignment)
StepBasic_ApprovalAssignment.Init = new_instancemethod(_StepBasic.StepBasic_ApprovalAssignment_Init, None, StepBasic_ApprovalAssignment)
StepBasic_ApprovalAssignment.SetAssignedApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalAssignment_SetAssignedApproval, None, StepBasic_ApprovalAssignment)
StepBasic_ApprovalAssignment_swigregister = _StepBasic.StepBasic_ApprovalAssignment_swigregister
StepBasic_ApprovalAssignment_swigregister(StepBasic_ApprovalAssignment)

class StepBasic_ApprovalDateTime(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DateTime(self, *args) -> "StepBasic_DateTimeSelect":
        """:rtype: StepBasic_DateTimeSelect"""
        return _StepBasic.StepBasic_ApprovalDateTime_DateTime(self, *args)


    def DatedApproval(self, *args) -> "opencascade::handle< StepBasic_Approval >":
        """:rtype: opencascade::handle<StepBasic_Approval>"""
        return _StepBasic.StepBasic_ApprovalDateTime_DatedApproval(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aDateTime:
        	:type aDateTime: StepBasic_DateTimeSelect
        	:param aDatedApproval:
        	:type aDatedApproval: StepBasic_Approval
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalDateTime_Init(self, *args)


    def SetDateTime(self, *args) -> "void":
        """
        :param aDateTime:
        	:type aDateTime: StepBasic_DateTimeSelect
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalDateTime_SetDateTime(self, *args)


    def SetDatedApproval(self, *args) -> "void":
        """
        :param aDatedApproval:
        	:type aDatedApproval: StepBasic_Approval
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalDateTime_SetDatedApproval(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_ApprovalDateTime_swiginit(self, _StepBasic.new_StepBasic_ApprovalDateTime(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ApprovalDateTime_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ApprovalDateTime
StepBasic_ApprovalDateTime.DateTime = new_instancemethod(_StepBasic.StepBasic_ApprovalDateTime_DateTime, None, StepBasic_ApprovalDateTime)
StepBasic_ApprovalDateTime.DatedApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalDateTime_DatedApproval, None, StepBasic_ApprovalDateTime)
StepBasic_ApprovalDateTime.Init = new_instancemethod(_StepBasic.StepBasic_ApprovalDateTime_Init, None, StepBasic_ApprovalDateTime)
StepBasic_ApprovalDateTime.SetDateTime = new_instancemethod(_StepBasic.StepBasic_ApprovalDateTime_SetDateTime, None, StepBasic_ApprovalDateTime)
StepBasic_ApprovalDateTime.SetDatedApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalDateTime_SetDatedApproval, None, StepBasic_ApprovalDateTime)
StepBasic_ApprovalDateTime_swigregister = _StepBasic.StepBasic_ApprovalDateTime_swigregister
StepBasic_ApprovalDateTime_swigregister(StepBasic_ApprovalDateTime)

class StepBasic_ApprovalPersonOrganization(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AuthorizedApproval(self, *args) -> "opencascade::handle< StepBasic_Approval >":
        """:rtype: opencascade::handle<StepBasic_Approval>"""
        return _StepBasic.StepBasic_ApprovalPersonOrganization_AuthorizedApproval(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aPersonOrganization:
        	:type aPersonOrganization: StepBasic_PersonOrganizationSelect
        	:param aAuthorizedApproval:
        	:type aAuthorizedApproval: StepBasic_Approval
        	:param aRole:
        	:type aRole: StepBasic_ApprovalRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalPersonOrganization_Init(self, *args)


    def PersonOrganization(self, *args) -> "StepBasic_PersonOrganizationSelect":
        """:rtype: StepBasic_PersonOrganizationSelect"""
        return _StepBasic.StepBasic_ApprovalPersonOrganization_PersonOrganization(self, *args)


    def Role(self, *args) -> "opencascade::handle< StepBasic_ApprovalRole >":
        """:rtype: opencascade::handle<StepBasic_ApprovalRole>"""
        return _StepBasic.StepBasic_ApprovalPersonOrganization_Role(self, *args)


    def SetAuthorizedApproval(self, *args) -> "void":
        """
        :param aAuthorizedApproval:
        	:type aAuthorizedApproval: StepBasic_Approval
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalPersonOrganization_SetAuthorizedApproval(self, *args)


    def SetPersonOrganization(self, *args) -> "void":
        """
        :param aPersonOrganization:
        	:type aPersonOrganization: StepBasic_PersonOrganizationSelect
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalPersonOrganization_SetPersonOrganization(self, *args)


    def SetRole(self, *args) -> "void":
        """
        :param aRole:
        	:type aRole: StepBasic_ApprovalRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalPersonOrganization_SetRole(self, *args)


    def __init__(self, *args):
        """
        * Returns a ApprovalPersonOrganization
        	:rtype: None
        """
        _StepBasic.StepBasic_ApprovalPersonOrganization_swiginit(self, _StepBasic.new_StepBasic_ApprovalPersonOrganization(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ApprovalPersonOrganization_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ApprovalPersonOrganization
StepBasic_ApprovalPersonOrganization.AuthorizedApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalPersonOrganization_AuthorizedApproval, None, StepBasic_ApprovalPersonOrganization)
StepBasic_ApprovalPersonOrganization.Init = new_instancemethod(_StepBasic.StepBasic_ApprovalPersonOrganization_Init, None, StepBasic_ApprovalPersonOrganization)
StepBasic_ApprovalPersonOrganization.PersonOrganization = new_instancemethod(_StepBasic.StepBasic_ApprovalPersonOrganization_PersonOrganization, None, StepBasic_ApprovalPersonOrganization)
StepBasic_ApprovalPersonOrganization.Role = new_instancemethod(_StepBasic.StepBasic_ApprovalPersonOrganization_Role, None, StepBasic_ApprovalPersonOrganization)
StepBasic_ApprovalPersonOrganization.SetAuthorizedApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalPersonOrganization_SetAuthorizedApproval, None, StepBasic_ApprovalPersonOrganization)
StepBasic_ApprovalPersonOrganization.SetPersonOrganization = new_instancemethod(_StepBasic.StepBasic_ApprovalPersonOrganization_SetPersonOrganization, None, StepBasic_ApprovalPersonOrganization)
StepBasic_ApprovalPersonOrganization.SetRole = new_instancemethod(_StepBasic.StepBasic_ApprovalPersonOrganization_SetRole, None, StepBasic_ApprovalPersonOrganization)
StepBasic_ApprovalPersonOrganization_swigregister = _StepBasic.StepBasic_ApprovalPersonOrganization_swigregister
StepBasic_ApprovalPersonOrganization_swigregister(StepBasic_ApprovalPersonOrganization)

class StepBasic_ApprovalRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ApprovalRelationship_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aRelatingApproval:
        	:type aRelatingApproval: StepBasic_Approval
        	:param aRelatedApproval:
        	:type aRelatedApproval: StepBasic_Approval
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ApprovalRelationship_Name(self, *args)


    def RelatedApproval(self, *args) -> "opencascade::handle< StepBasic_Approval >":
        """:rtype: opencascade::handle<StepBasic_Approval>"""
        return _StepBasic.StepBasic_ApprovalRelationship_RelatedApproval(self, *args)


    def RelatingApproval(self, *args) -> "opencascade::handle< StepBasic_Approval >":
        """:rtype: opencascade::handle<StepBasic_Approval>"""
        return _StepBasic.StepBasic_ApprovalRelationship_RelatingApproval(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalRelationship_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalRelationship_SetName(self, *args)


    def SetRelatedApproval(self, *args) -> "void":
        """
        :param aRelatedApproval:
        	:type aRelatedApproval: StepBasic_Approval
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalRelationship_SetRelatedApproval(self, *args)


    def SetRelatingApproval(self, *args) -> "void":
        """
        :param aRelatingApproval:
        	:type aRelatingApproval: StepBasic_Approval
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalRelationship_SetRelatingApproval(self, *args)


    def __init__(self, *args):
        """
        * Returns a ApprovalRelationship
        	:rtype: None
        """
        _StepBasic.StepBasic_ApprovalRelationship_swiginit(self, _StepBasic.new_StepBasic_ApprovalRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ApprovalRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ApprovalRelationship
StepBasic_ApprovalRelationship.Description = new_instancemethod(_StepBasic.StepBasic_ApprovalRelationship_Description, None, StepBasic_ApprovalRelationship)
StepBasic_ApprovalRelationship.Init = new_instancemethod(_StepBasic.StepBasic_ApprovalRelationship_Init, None, StepBasic_ApprovalRelationship)
StepBasic_ApprovalRelationship.Name = new_instancemethod(_StepBasic.StepBasic_ApprovalRelationship_Name, None, StepBasic_ApprovalRelationship)
StepBasic_ApprovalRelationship.RelatedApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalRelationship_RelatedApproval, None, StepBasic_ApprovalRelationship)
StepBasic_ApprovalRelationship.RelatingApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalRelationship_RelatingApproval, None, StepBasic_ApprovalRelationship)
StepBasic_ApprovalRelationship.SetDescription = new_instancemethod(_StepBasic.StepBasic_ApprovalRelationship_SetDescription, None, StepBasic_ApprovalRelationship)
StepBasic_ApprovalRelationship.SetName = new_instancemethod(_StepBasic.StepBasic_ApprovalRelationship_SetName, None, StepBasic_ApprovalRelationship)
StepBasic_ApprovalRelationship.SetRelatedApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalRelationship_SetRelatedApproval, None, StepBasic_ApprovalRelationship)
StepBasic_ApprovalRelationship.SetRelatingApproval = new_instancemethod(_StepBasic.StepBasic_ApprovalRelationship_SetRelatingApproval, None, StepBasic_ApprovalRelationship)
StepBasic_ApprovalRelationship_swigregister = _StepBasic.StepBasic_ApprovalRelationship_swigregister
StepBasic_ApprovalRelationship_swigregister(StepBasic_ApprovalRelationship)

class StepBasic_ApprovalRole(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aRole:
        	:type aRole: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalRole_Init(self, *args)


    def Role(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ApprovalRole_Role(self, *args)


    def SetRole(self, *args) -> "void":
        """
        :param aRole:
        	:type aRole: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalRole_SetRole(self, *args)


    def __init__(self, *args):
        """
        * Returns a ApprovalRole
        	:rtype: None
        """
        _StepBasic.StepBasic_ApprovalRole_swiginit(self, _StepBasic.new_StepBasic_ApprovalRole(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ApprovalRole_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ApprovalRole
StepBasic_ApprovalRole.Init = new_instancemethod(_StepBasic.StepBasic_ApprovalRole_Init, None, StepBasic_ApprovalRole)
StepBasic_ApprovalRole.Role = new_instancemethod(_StepBasic.StepBasic_ApprovalRole_Role, None, StepBasic_ApprovalRole)
StepBasic_ApprovalRole.SetRole = new_instancemethod(_StepBasic.StepBasic_ApprovalRole_SetRole, None, StepBasic_ApprovalRole)
StepBasic_ApprovalRole_swigregister = _StepBasic.StepBasic_ApprovalRole_swigregister
StepBasic_ApprovalRole_swigregister(StepBasic_ApprovalRole)

class StepBasic_ApprovalStatus(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalStatus_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ApprovalStatus_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ApprovalStatus_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a ApprovalStatus
        	:rtype: None
        """
        _StepBasic.StepBasic_ApprovalStatus_swiginit(self, _StepBasic.new_StepBasic_ApprovalStatus(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ApprovalStatus_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ApprovalStatus
StepBasic_ApprovalStatus.Init = new_instancemethod(_StepBasic.StepBasic_ApprovalStatus_Init, None, StepBasic_ApprovalStatus)
StepBasic_ApprovalStatus.Name = new_instancemethod(_StepBasic.StepBasic_ApprovalStatus_Name, None, StepBasic_ApprovalStatus)
StepBasic_ApprovalStatus.SetName = new_instancemethod(_StepBasic.StepBasic_ApprovalStatus_SetName, None, StepBasic_ApprovalStatus)
StepBasic_ApprovalStatus_swigregister = _StepBasic.StepBasic_ApprovalStatus_swigregister
StepBasic_ApprovalStatus_swigregister(StepBasic_ApprovalStatus)

class StepBasic_Certification(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPurpose:
        	:type aPurpose: TCollection_HAsciiString
        	:param aKind:
        	:type aKind: StepBasic_CertificationType
        	:rtype: None
        """
        return _StepBasic.StepBasic_Certification_Init(self, *args)


    def Kind(self, *args) -> "opencascade::handle< StepBasic_CertificationType >":
        """
        * Returns field Kind
        	:rtype: opencascade::handle<StepBasic_CertificationType>
        """
        return _StepBasic.StepBasic_Certification_Kind(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Certification_Name(self, *args)


    def Purpose(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Purpose
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Certification_Purpose(self, *args)


    def SetKind(self, *args) -> "void":
        """
        * Set field Kind
        	:param Kind:
        	:type Kind: StepBasic_CertificationType
        	:rtype: None
        """
        return _StepBasic.StepBasic_Certification_SetKind(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Certification_SetName(self, *args)


    def SetPurpose(self, *args) -> "void":
        """
        * Set field Purpose
        	:param Purpose:
        	:type Purpose: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Certification_SetPurpose(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_Certification_swiginit(self, _StepBasic.new_StepBasic_Certification(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Certification_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Certification
StepBasic_Certification.Init = new_instancemethod(_StepBasic.StepBasic_Certification_Init, None, StepBasic_Certification)
StepBasic_Certification.Kind = new_instancemethod(_StepBasic.StepBasic_Certification_Kind, None, StepBasic_Certification)
StepBasic_Certification.Name = new_instancemethod(_StepBasic.StepBasic_Certification_Name, None, StepBasic_Certification)
StepBasic_Certification.Purpose = new_instancemethod(_StepBasic.StepBasic_Certification_Purpose, None, StepBasic_Certification)
StepBasic_Certification.SetKind = new_instancemethod(_StepBasic.StepBasic_Certification_SetKind, None, StepBasic_Certification)
StepBasic_Certification.SetName = new_instancemethod(_StepBasic.StepBasic_Certification_SetName, None, StepBasic_Certification)
StepBasic_Certification.SetPurpose = new_instancemethod(_StepBasic.StepBasic_Certification_SetPurpose, None, StepBasic_Certification)
StepBasic_Certification_swigregister = _StepBasic.StepBasic_Certification_swigregister
StepBasic_Certification_swigregister(StepBasic_Certification)

class StepBasic_CertificationAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedCertification(self, *args) -> "opencascade::handle< StepBasic_Certification >":
        """
        * Returns field AssignedCertification
        	:rtype: opencascade::handle<StepBasic_Certification>
        """
        return _StepBasic.StepBasic_CertificationAssignment_AssignedCertification(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAssignedCertification:
        	:type aAssignedCertification: StepBasic_Certification
        	:rtype: None
        """
        return _StepBasic.StepBasic_CertificationAssignment_Init(self, *args)


    def SetAssignedCertification(self, *args) -> "void":
        """
        * Set field AssignedCertification
        	:param AssignedCertification:
        	:type AssignedCertification: StepBasic_Certification
        	:rtype: None
        """
        return _StepBasic.StepBasic_CertificationAssignment_SetAssignedCertification(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_CertificationAssignment_swiginit(self, _StepBasic.new_StepBasic_CertificationAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_CertificationAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_CertificationAssignment
StepBasic_CertificationAssignment.AssignedCertification = new_instancemethod(_StepBasic.StepBasic_CertificationAssignment_AssignedCertification, None, StepBasic_CertificationAssignment)
StepBasic_CertificationAssignment.Init = new_instancemethod(_StepBasic.StepBasic_CertificationAssignment_Init, None, StepBasic_CertificationAssignment)
StepBasic_CertificationAssignment.SetAssignedCertification = new_instancemethod(_StepBasic.StepBasic_CertificationAssignment_SetAssignedCertification, None, StepBasic_CertificationAssignment)
StepBasic_CertificationAssignment_swigregister = _StepBasic.StepBasic_CertificationAssignment_swigregister
StepBasic_CertificationAssignment_swigregister(StepBasic_CertificationAssignment)

class StepBasic_CertificationType(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_CertificationType_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_CertificationType_Init(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_CertificationType_SetDescription(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_CertificationType_swiginit(self, _StepBasic.new_StepBasic_CertificationType(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_CertificationType_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_CertificationType
StepBasic_CertificationType.Description = new_instancemethod(_StepBasic.StepBasic_CertificationType_Description, None, StepBasic_CertificationType)
StepBasic_CertificationType.Init = new_instancemethod(_StepBasic.StepBasic_CertificationType_Init, None, StepBasic_CertificationType)
StepBasic_CertificationType.SetDescription = new_instancemethod(_StepBasic.StepBasic_CertificationType_SetDescription, None, StepBasic_CertificationType)
StepBasic_CertificationType_swigregister = _StepBasic.StepBasic_CertificationType_swigregister
StepBasic_CertificationType_swigregister(StepBasic_CertificationType)

class StepBasic_CharacterizedObject(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_CharacterizedObject_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_CharacterizedObject_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_CharacterizedObject_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_CharacterizedObject_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_CharacterizedObject_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_CharacterizedObject_SetName(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_CharacterizedObject_swiginit(self, _StepBasic.new_StepBasic_CharacterizedObject(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_CharacterizedObject_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_CharacterizedObject
StepBasic_CharacterizedObject.Description = new_instancemethod(_StepBasic.StepBasic_CharacterizedObject_Description, None, StepBasic_CharacterizedObject)
StepBasic_CharacterizedObject.HasDescription = new_instancemethod(_StepBasic.StepBasic_CharacterizedObject_HasDescription, None, StepBasic_CharacterizedObject)
StepBasic_CharacterizedObject.Init = new_instancemethod(_StepBasic.StepBasic_CharacterizedObject_Init, None, StepBasic_CharacterizedObject)
StepBasic_CharacterizedObject.Name = new_instancemethod(_StepBasic.StepBasic_CharacterizedObject_Name, None, StepBasic_CharacterizedObject)
StepBasic_CharacterizedObject.SetDescription = new_instancemethod(_StepBasic.StepBasic_CharacterizedObject_SetDescription, None, StepBasic_CharacterizedObject)
StepBasic_CharacterizedObject.SetName = new_instancemethod(_StepBasic.StepBasic_CharacterizedObject_SetName, None, StepBasic_CharacterizedObject)
StepBasic_CharacterizedObject_swigregister = _StepBasic.StepBasic_CharacterizedObject_swigregister
StepBasic_CharacterizedObject_swigregister(StepBasic_CharacterizedObject)

class StepBasic_Contract(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPurpose:
        	:type aPurpose: TCollection_HAsciiString
        	:param aKind:
        	:type aKind: StepBasic_ContractType
        	:rtype: None
        """
        return _StepBasic.StepBasic_Contract_Init(self, *args)


    def Kind(self, *args) -> "opencascade::handle< StepBasic_ContractType >":
        """
        * Returns field Kind
        	:rtype: opencascade::handle<StepBasic_ContractType>
        """
        return _StepBasic.StepBasic_Contract_Kind(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Contract_Name(self, *args)


    def Purpose(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Purpose
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Contract_Purpose(self, *args)


    def SetKind(self, *args) -> "void":
        """
        * Set field Kind
        	:param Kind:
        	:type Kind: StepBasic_ContractType
        	:rtype: None
        """
        return _StepBasic.StepBasic_Contract_SetKind(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Contract_SetName(self, *args)


    def SetPurpose(self, *args) -> "void":
        """
        * Set field Purpose
        	:param Purpose:
        	:type Purpose: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Contract_SetPurpose(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_Contract_swiginit(self, _StepBasic.new_StepBasic_Contract(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Contract_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Contract
StepBasic_Contract.Init = new_instancemethod(_StepBasic.StepBasic_Contract_Init, None, StepBasic_Contract)
StepBasic_Contract.Kind = new_instancemethod(_StepBasic.StepBasic_Contract_Kind, None, StepBasic_Contract)
StepBasic_Contract.Name = new_instancemethod(_StepBasic.StepBasic_Contract_Name, None, StepBasic_Contract)
StepBasic_Contract.Purpose = new_instancemethod(_StepBasic.StepBasic_Contract_Purpose, None, StepBasic_Contract)
StepBasic_Contract.SetKind = new_instancemethod(_StepBasic.StepBasic_Contract_SetKind, None, StepBasic_Contract)
StepBasic_Contract.SetName = new_instancemethod(_StepBasic.StepBasic_Contract_SetName, None, StepBasic_Contract)
StepBasic_Contract.SetPurpose = new_instancemethod(_StepBasic.StepBasic_Contract_SetPurpose, None, StepBasic_Contract)
StepBasic_Contract_swigregister = _StepBasic.StepBasic_Contract_swigregister
StepBasic_Contract_swigregister(StepBasic_Contract)

class StepBasic_ContractAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedContract(self, *args) -> "opencascade::handle< StepBasic_Contract >":
        """
        * Returns field AssignedContract
        	:rtype: opencascade::handle<StepBasic_Contract>
        """
        return _StepBasic.StepBasic_ContractAssignment_AssignedContract(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAssignedContract:
        	:type aAssignedContract: StepBasic_Contract
        	:rtype: None
        """
        return _StepBasic.StepBasic_ContractAssignment_Init(self, *args)


    def SetAssignedContract(self, *args) -> "void":
        """
        * Set field AssignedContract
        	:param AssignedContract:
        	:type AssignedContract: StepBasic_Contract
        	:rtype: None
        """
        return _StepBasic.StepBasic_ContractAssignment_SetAssignedContract(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ContractAssignment_swiginit(self, _StepBasic.new_StepBasic_ContractAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ContractAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ContractAssignment
StepBasic_ContractAssignment.AssignedContract = new_instancemethod(_StepBasic.StepBasic_ContractAssignment_AssignedContract, None, StepBasic_ContractAssignment)
StepBasic_ContractAssignment.Init = new_instancemethod(_StepBasic.StepBasic_ContractAssignment_Init, None, StepBasic_ContractAssignment)
StepBasic_ContractAssignment.SetAssignedContract = new_instancemethod(_StepBasic.StepBasic_ContractAssignment_SetAssignedContract, None, StepBasic_ContractAssignment)
StepBasic_ContractAssignment_swigregister = _StepBasic.StepBasic_ContractAssignment_swigregister
StepBasic_ContractAssignment_swigregister(StepBasic_ContractAssignment)

class StepBasic_ContractType(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ContractType_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ContractType_Init(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ContractType_SetDescription(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ContractType_swiginit(self, _StepBasic.new_StepBasic_ContractType(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ContractType_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ContractType
StepBasic_ContractType.Description = new_instancemethod(_StepBasic.StepBasic_ContractType_Description, None, StepBasic_ContractType)
StepBasic_ContractType.Init = new_instancemethod(_StepBasic.StepBasic_ContractType_Init, None, StepBasic_ContractType)
StepBasic_ContractType.SetDescription = new_instancemethod(_StepBasic.StepBasic_ContractType_SetDescription, None, StepBasic_ContractType)
StepBasic_ContractType_swigregister = _StepBasic.StepBasic_ContractType_swigregister
StepBasic_ContractType_swigregister(StepBasic_ContractType)

class StepBasic_CoordinatedUniversalTimeOffset(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def HasMinuteOffset(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_HasMinuteOffset(self, *args)


    def HourOffset(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_HourOffset(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aHourOffset:
        	:type aHourOffset: int
        	:param hasAminuteOffset:
        	:type hasAminuteOffset: bool
        	:param aMinuteOffset:
        	:type aMinuteOffset: int
        	:param aSense:
        	:type aSense: StepBasic_AheadOrBehind
        	:rtype: None
        """
        return _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_Init(self, *args)


    def MinuteOffset(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_MinuteOffset(self, *args)


    def Sense(self, *args) -> "StepBasic_AheadOrBehind":
        """:rtype: StepBasic_AheadOrBehind"""
        return _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_Sense(self, *args)


    def SetHourOffset(self, *args) -> "void":
        """
        :param aHourOffset:
        	:type aHourOffset: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_SetHourOffset(self, *args)


    def SetMinuteOffset(self, *args) -> "void":
        """
        :param aMinuteOffset:
        	:type aMinuteOffset: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_SetMinuteOffset(self, *args)


    def SetSense(self, *args) -> "void":
        """
        :param aSense:
        	:type aSense: StepBasic_AheadOrBehind
        	:rtype: None
        """
        return _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_SetSense(self, *args)


    def __init__(self, *args):
        """
        * Returns a CoordinatedUniversalTimeOffset
        	:rtype: None
        """
        _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_swiginit(self, _StepBasic.new_StepBasic_CoordinatedUniversalTimeOffset(*args))

    def UnSetMinuteOffset(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_UnSetMinuteOffset(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_CoordinatedUniversalTimeOffset_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_CoordinatedUniversalTimeOffset
StepBasic_CoordinatedUniversalTimeOffset.HasMinuteOffset = new_instancemethod(_StepBasic.StepBasic_CoordinatedUniversalTimeOffset_HasMinuteOffset, None, StepBasic_CoordinatedUniversalTimeOffset)
StepBasic_CoordinatedUniversalTimeOffset.HourOffset = new_instancemethod(_StepBasic.StepBasic_CoordinatedUniversalTimeOffset_HourOffset, None, StepBasic_CoordinatedUniversalTimeOffset)
StepBasic_CoordinatedUniversalTimeOffset.Init = new_instancemethod(_StepBasic.StepBasic_CoordinatedUniversalTimeOffset_Init, None, StepBasic_CoordinatedUniversalTimeOffset)
StepBasic_CoordinatedUniversalTimeOffset.MinuteOffset = new_instancemethod(_StepBasic.StepBasic_CoordinatedUniversalTimeOffset_MinuteOffset, None, StepBasic_CoordinatedUniversalTimeOffset)
StepBasic_CoordinatedUniversalTimeOffset.Sense = new_instancemethod(_StepBasic.StepBasic_CoordinatedUniversalTimeOffset_Sense, None, StepBasic_CoordinatedUniversalTimeOffset)
StepBasic_CoordinatedUniversalTimeOffset.SetHourOffset = new_instancemethod(_StepBasic.StepBasic_CoordinatedUniversalTimeOffset_SetHourOffset, None, StepBasic_CoordinatedUniversalTimeOffset)
StepBasic_CoordinatedUniversalTimeOffset.SetMinuteOffset = new_instancemethod(_StepBasic.StepBasic_CoordinatedUniversalTimeOffset_SetMinuteOffset, None, StepBasic_CoordinatedUniversalTimeOffset)
StepBasic_CoordinatedUniversalTimeOffset.SetSense = new_instancemethod(_StepBasic.StepBasic_CoordinatedUniversalTimeOffset_SetSense, None, StepBasic_CoordinatedUniversalTimeOffset)
StepBasic_CoordinatedUniversalTimeOffset.UnSetMinuteOffset = new_instancemethod(_StepBasic.StepBasic_CoordinatedUniversalTimeOffset_UnSetMinuteOffset, None, StepBasic_CoordinatedUniversalTimeOffset)
StepBasic_CoordinatedUniversalTimeOffset_swigregister = _StepBasic.StepBasic_CoordinatedUniversalTimeOffset_swigregister
StepBasic_CoordinatedUniversalTimeOffset_swigregister(StepBasic_CoordinatedUniversalTimeOffset)

class StepBasic_Date(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aYearComponent:
        	:type aYearComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_Date_Init(self, *args)


    def SetYearComponent(self, *args) -> "void":
        """
        :param aYearComponent:
        	:type aYearComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_Date_SetYearComponent(self, *args)


    def __init__(self, *args):
        """
        * Returns a Date
        	:rtype: None
        """
        _StepBasic.StepBasic_Date_swiginit(self, _StepBasic.new_StepBasic_Date(*args))

    def YearComponent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_Date_YearComponent(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Date_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Date
StepBasic_Date.Init = new_instancemethod(_StepBasic.StepBasic_Date_Init, None, StepBasic_Date)
StepBasic_Date.SetYearComponent = new_instancemethod(_StepBasic.StepBasic_Date_SetYearComponent, None, StepBasic_Date)
StepBasic_Date.YearComponent = new_instancemethod(_StepBasic.StepBasic_Date_YearComponent, None, StepBasic_Date)
StepBasic_Date_swigregister = _StepBasic.StepBasic_Date_swigregister
StepBasic_Date_swigregister(StepBasic_Date)

class StepBasic_DateAndTime(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DateComponent(self, *args) -> "opencascade::handle< StepBasic_Date >":
        """:rtype: opencascade::handle<StepBasic_Date>"""
        return _StepBasic.StepBasic_DateAndTime_DateComponent(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aDateComponent:
        	:type aDateComponent: StepBasic_Date
        	:param aTimeComponent:
        	:type aTimeComponent: StepBasic_LocalTime
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateAndTime_Init(self, *args)


    def SetDateComponent(self, *args) -> "void":
        """
        :param aDateComponent:
        	:type aDateComponent: StepBasic_Date
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateAndTime_SetDateComponent(self, *args)


    def SetTimeComponent(self, *args) -> "void":
        """
        :param aTimeComponent:
        	:type aTimeComponent: StepBasic_LocalTime
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateAndTime_SetTimeComponent(self, *args)


    def __init__(self, *args):
        """
        * Returns a DateAndTime
        	:rtype: None
        """
        _StepBasic.StepBasic_DateAndTime_swiginit(self, _StepBasic.new_StepBasic_DateAndTime(*args))

    def TimeComponent(self, *args) -> "opencascade::handle< StepBasic_LocalTime >":
        """:rtype: opencascade::handle<StepBasic_LocalTime>"""
        return _StepBasic.StepBasic_DateAndTime_TimeComponent(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DateAndTime_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DateAndTime
StepBasic_DateAndTime.DateComponent = new_instancemethod(_StepBasic.StepBasic_DateAndTime_DateComponent, None, StepBasic_DateAndTime)
StepBasic_DateAndTime.Init = new_instancemethod(_StepBasic.StepBasic_DateAndTime_Init, None, StepBasic_DateAndTime)
StepBasic_DateAndTime.SetDateComponent = new_instancemethod(_StepBasic.StepBasic_DateAndTime_SetDateComponent, None, StepBasic_DateAndTime)
StepBasic_DateAndTime.SetTimeComponent = new_instancemethod(_StepBasic.StepBasic_DateAndTime_SetTimeComponent, None, StepBasic_DateAndTime)
StepBasic_DateAndTime.TimeComponent = new_instancemethod(_StepBasic.StepBasic_DateAndTime_TimeComponent, None, StepBasic_DateAndTime)
StepBasic_DateAndTime_swigregister = _StepBasic.StepBasic_DateAndTime_swigregister
StepBasic_DateAndTime_swigregister(StepBasic_DateAndTime)

class StepBasic_DateAndTimeAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedDateAndTime(self, *args) -> "opencascade::handle< StepBasic_DateAndTime >":
        """:rtype: opencascade::handle<StepBasic_DateAndTime>"""
        return _StepBasic.StepBasic_DateAndTimeAssignment_AssignedDateAndTime(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aAssignedDateAndTime:
        	:type aAssignedDateAndTime: StepBasic_DateAndTime
        	:param aRole:
        	:type aRole: StepBasic_DateTimeRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateAndTimeAssignment_Init(self, *args)


    def Role(self, *args) -> "opencascade::handle< StepBasic_DateTimeRole >":
        """:rtype: opencascade::handle<StepBasic_DateTimeRole>"""
        return _StepBasic.StepBasic_DateAndTimeAssignment_Role(self, *args)


    def SetAssignedDateAndTime(self, *args) -> "void":
        """
        :param aAssignedDateAndTime:
        	:type aAssignedDateAndTime: StepBasic_DateAndTime
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateAndTimeAssignment_SetAssignedDateAndTime(self, *args)


    def SetRole(self, *args) -> "void":
        """
        :param aRole:
        	:type aRole: StepBasic_DateTimeRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateAndTimeAssignment_SetRole(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DateAndTimeAssignment_DownCast(t)


    __repr__ = _dumps_object


    def __init__(self):
        _StepBasic.StepBasic_DateAndTimeAssignment_swiginit(self, _StepBasic.new_StepBasic_DateAndTimeAssignment())
    __swig_destroy__ = _StepBasic.delete_StepBasic_DateAndTimeAssignment
StepBasic_DateAndTimeAssignment.AssignedDateAndTime = new_instancemethod(_StepBasic.StepBasic_DateAndTimeAssignment_AssignedDateAndTime, None, StepBasic_DateAndTimeAssignment)
StepBasic_DateAndTimeAssignment.Init = new_instancemethod(_StepBasic.StepBasic_DateAndTimeAssignment_Init, None, StepBasic_DateAndTimeAssignment)
StepBasic_DateAndTimeAssignment.Role = new_instancemethod(_StepBasic.StepBasic_DateAndTimeAssignment_Role, None, StepBasic_DateAndTimeAssignment)
StepBasic_DateAndTimeAssignment.SetAssignedDateAndTime = new_instancemethod(_StepBasic.StepBasic_DateAndTimeAssignment_SetAssignedDateAndTime, None, StepBasic_DateAndTimeAssignment)
StepBasic_DateAndTimeAssignment.SetRole = new_instancemethod(_StepBasic.StepBasic_DateAndTimeAssignment_SetRole, None, StepBasic_DateAndTimeAssignment)
StepBasic_DateAndTimeAssignment_swigregister = _StepBasic.StepBasic_DateAndTimeAssignment_swigregister
StepBasic_DateAndTimeAssignment_swigregister(StepBasic_DateAndTimeAssignment)

class StepBasic_DateAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedDate(self, *args) -> "opencascade::handle< StepBasic_Date >":
        """:rtype: opencascade::handle<StepBasic_Date>"""
        return _StepBasic.StepBasic_DateAssignment_AssignedDate(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aAssignedDate:
        	:type aAssignedDate: StepBasic_Date
        	:param aRole:
        	:type aRole: StepBasic_DateRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateAssignment_Init(self, *args)


    def Role(self, *args) -> "opencascade::handle< StepBasic_DateRole >":
        """:rtype: opencascade::handle<StepBasic_DateRole>"""
        return _StepBasic.StepBasic_DateAssignment_Role(self, *args)


    def SetAssignedDate(self, *args) -> "void":
        """
        :param aAssignedDate:
        	:type aAssignedDate: StepBasic_Date
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateAssignment_SetAssignedDate(self, *args)


    def SetRole(self, *args) -> "void":
        """
        :param aRole:
        	:type aRole: StepBasic_DateRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateAssignment_SetRole(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DateAssignment_DownCast(t)


    __repr__ = _dumps_object


    def __init__(self):
        _StepBasic.StepBasic_DateAssignment_swiginit(self, _StepBasic.new_StepBasic_DateAssignment())
    __swig_destroy__ = _StepBasic.delete_StepBasic_DateAssignment
StepBasic_DateAssignment.AssignedDate = new_instancemethod(_StepBasic.StepBasic_DateAssignment_AssignedDate, None, StepBasic_DateAssignment)
StepBasic_DateAssignment.Init = new_instancemethod(_StepBasic.StepBasic_DateAssignment_Init, None, StepBasic_DateAssignment)
StepBasic_DateAssignment.Role = new_instancemethod(_StepBasic.StepBasic_DateAssignment_Role, None, StepBasic_DateAssignment)
StepBasic_DateAssignment.SetAssignedDate = new_instancemethod(_StepBasic.StepBasic_DateAssignment_SetAssignedDate, None, StepBasic_DateAssignment)
StepBasic_DateAssignment.SetRole = new_instancemethod(_StepBasic.StepBasic_DateAssignment_SetRole, None, StepBasic_DateAssignment)
StepBasic_DateAssignment_swigregister = _StepBasic.StepBasic_DateAssignment_swigregister
StepBasic_DateAssignment_swigregister(StepBasic_DateAssignment)

class StepBasic_DateRole(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateRole_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_DateRole_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateRole_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a DateRole
        	:rtype: None
        """
        _StepBasic.StepBasic_DateRole_swiginit(self, _StepBasic.new_StepBasic_DateRole(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DateRole_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DateRole
StepBasic_DateRole.Init = new_instancemethod(_StepBasic.StepBasic_DateRole_Init, None, StepBasic_DateRole)
StepBasic_DateRole.Name = new_instancemethod(_StepBasic.StepBasic_DateRole_Name, None, StepBasic_DateRole)
StepBasic_DateRole.SetName = new_instancemethod(_StepBasic.StepBasic_DateRole_SetName, None, StepBasic_DateRole)
StepBasic_DateRole_swigregister = _StepBasic.StepBasic_DateRole_swigregister
StepBasic_DateRole_swigregister(StepBasic_DateRole)

class StepBasic_DateTimeRole(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateTimeRole_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_DateTimeRole_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DateTimeRole_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a DateTimeRole
        	:rtype: None
        """
        _StepBasic.StepBasic_DateTimeRole_swiginit(self, _StepBasic.new_StepBasic_DateTimeRole(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DateTimeRole_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DateTimeRole
StepBasic_DateTimeRole.Init = new_instancemethod(_StepBasic.StepBasic_DateTimeRole_Init, None, StepBasic_DateTimeRole)
StepBasic_DateTimeRole.Name = new_instancemethod(_StepBasic.StepBasic_DateTimeRole_Name, None, StepBasic_DateTimeRole)
StepBasic_DateTimeRole.SetName = new_instancemethod(_StepBasic.StepBasic_DateTimeRole_SetName, None, StepBasic_DateTimeRole)
StepBasic_DateTimeRole_swigregister = _StepBasic.StepBasic_DateTimeRole_swigregister
StepBasic_DateTimeRole_swigregister(StepBasic_DateTimeRole)

class StepBasic_DateTimeSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Date(self, *args) -> "opencascade::handle< StepBasic_Date >":
        """
        * returns Value as a Date (Null if another type)
        	:rtype: opencascade::handle<StepBasic_Date>
        """
        return _StepBasic.StepBasic_DateTimeSelect_Date(self, *args)


    def DateAndTime(self, *args) -> "opencascade::handle< StepBasic_DateAndTime >":
        """
        * returns Value as a DateAndTime (Null if another type)
        	:rtype: opencascade::handle<StepBasic_DateAndTime>
        """
        return _StepBasic.StepBasic_DateTimeSelect_DateAndTime(self, *args)


    def LocalTime(self, *args) -> "opencascade::handle< StepBasic_LocalTime >":
        """
        * returns Value as a LocalTime (Null if another type)
        	:rtype: opencascade::handle<StepBasic_LocalTime>
        """
        return _StepBasic.StepBasic_DateTimeSelect_LocalTime(self, *args)


    def __init__(self, *args):
        """
        * Returns a DateTimeSelect SelectType
        	:rtype: None
        """
        _StepBasic.StepBasic_DateTimeSelect_swiginit(self, _StepBasic.new_StepBasic_DateTimeSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DateTimeSelect
StepBasic_DateTimeSelect.Date = new_instancemethod(_StepBasic.StepBasic_DateTimeSelect_Date, None, StepBasic_DateTimeSelect)
StepBasic_DateTimeSelect.DateAndTime = new_instancemethod(_StepBasic.StepBasic_DateTimeSelect_DateAndTime, None, StepBasic_DateTimeSelect)
StepBasic_DateTimeSelect.LocalTime = new_instancemethod(_StepBasic.StepBasic_DateTimeSelect_LocalTime, None, StepBasic_DateTimeSelect)
StepBasic_DateTimeSelect_swigregister = _StepBasic.StepBasic_DateTimeSelect_swigregister
StepBasic_DateTimeSelect_swigregister(StepBasic_DateTimeSelect)

class StepBasic_DerivedUnit(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Elements(self, *args) -> "opencascade::handle< StepBasic_HArray1OfDerivedUnitElement >":
        """:rtype: opencascade::handle<StepBasic_HArray1OfDerivedUnitElement>"""
        return _StepBasic.StepBasic_DerivedUnit_Elements(self, *args)


    def ElementsValue(self, *args) -> "opencascade::handle< StepBasic_DerivedUnitElement >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepBasic_DerivedUnitElement>
        """
        return _StepBasic.StepBasic_DerivedUnit_ElementsValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param elements:
        	:type elements: StepBasic_HArray1OfDerivedUnitElement
        	:rtype: None
        """
        return _StepBasic.StepBasic_DerivedUnit_Init(self, *args)


    def NbElements(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_DerivedUnit_NbElements(self, *args)


    def SetElements(self, *args) -> "void":
        """
        :param elements:
        	:type elements: StepBasic_HArray1OfDerivedUnitElement
        	:rtype: None
        """
        return _StepBasic.StepBasic_DerivedUnit_SetElements(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_DerivedUnit_swiginit(self, _StepBasic.new_StepBasic_DerivedUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DerivedUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DerivedUnit
StepBasic_DerivedUnit.Elements = new_instancemethod(_StepBasic.StepBasic_DerivedUnit_Elements, None, StepBasic_DerivedUnit)
StepBasic_DerivedUnit.ElementsValue = new_instancemethod(_StepBasic.StepBasic_DerivedUnit_ElementsValue, None, StepBasic_DerivedUnit)
StepBasic_DerivedUnit.Init = new_instancemethod(_StepBasic.StepBasic_DerivedUnit_Init, None, StepBasic_DerivedUnit)
StepBasic_DerivedUnit.NbElements = new_instancemethod(_StepBasic.StepBasic_DerivedUnit_NbElements, None, StepBasic_DerivedUnit)
StepBasic_DerivedUnit.SetElements = new_instancemethod(_StepBasic.StepBasic_DerivedUnit_SetElements, None, StepBasic_DerivedUnit)
StepBasic_DerivedUnit_swigregister = _StepBasic.StepBasic_DerivedUnit_swigregister
StepBasic_DerivedUnit_swigregister(StepBasic_DerivedUnit)

class StepBasic_DerivedUnitElement(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Exponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_DerivedUnitElement_Exponent(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aUnit:
        	:type aUnit: StepBasic_NamedUnit
        	:param aExponent:
        	:type aExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DerivedUnitElement_Init(self, *args)


    def SetExponent(self, *args) -> "void":
        """
        :param aExponent:
        	:type aExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DerivedUnitElement_SetExponent(self, *args)


    def SetUnit(self, *args) -> "void":
        """
        :param aUnit:
        	:type aUnit: StepBasic_NamedUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_DerivedUnitElement_SetUnit(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_DerivedUnitElement_swiginit(self, _StepBasic.new_StepBasic_DerivedUnitElement(*args))

    def Unit(self, *args) -> "opencascade::handle< StepBasic_NamedUnit >":
        """:rtype: opencascade::handle<StepBasic_NamedUnit>"""
        return _StepBasic.StepBasic_DerivedUnitElement_Unit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DerivedUnitElement_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DerivedUnitElement
StepBasic_DerivedUnitElement.Exponent = new_instancemethod(_StepBasic.StepBasic_DerivedUnitElement_Exponent, None, StepBasic_DerivedUnitElement)
StepBasic_DerivedUnitElement.Init = new_instancemethod(_StepBasic.StepBasic_DerivedUnitElement_Init, None, StepBasic_DerivedUnitElement)
StepBasic_DerivedUnitElement.SetExponent = new_instancemethod(_StepBasic.StepBasic_DerivedUnitElement_SetExponent, None, StepBasic_DerivedUnitElement)
StepBasic_DerivedUnitElement.SetUnit = new_instancemethod(_StepBasic.StepBasic_DerivedUnitElement_SetUnit, None, StepBasic_DerivedUnitElement)
StepBasic_DerivedUnitElement.Unit = new_instancemethod(_StepBasic.StepBasic_DerivedUnitElement_Unit, None, StepBasic_DerivedUnitElement)
StepBasic_DerivedUnitElement_swigregister = _StepBasic.StepBasic_DerivedUnitElement_swigregister
StepBasic_DerivedUnitElement_swigregister(StepBasic_DerivedUnitElement)

class StepBasic_DimensionalExponents(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AmountOfSubstanceExponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_DimensionalExponents_AmountOfSubstanceExponent(self, *args)


    def ElectricCurrentExponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_DimensionalExponents_ElectricCurrentExponent(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aLengthExponent:
        	:type aLengthExponent: float
        	:param aMassExponent:
        	:type aMassExponent: float
        	:param aTimeExponent:
        	:type aTimeExponent: float
        	:param aElectricCurrentExponent:
        	:type aElectricCurrentExponent: float
        	:param aThermodynamicTemperatureExponent:
        	:type aThermodynamicTemperatureExponent: float
        	:param aAmountOfSubstanceExponent:
        	:type aAmountOfSubstanceExponent: float
        	:param aLuminousIntensityExponent:
        	:type aLuminousIntensityExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DimensionalExponents_Init(self, *args)


    def LengthExponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_DimensionalExponents_LengthExponent(self, *args)


    def LuminousIntensityExponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_DimensionalExponents_LuminousIntensityExponent(self, *args)


    def MassExponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_DimensionalExponents_MassExponent(self, *args)


    def SetAmountOfSubstanceExponent(self, *args) -> "void":
        """
        :param aAmountOfSubstanceExponent:
        	:type aAmountOfSubstanceExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DimensionalExponents_SetAmountOfSubstanceExponent(self, *args)


    def SetElectricCurrentExponent(self, *args) -> "void":
        """
        :param aElectricCurrentExponent:
        	:type aElectricCurrentExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DimensionalExponents_SetElectricCurrentExponent(self, *args)


    def SetLengthExponent(self, *args) -> "void":
        """
        :param aLengthExponent:
        	:type aLengthExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DimensionalExponents_SetLengthExponent(self, *args)


    def SetLuminousIntensityExponent(self, *args) -> "void":
        """
        :param aLuminousIntensityExponent:
        	:type aLuminousIntensityExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DimensionalExponents_SetLuminousIntensityExponent(self, *args)


    def SetMassExponent(self, *args) -> "void":
        """
        :param aMassExponent:
        	:type aMassExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DimensionalExponents_SetMassExponent(self, *args)


    def SetThermodynamicTemperatureExponent(self, *args) -> "void":
        """
        :param aThermodynamicTemperatureExponent:
        	:type aThermodynamicTemperatureExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DimensionalExponents_SetThermodynamicTemperatureExponent(self, *args)


    def SetTimeExponent(self, *args) -> "void":
        """
        :param aTimeExponent:
        	:type aTimeExponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_DimensionalExponents_SetTimeExponent(self, *args)


    def __init__(self, *args):
        """
        * Returns a DimensionalExponents
        	:rtype: None
        """
        _StepBasic.StepBasic_DimensionalExponents_swiginit(self, _StepBasic.new_StepBasic_DimensionalExponents(*args))

    def ThermodynamicTemperatureExponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_DimensionalExponents_ThermodynamicTemperatureExponent(self, *args)


    def TimeExponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_DimensionalExponents_TimeExponent(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DimensionalExponents_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DimensionalExponents
StepBasic_DimensionalExponents.AmountOfSubstanceExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_AmountOfSubstanceExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.ElectricCurrentExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_ElectricCurrentExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.Init = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_Init, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.LengthExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_LengthExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.LuminousIntensityExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_LuminousIntensityExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.MassExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_MassExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.SetAmountOfSubstanceExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_SetAmountOfSubstanceExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.SetElectricCurrentExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_SetElectricCurrentExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.SetLengthExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_SetLengthExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.SetLuminousIntensityExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_SetLuminousIntensityExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.SetMassExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_SetMassExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.SetThermodynamicTemperatureExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_SetThermodynamicTemperatureExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.SetTimeExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_SetTimeExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.ThermodynamicTemperatureExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_ThermodynamicTemperatureExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents.TimeExponent = new_instancemethod(_StepBasic.StepBasic_DimensionalExponents_TimeExponent, None, StepBasic_DimensionalExponents)
StepBasic_DimensionalExponents_swigregister = _StepBasic.StepBasic_DimensionalExponents_swigregister
StepBasic_DimensionalExponents_swigregister(StepBasic_DimensionalExponents)

class StepBasic_Document(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Document_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_Document_HasDescription(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Id
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Document_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aId:
        	:type aId: TCollection_HAsciiString
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aKind:
        	:type aKind: StepBasic_DocumentType
        	:rtype: None
        """
        return _StepBasic.StepBasic_Document_Init(self, *args)


    def Kind(self, *args) -> "opencascade::handle< StepBasic_DocumentType >":
        """
        * Returns field Kind
        	:rtype: opencascade::handle<StepBasic_DocumentType>
        """
        return _StepBasic.StepBasic_Document_Kind(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Document_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Document_SetDescription(self, *args)


    def SetId(self, *args) -> "void":
        """
        * Set field Id
        	:param Id:
        	:type Id: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Document_SetId(self, *args)


    def SetKind(self, *args) -> "void":
        """
        * Set field Kind
        	:param Kind:
        	:type Kind: StepBasic_DocumentType
        	:rtype: None
        """
        return _StepBasic.StepBasic_Document_SetKind(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Document_SetName(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_Document_swiginit(self, _StepBasic.new_StepBasic_Document(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Document_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Document
StepBasic_Document.Description = new_instancemethod(_StepBasic.StepBasic_Document_Description, None, StepBasic_Document)
StepBasic_Document.HasDescription = new_instancemethod(_StepBasic.StepBasic_Document_HasDescription, None, StepBasic_Document)
StepBasic_Document.Id = new_instancemethod(_StepBasic.StepBasic_Document_Id, None, StepBasic_Document)
StepBasic_Document.Init = new_instancemethod(_StepBasic.StepBasic_Document_Init, None, StepBasic_Document)
StepBasic_Document.Kind = new_instancemethod(_StepBasic.StepBasic_Document_Kind, None, StepBasic_Document)
StepBasic_Document.Name = new_instancemethod(_StepBasic.StepBasic_Document_Name, None, StepBasic_Document)
StepBasic_Document.SetDescription = new_instancemethod(_StepBasic.StepBasic_Document_SetDescription, None, StepBasic_Document)
StepBasic_Document.SetId = new_instancemethod(_StepBasic.StepBasic_Document_SetId, None, StepBasic_Document)
StepBasic_Document.SetKind = new_instancemethod(_StepBasic.StepBasic_Document_SetKind, None, StepBasic_Document)
StepBasic_Document.SetName = new_instancemethod(_StepBasic.StepBasic_Document_SetName, None, StepBasic_Document)
StepBasic_Document_swigregister = _StepBasic.StepBasic_Document_swigregister
StepBasic_Document_swigregister(StepBasic_Document)

class StepBasic_DocumentProductAssociation(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aRelatingDocument:
        	:type aRelatingDocument: StepBasic_Document
        	:param aRelatedProduct:
        	:type aRelatedProduct: StepBasic_ProductOrFormationOrDefinition
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_Name(self, *args)


    def RelatedProduct(self, *args) -> "StepBasic_ProductOrFormationOrDefinition":
        """
        * Returns field RelatedProduct
        	:rtype: StepBasic_ProductOrFormationOrDefinition
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_RelatedProduct(self, *args)


    def RelatingDocument(self, *args) -> "opencascade::handle< StepBasic_Document >":
        """
        * Returns field RelatingDocument
        	:rtype: opencascade::handle<StepBasic_Document>
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_RelatingDocument(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_SetName(self, *args)


    def SetRelatedProduct(self, *args) -> "void":
        """
        * Set field RelatedProduct
        	:param RelatedProduct:
        	:type RelatedProduct: StepBasic_ProductOrFormationOrDefinition
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_SetRelatedProduct(self, *args)


    def SetRelatingDocument(self, *args) -> "void":
        """
        * Set field RelatingDocument
        	:param RelatingDocument:
        	:type RelatingDocument: StepBasic_Document
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentProductAssociation_SetRelatingDocument(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_DocumentProductAssociation_swiginit(self, _StepBasic.new_StepBasic_DocumentProductAssociation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DocumentProductAssociation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DocumentProductAssociation
StepBasic_DocumentProductAssociation.Description = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_Description, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation.HasDescription = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_HasDescription, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation.Init = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_Init, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation.Name = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_Name, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation.RelatedProduct = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_RelatedProduct, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation.RelatingDocument = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_RelatingDocument, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation.SetDescription = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_SetDescription, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation.SetName = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_SetName, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation.SetRelatedProduct = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_SetRelatedProduct, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation.SetRelatingDocument = new_instancemethod(_StepBasic.StepBasic_DocumentProductAssociation_SetRelatingDocument, None, StepBasic_DocumentProductAssociation)
StepBasic_DocumentProductAssociation_swigregister = _StepBasic.StepBasic_DocumentProductAssociation_swigregister
StepBasic_DocumentProductAssociation_swigregister(StepBasic_DocumentProductAssociation)

class StepBasic_DocumentReference(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedDocument(self, *args) -> "opencascade::handle< StepBasic_Document >":
        """:rtype: opencascade::handle<StepBasic_Document>"""
        return _StepBasic.StepBasic_DocumentReference_AssignedDocument(self, *args)


    def Init0(self, *args) -> "void":
        """
        :param aAssignedDocument:
        	:type aAssignedDocument: StepBasic_Document
        	:param aSource:
        	:type aSource: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentReference_Init0(self, *args)


    def SetAssignedDocument(self, *args) -> "void":
        """
        :param aAssignedDocument:
        	:type aAssignedDocument: StepBasic_Document
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentReference_SetAssignedDocument(self, *args)


    def SetSource(self, *args) -> "void":
        """
        :param aSource:
        	:type aSource: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentReference_SetSource(self, *args)


    def Source(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_DocumentReference_Source(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DocumentReference_DownCast(t)


    __repr__ = _dumps_object


    def __init__(self):
        _StepBasic.StepBasic_DocumentReference_swiginit(self, _StepBasic.new_StepBasic_DocumentReference())
    __swig_destroy__ = _StepBasic.delete_StepBasic_DocumentReference
StepBasic_DocumentReference.AssignedDocument = new_instancemethod(_StepBasic.StepBasic_DocumentReference_AssignedDocument, None, StepBasic_DocumentReference)
StepBasic_DocumentReference.Init0 = new_instancemethod(_StepBasic.StepBasic_DocumentReference_Init0, None, StepBasic_DocumentReference)
StepBasic_DocumentReference.SetAssignedDocument = new_instancemethod(_StepBasic.StepBasic_DocumentReference_SetAssignedDocument, None, StepBasic_DocumentReference)
StepBasic_DocumentReference.SetSource = new_instancemethod(_StepBasic.StepBasic_DocumentReference_SetSource, None, StepBasic_DocumentReference)
StepBasic_DocumentReference.Source = new_instancemethod(_StepBasic.StepBasic_DocumentReference_Source, None, StepBasic_DocumentReference)
StepBasic_DocumentReference_swigregister = _StepBasic.StepBasic_DocumentReference_swigregister
StepBasic_DocumentReference_swigregister(StepBasic_DocumentReference)

class StepBasic_DocumentRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_DocumentRelationship_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aRelating:
        	:type aRelating: StepBasic_Document
        	:param aRelated:
        	:type aRelated: StepBasic_Document
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_DocumentRelationship_Name(self, *args)


    def RelatedDocument(self, *args) -> "opencascade::handle< StepBasic_Document >":
        """:rtype: opencascade::handle<StepBasic_Document>"""
        return _StepBasic.StepBasic_DocumentRelationship_RelatedDocument(self, *args)


    def RelatingDocument(self, *args) -> "opencascade::handle< StepBasic_Document >":
        """:rtype: opencascade::handle<StepBasic_Document>"""
        return _StepBasic.StepBasic_DocumentRelationship_RelatingDocument(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentRelationship_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentRelationship_SetName(self, *args)


    def SetRelatedDocument(self, *args) -> "void":
        """
        :param aRelated:
        	:type aRelated: StepBasic_Document
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentRelationship_SetRelatedDocument(self, *args)


    def SetRelatingDocument(self, *args) -> "void":
        """
        :param aRelating:
        	:type aRelating: StepBasic_Document
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentRelationship_SetRelatingDocument(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_DocumentRelationship_swiginit(self, _StepBasic.new_StepBasic_DocumentRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DocumentRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DocumentRelationship
StepBasic_DocumentRelationship.Description = new_instancemethod(_StepBasic.StepBasic_DocumentRelationship_Description, None, StepBasic_DocumentRelationship)
StepBasic_DocumentRelationship.Init = new_instancemethod(_StepBasic.StepBasic_DocumentRelationship_Init, None, StepBasic_DocumentRelationship)
StepBasic_DocumentRelationship.Name = new_instancemethod(_StepBasic.StepBasic_DocumentRelationship_Name, None, StepBasic_DocumentRelationship)
StepBasic_DocumentRelationship.RelatedDocument = new_instancemethod(_StepBasic.StepBasic_DocumentRelationship_RelatedDocument, None, StepBasic_DocumentRelationship)
StepBasic_DocumentRelationship.RelatingDocument = new_instancemethod(_StepBasic.StepBasic_DocumentRelationship_RelatingDocument, None, StepBasic_DocumentRelationship)
StepBasic_DocumentRelationship.SetDescription = new_instancemethod(_StepBasic.StepBasic_DocumentRelationship_SetDescription, None, StepBasic_DocumentRelationship)
StepBasic_DocumentRelationship.SetName = new_instancemethod(_StepBasic.StepBasic_DocumentRelationship_SetName, None, StepBasic_DocumentRelationship)
StepBasic_DocumentRelationship.SetRelatedDocument = new_instancemethod(_StepBasic.StepBasic_DocumentRelationship_SetRelatedDocument, None, StepBasic_DocumentRelationship)
StepBasic_DocumentRelationship.SetRelatingDocument = new_instancemethod(_StepBasic.StepBasic_DocumentRelationship_SetRelatingDocument, None, StepBasic_DocumentRelationship)
StepBasic_DocumentRelationship_swigregister = _StepBasic.StepBasic_DocumentRelationship_swigregister
StepBasic_DocumentRelationship_swigregister(StepBasic_DocumentRelationship)

class StepBasic_DocumentRepresentationType(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aRepresentedDocument:
        	:type aRepresentedDocument: StepBasic_Document
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentRepresentationType_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_DocumentRepresentationType_Name(self, *args)


    def RepresentedDocument(self, *args) -> "opencascade::handle< StepBasic_Document >":
        """
        * Returns field RepresentedDocument
        	:rtype: opencascade::handle<StepBasic_Document>
        """
        return _StepBasic.StepBasic_DocumentRepresentationType_RepresentedDocument(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentRepresentationType_SetName(self, *args)


    def SetRepresentedDocument(self, *args) -> "void":
        """
        * Set field RepresentedDocument
        	:param RepresentedDocument:
        	:type RepresentedDocument: StepBasic_Document
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentRepresentationType_SetRepresentedDocument(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_DocumentRepresentationType_swiginit(self, _StepBasic.new_StepBasic_DocumentRepresentationType(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DocumentRepresentationType_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DocumentRepresentationType
StepBasic_DocumentRepresentationType.Init = new_instancemethod(_StepBasic.StepBasic_DocumentRepresentationType_Init, None, StepBasic_DocumentRepresentationType)
StepBasic_DocumentRepresentationType.Name = new_instancemethod(_StepBasic.StepBasic_DocumentRepresentationType_Name, None, StepBasic_DocumentRepresentationType)
StepBasic_DocumentRepresentationType.RepresentedDocument = new_instancemethod(_StepBasic.StepBasic_DocumentRepresentationType_RepresentedDocument, None, StepBasic_DocumentRepresentationType)
StepBasic_DocumentRepresentationType.SetName = new_instancemethod(_StepBasic.StepBasic_DocumentRepresentationType_SetName, None, StepBasic_DocumentRepresentationType)
StepBasic_DocumentRepresentationType.SetRepresentedDocument = new_instancemethod(_StepBasic.StepBasic_DocumentRepresentationType_SetRepresentedDocument, None, StepBasic_DocumentRepresentationType)
StepBasic_DocumentRepresentationType_swigregister = _StepBasic.StepBasic_DocumentRepresentationType_swigregister
StepBasic_DocumentRepresentationType_swigregister(StepBasic_DocumentRepresentationType)

class StepBasic_DocumentType(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param apdt:
        	:type apdt: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentType_Init(self, *args)


    def ProductDataType(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_DocumentType_ProductDataType(self, *args)


    def SetProductDataType(self, *args) -> "void":
        """
        :param apdt:
        	:type apdt: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentType_SetProductDataType(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_DocumentType_swiginit(self, _StepBasic.new_StepBasic_DocumentType(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DocumentType_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DocumentType
StepBasic_DocumentType.Init = new_instancemethod(_StepBasic.StepBasic_DocumentType_Init, None, StepBasic_DocumentType)
StepBasic_DocumentType.ProductDataType = new_instancemethod(_StepBasic.StepBasic_DocumentType_ProductDataType, None, StepBasic_DocumentType)
StepBasic_DocumentType.SetProductDataType = new_instancemethod(_StepBasic.StepBasic_DocumentType_SetProductDataType, None, StepBasic_DocumentType)
StepBasic_DocumentType_swigregister = _StepBasic.StepBasic_DocumentType_swigregister
StepBasic_DocumentType_swigregister(StepBasic_DocumentType)

class StepBasic_DocumentUsageConstraint(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aSource:
        	:type aSource: StepBasic_Document
        	:param ase:
        	:type ase: TCollection_HAsciiString
        	:param asev:
        	:type asev: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentUsageConstraint_Init(self, *args)


    def SetSource(self, *args) -> "void":
        """
        :param aSource:
        	:type aSource: StepBasic_Document
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentUsageConstraint_SetSource(self, *args)


    def SetSubjectElement(self, *args) -> "void":
        """
        :param ase:
        	:type ase: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentUsageConstraint_SetSubjectElement(self, *args)


    def SetSubjectElementValue(self, *args) -> "void":
        """
        :param asev:
        	:type asev: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentUsageConstraint_SetSubjectElementValue(self, *args)


    def Source(self, *args) -> "opencascade::handle< StepBasic_Document >":
        """:rtype: opencascade::handle<StepBasic_Document>"""
        return _StepBasic.StepBasic_DocumentUsageConstraint_Source(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_DocumentUsageConstraint_swiginit(self, _StepBasic.new_StepBasic_DocumentUsageConstraint(*args))

    def SubjectElement(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_DocumentUsageConstraint_SubjectElement(self, *args)


    def SubjectElementValue(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_DocumentUsageConstraint_SubjectElementValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DocumentUsageConstraint_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DocumentUsageConstraint
StepBasic_DocumentUsageConstraint.Init = new_instancemethod(_StepBasic.StepBasic_DocumentUsageConstraint_Init, None, StepBasic_DocumentUsageConstraint)
StepBasic_DocumentUsageConstraint.SetSource = new_instancemethod(_StepBasic.StepBasic_DocumentUsageConstraint_SetSource, None, StepBasic_DocumentUsageConstraint)
StepBasic_DocumentUsageConstraint.SetSubjectElement = new_instancemethod(_StepBasic.StepBasic_DocumentUsageConstraint_SetSubjectElement, None, StepBasic_DocumentUsageConstraint)
StepBasic_DocumentUsageConstraint.SetSubjectElementValue = new_instancemethod(_StepBasic.StepBasic_DocumentUsageConstraint_SetSubjectElementValue, None, StepBasic_DocumentUsageConstraint)
StepBasic_DocumentUsageConstraint.Source = new_instancemethod(_StepBasic.StepBasic_DocumentUsageConstraint_Source, None, StepBasic_DocumentUsageConstraint)
StepBasic_DocumentUsageConstraint.SubjectElement = new_instancemethod(_StepBasic.StepBasic_DocumentUsageConstraint_SubjectElement, None, StepBasic_DocumentUsageConstraint)
StepBasic_DocumentUsageConstraint.SubjectElementValue = new_instancemethod(_StepBasic.StepBasic_DocumentUsageConstraint_SubjectElementValue, None, StepBasic_DocumentUsageConstraint)
StepBasic_DocumentUsageConstraint_swigregister = _StepBasic.StepBasic_DocumentUsageConstraint_swigregister
StepBasic_DocumentUsageConstraint_swigregister(StepBasic_DocumentUsageConstraint)

class StepBasic_Effectivity(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Effectivity_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aid:
        	:type aid: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Effectivity_Init(self, *args)


    def SetId(self, *args) -> "void":
        """
        :param aid:
        	:type aid: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Effectivity_SetId(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_Effectivity_swiginit(self, _StepBasic.new_StepBasic_Effectivity(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Effectivity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Effectivity
StepBasic_Effectivity.Id = new_instancemethod(_StepBasic.StepBasic_Effectivity_Id, None, StepBasic_Effectivity)
StepBasic_Effectivity.Init = new_instancemethod(_StepBasic.StepBasic_Effectivity_Init, None, StepBasic_Effectivity)
StepBasic_Effectivity.SetId = new_instancemethod(_StepBasic.StepBasic_Effectivity_SetId, None, StepBasic_Effectivity)
StepBasic_Effectivity_swigregister = _StepBasic.StepBasic_Effectivity_swigregister
StepBasic_Effectivity_swigregister(StepBasic_Effectivity)

class StepBasic_EffectivityAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedEffectivity(self, *args) -> "opencascade::handle< StepBasic_Effectivity >":
        """
        * Returns field AssignedEffectivity
        	:rtype: opencascade::handle<StepBasic_Effectivity>
        """
        return _StepBasic.StepBasic_EffectivityAssignment_AssignedEffectivity(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAssignedEffectivity:
        	:type aAssignedEffectivity: StepBasic_Effectivity
        	:rtype: None
        """
        return _StepBasic.StepBasic_EffectivityAssignment_Init(self, *args)


    def SetAssignedEffectivity(self, *args) -> "void":
        """
        * Set field AssignedEffectivity
        	:param AssignedEffectivity:
        	:type AssignedEffectivity: StepBasic_Effectivity
        	:rtype: None
        """
        return _StepBasic.StepBasic_EffectivityAssignment_SetAssignedEffectivity(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_EffectivityAssignment_swiginit(self, _StepBasic.new_StepBasic_EffectivityAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_EffectivityAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_EffectivityAssignment
StepBasic_EffectivityAssignment.AssignedEffectivity = new_instancemethod(_StepBasic.StepBasic_EffectivityAssignment_AssignedEffectivity, None, StepBasic_EffectivityAssignment)
StepBasic_EffectivityAssignment.Init = new_instancemethod(_StepBasic.StepBasic_EffectivityAssignment_Init, None, StepBasic_EffectivityAssignment)
StepBasic_EffectivityAssignment.SetAssignedEffectivity = new_instancemethod(_StepBasic.StepBasic_EffectivityAssignment_SetAssignedEffectivity, None, StepBasic_EffectivityAssignment)
StepBasic_EffectivityAssignment_swigregister = _StepBasic.StepBasic_EffectivityAssignment_swigregister
StepBasic_EffectivityAssignment_swigregister(StepBasic_EffectivityAssignment)

class StepBasic_EulerAngles(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Angles(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns field Angles
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepBasic.StepBasic_EulerAngles_Angles(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAngles:
        	:type aAngles: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepBasic.StepBasic_EulerAngles_Init(self, *args)


    def SetAngles(self, *args) -> "void":
        """
        * Set field Angles
        	:param Angles:
        	:type Angles: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepBasic.StepBasic_EulerAngles_SetAngles(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_EulerAngles_swiginit(self, _StepBasic.new_StepBasic_EulerAngles(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_EulerAngles_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_EulerAngles
StepBasic_EulerAngles.Angles = new_instancemethod(_StepBasic.StepBasic_EulerAngles_Angles, None, StepBasic_EulerAngles)
StepBasic_EulerAngles.Init = new_instancemethod(_StepBasic.StepBasic_EulerAngles_Init, None, StepBasic_EulerAngles)
StepBasic_EulerAngles.SetAngles = new_instancemethod(_StepBasic.StepBasic_EulerAngles_SetAngles, None, StepBasic_EulerAngles)
StepBasic_EulerAngles_swigregister = _StepBasic.StepBasic_EulerAngles_swigregister
StepBasic_EulerAngles_swigregister(StepBasic_EulerAngles)

class StepBasic_ExternalSource(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aSourceId:
        	:type aSourceId: StepBasic_SourceItem
        	:rtype: None
        """
        return _StepBasic.StepBasic_ExternalSource_Init(self, *args)


    def SetSourceId(self, *args) -> "void":
        """
        * Set field SourceId
        	:param SourceId:
        	:type SourceId: StepBasic_SourceItem
        	:rtype: None
        """
        return _StepBasic.StepBasic_ExternalSource_SetSourceId(self, *args)


    def SourceId(self, *args) -> "StepBasic_SourceItem":
        """
        * Returns field SourceId
        	:rtype: StepBasic_SourceItem
        """
        return _StepBasic.StepBasic_ExternalSource_SourceId(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ExternalSource_swiginit(self, _StepBasic.new_StepBasic_ExternalSource(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ExternalSource_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ExternalSource
StepBasic_ExternalSource.Init = new_instancemethod(_StepBasic.StepBasic_ExternalSource_Init, None, StepBasic_ExternalSource)
StepBasic_ExternalSource.SetSourceId = new_instancemethod(_StepBasic.StepBasic_ExternalSource_SetSourceId, None, StepBasic_ExternalSource)
StepBasic_ExternalSource.SourceId = new_instancemethod(_StepBasic.StepBasic_ExternalSource_SourceId, None, StepBasic_ExternalSource)
StepBasic_ExternalSource_swigregister = _StepBasic.StepBasic_ExternalSource_swigregister
StepBasic_ExternalSource_swigregister(StepBasic_ExternalSource)

class StepBasic_ExternallyDefinedItem(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aItemId:
        	:type aItemId: StepBasic_SourceItem
        	:param aSource:
        	:type aSource: StepBasic_ExternalSource
        	:rtype: None
        """
        return _StepBasic.StepBasic_ExternallyDefinedItem_Init(self, *args)


    def ItemId(self, *args) -> "StepBasic_SourceItem":
        """
        * Returns field ItemId
        	:rtype: StepBasic_SourceItem
        """
        return _StepBasic.StepBasic_ExternallyDefinedItem_ItemId(self, *args)


    def SetItemId(self, *args) -> "void":
        """
        * Set field ItemId
        	:param ItemId:
        	:type ItemId: StepBasic_SourceItem
        	:rtype: None
        """
        return _StepBasic.StepBasic_ExternallyDefinedItem_SetItemId(self, *args)


    def SetSource(self, *args) -> "void":
        """
        * Set field Source
        	:param Source:
        	:type Source: StepBasic_ExternalSource
        	:rtype: None
        """
        return _StepBasic.StepBasic_ExternallyDefinedItem_SetSource(self, *args)


    def Source(self, *args) -> "opencascade::handle< StepBasic_ExternalSource >":
        """
        * Returns field Source
        	:rtype: opencascade::handle<StepBasic_ExternalSource>
        """
        return _StepBasic.StepBasic_ExternallyDefinedItem_Source(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ExternallyDefinedItem_swiginit(self, _StepBasic.new_StepBasic_ExternallyDefinedItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ExternallyDefinedItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ExternallyDefinedItem
StepBasic_ExternallyDefinedItem.Init = new_instancemethod(_StepBasic.StepBasic_ExternallyDefinedItem_Init, None, StepBasic_ExternallyDefinedItem)
StepBasic_ExternallyDefinedItem.ItemId = new_instancemethod(_StepBasic.StepBasic_ExternallyDefinedItem_ItemId, None, StepBasic_ExternallyDefinedItem)
StepBasic_ExternallyDefinedItem.SetItemId = new_instancemethod(_StepBasic.StepBasic_ExternallyDefinedItem_SetItemId, None, StepBasic_ExternallyDefinedItem)
StepBasic_ExternallyDefinedItem.SetSource = new_instancemethod(_StepBasic.StepBasic_ExternallyDefinedItem_SetSource, None, StepBasic_ExternallyDefinedItem)
StepBasic_ExternallyDefinedItem.Source = new_instancemethod(_StepBasic.StepBasic_ExternallyDefinedItem_Source, None, StepBasic_ExternallyDefinedItem)
StepBasic_ExternallyDefinedItem_swigregister = _StepBasic.StepBasic_ExternallyDefinedItem_swigregister
StepBasic_ExternallyDefinedItem_swigregister(StepBasic_ExternallyDefinedItem)

class StepBasic_GeneralProperty(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_GeneralProperty_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_GeneralProperty_HasDescription(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Id
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_GeneralProperty_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aId:
        	:type aId: TCollection_HAsciiString
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_GeneralProperty_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_GeneralProperty_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_GeneralProperty_SetDescription(self, *args)


    def SetId(self, *args) -> "void":
        """
        * Set field Id
        	:param Id:
        	:type Id: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_GeneralProperty_SetId(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_GeneralProperty_SetName(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_GeneralProperty_swiginit(self, _StepBasic.new_StepBasic_GeneralProperty(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_GeneralProperty_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_GeneralProperty
StepBasic_GeneralProperty.Description = new_instancemethod(_StepBasic.StepBasic_GeneralProperty_Description, None, StepBasic_GeneralProperty)
StepBasic_GeneralProperty.HasDescription = new_instancemethod(_StepBasic.StepBasic_GeneralProperty_HasDescription, None, StepBasic_GeneralProperty)
StepBasic_GeneralProperty.Id = new_instancemethod(_StepBasic.StepBasic_GeneralProperty_Id, None, StepBasic_GeneralProperty)
StepBasic_GeneralProperty.Init = new_instancemethod(_StepBasic.StepBasic_GeneralProperty_Init, None, StepBasic_GeneralProperty)
StepBasic_GeneralProperty.Name = new_instancemethod(_StepBasic.StepBasic_GeneralProperty_Name, None, StepBasic_GeneralProperty)
StepBasic_GeneralProperty.SetDescription = new_instancemethod(_StepBasic.StepBasic_GeneralProperty_SetDescription, None, StepBasic_GeneralProperty)
StepBasic_GeneralProperty.SetId = new_instancemethod(_StepBasic.StepBasic_GeneralProperty_SetId, None, StepBasic_GeneralProperty)
StepBasic_GeneralProperty.SetName = new_instancemethod(_StepBasic.StepBasic_GeneralProperty_SetName, None, StepBasic_GeneralProperty)
StepBasic_GeneralProperty_swigregister = _StepBasic.StepBasic_GeneralProperty_swigregister
StepBasic_GeneralProperty_swigregister(StepBasic_GeneralProperty)

class StepBasic_Group(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Group_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_Group_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Group_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Group_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Group_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Group_SetName(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_Group_swiginit(self, _StepBasic.new_StepBasic_Group(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Group_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Group
StepBasic_Group.Description = new_instancemethod(_StepBasic.StepBasic_Group_Description, None, StepBasic_Group)
StepBasic_Group.HasDescription = new_instancemethod(_StepBasic.StepBasic_Group_HasDescription, None, StepBasic_Group)
StepBasic_Group.Init = new_instancemethod(_StepBasic.StepBasic_Group_Init, None, StepBasic_Group)
StepBasic_Group.Name = new_instancemethod(_StepBasic.StepBasic_Group_Name, None, StepBasic_Group)
StepBasic_Group.SetDescription = new_instancemethod(_StepBasic.StepBasic_Group_SetDescription, None, StepBasic_Group)
StepBasic_Group.SetName = new_instancemethod(_StepBasic.StepBasic_Group_SetName, None, StepBasic_Group)
StepBasic_Group_swigregister = _StepBasic.StepBasic_Group_swigregister
StepBasic_Group_swigregister(StepBasic_Group)

class StepBasic_GroupAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedGroup(self, *args) -> "opencascade::handle< StepBasic_Group >":
        """
        * Returns field AssignedGroup
        	:rtype: opencascade::handle<StepBasic_Group>
        """
        return _StepBasic.StepBasic_GroupAssignment_AssignedGroup(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAssignedGroup:
        	:type aAssignedGroup: StepBasic_Group
        	:rtype: None
        """
        return _StepBasic.StepBasic_GroupAssignment_Init(self, *args)


    def SetAssignedGroup(self, *args) -> "void":
        """
        * Set field AssignedGroup
        	:param AssignedGroup:
        	:type AssignedGroup: StepBasic_Group
        	:rtype: None
        """
        return _StepBasic.StepBasic_GroupAssignment_SetAssignedGroup(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_GroupAssignment_swiginit(self, _StepBasic.new_StepBasic_GroupAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_GroupAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_GroupAssignment
StepBasic_GroupAssignment.AssignedGroup = new_instancemethod(_StepBasic.StepBasic_GroupAssignment_AssignedGroup, None, StepBasic_GroupAssignment)
StepBasic_GroupAssignment.Init = new_instancemethod(_StepBasic.StepBasic_GroupAssignment_Init, None, StepBasic_GroupAssignment)
StepBasic_GroupAssignment.SetAssignedGroup = new_instancemethod(_StepBasic.StepBasic_GroupAssignment_SetAssignedGroup, None, StepBasic_GroupAssignment)
StepBasic_GroupAssignment_swigregister = _StepBasic.StepBasic_GroupAssignment_swigregister
StepBasic_GroupAssignment_swigregister(StepBasic_GroupAssignment)

class StepBasic_GroupRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_GroupRelationship_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_GroupRelationship_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aRelatingGroup:
        	:type aRelatingGroup: StepBasic_Group
        	:param aRelatedGroup:
        	:type aRelatedGroup: StepBasic_Group
        	:rtype: None
        """
        return _StepBasic.StepBasic_GroupRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_GroupRelationship_Name(self, *args)


    def RelatedGroup(self, *args) -> "opencascade::handle< StepBasic_Group >":
        """
        * Returns field RelatedGroup
        	:rtype: opencascade::handle<StepBasic_Group>
        """
        return _StepBasic.StepBasic_GroupRelationship_RelatedGroup(self, *args)


    def RelatingGroup(self, *args) -> "opencascade::handle< StepBasic_Group >":
        """
        * Returns field RelatingGroup
        	:rtype: opencascade::handle<StepBasic_Group>
        """
        return _StepBasic.StepBasic_GroupRelationship_RelatingGroup(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_GroupRelationship_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_GroupRelationship_SetName(self, *args)


    def SetRelatedGroup(self, *args) -> "void":
        """
        * Set field RelatedGroup
        	:param RelatedGroup:
        	:type RelatedGroup: StepBasic_Group
        	:rtype: None
        """
        return _StepBasic.StepBasic_GroupRelationship_SetRelatedGroup(self, *args)


    def SetRelatingGroup(self, *args) -> "void":
        """
        * Set field RelatingGroup
        	:param RelatingGroup:
        	:type RelatingGroup: StepBasic_Group
        	:rtype: None
        """
        return _StepBasic.StepBasic_GroupRelationship_SetRelatingGroup(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_GroupRelationship_swiginit(self, _StepBasic.new_StepBasic_GroupRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_GroupRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_GroupRelationship
StepBasic_GroupRelationship.Description = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_Description, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship.HasDescription = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_HasDescription, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship.Init = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_Init, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship.Name = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_Name, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship.RelatedGroup = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_RelatedGroup, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship.RelatingGroup = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_RelatingGroup, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship.SetDescription = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_SetDescription, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship.SetName = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_SetName, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship.SetRelatedGroup = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_SetRelatedGroup, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship.SetRelatingGroup = new_instancemethod(_StepBasic.StepBasic_GroupRelationship_SetRelatingGroup, None, StepBasic_GroupRelationship)
StepBasic_GroupRelationship_swigregister = _StepBasic.StepBasic_GroupRelationship_swigregister
StepBasic_GroupRelationship_swigregister(StepBasic_GroupRelationship)

class StepBasic_IdentificationAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedId(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field AssignedId
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_IdentificationAssignment_AssignedId(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAssignedId:
        	:type aAssignedId: TCollection_HAsciiString
        	:param aRole:
        	:type aRole: StepBasic_IdentificationRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_IdentificationAssignment_Init(self, *args)


    def Role(self, *args) -> "opencascade::handle< StepBasic_IdentificationRole >":
        """
        * Returns field Role
        	:rtype: opencascade::handle<StepBasic_IdentificationRole>
        """
        return _StepBasic.StepBasic_IdentificationAssignment_Role(self, *args)


    def SetAssignedId(self, *args) -> "void":
        """
        * Set field AssignedId
        	:param AssignedId:
        	:type AssignedId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_IdentificationAssignment_SetAssignedId(self, *args)


    def SetRole(self, *args) -> "void":
        """
        * Set field Role
        	:param Role:
        	:type Role: StepBasic_IdentificationRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_IdentificationAssignment_SetRole(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_IdentificationAssignment_swiginit(self, _StepBasic.new_StepBasic_IdentificationAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_IdentificationAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_IdentificationAssignment
StepBasic_IdentificationAssignment.AssignedId = new_instancemethod(_StepBasic.StepBasic_IdentificationAssignment_AssignedId, None, StepBasic_IdentificationAssignment)
StepBasic_IdentificationAssignment.Init = new_instancemethod(_StepBasic.StepBasic_IdentificationAssignment_Init, None, StepBasic_IdentificationAssignment)
StepBasic_IdentificationAssignment.Role = new_instancemethod(_StepBasic.StepBasic_IdentificationAssignment_Role, None, StepBasic_IdentificationAssignment)
StepBasic_IdentificationAssignment.SetAssignedId = new_instancemethod(_StepBasic.StepBasic_IdentificationAssignment_SetAssignedId, None, StepBasic_IdentificationAssignment)
StepBasic_IdentificationAssignment.SetRole = new_instancemethod(_StepBasic.StepBasic_IdentificationAssignment_SetRole, None, StepBasic_IdentificationAssignment)
StepBasic_IdentificationAssignment_swigregister = _StepBasic.StepBasic_IdentificationAssignment_swigregister
StepBasic_IdentificationAssignment_swigregister(StepBasic_IdentificationAssignment)

class StepBasic_IdentificationRole(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_IdentificationRole_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_IdentificationRole_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_IdentificationRole_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_IdentificationRole_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_IdentificationRole_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_IdentificationRole_SetName(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_IdentificationRole_swiginit(self, _StepBasic.new_StepBasic_IdentificationRole(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_IdentificationRole_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_IdentificationRole
StepBasic_IdentificationRole.Description = new_instancemethod(_StepBasic.StepBasic_IdentificationRole_Description, None, StepBasic_IdentificationRole)
StepBasic_IdentificationRole.HasDescription = new_instancemethod(_StepBasic.StepBasic_IdentificationRole_HasDescription, None, StepBasic_IdentificationRole)
StepBasic_IdentificationRole.Init = new_instancemethod(_StepBasic.StepBasic_IdentificationRole_Init, None, StepBasic_IdentificationRole)
StepBasic_IdentificationRole.Name = new_instancemethod(_StepBasic.StepBasic_IdentificationRole_Name, None, StepBasic_IdentificationRole)
StepBasic_IdentificationRole.SetDescription = new_instancemethod(_StepBasic.StepBasic_IdentificationRole_SetDescription, None, StepBasic_IdentificationRole)
StepBasic_IdentificationRole.SetName = new_instancemethod(_StepBasic.StepBasic_IdentificationRole_SetName, None, StepBasic_IdentificationRole)
StepBasic_IdentificationRole_swigregister = _StepBasic.StepBasic_IdentificationRole_swigregister
StepBasic_IdentificationRole_swigregister(StepBasic_IdentificationRole)

class StepBasic_LocalTime(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def HasMinuteComponent(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_LocalTime_HasMinuteComponent(self, *args)


    def HasSecondComponent(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_LocalTime_HasSecondComponent(self, *args)


    def HourComponent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_LocalTime_HourComponent(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aHourComponent:
        	:type aHourComponent: int
        	:param hasAminuteComponent:
        	:type hasAminuteComponent: bool
        	:param aMinuteComponent:
        	:type aMinuteComponent: int
        	:param hasAsecondComponent:
        	:type hasAsecondComponent: bool
        	:param aSecondComponent:
        	:type aSecondComponent: float
        	:param aZone:
        	:type aZone: StepBasic_CoordinatedUniversalTimeOffset
        	:rtype: None
        """
        return _StepBasic.StepBasic_LocalTime_Init(self, *args)


    def MinuteComponent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_LocalTime_MinuteComponent(self, *args)


    def SecondComponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_LocalTime_SecondComponent(self, *args)


    def SetHourComponent(self, *args) -> "void":
        """
        :param aHourComponent:
        	:type aHourComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_LocalTime_SetHourComponent(self, *args)


    def SetMinuteComponent(self, *args) -> "void":
        """
        :param aMinuteComponent:
        	:type aMinuteComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_LocalTime_SetMinuteComponent(self, *args)


    def SetSecondComponent(self, *args) -> "void":
        """
        :param aSecondComponent:
        	:type aSecondComponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_LocalTime_SetSecondComponent(self, *args)


    def SetZone(self, *args) -> "void":
        """
        :param aZone:
        	:type aZone: StepBasic_CoordinatedUniversalTimeOffset
        	:rtype: None
        """
        return _StepBasic.StepBasic_LocalTime_SetZone(self, *args)


    def __init__(self, *args):
        """
        * Returns a LocalTime
        	:rtype: None
        """
        _StepBasic.StepBasic_LocalTime_swiginit(self, _StepBasic.new_StepBasic_LocalTime(*args))

    def UnSetMinuteComponent(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_LocalTime_UnSetMinuteComponent(self, *args)


    def UnSetSecondComponent(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_LocalTime_UnSetSecondComponent(self, *args)


    def Zone(self, *args) -> "opencascade::handle< StepBasic_CoordinatedUniversalTimeOffset >":
        """:rtype: opencascade::handle<StepBasic_CoordinatedUniversalTimeOffset>"""
        return _StepBasic.StepBasic_LocalTime_Zone(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_LocalTime_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_LocalTime
StepBasic_LocalTime.HasMinuteComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_HasMinuteComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.HasSecondComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_HasSecondComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.HourComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_HourComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.Init = new_instancemethod(_StepBasic.StepBasic_LocalTime_Init, None, StepBasic_LocalTime)
StepBasic_LocalTime.MinuteComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_MinuteComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.SecondComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_SecondComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.SetHourComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_SetHourComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.SetMinuteComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_SetMinuteComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.SetSecondComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_SetSecondComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.SetZone = new_instancemethod(_StepBasic.StepBasic_LocalTime_SetZone, None, StepBasic_LocalTime)
StepBasic_LocalTime.UnSetMinuteComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_UnSetMinuteComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.UnSetSecondComponent = new_instancemethod(_StepBasic.StepBasic_LocalTime_UnSetSecondComponent, None, StepBasic_LocalTime)
StepBasic_LocalTime.Zone = new_instancemethod(_StepBasic.StepBasic_LocalTime_Zone, None, StepBasic_LocalTime)
StepBasic_LocalTime_swigregister = _StepBasic.StepBasic_LocalTime_swigregister
StepBasic_LocalTime_swigregister(StepBasic_LocalTime)

class StepBasic_MeasureValueMember(OCC.Core.StepData.StepData_SelectReal):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_MeasureValueMember_swiginit(self, _StepBasic.new_StepBasic_MeasureValueMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_MeasureValueMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_MeasureValueMember
StepBasic_MeasureValueMember_swigregister = _StepBasic.StepBasic_MeasureValueMember_swigregister
StepBasic_MeasureValueMember_swigregister(StepBasic_MeasureValueMember)

class StepBasic_MeasureWithUnit(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aValueComponent:
        	:type aValueComponent: StepBasic_MeasureValueMember
        	:param aUnitComponent:
        	:type aUnitComponent: StepBasic_Unit
        	:rtype: None
        """
        return _StepBasic.StepBasic_MeasureWithUnit_Init(self, *args)


    def SetUnitComponent(self, *args) -> "void":
        """
        :param aUnitComponent:
        	:type aUnitComponent: StepBasic_Unit
        	:rtype: None
        """
        return _StepBasic.StepBasic_MeasureWithUnit_SetUnitComponent(self, *args)


    def SetValueComponent(self, *args) -> "void":
        """
        :param aValueComponent:
        	:type aValueComponent: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_MeasureWithUnit_SetValueComponent(self, *args)


    def SetValueComponentMember(self, *args) -> "void":
        """
        :param val:
        	:type val: StepBasic_MeasureValueMember
        	:rtype: None
        """
        return _StepBasic.StepBasic_MeasureWithUnit_SetValueComponentMember(self, *args)


    def __init__(self, *args):
        """
        * Returns a MeasureWithUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_MeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_MeasureWithUnit(*args))

    def UnitComponent(self, *args) -> "StepBasic_Unit":
        """:rtype: StepBasic_Unit"""
        return _StepBasic.StepBasic_MeasureWithUnit_UnitComponent(self, *args)


    def ValueComponent(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepBasic.StepBasic_MeasureWithUnit_ValueComponent(self, *args)


    def ValueComponentMember(self, *args) -> "opencascade::handle< StepBasic_MeasureValueMember >":
        """:rtype: opencascade::handle<StepBasic_MeasureValueMember>"""
        return _StepBasic.StepBasic_MeasureWithUnit_ValueComponentMember(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_MeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_MeasureWithUnit
StepBasic_MeasureWithUnit.Init = new_instancemethod(_StepBasic.StepBasic_MeasureWithUnit_Init, None, StepBasic_MeasureWithUnit)
StepBasic_MeasureWithUnit.SetUnitComponent = new_instancemethod(_StepBasic.StepBasic_MeasureWithUnit_SetUnitComponent, None, StepBasic_MeasureWithUnit)
StepBasic_MeasureWithUnit.SetValueComponent = new_instancemethod(_StepBasic.StepBasic_MeasureWithUnit_SetValueComponent, None, StepBasic_MeasureWithUnit)
StepBasic_MeasureWithUnit.SetValueComponentMember = new_instancemethod(_StepBasic.StepBasic_MeasureWithUnit_SetValueComponentMember, None, StepBasic_MeasureWithUnit)
StepBasic_MeasureWithUnit.UnitComponent = new_instancemethod(_StepBasic.StepBasic_MeasureWithUnit_UnitComponent, None, StepBasic_MeasureWithUnit)
StepBasic_MeasureWithUnit.ValueComponent = new_instancemethod(_StepBasic.StepBasic_MeasureWithUnit_ValueComponent, None, StepBasic_MeasureWithUnit)
StepBasic_MeasureWithUnit.ValueComponentMember = new_instancemethod(_StepBasic.StepBasic_MeasureWithUnit_ValueComponentMember, None, StepBasic_MeasureWithUnit)
StepBasic_MeasureWithUnit_swigregister = _StepBasic.StepBasic_MeasureWithUnit_swigregister
StepBasic_MeasureWithUnit_swigregister(StepBasic_MeasureWithUnit)

class StepBasic_NameAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedName(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field AssignedName
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_NameAssignment_AssignedName(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAssignedName:
        	:type aAssignedName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_NameAssignment_Init(self, *args)


    def SetAssignedName(self, *args) -> "void":
        """
        * Set field AssignedName
        	:param AssignedName:
        	:type AssignedName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_NameAssignment_SetAssignedName(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_NameAssignment_swiginit(self, _StepBasic.new_StepBasic_NameAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_NameAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_NameAssignment
StepBasic_NameAssignment.AssignedName = new_instancemethod(_StepBasic.StepBasic_NameAssignment_AssignedName, None, StepBasic_NameAssignment)
StepBasic_NameAssignment.Init = new_instancemethod(_StepBasic.StepBasic_NameAssignment_Init, None, StepBasic_NameAssignment)
StepBasic_NameAssignment.SetAssignedName = new_instancemethod(_StepBasic.StepBasic_NameAssignment_SetAssignedName, None, StepBasic_NameAssignment)
StepBasic_NameAssignment_swigregister = _StepBasic.StepBasic_NameAssignment_swigregister
StepBasic_NameAssignment_swigregister(StepBasic_NameAssignment)

class StepBasic_NamedUnit(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Dimensions(self, *args) -> "opencascade::handle< StepBasic_DimensionalExponents >":
        """:rtype: opencascade::handle<StepBasic_DimensionalExponents>"""
        return _StepBasic.StepBasic_NamedUnit_Dimensions(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aDimensions:
        	:type aDimensions: StepBasic_DimensionalExponents
        	:rtype: None
        """
        return _StepBasic.StepBasic_NamedUnit_Init(self, *args)


    def SetDimensions(self, *args) -> "void":
        """
        :param aDimensions:
        	:type aDimensions: StepBasic_DimensionalExponents
        	:rtype: void
        """
        return _StepBasic.StepBasic_NamedUnit_SetDimensions(self, *args)


    def __init__(self, *args):
        """
        * Returns a NamedUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_NamedUnit_swiginit(self, _StepBasic.new_StepBasic_NamedUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_NamedUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_NamedUnit
StepBasic_NamedUnit.Dimensions = new_instancemethod(_StepBasic.StepBasic_NamedUnit_Dimensions, None, StepBasic_NamedUnit)
StepBasic_NamedUnit.Init = new_instancemethod(_StepBasic.StepBasic_NamedUnit_Init, None, StepBasic_NamedUnit)
StepBasic_NamedUnit.SetDimensions = new_instancemethod(_StepBasic.StepBasic_NamedUnit_SetDimensions, None, StepBasic_NamedUnit)
StepBasic_NamedUnit_swigregister = _StepBasic.StepBasic_NamedUnit_swigregister
StepBasic_NamedUnit_swigregister(StepBasic_NamedUnit)

class StepBasic_ObjectRole(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ObjectRole_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_ObjectRole_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ObjectRole_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ObjectRole_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ObjectRole_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ObjectRole_SetName(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ObjectRole_swiginit(self, _StepBasic.new_StepBasic_ObjectRole(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ObjectRole_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ObjectRole
StepBasic_ObjectRole.Description = new_instancemethod(_StepBasic.StepBasic_ObjectRole_Description, None, StepBasic_ObjectRole)
StepBasic_ObjectRole.HasDescription = new_instancemethod(_StepBasic.StepBasic_ObjectRole_HasDescription, None, StepBasic_ObjectRole)
StepBasic_ObjectRole.Init = new_instancemethod(_StepBasic.StepBasic_ObjectRole_Init, None, StepBasic_ObjectRole)
StepBasic_ObjectRole.Name = new_instancemethod(_StepBasic.StepBasic_ObjectRole_Name, None, StepBasic_ObjectRole)
StepBasic_ObjectRole.SetDescription = new_instancemethod(_StepBasic.StepBasic_ObjectRole_SetDescription, None, StepBasic_ObjectRole)
StepBasic_ObjectRole.SetName = new_instancemethod(_StepBasic.StepBasic_ObjectRole_SetName, None, StepBasic_ObjectRole)
StepBasic_ObjectRole_swigregister = _StepBasic.StepBasic_ObjectRole_swigregister
StepBasic_ObjectRole_swigregister(StepBasic_ObjectRole)

class StepBasic_Organization(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Organization_Description(self, *args)


    def HasId(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Organization_HasId(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Organization_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        :param hasAid:
        	:type hasAid: bool
        	:param aId:
        	:type aId: TCollection_HAsciiString
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Organization_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Organization_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Organization_SetDescription(self, *args)


    def SetId(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Organization_SetId(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Organization_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a Organization
        	:rtype: None
        """
        _StepBasic.StepBasic_Organization_swiginit(self, _StepBasic.new_StepBasic_Organization(*args))

    def UnSetId(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Organization_UnSetId(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Organization_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Organization
StepBasic_Organization.Description = new_instancemethod(_StepBasic.StepBasic_Organization_Description, None, StepBasic_Organization)
StepBasic_Organization.HasId = new_instancemethod(_StepBasic.StepBasic_Organization_HasId, None, StepBasic_Organization)
StepBasic_Organization.Id = new_instancemethod(_StepBasic.StepBasic_Organization_Id, None, StepBasic_Organization)
StepBasic_Organization.Init = new_instancemethod(_StepBasic.StepBasic_Organization_Init, None, StepBasic_Organization)
StepBasic_Organization.Name = new_instancemethod(_StepBasic.StepBasic_Organization_Name, None, StepBasic_Organization)
StepBasic_Organization.SetDescription = new_instancemethod(_StepBasic.StepBasic_Organization_SetDescription, None, StepBasic_Organization)
StepBasic_Organization.SetId = new_instancemethod(_StepBasic.StepBasic_Organization_SetId, None, StepBasic_Organization)
StepBasic_Organization.SetName = new_instancemethod(_StepBasic.StepBasic_Organization_SetName, None, StepBasic_Organization)
StepBasic_Organization.UnSetId = new_instancemethod(_StepBasic.StepBasic_Organization_UnSetId, None, StepBasic_Organization)
StepBasic_Organization_swigregister = _StepBasic.StepBasic_Organization_swigregister
StepBasic_Organization_swigregister(StepBasic_Organization)

class StepBasic_OrganizationAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedOrganization(self, *args) -> "opencascade::handle< StepBasic_Organization >":
        """:rtype: opencascade::handle<StepBasic_Organization>"""
        return _StepBasic.StepBasic_OrganizationAssignment_AssignedOrganization(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aAssignedOrganization:
        	:type aAssignedOrganization: StepBasic_Organization
        	:param aRole:
        	:type aRole: StepBasic_OrganizationRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrganizationAssignment_Init(self, *args)


    def Role(self, *args) -> "opencascade::handle< StepBasic_OrganizationRole >":
        """:rtype: opencascade::handle<StepBasic_OrganizationRole>"""
        return _StepBasic.StepBasic_OrganizationAssignment_Role(self, *args)


    def SetAssignedOrganization(self, *args) -> "void":
        """
        :param aAssignedOrganization:
        	:type aAssignedOrganization: StepBasic_Organization
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrganizationAssignment_SetAssignedOrganization(self, *args)


    def SetRole(self, *args) -> "void":
        """
        :param aRole:
        	:type aRole: StepBasic_OrganizationRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrganizationAssignment_SetRole(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_OrganizationAssignment_DownCast(t)


    __repr__ = _dumps_object


    def __init__(self):
        _StepBasic.StepBasic_OrganizationAssignment_swiginit(self, _StepBasic.new_StepBasic_OrganizationAssignment())
    __swig_destroy__ = _StepBasic.delete_StepBasic_OrganizationAssignment
StepBasic_OrganizationAssignment.AssignedOrganization = new_instancemethod(_StepBasic.StepBasic_OrganizationAssignment_AssignedOrganization, None, StepBasic_OrganizationAssignment)
StepBasic_OrganizationAssignment.Init = new_instancemethod(_StepBasic.StepBasic_OrganizationAssignment_Init, None, StepBasic_OrganizationAssignment)
StepBasic_OrganizationAssignment.Role = new_instancemethod(_StepBasic.StepBasic_OrganizationAssignment_Role, None, StepBasic_OrganizationAssignment)
StepBasic_OrganizationAssignment.SetAssignedOrganization = new_instancemethod(_StepBasic.StepBasic_OrganizationAssignment_SetAssignedOrganization, None, StepBasic_OrganizationAssignment)
StepBasic_OrganizationAssignment.SetRole = new_instancemethod(_StepBasic.StepBasic_OrganizationAssignment_SetRole, None, StepBasic_OrganizationAssignment)
StepBasic_OrganizationAssignment_swigregister = _StepBasic.StepBasic_OrganizationAssignment_swigregister
StepBasic_OrganizationAssignment_swigregister(StepBasic_OrganizationAssignment)

class StepBasic_OrganizationRole(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrganizationRole_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_OrganizationRole_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrganizationRole_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a OrganizationRole
        	:rtype: None
        """
        _StepBasic.StepBasic_OrganizationRole_swiginit(self, _StepBasic.new_StepBasic_OrganizationRole(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_OrganizationRole_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_OrganizationRole
StepBasic_OrganizationRole.Init = new_instancemethod(_StepBasic.StepBasic_OrganizationRole_Init, None, StepBasic_OrganizationRole)
StepBasic_OrganizationRole.Name = new_instancemethod(_StepBasic.StepBasic_OrganizationRole_Name, None, StepBasic_OrganizationRole)
StepBasic_OrganizationRole.SetName = new_instancemethod(_StepBasic.StepBasic_OrganizationRole_SetName, None, StepBasic_OrganizationRole)
StepBasic_OrganizationRole_swigregister = _StepBasic.StepBasic_OrganizationRole_swigregister
StepBasic_OrganizationRole_swigregister(StepBasic_OrganizationRole)

class StepBasic_Person(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FirstName(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Person_FirstName(self, *args)


    def HasFirstName(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Person_HasFirstName(self, *args)


    def HasLastName(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Person_HasLastName(self, *args)


    def HasMiddleNames(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Person_HasMiddleNames(self, *args)


    def HasPrefixTitles(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Person_HasPrefixTitles(self, *args)


    def HasSuffixTitles(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_Person_HasSuffixTitles(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Person_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:param hasAlastName:
        	:type hasAlastName: bool
        	:param aLastName:
        	:type aLastName: TCollection_HAsciiString
        	:param hasAfirstName:
        	:type hasAfirstName: bool
        	:param aFirstName:
        	:type aFirstName: TCollection_HAsciiString
        	:param hasAmiddleNames:
        	:type hasAmiddleNames: bool
        	:param aMiddleNames:
        	:type aMiddleNames: Interface_HArray1OfHAsciiString
        	:param hasAprefixTitles:
        	:type hasAprefixTitles: bool
        	:param aPrefixTitles:
        	:type aPrefixTitles: Interface_HArray1OfHAsciiString
        	:param hasAsuffixTitles:
        	:type hasAsuffixTitles: bool
        	:param aSuffixTitles:
        	:type aSuffixTitles: Interface_HArray1OfHAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Person_Init(self, *args)


    def LastName(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Person_LastName(self, *args)


    def MiddleNames(self, *args) -> "opencascade::handle< Interface_HArray1OfHAsciiString >":
        """:rtype: opencascade::handle<Interface_HArray1OfHAsciiString>"""
        return _StepBasic.StepBasic_Person_MiddleNames(self, *args)


    def MiddleNamesValue(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Person_MiddleNamesValue(self, *args)


    def NbMiddleNames(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_Person_NbMiddleNames(self, *args)


    def NbPrefixTitles(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_Person_NbPrefixTitles(self, *args)


    def NbSuffixTitles(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_Person_NbSuffixTitles(self, *args)


    def PrefixTitles(self, *args) -> "opencascade::handle< Interface_HArray1OfHAsciiString >":
        """:rtype: opencascade::handle<Interface_HArray1OfHAsciiString>"""
        return _StepBasic.StepBasic_Person_PrefixTitles(self, *args)


    def PrefixTitlesValue(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Person_PrefixTitlesValue(self, *args)


    def SetFirstName(self, *args) -> "void":
        """
        :param aFirstName:
        	:type aFirstName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Person_SetFirstName(self, *args)


    def SetId(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Person_SetId(self, *args)


    def SetLastName(self, *args) -> "void":
        """
        :param aLastName:
        	:type aLastName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Person_SetLastName(self, *args)


    def SetMiddleNames(self, *args) -> "void":
        """
        :param aMiddleNames:
        	:type aMiddleNames: Interface_HArray1OfHAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Person_SetMiddleNames(self, *args)


    def SetPrefixTitles(self, *args) -> "void":
        """
        :param aPrefixTitles:
        	:type aPrefixTitles: Interface_HArray1OfHAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Person_SetPrefixTitles(self, *args)


    def SetSuffixTitles(self, *args) -> "void":
        """
        :param aSuffixTitles:
        	:type aSuffixTitles: Interface_HArray1OfHAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Person_SetSuffixTitles(self, *args)


    def __init__(self, *args):
        """
        * Returns a Person
        	:rtype: None
        """
        _StepBasic.StepBasic_Person_swiginit(self, _StepBasic.new_StepBasic_Person(*args))

    def SuffixTitles(self, *args) -> "opencascade::handle< Interface_HArray1OfHAsciiString >":
        """:rtype: opencascade::handle<Interface_HArray1OfHAsciiString>"""
        return _StepBasic.StepBasic_Person_SuffixTitles(self, *args)


    def SuffixTitlesValue(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_Person_SuffixTitlesValue(self, *args)


    def UnSetFirstName(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Person_UnSetFirstName(self, *args)


    def UnSetLastName(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Person_UnSetLastName(self, *args)


    def UnSetMiddleNames(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Person_UnSetMiddleNames(self, *args)


    def UnSetPrefixTitles(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Person_UnSetPrefixTitles(self, *args)


    def UnSetSuffixTitles(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_Person_UnSetSuffixTitles(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Person_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Person
StepBasic_Person.FirstName = new_instancemethod(_StepBasic.StepBasic_Person_FirstName, None, StepBasic_Person)
StepBasic_Person.HasFirstName = new_instancemethod(_StepBasic.StepBasic_Person_HasFirstName, None, StepBasic_Person)
StepBasic_Person.HasLastName = new_instancemethod(_StepBasic.StepBasic_Person_HasLastName, None, StepBasic_Person)
StepBasic_Person.HasMiddleNames = new_instancemethod(_StepBasic.StepBasic_Person_HasMiddleNames, None, StepBasic_Person)
StepBasic_Person.HasPrefixTitles = new_instancemethod(_StepBasic.StepBasic_Person_HasPrefixTitles, None, StepBasic_Person)
StepBasic_Person.HasSuffixTitles = new_instancemethod(_StepBasic.StepBasic_Person_HasSuffixTitles, None, StepBasic_Person)
StepBasic_Person.Id = new_instancemethod(_StepBasic.StepBasic_Person_Id, None, StepBasic_Person)
StepBasic_Person.Init = new_instancemethod(_StepBasic.StepBasic_Person_Init, None, StepBasic_Person)
StepBasic_Person.LastName = new_instancemethod(_StepBasic.StepBasic_Person_LastName, None, StepBasic_Person)
StepBasic_Person.MiddleNames = new_instancemethod(_StepBasic.StepBasic_Person_MiddleNames, None, StepBasic_Person)
StepBasic_Person.MiddleNamesValue = new_instancemethod(_StepBasic.StepBasic_Person_MiddleNamesValue, None, StepBasic_Person)
StepBasic_Person.NbMiddleNames = new_instancemethod(_StepBasic.StepBasic_Person_NbMiddleNames, None, StepBasic_Person)
StepBasic_Person.NbPrefixTitles = new_instancemethod(_StepBasic.StepBasic_Person_NbPrefixTitles, None, StepBasic_Person)
StepBasic_Person.NbSuffixTitles = new_instancemethod(_StepBasic.StepBasic_Person_NbSuffixTitles, None, StepBasic_Person)
StepBasic_Person.PrefixTitles = new_instancemethod(_StepBasic.StepBasic_Person_PrefixTitles, None, StepBasic_Person)
StepBasic_Person.PrefixTitlesValue = new_instancemethod(_StepBasic.StepBasic_Person_PrefixTitlesValue, None, StepBasic_Person)
StepBasic_Person.SetFirstName = new_instancemethod(_StepBasic.StepBasic_Person_SetFirstName, None, StepBasic_Person)
StepBasic_Person.SetId = new_instancemethod(_StepBasic.StepBasic_Person_SetId, None, StepBasic_Person)
StepBasic_Person.SetLastName = new_instancemethod(_StepBasic.StepBasic_Person_SetLastName, None, StepBasic_Person)
StepBasic_Person.SetMiddleNames = new_instancemethod(_StepBasic.StepBasic_Person_SetMiddleNames, None, StepBasic_Person)
StepBasic_Person.SetPrefixTitles = new_instancemethod(_StepBasic.StepBasic_Person_SetPrefixTitles, None, StepBasic_Person)
StepBasic_Person.SetSuffixTitles = new_instancemethod(_StepBasic.StepBasic_Person_SetSuffixTitles, None, StepBasic_Person)
StepBasic_Person.SuffixTitles = new_instancemethod(_StepBasic.StepBasic_Person_SuffixTitles, None, StepBasic_Person)
StepBasic_Person.SuffixTitlesValue = new_instancemethod(_StepBasic.StepBasic_Person_SuffixTitlesValue, None, StepBasic_Person)
StepBasic_Person.UnSetFirstName = new_instancemethod(_StepBasic.StepBasic_Person_UnSetFirstName, None, StepBasic_Person)
StepBasic_Person.UnSetLastName = new_instancemethod(_StepBasic.StepBasic_Person_UnSetLastName, None, StepBasic_Person)
StepBasic_Person.UnSetMiddleNames = new_instancemethod(_StepBasic.StepBasic_Person_UnSetMiddleNames, None, StepBasic_Person)
StepBasic_Person.UnSetPrefixTitles = new_instancemethod(_StepBasic.StepBasic_Person_UnSetPrefixTitles, None, StepBasic_Person)
StepBasic_Person.UnSetSuffixTitles = new_instancemethod(_StepBasic.StepBasic_Person_UnSetSuffixTitles, None, StepBasic_Person)
StepBasic_Person_swigregister = _StepBasic.StepBasic_Person_swigregister
StepBasic_Person_swigregister(StepBasic_Person)

class StepBasic_PersonAndOrganization(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aThePerson:
        	:type aThePerson: StepBasic_Person
        	:param aTheOrganization:
        	:type aTheOrganization: StepBasic_Organization
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonAndOrganization_Init(self, *args)


    def SetTheOrganization(self, *args) -> "void":
        """
        :param aTheOrganization:
        	:type aTheOrganization: StepBasic_Organization
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonAndOrganization_SetTheOrganization(self, *args)


    def SetThePerson(self, *args) -> "void":
        """
        :param aThePerson:
        	:type aThePerson: StepBasic_Person
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonAndOrganization_SetThePerson(self, *args)


    def __init__(self, *args):
        """
        * Returns a PersonAndOrganization
        	:rtype: None
        """
        _StepBasic.StepBasic_PersonAndOrganization_swiginit(self, _StepBasic.new_StepBasic_PersonAndOrganization(*args))

    def TheOrganization(self, *args) -> "opencascade::handle< StepBasic_Organization >":
        """:rtype: opencascade::handle<StepBasic_Organization>"""
        return _StepBasic.StepBasic_PersonAndOrganization_TheOrganization(self, *args)


    def ThePerson(self, *args) -> "opencascade::handle< StepBasic_Person >":
        """:rtype: opencascade::handle<StepBasic_Person>"""
        return _StepBasic.StepBasic_PersonAndOrganization_ThePerson(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_PersonAndOrganization_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_PersonAndOrganization
StepBasic_PersonAndOrganization.Init = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganization_Init, None, StepBasic_PersonAndOrganization)
StepBasic_PersonAndOrganization.SetTheOrganization = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganization_SetTheOrganization, None, StepBasic_PersonAndOrganization)
StepBasic_PersonAndOrganization.SetThePerson = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganization_SetThePerson, None, StepBasic_PersonAndOrganization)
StepBasic_PersonAndOrganization.TheOrganization = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganization_TheOrganization, None, StepBasic_PersonAndOrganization)
StepBasic_PersonAndOrganization.ThePerson = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganization_ThePerson, None, StepBasic_PersonAndOrganization)
StepBasic_PersonAndOrganization_swigregister = _StepBasic.StepBasic_PersonAndOrganization_swigregister
StepBasic_PersonAndOrganization_swigregister(StepBasic_PersonAndOrganization)

class StepBasic_PersonAndOrganizationAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedPersonAndOrganization(self, *args) -> "opencascade::handle< StepBasic_PersonAndOrganization >":
        """:rtype: opencascade::handle<StepBasic_PersonAndOrganization>"""
        return _StepBasic.StepBasic_PersonAndOrganizationAssignment_AssignedPersonAndOrganization(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aAssignedPersonAndOrganization:
        	:type aAssignedPersonAndOrganization: StepBasic_PersonAndOrganization
        	:param aRole:
        	:type aRole: StepBasic_PersonAndOrganizationRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonAndOrganizationAssignment_Init(self, *args)


    def Role(self, *args) -> "opencascade::handle< StepBasic_PersonAndOrganizationRole >":
        """:rtype: opencascade::handle<StepBasic_PersonAndOrganizationRole>"""
        return _StepBasic.StepBasic_PersonAndOrganizationAssignment_Role(self, *args)


    def SetAssignedPersonAndOrganization(self, *args) -> "void":
        """
        :param aAssignedPersonAndOrganization:
        	:type aAssignedPersonAndOrganization: StepBasic_PersonAndOrganization
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonAndOrganizationAssignment_SetAssignedPersonAndOrganization(self, *args)


    def SetRole(self, *args) -> "void":
        """
        :param aRole:
        	:type aRole: StepBasic_PersonAndOrganizationRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonAndOrganizationAssignment_SetRole(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_PersonAndOrganizationAssignment_DownCast(t)


    __repr__ = _dumps_object


    def __init__(self):
        _StepBasic.StepBasic_PersonAndOrganizationAssignment_swiginit(self, _StepBasic.new_StepBasic_PersonAndOrganizationAssignment())
    __swig_destroy__ = _StepBasic.delete_StepBasic_PersonAndOrganizationAssignment
StepBasic_PersonAndOrganizationAssignment.AssignedPersonAndOrganization = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganizationAssignment_AssignedPersonAndOrganization, None, StepBasic_PersonAndOrganizationAssignment)
StepBasic_PersonAndOrganizationAssignment.Init = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganizationAssignment_Init, None, StepBasic_PersonAndOrganizationAssignment)
StepBasic_PersonAndOrganizationAssignment.Role = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganizationAssignment_Role, None, StepBasic_PersonAndOrganizationAssignment)
StepBasic_PersonAndOrganizationAssignment.SetAssignedPersonAndOrganization = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganizationAssignment_SetAssignedPersonAndOrganization, None, StepBasic_PersonAndOrganizationAssignment)
StepBasic_PersonAndOrganizationAssignment.SetRole = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganizationAssignment_SetRole, None, StepBasic_PersonAndOrganizationAssignment)
StepBasic_PersonAndOrganizationAssignment_swigregister = _StepBasic.StepBasic_PersonAndOrganizationAssignment_swigregister
StepBasic_PersonAndOrganizationAssignment_swigregister(StepBasic_PersonAndOrganizationAssignment)

class StepBasic_PersonAndOrganizationRole(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonAndOrganizationRole_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_PersonAndOrganizationRole_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonAndOrganizationRole_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a PersonAndOrganizationRole
        	:rtype: None
        """
        _StepBasic.StepBasic_PersonAndOrganizationRole_swiginit(self, _StepBasic.new_StepBasic_PersonAndOrganizationRole(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_PersonAndOrganizationRole_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_PersonAndOrganizationRole
StepBasic_PersonAndOrganizationRole.Init = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganizationRole_Init, None, StepBasic_PersonAndOrganizationRole)
StepBasic_PersonAndOrganizationRole.Name = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganizationRole_Name, None, StepBasic_PersonAndOrganizationRole)
StepBasic_PersonAndOrganizationRole.SetName = new_instancemethod(_StepBasic.StepBasic_PersonAndOrganizationRole_SetName, None, StepBasic_PersonAndOrganizationRole)
StepBasic_PersonAndOrganizationRole_swigregister = _StepBasic.StepBasic_PersonAndOrganizationRole_swigregister
StepBasic_PersonAndOrganizationRole_swigregister(StepBasic_PersonAndOrganizationRole)

class StepBasic_PersonOrganizationSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Organization(self, *args) -> "opencascade::handle< StepBasic_Organization >":
        """
        * returns Value as a Organization (Null if another type)
        	:rtype: opencascade::handle<StepBasic_Organization>
        """
        return _StepBasic.StepBasic_PersonOrganizationSelect_Organization(self, *args)


    def Person(self, *args) -> "opencascade::handle< StepBasic_Person >":
        """
        * returns Value as a Person (Null if another type)
        	:rtype: opencascade::handle<StepBasic_Person>
        """
        return _StepBasic.StepBasic_PersonOrganizationSelect_Person(self, *args)


    def PersonAndOrganization(self, *args) -> "opencascade::handle< StepBasic_PersonAndOrganization >":
        """
        * returns Value as a PersonAndOrganization (Null if another type)
        	:rtype: opencascade::handle<StepBasic_PersonAndOrganization>
        """
        return _StepBasic.StepBasic_PersonOrganizationSelect_PersonAndOrganization(self, *args)


    def __init__(self, *args):
        """
        * Returns a PersonOrganizationSelect SelectType
        	:rtype: None
        """
        _StepBasic.StepBasic_PersonOrganizationSelect_swiginit(self, _StepBasic.new_StepBasic_PersonOrganizationSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_PersonOrganizationSelect
StepBasic_PersonOrganizationSelect.Organization = new_instancemethod(_StepBasic.StepBasic_PersonOrganizationSelect_Organization, None, StepBasic_PersonOrganizationSelect)
StepBasic_PersonOrganizationSelect.Person = new_instancemethod(_StepBasic.StepBasic_PersonOrganizationSelect_Person, None, StepBasic_PersonOrganizationSelect)
StepBasic_PersonOrganizationSelect.PersonAndOrganization = new_instancemethod(_StepBasic.StepBasic_PersonOrganizationSelect_PersonAndOrganization, None, StepBasic_PersonOrganizationSelect)
StepBasic_PersonOrganizationSelect_swigregister = _StepBasic.StepBasic_PersonOrganizationSelect_swigregister
StepBasic_PersonOrganizationSelect_swigregister(StepBasic_PersonOrganizationSelect)

class StepBasic_Product(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Product_Description(self, *args)


    def FrameOfReference(self, *args) -> "opencascade::handle< StepBasic_HArray1OfProductContext >":
        """:rtype: opencascade::handle<StepBasic_HArray1OfProductContext>"""
        return _StepBasic.StepBasic_Product_FrameOfReference(self, *args)


    def FrameOfReferenceValue(self, *args) -> "opencascade::handle< StepBasic_ProductContext >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepBasic_ProductContext>
        """
        return _StepBasic.StepBasic_Product_FrameOfReferenceValue(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Product_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aFrameOfReference:
        	:type aFrameOfReference: StepBasic_HArray1OfProductContext
        	:rtype: None
        """
        return _StepBasic.StepBasic_Product_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_Product_Name(self, *args)


    def NbFrameOfReference(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_Product_NbFrameOfReference(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Product_SetDescription(self, *args)


    def SetFrameOfReference(self, *args) -> "void":
        """
        :param aFrameOfReference:
        	:type aFrameOfReference: StepBasic_HArray1OfProductContext
        	:rtype: None
        """
        return _StepBasic.StepBasic_Product_SetFrameOfReference(self, *args)


    def SetId(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Product_SetId(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_Product_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a Product
        	:rtype: None
        """
        _StepBasic.StepBasic_Product_swiginit(self, _StepBasic.new_StepBasic_Product(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_Product_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Product
StepBasic_Product.Description = new_instancemethod(_StepBasic.StepBasic_Product_Description, None, StepBasic_Product)
StepBasic_Product.FrameOfReference = new_instancemethod(_StepBasic.StepBasic_Product_FrameOfReference, None, StepBasic_Product)
StepBasic_Product.FrameOfReferenceValue = new_instancemethod(_StepBasic.StepBasic_Product_FrameOfReferenceValue, None, StepBasic_Product)
StepBasic_Product.Id = new_instancemethod(_StepBasic.StepBasic_Product_Id, None, StepBasic_Product)
StepBasic_Product.Init = new_instancemethod(_StepBasic.StepBasic_Product_Init, None, StepBasic_Product)
StepBasic_Product.Name = new_instancemethod(_StepBasic.StepBasic_Product_Name, None, StepBasic_Product)
StepBasic_Product.NbFrameOfReference = new_instancemethod(_StepBasic.StepBasic_Product_NbFrameOfReference, None, StepBasic_Product)
StepBasic_Product.SetDescription = new_instancemethod(_StepBasic.StepBasic_Product_SetDescription, None, StepBasic_Product)
StepBasic_Product.SetFrameOfReference = new_instancemethod(_StepBasic.StepBasic_Product_SetFrameOfReference, None, StepBasic_Product)
StepBasic_Product.SetId = new_instancemethod(_StepBasic.StepBasic_Product_SetId, None, StepBasic_Product)
StepBasic_Product.SetName = new_instancemethod(_StepBasic.StepBasic_Product_SetName, None, StepBasic_Product)
StepBasic_Product_swigregister = _StepBasic.StepBasic_Product_swigregister
StepBasic_Product_swigregister(StepBasic_Product)

class StepBasic_ProductCategory(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ProductCategory_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_ProductCategory_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasAdescription:
        	:type hasAdescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductCategory_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ProductCategory_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductCategory_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductCategory_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a ProductCategory
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductCategory_swiginit(self, _StepBasic.new_StepBasic_ProductCategory(*args))

    def UnSetDescription(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_ProductCategory_UnSetDescription(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductCategory_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductCategory
StepBasic_ProductCategory.Description = new_instancemethod(_StepBasic.StepBasic_ProductCategory_Description, None, StepBasic_ProductCategory)
StepBasic_ProductCategory.HasDescription = new_instancemethod(_StepBasic.StepBasic_ProductCategory_HasDescription, None, StepBasic_ProductCategory)
StepBasic_ProductCategory.Init = new_instancemethod(_StepBasic.StepBasic_ProductCategory_Init, None, StepBasic_ProductCategory)
StepBasic_ProductCategory.Name = new_instancemethod(_StepBasic.StepBasic_ProductCategory_Name, None, StepBasic_ProductCategory)
StepBasic_ProductCategory.SetDescription = new_instancemethod(_StepBasic.StepBasic_ProductCategory_SetDescription, None, StepBasic_ProductCategory)
StepBasic_ProductCategory.SetName = new_instancemethod(_StepBasic.StepBasic_ProductCategory_SetName, None, StepBasic_ProductCategory)
StepBasic_ProductCategory.UnSetDescription = new_instancemethod(_StepBasic.StepBasic_ProductCategory_UnSetDescription, None, StepBasic_ProductCategory)
StepBasic_ProductCategory_swigregister = _StepBasic.StepBasic_ProductCategory_swigregister
StepBasic_ProductCategory_swigregister(StepBasic_ProductCategory)

class StepBasic_ProductCategoryRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Category(self, *args) -> "opencascade::handle< StepBasic_ProductCategory >":
        """
        * Returns field Category
        	:rtype: opencascade::handle<StepBasic_ProductCategory>
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_Category(self, *args)


    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aCategory:
        	:type aCategory: StepBasic_ProductCategory
        	:param aSubCategory:
        	:type aSubCategory: StepBasic_ProductCategory
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_Name(self, *args)


    def SetCategory(self, *args) -> "void":
        """
        * Set field Category
        	:param Category:
        	:type Category: StepBasic_ProductCategory
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_SetCategory(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_SetName(self, *args)


    def SetSubCategory(self, *args) -> "void":
        """
        * Set field SubCategory
        	:param SubCategory:
        	:type SubCategory: StepBasic_ProductCategory
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_SetSubCategory(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductCategoryRelationship_swiginit(self, _StepBasic.new_StepBasic_ProductCategoryRelationship(*args))

    def SubCategory(self, *args) -> "opencascade::handle< StepBasic_ProductCategory >":
        """
        * Returns field SubCategory
        	:rtype: opencascade::handle<StepBasic_ProductCategory>
        """
        return _StepBasic.StepBasic_ProductCategoryRelationship_SubCategory(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductCategoryRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductCategoryRelationship
StepBasic_ProductCategoryRelationship.Category = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_Category, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship.Description = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_Description, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship.HasDescription = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_HasDescription, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship.Init = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_Init, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship.Name = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_Name, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship.SetCategory = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_SetCategory, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship.SetDescription = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_SetDescription, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship.SetName = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_SetName, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship.SetSubCategory = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_SetSubCategory, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship.SubCategory = new_instancemethod(_StepBasic.StepBasic_ProductCategoryRelationship_SubCategory, None, StepBasic_ProductCategoryRelationship)
StepBasic_ProductCategoryRelationship_swigregister = _StepBasic.StepBasic_ProductCategoryRelationship_swigregister
StepBasic_ProductCategoryRelationship_swigregister(StepBasic_ProductCategoryRelationship)

class StepBasic_ProductDefinition(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ProductDefinition_Description(self, *args)


    def Formation(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionFormation >":
        """:rtype: opencascade::handle<StepBasic_ProductDefinitionFormation>"""
        return _StepBasic.StepBasic_ProductDefinition_Formation(self, *args)


    def FrameOfReference(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionContext >":
        """:rtype: opencascade::handle<StepBasic_ProductDefinitionContext>"""
        return _StepBasic.StepBasic_ProductDefinition_FrameOfReference(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ProductDefinition_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aFormation:
        	:type aFormation: StepBasic_ProductDefinitionFormation
        	:param aFrameOfReference:
        	:type aFrameOfReference: StepBasic_ProductDefinitionContext
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinition_Init(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinition_SetDescription(self, *args)


    def SetFormation(self, *args) -> "void":
        """
        :param aFormation:
        	:type aFormation: StepBasic_ProductDefinitionFormation
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinition_SetFormation(self, *args)


    def SetFrameOfReference(self, *args) -> "void":
        """
        :param aFrameOfReference:
        	:type aFrameOfReference: StepBasic_ProductDefinitionContext
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinition_SetFrameOfReference(self, *args)


    def SetId(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinition_SetId(self, *args)


    def __init__(self, *args):
        """
        * Returns a ProductDefinition
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductDefinition_swiginit(self, _StepBasic.new_StepBasic_ProductDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinition
StepBasic_ProductDefinition.Description = new_instancemethod(_StepBasic.StepBasic_ProductDefinition_Description, None, StepBasic_ProductDefinition)
StepBasic_ProductDefinition.Formation = new_instancemethod(_StepBasic.StepBasic_ProductDefinition_Formation, None, StepBasic_ProductDefinition)
StepBasic_ProductDefinition.FrameOfReference = new_instancemethod(_StepBasic.StepBasic_ProductDefinition_FrameOfReference, None, StepBasic_ProductDefinition)
StepBasic_ProductDefinition.Id = new_instancemethod(_StepBasic.StepBasic_ProductDefinition_Id, None, StepBasic_ProductDefinition)
StepBasic_ProductDefinition.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinition_Init, None, StepBasic_ProductDefinition)
StepBasic_ProductDefinition.SetDescription = new_instancemethod(_StepBasic.StepBasic_ProductDefinition_SetDescription, None, StepBasic_ProductDefinition)
StepBasic_ProductDefinition.SetFormation = new_instancemethod(_StepBasic.StepBasic_ProductDefinition_SetFormation, None, StepBasic_ProductDefinition)
StepBasic_ProductDefinition.SetFrameOfReference = new_instancemethod(_StepBasic.StepBasic_ProductDefinition_SetFrameOfReference, None, StepBasic_ProductDefinition)
StepBasic_ProductDefinition.SetId = new_instancemethod(_StepBasic.StepBasic_ProductDefinition_SetId, None, StepBasic_ProductDefinition)
StepBasic_ProductDefinition_swigregister = _StepBasic.StepBasic_ProductDefinition_swigregister
StepBasic_ProductDefinition_swigregister(StepBasic_ProductDefinition)

class StepBasic_ProductDefinitionFormation(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ProductDefinitionFormation_Description(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ProductDefinitionFormation_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aOfProduct:
        	:type aOfProduct: StepBasic_Product
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormation_Init(self, *args)


    def OfProduct(self, *args) -> "opencascade::handle< StepBasic_Product >":
        """:rtype: opencascade::handle<StepBasic_Product>"""
        return _StepBasic.StepBasic_ProductDefinitionFormation_OfProduct(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormation_SetDescription(self, *args)


    def SetId(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormation_SetId(self, *args)


    def SetOfProduct(self, *args) -> "void":
        """
        :param aOfProduct:
        	:type aOfProduct: StepBasic_Product
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormation_SetOfProduct(self, *args)


    def __init__(self, *args):
        """
        * Returns a ProductDefinitionFormation
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductDefinitionFormation_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionFormation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinitionFormation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionFormation
StepBasic_ProductDefinitionFormation.Description = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormation_Description, None, StepBasic_ProductDefinitionFormation)
StepBasic_ProductDefinitionFormation.Id = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormation_Id, None, StepBasic_ProductDefinitionFormation)
StepBasic_ProductDefinitionFormation.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormation_Init, None, StepBasic_ProductDefinitionFormation)
StepBasic_ProductDefinitionFormation.OfProduct = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormation_OfProduct, None, StepBasic_ProductDefinitionFormation)
StepBasic_ProductDefinitionFormation.SetDescription = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormation_SetDescription, None, StepBasic_ProductDefinitionFormation)
StepBasic_ProductDefinitionFormation.SetId = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormation_SetId, None, StepBasic_ProductDefinitionFormation)
StepBasic_ProductDefinitionFormation.SetOfProduct = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormation_SetOfProduct, None, StepBasic_ProductDefinitionFormation)
StepBasic_ProductDefinitionFormation_swigregister = _StepBasic.StepBasic_ProductDefinitionFormation_swigregister
StepBasic_ProductDefinitionFormation_swigregister(StepBasic_ProductDefinitionFormation)

class StepBasic_ProductDefinitionFormationRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_Description(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Id
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aId:
        	:type aId: TCollection_HAsciiString
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aRelatingProductDefinitionFormation:
        	:type aRelatingProductDefinitionFormation: StepBasic_ProductDefinitionFormation
        	:param aRelatedProductDefinitionFormation:
        	:type aRelatedProductDefinitionFormation: StepBasic_ProductDefinitionFormation
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_Name(self, *args)


    def RelatedProductDefinitionFormation(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionFormation >":
        """
        * Returns field RelatedProductDefinitionFormation
        	:rtype: opencascade::handle<StepBasic_ProductDefinitionFormation>
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_RelatedProductDefinitionFormation(self, *args)


    def RelatingProductDefinitionFormation(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionFormation >":
        """
        * Returns field RelatingProductDefinitionFormation
        	:rtype: opencascade::handle<StepBasic_ProductDefinitionFormation>
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_RelatingProductDefinitionFormation(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetDescription(self, *args)


    def SetId(self, *args) -> "void":
        """
        * Set field Id
        	:param Id:
        	:type Id: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetId(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetName(self, *args)


    def SetRelatedProductDefinitionFormation(self, *args) -> "void":
        """
        * Set field RelatedProductDefinitionFormation
        	:param RelatedProductDefinitionFormation:
        	:type RelatedProductDefinitionFormation: StepBasic_ProductDefinitionFormation
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetRelatedProductDefinitionFormation(self, *args)


    def SetRelatingProductDefinitionFormation(self, *args) -> "void":
        """
        * Set field RelatingProductDefinitionFormation
        	:param RelatingProductDefinitionFormation:
        	:type RelatingProductDefinitionFormation: StepBasic_ProductDefinitionFormation
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetRelatingProductDefinitionFormation(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductDefinitionFormationRelationship_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionFormationRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinitionFormationRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionFormationRelationship
StepBasic_ProductDefinitionFormationRelationship.Description = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_Description, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.Id = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_Id, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_Init, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.Name = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_Name, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.RelatedProductDefinitionFormation = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_RelatedProductDefinitionFormation, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.RelatingProductDefinitionFormation = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_RelatingProductDefinitionFormation, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.SetDescription = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetDescription, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.SetId = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetId, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.SetName = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetName, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.SetRelatedProductDefinitionFormation = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetRelatedProductDefinitionFormation, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship.SetRelatingProductDefinitionFormation = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationRelationship_SetRelatingProductDefinitionFormation, None, StepBasic_ProductDefinitionFormationRelationship)
StepBasic_ProductDefinitionFormationRelationship_swigregister = _StepBasic.StepBasic_ProductDefinitionFormationRelationship_swigregister
StepBasic_ProductDefinitionFormationRelationship_swigregister(StepBasic_ProductDefinitionFormationRelationship)

class StepBasic_ProductDefinitionOrReference(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ProductDefinition(self, *args) -> "opencascade::handle< StepBasic_ProductDefinition >":
        """
        * returns Value as a ProductDefinition (Null if another type)
        	:rtype: opencascade::handle<StepBasic_ProductDefinition>
        """
        return _StepBasic.StepBasic_ProductDefinitionOrReference_ProductDefinition(self, *args)


    def ProductDefinitionReference(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionReference >":
        """
        * returns Value as a ProductDefinitionReference (Null if another type)
        	:rtype: opencascade::handle<StepBasic_ProductDefinitionReference>
        """
        return _StepBasic.StepBasic_ProductDefinitionOrReference_ProductDefinitionReference(self, *args)


    def ProductDefinitionReferenceWithLocalRepresentation(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionReferenceWithLocalRepresentation >":
        """
        * returns Value as a ProductDefinitionReferenceWithLocalRepresentation (Null if another type)
        	:rtype: opencascade::handle<StepBasic_ProductDefinitionReferenceWithLocalRepresentation>
        """
        return _StepBasic.StepBasic_ProductDefinitionOrReference_ProductDefinitionReferenceWithLocalRepresentation(self, *args)


    def __init__(self, *args):
        """
        * Returns a ProductDefinitionOrReference SelectType
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductDefinitionOrReference_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionOrReference(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionOrReference
StepBasic_ProductDefinitionOrReference.ProductDefinition = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionOrReference_ProductDefinition, None, StepBasic_ProductDefinitionOrReference)
StepBasic_ProductDefinitionOrReference.ProductDefinitionReference = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionOrReference_ProductDefinitionReference, None, StepBasic_ProductDefinitionOrReference)
StepBasic_ProductDefinitionOrReference.ProductDefinitionReferenceWithLocalRepresentation = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionOrReference_ProductDefinitionReferenceWithLocalRepresentation, None, StepBasic_ProductDefinitionOrReference)
StepBasic_ProductDefinitionOrReference_swigregister = _StepBasic.StepBasic_ProductDefinitionOrReference_swigregister
StepBasic_ProductDefinitionOrReference_swigregister(StepBasic_ProductDefinitionOrReference)

class StepBasic_ProductDefinitionReference(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def HasIdOwningOrganizationName(self, *args) -> "Standard_Boolean":
        """
        * Returns true if IdOwningOrganizationName exists
        	:rtype: inline bool
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_HasIdOwningOrganizationName(self, *args)


    def IdOwningOrganizationName(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field IdOwningOrganizationName
        	:rtype: inline opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_IdOwningOrganizationName(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theSource:
        	:type theSource: StepBasic_ExternalSource
        	:param theProductId:
        	:type theProductId: TCollection_HAsciiString
        	:param theProductDefinitionFormationId:
        	:type theProductDefinitionFormationId: TCollection_HAsciiString
        	:param theProductDefinitionId:
        	:type theProductDefinitionId: TCollection_HAsciiString
        	:param theIdOwningOrganizationName:
        	:type theIdOwningOrganizationName: TCollection_HAsciiString
        	:rtype: None
        * Initialize all fields (own and inherited)
        	:param theSource:
        	:type theSource: StepBasic_ExternalSource
        	:param theProductId:
        	:type theProductId: TCollection_HAsciiString
        	:param theProductDefinitionFormationId:
        	:type theProductDefinitionFormationId: TCollection_HAsciiString
        	:param theProductDefinitionId:
        	:type theProductDefinitionId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_Init(self, *args)


    def ProductDefinitionFormationId(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field ProductDefinitionFormationId
        	:rtype: inline opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_ProductDefinitionFormationId(self, *args)


    def ProductDefinitionId(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field ProductDefinitionId
        	:rtype: inline opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_ProductDefinitionId(self, *args)


    def ProductId(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field ProductId
        	:rtype: inline opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_ProductId(self, *args)


    def SetIdOwningOrganizationName(self, *args) -> "void":
        """
        * Set field IdOwningOrganizationName
        	:param theIdOwningOrganizationName:
        	:type theIdOwningOrganizationName: TCollection_HAsciiString
        	:rtype: inline void
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_SetIdOwningOrganizationName(self, *args)


    def SetProductDefinitionFormationId(self, *args) -> "void":
        """
        * Set field ProductDefinitionFormationId
        	:param theProductDefinitionFormationId:
        	:type theProductDefinitionFormationId: TCollection_HAsciiString
        	:rtype: inline void
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_SetProductDefinitionFormationId(self, *args)


    def SetProductDefinitionId(self, *args) -> "void":
        """
        * Set field ProductDefinitionId
        	:param theProductDefinitionId:
        	:type theProductDefinitionId: TCollection_HAsciiString
        	:rtype: inline void
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_SetProductDefinitionId(self, *args)


    def SetProductId(self, *args) -> "void":
        """
        * Set field ProductId
        	:param theProductId:
        	:type theProductId: TCollection_HAsciiString
        	:rtype: inline void
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_SetProductId(self, *args)


    def SetSource(self, *args) -> "void":
        """
        * Set field Source
        	:param theSource:
        	:type theSource: StepBasic_ExternalSource
        	:rtype: inline void
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_SetSource(self, *args)


    def Source(self, *args) -> "opencascade::handle< StepBasic_ExternalSource >":
        """
        * Returns field Source
        	:rtype: inline opencascade::handle<StepBasic_ExternalSource>
        """
        return _StepBasic.StepBasic_ProductDefinitionReference_Source(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductDefinitionReference_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionReference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinitionReference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionReference
StepBasic_ProductDefinitionReference.HasIdOwningOrganizationName = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_HasIdOwningOrganizationName, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.IdOwningOrganizationName = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_IdOwningOrganizationName, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_Init, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.ProductDefinitionFormationId = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_ProductDefinitionFormationId, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.ProductDefinitionId = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_ProductDefinitionId, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.ProductId = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_ProductId, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.SetIdOwningOrganizationName = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_SetIdOwningOrganizationName, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.SetProductDefinitionFormationId = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_SetProductDefinitionFormationId, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.SetProductDefinitionId = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_SetProductDefinitionId, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.SetProductId = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_SetProductId, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.SetSource = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_SetSource, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference.Source = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReference_Source, None, StepBasic_ProductDefinitionReference)
StepBasic_ProductDefinitionReference_swigregister = _StepBasic.StepBasic_ProductDefinitionReference_swigregister
StepBasic_ProductDefinitionReference_swigregister(StepBasic_ProductDefinitionReference)

class StepBasic_ProductDefinitionRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_HasDescription(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Id
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aId:
        	:type aId: TCollection_HAsciiString
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aRelatingProductDefinition:
        	:type aRelatingProductDefinition: StepBasic_ProductDefinition
        	:param aRelatedProductDefinition:
        	:type aRelatedProductDefinition: StepBasic_ProductDefinition
        	:rtype: None
        * Initialize all fields (own and inherited)
        	:param aId:
        	:type aId: TCollection_HAsciiString
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aRelatingProductDefinition:
        	:type aRelatingProductDefinition: StepBasic_ProductDefinitionOrReference
        	:param aRelatedProductDefinition:
        	:type aRelatedProductDefinition: StepBasic_ProductDefinitionOrReference
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_Name(self, *args)


    def RelatedProductDefinition(self, *args) -> "opencascade::handle< StepBasic_ProductDefinition >":
        """
        * Returns field RelatedProductDefinition
        	:rtype: opencascade::handle<StepBasic_ProductDefinition>
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_RelatedProductDefinition(self, *args)


    def RelatedProductDefinitionAP242(self, *args) -> "StepBasic_ProductDefinitionOrReference":
        """
        * Returns field RelatedProductDefinition in AP242
        	:rtype: StepBasic_ProductDefinitionOrReference
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_RelatedProductDefinitionAP242(self, *args)


    def RelatingProductDefinition(self, *args) -> "opencascade::handle< StepBasic_ProductDefinition >":
        """
        * Returns field RelatingProductDefinition
        	:rtype: opencascade::handle<StepBasic_ProductDefinition>
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_RelatingProductDefinition(self, *args)


    def RelatingProductDefinitionAP242(self, *args) -> "StepBasic_ProductDefinitionOrReference":
        """
        * Returns field RelatingProductDefinition in AP242
        	:rtype: StepBasic_ProductDefinitionOrReference
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_RelatingProductDefinitionAP242(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_SetDescription(self, *args)


    def SetId(self, *args) -> "void":
        """
        * Set field Id
        	:param Id:
        	:type Id: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_SetId(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_SetName(self, *args)


    def SetRelatedProductDefinition(self, *args) -> "void":
        """
        * Set field RelatedProductDefinition
        	:param RelatedProductDefinition:
        	:type RelatedProductDefinition: StepBasic_ProductDefinition
        	:rtype: None
        * Set field RelatedProductDefinition in AP242
        	:param RelatedProductDefinition:
        	:type RelatedProductDefinition: StepBasic_ProductDefinitionOrReference
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_SetRelatedProductDefinition(self, *args)


    def SetRelatingProductDefinition(self, *args) -> "void":
        """
        * Set field RelatingProductDefinition
        	:param RelatingProductDefinition:
        	:type RelatingProductDefinition: StepBasic_ProductDefinition
        	:rtype: None
        * Set field RelatingProductDefinition in AP242
        	:param RelatingProductDefinition:
        	:type RelatingProductDefinition: StepBasic_ProductDefinitionOrReference
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionRelationship_SetRelatingProductDefinition(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductDefinitionRelationship_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinitionRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionRelationship
StepBasic_ProductDefinitionRelationship.Description = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_Description, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.HasDescription = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_HasDescription, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.Id = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_Id, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_Init, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.Name = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_Name, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.RelatedProductDefinition = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_RelatedProductDefinition, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.RelatedProductDefinitionAP242 = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_RelatedProductDefinitionAP242, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.RelatingProductDefinition = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_RelatingProductDefinition, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.RelatingProductDefinitionAP242 = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_RelatingProductDefinitionAP242, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.SetDescription = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_SetDescription, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.SetId = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_SetId, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.SetName = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_SetName, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.SetRelatedProductDefinition = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_SetRelatedProductDefinition, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship.SetRelatingProductDefinition = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionRelationship_SetRelatingProductDefinition, None, StepBasic_ProductDefinitionRelationship)
StepBasic_ProductDefinitionRelationship_swigregister = _StepBasic.StepBasic_ProductDefinitionRelationship_swigregister
StepBasic_ProductDefinitionRelationship_swigregister(StepBasic_ProductDefinitionRelationship)

class StepBasic_ProductOrFormationOrDefinition(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Product(self, *args) -> "opencascade::handle< StepBasic_Product >":
        """
        * Returns Value as Product (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_Product>
        """
        return _StepBasic.StepBasic_ProductOrFormationOrDefinition_Product(self, *args)


    def ProductDefinition(self, *args) -> "opencascade::handle< StepBasic_ProductDefinition >":
        """
        * Returns Value as ProductDefinition (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_ProductDefinition>
        """
        return _StepBasic.StepBasic_ProductOrFormationOrDefinition_ProductDefinition(self, *args)


    def ProductDefinitionFormation(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionFormation >":
        """
        * Returns Value as ProductDefinitionFormation (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_ProductDefinitionFormation>
        """
        return _StepBasic.StepBasic_ProductOrFormationOrDefinition_ProductDefinitionFormation(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductOrFormationOrDefinition_swiginit(self, _StepBasic.new_StepBasic_ProductOrFormationOrDefinition(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductOrFormationOrDefinition
StepBasic_ProductOrFormationOrDefinition.Product = new_instancemethod(_StepBasic.StepBasic_ProductOrFormationOrDefinition_Product, None, StepBasic_ProductOrFormationOrDefinition)
StepBasic_ProductOrFormationOrDefinition.ProductDefinition = new_instancemethod(_StepBasic.StepBasic_ProductOrFormationOrDefinition_ProductDefinition, None, StepBasic_ProductOrFormationOrDefinition)
StepBasic_ProductOrFormationOrDefinition.ProductDefinitionFormation = new_instancemethod(_StepBasic.StepBasic_ProductOrFormationOrDefinition_ProductDefinitionFormation, None, StepBasic_ProductOrFormationOrDefinition)
StepBasic_ProductOrFormationOrDefinition_swigregister = _StepBasic.StepBasic_ProductOrFormationOrDefinition_swigregister
StepBasic_ProductOrFormationOrDefinition_swigregister(StepBasic_ProductOrFormationOrDefinition)

class StepBasic_RoleAssociation(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRole:
        	:type aRole: StepBasic_ObjectRole
        	:param aItemWithRole:
        	:type aItemWithRole: StepBasic_RoleSelect
        	:rtype: None
        """
        return _StepBasic.StepBasic_RoleAssociation_Init(self, *args)


    def ItemWithRole(self, *args) -> "StepBasic_RoleSelect":
        """
        * Returns field ItemWithRole
        	:rtype: StepBasic_RoleSelect
        """
        return _StepBasic.StepBasic_RoleAssociation_ItemWithRole(self, *args)


    def Role(self, *args) -> "opencascade::handle< StepBasic_ObjectRole >":
        """
        * Returns field Role
        	:rtype: opencascade::handle<StepBasic_ObjectRole>
        """
        return _StepBasic.StepBasic_RoleAssociation_Role(self, *args)


    def SetItemWithRole(self, *args) -> "void":
        """
        * Set field ItemWithRole
        	:param ItemWithRole:
        	:type ItemWithRole: StepBasic_RoleSelect
        	:rtype: None
        """
        return _StepBasic.StepBasic_RoleAssociation_SetItemWithRole(self, *args)


    def SetRole(self, *args) -> "void":
        """
        * Set field Role
        	:param Role:
        	:type Role: StepBasic_ObjectRole
        	:rtype: None
        """
        return _StepBasic.StepBasic_RoleAssociation_SetRole(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_RoleAssociation_swiginit(self, _StepBasic.new_StepBasic_RoleAssociation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_RoleAssociation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_RoleAssociation
StepBasic_RoleAssociation.Init = new_instancemethod(_StepBasic.StepBasic_RoleAssociation_Init, None, StepBasic_RoleAssociation)
StepBasic_RoleAssociation.ItemWithRole = new_instancemethod(_StepBasic.StepBasic_RoleAssociation_ItemWithRole, None, StepBasic_RoleAssociation)
StepBasic_RoleAssociation.Role = new_instancemethod(_StepBasic.StepBasic_RoleAssociation_Role, None, StepBasic_RoleAssociation)
StepBasic_RoleAssociation.SetItemWithRole = new_instancemethod(_StepBasic.StepBasic_RoleAssociation_SetItemWithRole, None, StepBasic_RoleAssociation)
StepBasic_RoleAssociation.SetRole = new_instancemethod(_StepBasic.StepBasic_RoleAssociation_SetRole, None, StepBasic_RoleAssociation)
StepBasic_RoleAssociation_swigregister = _StepBasic.StepBasic_RoleAssociation_swigregister
StepBasic_RoleAssociation_swigregister(StepBasic_RoleAssociation)

class StepBasic_RoleSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ActionAssignment(self, *args) -> "opencascade::handle< StepBasic_ActionAssignment >":
        """
        * Returns Value as ActionAssignment (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_ActionAssignment>
        """
        return _StepBasic.StepBasic_RoleSelect_ActionAssignment(self, *args)


    def ActionRequestAssignment(self, *args) -> "opencascade::handle< StepBasic_ActionRequestAssignment >":
        """
        * Returns Value as ActionRequestAssignment (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_ActionRequestAssignment>
        """
        return _StepBasic.StepBasic_RoleSelect_ActionRequestAssignment(self, *args)


    def ApprovalAssignment(self, *args) -> "opencascade::handle< StepBasic_ApprovalAssignment >":
        """
        * Returns Value as ApprovalAssignment (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_ApprovalAssignment>
        """
        return _StepBasic.StepBasic_RoleSelect_ApprovalAssignment(self, *args)


    def ApprovalDateTime(self, *args) -> "opencascade::handle< StepBasic_ApprovalDateTime >":
        """
        * Returns Value as ApprovalDateTime (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_ApprovalDateTime>
        """
        return _StepBasic.StepBasic_RoleSelect_ApprovalDateTime(self, *args)


    def CertificationAssignment(self, *args) -> "opencascade::handle< StepBasic_CertificationAssignment >":
        """
        * Returns Value as CertificationAssignment (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_CertificationAssignment>
        """
        return _StepBasic.StepBasic_RoleSelect_CertificationAssignment(self, *args)


    def ContractAssignment(self, *args) -> "opencascade::handle< StepBasic_ContractAssignment >":
        """
        * Returns Value as ContractAssignment (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_ContractAssignment>
        """
        return _StepBasic.StepBasic_RoleSelect_ContractAssignment(self, *args)


    def DocumentReference(self, *args) -> "opencascade::handle< StepBasic_DocumentReference >":
        """
        * Returns Value as DocumentReference (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_DocumentReference>
        """
        return _StepBasic.StepBasic_RoleSelect_DocumentReference(self, *args)


    def EffectivityAssignment(self, *args) -> "opencascade::handle< StepBasic_EffectivityAssignment >":
        """
        * Returns Value as EffectivityAssignment (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_EffectivityAssignment>
        """
        return _StepBasic.StepBasic_RoleSelect_EffectivityAssignment(self, *args)


    def GroupAssignment(self, *args) -> "opencascade::handle< StepBasic_GroupAssignment >":
        """
        * Returns Value as GroupAssignment (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_GroupAssignment>
        """
        return _StepBasic.StepBasic_RoleSelect_GroupAssignment(self, *args)


    def NameAssignment(self, *args) -> "opencascade::handle< StepBasic_NameAssignment >":
        """
        * Returns Value as NameAssignment (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_NameAssignment>
        """
        return _StepBasic.StepBasic_RoleSelect_NameAssignment(self, *args)


    def SecurityClassificationAssignment(self, *args) -> "opencascade::handle< StepBasic_SecurityClassificationAssignment >":
        """
        * Returns Value as SecurityClassificationAssignment (or Null if another type)
        	:rtype: opencascade::handle<StepBasic_SecurityClassificationAssignment>
        """
        return _StepBasic.StepBasic_RoleSelect_SecurityClassificationAssignment(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_RoleSelect_swiginit(self, _StepBasic.new_StepBasic_RoleSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_RoleSelect
StepBasic_RoleSelect.ActionAssignment = new_instancemethod(_StepBasic.StepBasic_RoleSelect_ActionAssignment, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.ActionRequestAssignment = new_instancemethod(_StepBasic.StepBasic_RoleSelect_ActionRequestAssignment, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.ApprovalAssignment = new_instancemethod(_StepBasic.StepBasic_RoleSelect_ApprovalAssignment, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.ApprovalDateTime = new_instancemethod(_StepBasic.StepBasic_RoleSelect_ApprovalDateTime, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.CertificationAssignment = new_instancemethod(_StepBasic.StepBasic_RoleSelect_CertificationAssignment, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.ContractAssignment = new_instancemethod(_StepBasic.StepBasic_RoleSelect_ContractAssignment, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.DocumentReference = new_instancemethod(_StepBasic.StepBasic_RoleSelect_DocumentReference, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.EffectivityAssignment = new_instancemethod(_StepBasic.StepBasic_RoleSelect_EffectivityAssignment, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.GroupAssignment = new_instancemethod(_StepBasic.StepBasic_RoleSelect_GroupAssignment, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.NameAssignment = new_instancemethod(_StepBasic.StepBasic_RoleSelect_NameAssignment, None, StepBasic_RoleSelect)
StepBasic_RoleSelect.SecurityClassificationAssignment = new_instancemethod(_StepBasic.StepBasic_RoleSelect_SecurityClassificationAssignment, None, StepBasic_RoleSelect)
StepBasic_RoleSelect_swigregister = _StepBasic.StepBasic_RoleSelect_swigregister
StepBasic_RoleSelect_swigregister(StepBasic_RoleSelect)

class StepBasic_SecurityClassification(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPurpose:
        	:type aPurpose: TCollection_HAsciiString
        	:param aSecurityLevel:
        	:type aSecurityLevel: StepBasic_SecurityClassificationLevel
        	:rtype: None
        """
        return _StepBasic.StepBasic_SecurityClassification_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_SecurityClassification_Name(self, *args)


    def Purpose(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_SecurityClassification_Purpose(self, *args)


    def SecurityLevel(self, *args) -> "opencascade::handle< StepBasic_SecurityClassificationLevel >":
        """:rtype: opencascade::handle<StepBasic_SecurityClassificationLevel>"""
        return _StepBasic.StepBasic_SecurityClassification_SecurityLevel(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_SecurityClassification_SetName(self, *args)


    def SetPurpose(self, *args) -> "void":
        """
        :param aPurpose:
        	:type aPurpose: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_SecurityClassification_SetPurpose(self, *args)


    def SetSecurityLevel(self, *args) -> "void":
        """
        :param aSecurityLevel:
        	:type aSecurityLevel: StepBasic_SecurityClassificationLevel
        	:rtype: None
        """
        return _StepBasic.StepBasic_SecurityClassification_SetSecurityLevel(self, *args)


    def __init__(self, *args):
        """
        * Returns a SecurityClassification
        	:rtype: None
        """
        _StepBasic.StepBasic_SecurityClassification_swiginit(self, _StepBasic.new_StepBasic_SecurityClassification(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SecurityClassification_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SecurityClassification
StepBasic_SecurityClassification.Init = new_instancemethod(_StepBasic.StepBasic_SecurityClassification_Init, None, StepBasic_SecurityClassification)
StepBasic_SecurityClassification.Name = new_instancemethod(_StepBasic.StepBasic_SecurityClassification_Name, None, StepBasic_SecurityClassification)
StepBasic_SecurityClassification.Purpose = new_instancemethod(_StepBasic.StepBasic_SecurityClassification_Purpose, None, StepBasic_SecurityClassification)
StepBasic_SecurityClassification.SecurityLevel = new_instancemethod(_StepBasic.StepBasic_SecurityClassification_SecurityLevel, None, StepBasic_SecurityClassification)
StepBasic_SecurityClassification.SetName = new_instancemethod(_StepBasic.StepBasic_SecurityClassification_SetName, None, StepBasic_SecurityClassification)
StepBasic_SecurityClassification.SetPurpose = new_instancemethod(_StepBasic.StepBasic_SecurityClassification_SetPurpose, None, StepBasic_SecurityClassification)
StepBasic_SecurityClassification.SetSecurityLevel = new_instancemethod(_StepBasic.StepBasic_SecurityClassification_SetSecurityLevel, None, StepBasic_SecurityClassification)
StepBasic_SecurityClassification_swigregister = _StepBasic.StepBasic_SecurityClassification_swigregister
StepBasic_SecurityClassification_swigregister(StepBasic_SecurityClassification)

class StepBasic_SecurityClassificationAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedSecurityClassification(self, *args) -> "opencascade::handle< StepBasic_SecurityClassification >":
        """:rtype: opencascade::handle<StepBasic_SecurityClassification>"""
        return _StepBasic.StepBasic_SecurityClassificationAssignment_AssignedSecurityClassification(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aAssignedSecurityClassification:
        	:type aAssignedSecurityClassification: StepBasic_SecurityClassification
        	:rtype: None
        """
        return _StepBasic.StepBasic_SecurityClassificationAssignment_Init(self, *args)


    def SetAssignedSecurityClassification(self, *args) -> "void":
        """
        :param aAssignedSecurityClassification:
        	:type aAssignedSecurityClassification: StepBasic_SecurityClassification
        	:rtype: None
        """
        return _StepBasic.StepBasic_SecurityClassificationAssignment_SetAssignedSecurityClassification(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SecurityClassificationAssignment_DownCast(t)


    __repr__ = _dumps_object


    def __init__(self):
        _StepBasic.StepBasic_SecurityClassificationAssignment_swiginit(self, _StepBasic.new_StepBasic_SecurityClassificationAssignment())
    __swig_destroy__ = _StepBasic.delete_StepBasic_SecurityClassificationAssignment
StepBasic_SecurityClassificationAssignment.AssignedSecurityClassification = new_instancemethod(_StepBasic.StepBasic_SecurityClassificationAssignment_AssignedSecurityClassification, None, StepBasic_SecurityClassificationAssignment)
StepBasic_SecurityClassificationAssignment.Init = new_instancemethod(_StepBasic.StepBasic_SecurityClassificationAssignment_Init, None, StepBasic_SecurityClassificationAssignment)
StepBasic_SecurityClassificationAssignment.SetAssignedSecurityClassification = new_instancemethod(_StepBasic.StepBasic_SecurityClassificationAssignment_SetAssignedSecurityClassification, None, StepBasic_SecurityClassificationAssignment)
StepBasic_SecurityClassificationAssignment_swigregister = _StepBasic.StepBasic_SecurityClassificationAssignment_swigregister
StepBasic_SecurityClassificationAssignment_swigregister(StepBasic_SecurityClassificationAssignment)

class StepBasic_SecurityClassificationLevel(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_SecurityClassificationLevel_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_SecurityClassificationLevel_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_SecurityClassificationLevel_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a SecurityClassificationLevel
        	:rtype: None
        """
        _StepBasic.StepBasic_SecurityClassificationLevel_swiginit(self, _StepBasic.new_StepBasic_SecurityClassificationLevel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SecurityClassificationLevel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SecurityClassificationLevel
StepBasic_SecurityClassificationLevel.Init = new_instancemethod(_StepBasic.StepBasic_SecurityClassificationLevel_Init, None, StepBasic_SecurityClassificationLevel)
StepBasic_SecurityClassificationLevel.Name = new_instancemethod(_StepBasic.StepBasic_SecurityClassificationLevel_Name, None, StepBasic_SecurityClassificationLevel)
StepBasic_SecurityClassificationLevel.SetName = new_instancemethod(_StepBasic.StepBasic_SecurityClassificationLevel_SetName, None, StepBasic_SecurityClassificationLevel)
StepBasic_SecurityClassificationLevel_swigregister = _StepBasic.StepBasic_SecurityClassificationLevel_swigregister
StepBasic_SecurityClassificationLevel_swigregister(StepBasic_SecurityClassificationLevel)

class StepBasic_SizeMember(OCC.Core.StepData.StepData_SelectReal):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_SizeMember_swiginit(self, _StepBasic.new_StepBasic_SizeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SizeMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SizeMember
StepBasic_SizeMember_swigregister = _StepBasic.StepBasic_SizeMember_swigregister
StepBasic_SizeMember_swigregister(StepBasic_SizeMember)

class StepBasic_SizeSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def RealValue(self, *args) -> "Standard_Real":
        """
        * returns Value as a Real (Null if another type)
        	:rtype: float
        """
        return _StepBasic.StepBasic_SizeSelect_RealValue(self, *args)


    def SetRealValue(self, *args) -> "void":
        """
        :param aReal:
        	:type aReal: float
        	:rtype: None
        """
        return _StepBasic.StepBasic_SizeSelect_SetRealValue(self, *args)


    def __init__(self, *args):
        """
        * Returns a SizeSelect SelectType
        	:rtype: None
        """
        _StepBasic.StepBasic_SizeSelect_swiginit(self, _StepBasic.new_StepBasic_SizeSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SizeSelect
StepBasic_SizeSelect.RealValue = new_instancemethod(_StepBasic.StepBasic_SizeSelect_RealValue, None, StepBasic_SizeSelect)
StepBasic_SizeSelect.SetRealValue = new_instancemethod(_StepBasic.StepBasic_SizeSelect_SetRealValue, None, StepBasic_SizeSelect)
StepBasic_SizeSelect_swigregister = _StepBasic.StepBasic_SizeSelect_swigregister
StepBasic_SizeSelect_swigregister(StepBasic_SizeSelect)

class StepBasic_SourceItem(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Identifier(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns Value as Identifier (or Null if another type)
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_SourceItem_Identifier(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_SourceItem_swiginit(self, _StepBasic.new_StepBasic_SourceItem(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SourceItem
StepBasic_SourceItem.Identifier = new_instancemethod(_StepBasic.StepBasic_SourceItem_Identifier, None, StepBasic_SourceItem)
StepBasic_SourceItem_swigregister = _StepBasic.StepBasic_SourceItem_swigregister
StepBasic_SourceItem_swigregister(StepBasic_SourceItem)

class StepBasic_Unit(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DerivedUnit(self, *args) -> "opencascade::handle< StepBasic_DerivedUnit >":
        """
        * returns Value as a DerivedUnit (Null if another type)
        	:rtype: opencascade::handle<StepBasic_DerivedUnit>
        """
        return _StepBasic.StepBasic_Unit_DerivedUnit(self, *args)


    def NamedUnit(self, *args) -> "opencascade::handle< StepBasic_NamedUnit >":
        """
        * returns Value as a NamedUnit (Null if another type)
        	:rtype: opencascade::handle<StepBasic_NamedUnit>
        """
        return _StepBasic.StepBasic_Unit_NamedUnit(self, *args)


    def __init__(self, *args):
        """
        * Creates empty object
        	:rtype: None
        """
        _StepBasic.StepBasic_Unit_swiginit(self, _StepBasic.new_StepBasic_Unit(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_Unit
StepBasic_Unit.DerivedUnit = new_instancemethod(_StepBasic.StepBasic_Unit_DerivedUnit, None, StepBasic_Unit)
StepBasic_Unit.NamedUnit = new_instancemethod(_StepBasic.StepBasic_Unit_NamedUnit, None, StepBasic_Unit)
StepBasic_Unit_swigregister = _StepBasic.StepBasic_Unit_swigregister
StepBasic_Unit_swigregister(StepBasic_Unit)

class StepBasic_VersionedActionRequest(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_VersionedActionRequest_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        * Returns True if optional field Description is defined
        	:rtype: bool
        """
        return _StepBasic.StepBasic_VersionedActionRequest_HasDescription(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Id
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_VersionedActionRequest_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aId:
        	:type aId: TCollection_HAsciiString
        	:param aVersion:
        	:type aVersion: TCollection_HAsciiString
        	:param aPurpose:
        	:type aPurpose: TCollection_HAsciiString
        	:param hasDescription:
        	:type hasDescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_VersionedActionRequest_Init(self, *args)


    def Purpose(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Purpose
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_VersionedActionRequest_Purpose(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_VersionedActionRequest_SetDescription(self, *args)


    def SetId(self, *args) -> "void":
        """
        * Set field Id
        	:param Id:
        	:type Id: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_VersionedActionRequest_SetId(self, *args)


    def SetPurpose(self, *args) -> "void":
        """
        * Set field Purpose
        	:param Purpose:
        	:type Purpose: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_VersionedActionRequest_SetPurpose(self, *args)


    def SetVersion(self, *args) -> "void":
        """
        * Set field Version
        	:param Version:
        	:type Version: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_VersionedActionRequest_SetVersion(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_VersionedActionRequest_swiginit(self, _StepBasic.new_StepBasic_VersionedActionRequest(*args))

    def Version(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Version
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_VersionedActionRequest_Version(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_VersionedActionRequest_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_VersionedActionRequest
StepBasic_VersionedActionRequest.Description = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_Description, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest.HasDescription = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_HasDescription, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest.Id = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_Id, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest.Init = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_Init, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest.Purpose = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_Purpose, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest.SetDescription = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_SetDescription, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest.SetId = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_SetId, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest.SetPurpose = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_SetPurpose, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest.SetVersion = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_SetVersion, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest.Version = new_instancemethod(_StepBasic.StepBasic_VersionedActionRequest_Version, None, StepBasic_VersionedActionRequest)
StepBasic_VersionedActionRequest_swigregister = _StepBasic.StepBasic_VersionedActionRequest_swigregister
StepBasic_VersionedActionRequest_swigregister(StepBasic_VersionedActionRequest)

class StepBasic_AreaUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_AreaUnit_swiginit(self, _StepBasic.new_StepBasic_AreaUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_AreaUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_AreaUnit
StepBasic_AreaUnit_swigregister = _StepBasic.StepBasic_AreaUnit_swigregister
StepBasic_AreaUnit_swigregister(StepBasic_AreaUnit)

class StepBasic_CalendarDate(StepBasic_Date):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DayComponent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_CalendarDate_DayComponent(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aYearComponent:
        	:type aYearComponent: int
        	:param aDayComponent:
        	:type aDayComponent: int
        	:param aMonthComponent:
        	:type aMonthComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_CalendarDate_Init(self, *args)


    def MonthComponent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_CalendarDate_MonthComponent(self, *args)


    def SetDayComponent(self, *args) -> "void":
        """
        :param aDayComponent:
        	:type aDayComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_CalendarDate_SetDayComponent(self, *args)


    def SetMonthComponent(self, *args) -> "void":
        """
        :param aMonthComponent:
        	:type aMonthComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_CalendarDate_SetMonthComponent(self, *args)


    def __init__(self, *args):
        """
        * Returns a CalendarDate
        	:rtype: None
        """
        _StepBasic.StepBasic_CalendarDate_swiginit(self, _StepBasic.new_StepBasic_CalendarDate(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_CalendarDate_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_CalendarDate
StepBasic_CalendarDate.DayComponent = new_instancemethod(_StepBasic.StepBasic_CalendarDate_DayComponent, None, StepBasic_CalendarDate)
StepBasic_CalendarDate.Init = new_instancemethod(_StepBasic.StepBasic_CalendarDate_Init, None, StepBasic_CalendarDate)
StepBasic_CalendarDate.MonthComponent = new_instancemethod(_StepBasic.StepBasic_CalendarDate_MonthComponent, None, StepBasic_CalendarDate)
StepBasic_CalendarDate.SetDayComponent = new_instancemethod(_StepBasic.StepBasic_CalendarDate_SetDayComponent, None, StepBasic_CalendarDate)
StepBasic_CalendarDate.SetMonthComponent = new_instancemethod(_StepBasic.StepBasic_CalendarDate_SetMonthComponent, None, StepBasic_CalendarDate)
StepBasic_CalendarDate_swigregister = _StepBasic.StepBasic_CalendarDate_swigregister
StepBasic_CalendarDate_swigregister(StepBasic_CalendarDate)

class StepBasic_ConversionBasedUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ConversionFactor(self, *args) -> "opencascade::handle< StepBasic_MeasureWithUnit >":
        """:rtype: opencascade::handle<StepBasic_MeasureWithUnit>"""
        return _StepBasic.StepBasic_ConversionBasedUnit_ConversionFactor(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aDimensions:
        	:type aDimensions: StepBasic_DimensionalExponents
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aConversionFactor:
        	:type aConversionFactor: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnit_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ConversionBasedUnit_Name(self, *args)


    def SetConversionFactor(self, *args) -> "void":
        """
        :param aConversionFactor:
        	:type aConversionFactor: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnit_SetConversionFactor(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnit_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConversionBasedUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_ConversionBasedUnit_swiginit(self, _StepBasic.new_StepBasic_ConversionBasedUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ConversionBasedUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ConversionBasedUnit
StepBasic_ConversionBasedUnit.ConversionFactor = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnit_ConversionFactor, None, StepBasic_ConversionBasedUnit)
StepBasic_ConversionBasedUnit.Init = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnit_Init, None, StepBasic_ConversionBasedUnit)
StepBasic_ConversionBasedUnit.Name = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnit_Name, None, StepBasic_ConversionBasedUnit)
StepBasic_ConversionBasedUnit.SetConversionFactor = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnit_SetConversionFactor, None, StepBasic_ConversionBasedUnit)
StepBasic_ConversionBasedUnit.SetName = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnit_SetName, None, StepBasic_ConversionBasedUnit)
StepBasic_ConversionBasedUnit_swigregister = _StepBasic.StepBasic_ConversionBasedUnit_swigregister
StepBasic_ConversionBasedUnit_swigregister(StepBasic_ConversionBasedUnit)

class StepBasic_DigitalDocument(StepBasic_Document):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_DigitalDocument_swiginit(self, _StepBasic.new_StepBasic_DigitalDocument(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DigitalDocument_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DigitalDocument
StepBasic_DigitalDocument_swigregister = _StepBasic.StepBasic_DigitalDocument_swigregister
StepBasic_DigitalDocument_swigregister(StepBasic_DigitalDocument)

class StepBasic_DocumentFile(StepBasic_Document):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CharacterizedObject(self, *args) -> "opencascade::handle< StepBasic_CharacterizedObject >":
        """
        * Returns data for supertype CharacterizedObject
        	:rtype: opencascade::handle<StepBasic_CharacterizedObject>
        """
        return _StepBasic.StepBasic_DocumentFile_CharacterizedObject(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aDocument_Id:
        	:type aDocument_Id: TCollection_HAsciiString
        	:param aDocument_Name:
        	:type aDocument_Name: TCollection_HAsciiString
        	:param hasDocument_Description:
        	:type hasDocument_Description: bool
        	:param aDocument_Description:
        	:type aDocument_Description: TCollection_HAsciiString
        	:param aDocument_Kind:
        	:type aDocument_Kind: StepBasic_DocumentType
        	:param aCharacterizedObject_Name:
        	:type aCharacterizedObject_Name: TCollection_HAsciiString
        	:param hasCharacterizedObject_Description:
        	:type hasCharacterizedObject_Description: bool
        	:param aCharacterizedObject_Description:
        	:type aCharacterizedObject_Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentFile_Init(self, *args)


    def SetCharacterizedObject(self, *args) -> "void":
        """
        * Set data for supertype CharacterizedObject
        	:param CharacterizedObject:
        	:type CharacterizedObject: StepBasic_CharacterizedObject
        	:rtype: None
        """
        return _StepBasic.StepBasic_DocumentFile_SetCharacterizedObject(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_DocumentFile_swiginit(self, _StepBasic.new_StepBasic_DocumentFile(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DocumentFile_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DocumentFile
StepBasic_DocumentFile.CharacterizedObject = new_instancemethod(_StepBasic.StepBasic_DocumentFile_CharacterizedObject, None, StepBasic_DocumentFile)
StepBasic_DocumentFile.Init = new_instancemethod(_StepBasic.StepBasic_DocumentFile_Init, None, StepBasic_DocumentFile)
StepBasic_DocumentFile.SetCharacterizedObject = new_instancemethod(_StepBasic.StepBasic_DocumentFile_SetCharacterizedObject, None, StepBasic_DocumentFile)
StepBasic_DocumentFile_swigregister = _StepBasic.StepBasic_DocumentFile_swigregister
StepBasic_DocumentFile_swigregister(StepBasic_DocumentFile)

class StepBasic_DocumentProductEquivalence(StepBasic_DocumentProductAssociation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_DocumentProductEquivalence_swiginit(self, _StepBasic.new_StepBasic_DocumentProductEquivalence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DocumentProductEquivalence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DocumentProductEquivalence
StepBasic_DocumentProductEquivalence_swigregister = _StepBasic.StepBasic_DocumentProductEquivalence_swigregister
StepBasic_DocumentProductEquivalence_swigregister(StepBasic_DocumentProductEquivalence)

class StepBasic_ExternalIdentificationAssignment(StepBasic_IdentificationAssignment):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aIdentificationAssignment_AssignedId:
        	:type aIdentificationAssignment_AssignedId: TCollection_HAsciiString
        	:param aIdentificationAssignment_Role:
        	:type aIdentificationAssignment_Role: StepBasic_IdentificationRole
        	:param aSource:
        	:type aSource: StepBasic_ExternalSource
        	:rtype: None
        """
        return _StepBasic.StepBasic_ExternalIdentificationAssignment_Init(self, *args)


    def SetSource(self, *args) -> "void":
        """
        * Set field Source
        	:param Source:
        	:type Source: StepBasic_ExternalSource
        	:rtype: None
        """
        return _StepBasic.StepBasic_ExternalIdentificationAssignment_SetSource(self, *args)


    def Source(self, *args) -> "opencascade::handle< StepBasic_ExternalSource >":
        """
        * Returns field Source
        	:rtype: opencascade::handle<StepBasic_ExternalSource>
        """
        return _StepBasic.StepBasic_ExternalIdentificationAssignment_Source(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ExternalIdentificationAssignment_swiginit(self, _StepBasic.new_StepBasic_ExternalIdentificationAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ExternalIdentificationAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ExternalIdentificationAssignment
StepBasic_ExternalIdentificationAssignment.Init = new_instancemethod(_StepBasic.StepBasic_ExternalIdentificationAssignment_Init, None, StepBasic_ExternalIdentificationAssignment)
StepBasic_ExternalIdentificationAssignment.SetSource = new_instancemethod(_StepBasic.StepBasic_ExternalIdentificationAssignment_SetSource, None, StepBasic_ExternalIdentificationAssignment)
StepBasic_ExternalIdentificationAssignment.Source = new_instancemethod(_StepBasic.StepBasic_ExternalIdentificationAssignment_Source, None, StepBasic_ExternalIdentificationAssignment)
StepBasic_ExternalIdentificationAssignment_swigregister = _StepBasic.StepBasic_ExternalIdentificationAssignment_swigregister
StepBasic_ExternalIdentificationAssignment_swigregister(StepBasic_ExternalIdentificationAssignment)

class StepBasic_LengthMeasureWithUnit(StepBasic_MeasureWithUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a LengthMeasureWithUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_LengthMeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_LengthMeasureWithUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_LengthMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_LengthMeasureWithUnit
StepBasic_LengthMeasureWithUnit_swigregister = _StepBasic.StepBasic_LengthMeasureWithUnit_swigregister
StepBasic_LengthMeasureWithUnit_swigregister(StepBasic_LengthMeasureWithUnit)

class StepBasic_LengthUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a LengthUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_LengthUnit_swiginit(self, _StepBasic.new_StepBasic_LengthUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_LengthUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_LengthUnit
StepBasic_LengthUnit_swigregister = _StepBasic.StepBasic_LengthUnit_swigregister
StepBasic_LengthUnit_swigregister(StepBasic_LengthUnit)

class StepBasic_MassMeasureWithUnit(StepBasic_MeasureWithUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a MassMeasureWithUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_MassMeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_MassMeasureWithUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_MassMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_MassMeasureWithUnit
StepBasic_MassMeasureWithUnit_swigregister = _StepBasic.StepBasic_MassMeasureWithUnit_swigregister
StepBasic_MassMeasureWithUnit_swigregister(StepBasic_MassMeasureWithUnit)

class StepBasic_MassUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_MassUnit_swiginit(self, _StepBasic.new_StepBasic_MassUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_MassUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_MassUnit
StepBasic_MassUnit_swigregister = _StepBasic.StepBasic_MassUnit_swigregister
StepBasic_MassUnit_swigregister(StepBasic_MassUnit)

class StepBasic_OrdinalDate(StepBasic_Date):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DayComponent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_OrdinalDate_DayComponent(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aYearComponent:
        	:type aYearComponent: int
        	:param aDayComponent:
        	:type aDayComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrdinalDate_Init(self, *args)


    def SetDayComponent(self, *args) -> "void":
        """
        :param aDayComponent:
        	:type aDayComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrdinalDate_SetDayComponent(self, *args)


    def __init__(self, *args):
        """
        * Returns a OrdinalDate
        	:rtype: None
        """
        _StepBasic.StepBasic_OrdinalDate_swiginit(self, _StepBasic.new_StepBasic_OrdinalDate(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_OrdinalDate_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_OrdinalDate
StepBasic_OrdinalDate.DayComponent = new_instancemethod(_StepBasic.StepBasic_OrdinalDate_DayComponent, None, StepBasic_OrdinalDate)
StepBasic_OrdinalDate.Init = new_instancemethod(_StepBasic.StepBasic_OrdinalDate_Init, None, StepBasic_OrdinalDate)
StepBasic_OrdinalDate.SetDayComponent = new_instancemethod(_StepBasic.StepBasic_OrdinalDate_SetDayComponent, None, StepBasic_OrdinalDate)
StepBasic_OrdinalDate_swigregister = _StepBasic.StepBasic_OrdinalDate_swigregister
StepBasic_OrdinalDate_swigregister(StepBasic_OrdinalDate)

class StepBasic_OrganizationalAddress(StepBasic_Address):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_OrganizationalAddress_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        :param hasAinternalLocation:
        	:type hasAinternalLocation: bool
        	:param aInternalLocation:
        	:type aInternalLocation: TCollection_HAsciiString
        	:param hasAstreetNumber:
        	:type hasAstreetNumber: bool
        	:param aStreetNumber:
        	:type aStreetNumber: TCollection_HAsciiString
        	:param hasAstreet:
        	:type hasAstreet: bool
        	:param aStreet:
        	:type aStreet: TCollection_HAsciiString
        	:param hasApostalBox:
        	:type hasApostalBox: bool
        	:param aPostalBox:
        	:type aPostalBox: TCollection_HAsciiString
        	:param hasAtown:
        	:type hasAtown: bool
        	:param aTown:
        	:type aTown: TCollection_HAsciiString
        	:param hasAregion:
        	:type hasAregion: bool
        	:param aRegion:
        	:type aRegion: TCollection_HAsciiString
        	:param hasApostalCode:
        	:type hasApostalCode: bool
        	:param aPostalCode:
        	:type aPostalCode: TCollection_HAsciiString
        	:param hasAcountry:
        	:type hasAcountry: bool
        	:param aCountry:
        	:type aCountry: TCollection_HAsciiString
        	:param hasAfacsimileNumber:
        	:type hasAfacsimileNumber: bool
        	:param aFacsimileNumber:
        	:type aFacsimileNumber: TCollection_HAsciiString
        	:param hasAtelephoneNumber:
        	:type hasAtelephoneNumber: bool
        	:param aTelephoneNumber:
        	:type aTelephoneNumber: TCollection_HAsciiString
        	:param hasAelectronicMailAddress:
        	:type hasAelectronicMailAddress: bool
        	:param aElectronicMailAddress:
        	:type aElectronicMailAddress: TCollection_HAsciiString
        	:param hasAtelexNumber:
        	:type hasAtelexNumber: bool
        	:param aTelexNumber:
        	:type aTelexNumber: TCollection_HAsciiString
        	:param aOrganizations:
        	:type aOrganizations: StepBasic_HArray1OfOrganization
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrganizationalAddress_Init(self, *args)


    def NbOrganizations(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_OrganizationalAddress_NbOrganizations(self, *args)


    def Organizations(self, *args) -> "opencascade::handle< StepBasic_HArray1OfOrganization >":
        """:rtype: opencascade::handle<StepBasic_HArray1OfOrganization>"""
        return _StepBasic.StepBasic_OrganizationalAddress_Organizations(self, *args)


    def OrganizationsValue(self, *args) -> "opencascade::handle< StepBasic_Organization >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepBasic_Organization>
        """
        return _StepBasic.StepBasic_OrganizationalAddress_OrganizationsValue(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrganizationalAddress_SetDescription(self, *args)


    def SetOrganizations(self, *args) -> "void":
        """
        :param aOrganizations:
        	:type aOrganizations: StepBasic_HArray1OfOrganization
        	:rtype: None
        """
        return _StepBasic.StepBasic_OrganizationalAddress_SetOrganizations(self, *args)


    def __init__(self, *args):
        """
        * Returns a OrganizationalAddress
        	:rtype: None
        """
        _StepBasic.StepBasic_OrganizationalAddress_swiginit(self, _StepBasic.new_StepBasic_OrganizationalAddress(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_OrganizationalAddress_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_OrganizationalAddress
StepBasic_OrganizationalAddress.Description = new_instancemethod(_StepBasic.StepBasic_OrganizationalAddress_Description, None, StepBasic_OrganizationalAddress)
StepBasic_OrganizationalAddress.Init = new_instancemethod(_StepBasic.StepBasic_OrganizationalAddress_Init, None, StepBasic_OrganizationalAddress)
StepBasic_OrganizationalAddress.NbOrganizations = new_instancemethod(_StepBasic.StepBasic_OrganizationalAddress_NbOrganizations, None, StepBasic_OrganizationalAddress)
StepBasic_OrganizationalAddress.Organizations = new_instancemethod(_StepBasic.StepBasic_OrganizationalAddress_Organizations, None, StepBasic_OrganizationalAddress)
StepBasic_OrganizationalAddress.OrganizationsValue = new_instancemethod(_StepBasic.StepBasic_OrganizationalAddress_OrganizationsValue, None, StepBasic_OrganizationalAddress)
StepBasic_OrganizationalAddress.SetDescription = new_instancemethod(_StepBasic.StepBasic_OrganizationalAddress_SetDescription, None, StepBasic_OrganizationalAddress)
StepBasic_OrganizationalAddress.SetOrganizations = new_instancemethod(_StepBasic.StepBasic_OrganizationalAddress_SetOrganizations, None, StepBasic_OrganizationalAddress)
StepBasic_OrganizationalAddress_swigregister = _StepBasic.StepBasic_OrganizationalAddress_swigregister
StepBasic_OrganizationalAddress_swigregister(StepBasic_OrganizationalAddress)

class StepBasic_PersonalAddress(StepBasic_Address):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_PersonalAddress_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        :param hasAinternalLocation:
        	:type hasAinternalLocation: bool
        	:param aInternalLocation:
        	:type aInternalLocation: TCollection_HAsciiString
        	:param hasAstreetNumber:
        	:type hasAstreetNumber: bool
        	:param aStreetNumber:
        	:type aStreetNumber: TCollection_HAsciiString
        	:param hasAstreet:
        	:type hasAstreet: bool
        	:param aStreet:
        	:type aStreet: TCollection_HAsciiString
        	:param hasApostalBox:
        	:type hasApostalBox: bool
        	:param aPostalBox:
        	:type aPostalBox: TCollection_HAsciiString
        	:param hasAtown:
        	:type hasAtown: bool
        	:param aTown:
        	:type aTown: TCollection_HAsciiString
        	:param hasAregion:
        	:type hasAregion: bool
        	:param aRegion:
        	:type aRegion: TCollection_HAsciiString
        	:param hasApostalCode:
        	:type hasApostalCode: bool
        	:param aPostalCode:
        	:type aPostalCode: TCollection_HAsciiString
        	:param hasAcountry:
        	:type hasAcountry: bool
        	:param aCountry:
        	:type aCountry: TCollection_HAsciiString
        	:param hasAfacsimileNumber:
        	:type hasAfacsimileNumber: bool
        	:param aFacsimileNumber:
        	:type aFacsimileNumber: TCollection_HAsciiString
        	:param hasAtelephoneNumber:
        	:type hasAtelephoneNumber: bool
        	:param aTelephoneNumber:
        	:type aTelephoneNumber: TCollection_HAsciiString
        	:param hasAelectronicMailAddress:
        	:type hasAelectronicMailAddress: bool
        	:param aElectronicMailAddress:
        	:type aElectronicMailAddress: TCollection_HAsciiString
        	:param hasAtelexNumber:
        	:type hasAtelexNumber: bool
        	:param aTelexNumber:
        	:type aTelexNumber: TCollection_HAsciiString
        	:param aPeople:
        	:type aPeople: StepBasic_HArray1OfPerson
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonalAddress_Init(self, *args)


    def NbPeople(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_PersonalAddress_NbPeople(self, *args)


    def People(self, *args) -> "opencascade::handle< StepBasic_HArray1OfPerson >":
        """:rtype: opencascade::handle<StepBasic_HArray1OfPerson>"""
        return _StepBasic.StepBasic_PersonalAddress_People(self, *args)


    def PeopleValue(self, *args) -> "opencascade::handle< StepBasic_Person >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepBasic_Person>
        """
        return _StepBasic.StepBasic_PersonalAddress_PeopleValue(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonalAddress_SetDescription(self, *args)


    def SetPeople(self, *args) -> "void":
        """
        :param aPeople:
        	:type aPeople: StepBasic_HArray1OfPerson
        	:rtype: None
        """
        return _StepBasic.StepBasic_PersonalAddress_SetPeople(self, *args)


    def __init__(self, *args):
        """
        * Returns a PersonalAddress
        	:rtype: None
        """
        _StepBasic.StepBasic_PersonalAddress_swiginit(self, _StepBasic.new_StepBasic_PersonalAddress(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_PersonalAddress_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_PersonalAddress
StepBasic_PersonalAddress.Description = new_instancemethod(_StepBasic.StepBasic_PersonalAddress_Description, None, StepBasic_PersonalAddress)
StepBasic_PersonalAddress.Init = new_instancemethod(_StepBasic.StepBasic_PersonalAddress_Init, None, StepBasic_PersonalAddress)
StepBasic_PersonalAddress.NbPeople = new_instancemethod(_StepBasic.StepBasic_PersonalAddress_NbPeople, None, StepBasic_PersonalAddress)
StepBasic_PersonalAddress.People = new_instancemethod(_StepBasic.StepBasic_PersonalAddress_People, None, StepBasic_PersonalAddress)
StepBasic_PersonalAddress.PeopleValue = new_instancemethod(_StepBasic.StepBasic_PersonalAddress_PeopleValue, None, StepBasic_PersonalAddress)
StepBasic_PersonalAddress.SetDescription = new_instancemethod(_StepBasic.StepBasic_PersonalAddress_SetDescription, None, StepBasic_PersonalAddress)
StepBasic_PersonalAddress.SetPeople = new_instancemethod(_StepBasic.StepBasic_PersonalAddress_SetPeople, None, StepBasic_PersonalAddress)
StepBasic_PersonalAddress_swigregister = _StepBasic.StepBasic_PersonalAddress_swigregister
StepBasic_PersonalAddress_swigregister(StepBasic_PersonalAddress)

class StepBasic_PhysicallyModeledProductDefinition(StepBasic_ProductDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_PhysicallyModeledProductDefinition_swiginit(self, _StepBasic.new_StepBasic_PhysicallyModeledProductDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_PhysicallyModeledProductDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_PhysicallyModeledProductDefinition
StepBasic_PhysicallyModeledProductDefinition_swigregister = _StepBasic.StepBasic_PhysicallyModeledProductDefinition_swigregister
StepBasic_PhysicallyModeledProductDefinition_swigregister(StepBasic_PhysicallyModeledProductDefinition)

class StepBasic_PlaneAngleMeasureWithUnit(StepBasic_MeasureWithUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a PlaneAngleMeasureWithUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_PlaneAngleMeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_PlaneAngleMeasureWithUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_PlaneAngleMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_PlaneAngleMeasureWithUnit
StepBasic_PlaneAngleMeasureWithUnit_swigregister = _StepBasic.StepBasic_PlaneAngleMeasureWithUnit_swigregister
StepBasic_PlaneAngleMeasureWithUnit_swigregister(StepBasic_PlaneAngleMeasureWithUnit)

class StepBasic_PlaneAngleUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a PlaneAngleUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_PlaneAngleUnit_swiginit(self, _StepBasic.new_StepBasic_PlaneAngleUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_PlaneAngleUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_PlaneAngleUnit
StepBasic_PlaneAngleUnit_swigregister = _StepBasic.StepBasic_PlaneAngleUnit_swigregister
StepBasic_PlaneAngleUnit_swigregister(StepBasic_PlaneAngleUnit)

class StepBasic_ProductConceptContext(StepBasic_ApplicationContextElement):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aApplicationContextElement_Name:
        	:type aApplicationContextElement_Name: TCollection_HAsciiString
        	:param aApplicationContextElement_FrameOfReference:
        	:type aApplicationContextElement_FrameOfReference: StepBasic_ApplicationContext
        	:param aMarketSegmentType:
        	:type aMarketSegmentType: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductConceptContext_Init(self, *args)


    def MarketSegmentType(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field MarketSegmentType
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepBasic.StepBasic_ProductConceptContext_MarketSegmentType(self, *args)


    def SetMarketSegmentType(self, *args) -> "void":
        """
        * Set field MarketSegmentType
        	:param MarketSegmentType:
        	:type MarketSegmentType: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductConceptContext_SetMarketSegmentType(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductConceptContext_swiginit(self, _StepBasic.new_StepBasic_ProductConceptContext(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductConceptContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductConceptContext
StepBasic_ProductConceptContext.Init = new_instancemethod(_StepBasic.StepBasic_ProductConceptContext_Init, None, StepBasic_ProductConceptContext)
StepBasic_ProductConceptContext.MarketSegmentType = new_instancemethod(_StepBasic.StepBasic_ProductConceptContext_MarketSegmentType, None, StepBasic_ProductConceptContext)
StepBasic_ProductConceptContext.SetMarketSegmentType = new_instancemethod(_StepBasic.StepBasic_ProductConceptContext_SetMarketSegmentType, None, StepBasic_ProductConceptContext)
StepBasic_ProductConceptContext_swigregister = _StepBasic.StepBasic_ProductConceptContext_swigregister
StepBasic_ProductConceptContext_swigregister(StepBasic_ProductConceptContext)

class StepBasic_ProductContext(StepBasic_ApplicationContextElement):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DisciplineType(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ProductContext_DisciplineType(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aFrameOfReference:
        	:type aFrameOfReference: StepBasic_ApplicationContext
        	:param aDisciplineType:
        	:type aDisciplineType: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductContext_Init(self, *args)


    def SetDisciplineType(self, *args) -> "void":
        """
        :param aDisciplineType:
        	:type aDisciplineType: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductContext_SetDisciplineType(self, *args)


    def __init__(self, *args):
        """
        * Returns a ProductContext
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductContext_swiginit(self, _StepBasic.new_StepBasic_ProductContext(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductContext
StepBasic_ProductContext.DisciplineType = new_instancemethod(_StepBasic.StepBasic_ProductContext_DisciplineType, None, StepBasic_ProductContext)
StepBasic_ProductContext.Init = new_instancemethod(_StepBasic.StepBasic_ProductContext_Init, None, StepBasic_ProductContext)
StepBasic_ProductContext.SetDisciplineType = new_instancemethod(_StepBasic.StepBasic_ProductContext_SetDisciplineType, None, StepBasic_ProductContext)
StepBasic_ProductContext_swigregister = _StepBasic.StepBasic_ProductContext_swigregister
StepBasic_ProductContext_swigregister(StepBasic_ProductContext)

class StepBasic_ProductDefinitionContext(StepBasic_ApplicationContextElement):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aFrameOfReference:
        	:type aFrameOfReference: StepBasic_ApplicationContext
        	:param aLifeCycleStage:
        	:type aLifeCycleStage: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionContext_Init(self, *args)


    def LifeCycleStage(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_ProductDefinitionContext_LifeCycleStage(self, *args)


    def SetLifeCycleStage(self, *args) -> "void":
        """
        :param aLifeCycleStage:
        	:type aLifeCycleStage: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionContext_SetLifeCycleStage(self, *args)


    def __init__(self, *args):
        """
        * Returns a ProductDefinitionContext
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductDefinitionContext_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionContext(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinitionContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionContext
StepBasic_ProductDefinitionContext.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionContext_Init, None, StepBasic_ProductDefinitionContext)
StepBasic_ProductDefinitionContext.LifeCycleStage = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionContext_LifeCycleStage, None, StepBasic_ProductDefinitionContext)
StepBasic_ProductDefinitionContext.SetLifeCycleStage = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionContext_SetLifeCycleStage, None, StepBasic_ProductDefinitionContext)
StepBasic_ProductDefinitionContext_swigregister = _StepBasic.StepBasic_ProductDefinitionContext_swigregister
StepBasic_ProductDefinitionContext_swigregister(StepBasic_ProductDefinitionContext)

class StepBasic_ProductDefinitionEffectivity(StepBasic_Effectivity):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:param aUsage:
        	:type aUsage: StepBasic_ProductDefinitionRelationship
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionEffectivity_Init(self, *args)


    def SetUsage(self, *args) -> "void":
        """
        :param aUsage:
        	:type aUsage: StepBasic_ProductDefinitionRelationship
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionEffectivity_SetUsage(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_ProductDefinitionEffectivity_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionEffectivity(*args))

    def Usage(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionRelationship >":
        """:rtype: opencascade::handle<StepBasic_ProductDefinitionRelationship>"""
        return _StepBasic.StepBasic_ProductDefinitionEffectivity_Usage(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinitionEffectivity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionEffectivity
StepBasic_ProductDefinitionEffectivity.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionEffectivity_Init, None, StepBasic_ProductDefinitionEffectivity)
StepBasic_ProductDefinitionEffectivity.SetUsage = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionEffectivity_SetUsage, None, StepBasic_ProductDefinitionEffectivity)
StepBasic_ProductDefinitionEffectivity.Usage = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionEffectivity_Usage, None, StepBasic_ProductDefinitionEffectivity)
StepBasic_ProductDefinitionEffectivity_swigregister = _StepBasic.StepBasic_ProductDefinitionEffectivity_swigregister
StepBasic_ProductDefinitionEffectivity_swigregister(StepBasic_ProductDefinitionEffectivity)

class StepBasic_ProductDefinitionFormationWithSpecifiedSource(StepBasic_ProductDefinitionFormation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aOfProduct:
        	:type aOfProduct: StepBasic_Product
        	:param aMakeOrBuy:
        	:type aMakeOrBuy: StepBasic_Source
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationWithSpecifiedSource_Init(self, *args)


    def MakeOrBuy(self, *args) -> "StepBasic_Source":
        """:rtype: StepBasic_Source"""
        return _StepBasic.StepBasic_ProductDefinitionFormationWithSpecifiedSource_MakeOrBuy(self, *args)


    def SetMakeOrBuy(self, *args) -> "void":
        """
        :param aMakeOrBuy:
        	:type aMakeOrBuy: StepBasic_Source
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionFormationWithSpecifiedSource_SetMakeOrBuy(self, *args)


    def __init__(self, *args):
        """
        * Returns a ProductDefinitionFormationWithSpecifiedSource
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductDefinitionFormationWithSpecifiedSource_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionFormationWithSpecifiedSource(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinitionFormationWithSpecifiedSource_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionFormationWithSpecifiedSource
StepBasic_ProductDefinitionFormationWithSpecifiedSource.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationWithSpecifiedSource_Init, None, StepBasic_ProductDefinitionFormationWithSpecifiedSource)
StepBasic_ProductDefinitionFormationWithSpecifiedSource.MakeOrBuy = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationWithSpecifiedSource_MakeOrBuy, None, StepBasic_ProductDefinitionFormationWithSpecifiedSource)
StepBasic_ProductDefinitionFormationWithSpecifiedSource.SetMakeOrBuy = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionFormationWithSpecifiedSource_SetMakeOrBuy, None, StepBasic_ProductDefinitionFormationWithSpecifiedSource)
StepBasic_ProductDefinitionFormationWithSpecifiedSource_swigregister = _StepBasic.StepBasic_ProductDefinitionFormationWithSpecifiedSource_swigregister
StepBasic_ProductDefinitionFormationWithSpecifiedSource_swigregister(StepBasic_ProductDefinitionFormationWithSpecifiedSource)

class StepBasic_ProductDefinitionReferenceWithLocalRepresentation(StepBasic_ProductDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: StepBasic_ExternalSource
        	:param theId:
        	:type theId: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theFormation:
        	:type theFormation: StepBasic_ProductDefinitionFormation
        	:param theFrameOfReference:
        	:type theFrameOfReference: StepBasic_ProductDefinitionContext
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionReferenceWithLocalRepresentation_Init(self, *args)


    def SetSource(self, *args) -> "void":
        """
        * Set field Source
        	:param theSource:
        	:type theSource: StepBasic_ExternalSource
        	:rtype: inline void
        """
        return _StepBasic.StepBasic_ProductDefinitionReferenceWithLocalRepresentation_SetSource(self, *args)


    def Source(self, *args) -> "opencascade::handle< StepBasic_ExternalSource >":
        """
        * Returns field Source
        	:rtype: inline opencascade::handle<StepBasic_ExternalSource>
        """
        return _StepBasic.StepBasic_ProductDefinitionReferenceWithLocalRepresentation_Source(self, *args)


    def __init__(self, *args):
        """
        * Returns a ProductDefinitionReferenceWithLocalRepresentation
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductDefinitionReferenceWithLocalRepresentation_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionReferenceWithLocalRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinitionReferenceWithLocalRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionReferenceWithLocalRepresentation
StepBasic_ProductDefinitionReferenceWithLocalRepresentation.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReferenceWithLocalRepresentation_Init, None, StepBasic_ProductDefinitionReferenceWithLocalRepresentation)
StepBasic_ProductDefinitionReferenceWithLocalRepresentation.SetSource = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReferenceWithLocalRepresentation_SetSource, None, StepBasic_ProductDefinitionReferenceWithLocalRepresentation)
StepBasic_ProductDefinitionReferenceWithLocalRepresentation.Source = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionReferenceWithLocalRepresentation_Source, None, StepBasic_ProductDefinitionReferenceWithLocalRepresentation)
StepBasic_ProductDefinitionReferenceWithLocalRepresentation_swigregister = _StepBasic.StepBasic_ProductDefinitionReferenceWithLocalRepresentation_swigregister
StepBasic_ProductDefinitionReferenceWithLocalRepresentation_swigregister(StepBasic_ProductDefinitionReferenceWithLocalRepresentation)

class StepBasic_ProductDefinitionWithAssociatedDocuments(StepBasic_ProductDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DocIds(self, *args) -> "opencascade::handle< StepBasic_HArray1OfDocument >":
        """:rtype: opencascade::handle<StepBasic_HArray1OfDocument>"""
        return _StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_DocIds(self, *args)


    def DocIdsValue(self, *args) -> "opencascade::handle< StepBasic_Document >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepBasic_Document>
        """
        return _StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_DocIdsValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aId:
        	:type aId: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aFormation:
        	:type aFormation: StepBasic_ProductDefinitionFormation
        	:param aFrame:
        	:type aFrame: StepBasic_ProductDefinitionContext
        	:param aDocIds:
        	:type aDocIds: StepBasic_HArray1OfDocument
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_Init(self, *args)


    def NbDocIds(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_NbDocIds(self, *args)


    def SetDocIds(self, *args) -> "void":
        """
        :param DocIds:
        	:type DocIds: StepBasic_HArray1OfDocument
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_SetDocIds(self, *args)


    def SetDocIdsValue(self, *args) -> "void":
        """
        :param num:
        	:type num: int
        	:param adoc:
        	:type adoc: StepBasic_Document
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_SetDocIdsValue(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_swiginit(self, _StepBasic.new_StepBasic_ProductDefinitionWithAssociatedDocuments(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductDefinitionWithAssociatedDocuments_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductDefinitionWithAssociatedDocuments
StepBasic_ProductDefinitionWithAssociatedDocuments.DocIds = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_DocIds, None, StepBasic_ProductDefinitionWithAssociatedDocuments)
StepBasic_ProductDefinitionWithAssociatedDocuments.DocIdsValue = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_DocIdsValue, None, StepBasic_ProductDefinitionWithAssociatedDocuments)
StepBasic_ProductDefinitionWithAssociatedDocuments.Init = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_Init, None, StepBasic_ProductDefinitionWithAssociatedDocuments)
StepBasic_ProductDefinitionWithAssociatedDocuments.NbDocIds = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_NbDocIds, None, StepBasic_ProductDefinitionWithAssociatedDocuments)
StepBasic_ProductDefinitionWithAssociatedDocuments.SetDocIds = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_SetDocIds, None, StepBasic_ProductDefinitionWithAssociatedDocuments)
StepBasic_ProductDefinitionWithAssociatedDocuments.SetDocIdsValue = new_instancemethod(_StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_SetDocIdsValue, None, StepBasic_ProductDefinitionWithAssociatedDocuments)
StepBasic_ProductDefinitionWithAssociatedDocuments_swigregister = _StepBasic.StepBasic_ProductDefinitionWithAssociatedDocuments_swigregister
StepBasic_ProductDefinitionWithAssociatedDocuments_swigregister(StepBasic_ProductDefinitionWithAssociatedDocuments)

class StepBasic_ProductRelatedProductCategory(StepBasic_ProductCategory):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasAdescription:
        	:type hasAdescription: bool
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aProducts:
        	:type aProducts: StepBasic_HArray1OfProduct
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductRelatedProductCategory_Init(self, *args)


    def NbProducts(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_ProductRelatedProductCategory_NbProducts(self, *args)


    def Products(self, *args) -> "opencascade::handle< StepBasic_HArray1OfProduct >":
        """:rtype: opencascade::handle<StepBasic_HArray1OfProduct>"""
        return _StepBasic.StepBasic_ProductRelatedProductCategory_Products(self, *args)


    def ProductsValue(self, *args) -> "opencascade::handle< StepBasic_Product >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepBasic_Product>
        """
        return _StepBasic.StepBasic_ProductRelatedProductCategory_ProductsValue(self, *args)


    def SetProducts(self, *args) -> "void":
        """
        :param aProducts:
        	:type aProducts: StepBasic_HArray1OfProduct
        	:rtype: None
        """
        return _StepBasic.StepBasic_ProductRelatedProductCategory_SetProducts(self, *args)


    def __init__(self, *args):
        """
        * Returns a ProductRelatedProductCategory
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductRelatedProductCategory_swiginit(self, _StepBasic.new_StepBasic_ProductRelatedProductCategory(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductRelatedProductCategory_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductRelatedProductCategory
StepBasic_ProductRelatedProductCategory.Init = new_instancemethod(_StepBasic.StepBasic_ProductRelatedProductCategory_Init, None, StepBasic_ProductRelatedProductCategory)
StepBasic_ProductRelatedProductCategory.NbProducts = new_instancemethod(_StepBasic.StepBasic_ProductRelatedProductCategory_NbProducts, None, StepBasic_ProductRelatedProductCategory)
StepBasic_ProductRelatedProductCategory.Products = new_instancemethod(_StepBasic.StepBasic_ProductRelatedProductCategory_Products, None, StepBasic_ProductRelatedProductCategory)
StepBasic_ProductRelatedProductCategory.ProductsValue = new_instancemethod(_StepBasic.StepBasic_ProductRelatedProductCategory_ProductsValue, None, StepBasic_ProductRelatedProductCategory)
StepBasic_ProductRelatedProductCategory.SetProducts = new_instancemethod(_StepBasic.StepBasic_ProductRelatedProductCategory_SetProducts, None, StepBasic_ProductRelatedProductCategory)
StepBasic_ProductRelatedProductCategory_swigregister = _StepBasic.StepBasic_ProductRelatedProductCategory_swigregister
StepBasic_ProductRelatedProductCategory_swigregister(StepBasic_ProductRelatedProductCategory)

class StepBasic_RatioMeasureWithUnit(StepBasic_MeasureWithUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a RatioMeasureWithUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_RatioMeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_RatioMeasureWithUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_RatioMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_RatioMeasureWithUnit
StepBasic_RatioMeasureWithUnit_swigregister = _StepBasic.StepBasic_RatioMeasureWithUnit_swigregister
StepBasic_RatioMeasureWithUnit_swigregister(StepBasic_RatioMeasureWithUnit)

class StepBasic_RatioUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a RatioUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_RatioUnit_swiginit(self, _StepBasic.new_StepBasic_RatioUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_RatioUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_RatioUnit
StepBasic_RatioUnit_swigregister = _StepBasic.StepBasic_RatioUnit_swigregister
StepBasic_RatioUnit_swigregister(StepBasic_RatioUnit)

class StepBasic_SiUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def HasPrefix(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_SiUnit_HasPrefix(self, *args)


    def Init(self, *args) -> "void":
        """
        :param hasAprefix:
        	:type hasAprefix: bool
        	:param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnit_Init(self, *args)


    def Name(self, *args) -> "StepBasic_SiUnitName":
        """:rtype: StepBasic_SiUnitName"""
        return _StepBasic.StepBasic_SiUnit_Name(self, *args)


    def Prefix(self, *args) -> "StepBasic_SiPrefix":
        """:rtype: StepBasic_SiPrefix"""
        return _StepBasic.StepBasic_SiUnit_Prefix(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnit_SetName(self, *args)


    def SetPrefix(self, *args) -> "void":
        """
        :param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnit_SetPrefix(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnit(*args))

    def UnSetPrefix(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_SiUnit_UnSetPrefix(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnit
StepBasic_SiUnit.HasPrefix = new_instancemethod(_StepBasic.StepBasic_SiUnit_HasPrefix, None, StepBasic_SiUnit)
StepBasic_SiUnit.Init = new_instancemethod(_StepBasic.StepBasic_SiUnit_Init, None, StepBasic_SiUnit)
StepBasic_SiUnit.Name = new_instancemethod(_StepBasic.StepBasic_SiUnit_Name, None, StepBasic_SiUnit)
StepBasic_SiUnit.Prefix = new_instancemethod(_StepBasic.StepBasic_SiUnit_Prefix, None, StepBasic_SiUnit)
StepBasic_SiUnit.SetName = new_instancemethod(_StepBasic.StepBasic_SiUnit_SetName, None, StepBasic_SiUnit)
StepBasic_SiUnit.SetPrefix = new_instancemethod(_StepBasic.StepBasic_SiUnit_SetPrefix, None, StepBasic_SiUnit)
StepBasic_SiUnit.UnSetPrefix = new_instancemethod(_StepBasic.StepBasic_SiUnit_UnSetPrefix, None, StepBasic_SiUnit)
StepBasic_SiUnit_swigregister = _StepBasic.StepBasic_SiUnit_swigregister
StepBasic_SiUnit_swigregister(StepBasic_SiUnit)

class StepBasic_SolidAngleMeasureWithUnit(StepBasic_MeasureWithUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a SolidAngleMeasureWithUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SolidAngleMeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_SolidAngleMeasureWithUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SolidAngleMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SolidAngleMeasureWithUnit
StepBasic_SolidAngleMeasureWithUnit_swigregister = _StepBasic.StepBasic_SolidAngleMeasureWithUnit_swigregister
StepBasic_SolidAngleMeasureWithUnit_swigregister(StepBasic_SolidAngleMeasureWithUnit)

class StepBasic_SolidAngleUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a SolidAngleUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SolidAngleUnit_swiginit(self, _StepBasic.new_StepBasic_SolidAngleUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SolidAngleUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SolidAngleUnit
StepBasic_SolidAngleUnit_swigregister = _StepBasic.StepBasic_SolidAngleUnit_swigregister
StepBasic_SolidAngleUnit_swigregister(StepBasic_SolidAngleUnit)

class StepBasic_ThermodynamicTemperatureUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepBasic.StepBasic_ThermodynamicTemperatureUnit_swiginit(self, _StepBasic.new_StepBasic_ThermodynamicTemperatureUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ThermodynamicTemperatureUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ThermodynamicTemperatureUnit
StepBasic_ThermodynamicTemperatureUnit_swigregister = _StepBasic.StepBasic_ThermodynamicTemperatureUnit_swigregister
StepBasic_ThermodynamicTemperatureUnit_swigregister(StepBasic_ThermodynamicTemperatureUnit)

class StepBasic_TimeMeasureWithUnit(StepBasic_MeasureWithUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a TimeMeasureWithUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_TimeMeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_TimeMeasureWithUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_TimeMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_TimeMeasureWithUnit
StepBasic_TimeMeasureWithUnit_swigregister = _StepBasic.StepBasic_TimeMeasureWithUnit_swigregister
StepBasic_TimeMeasureWithUnit_swigregister(StepBasic_TimeMeasureWithUnit)

class StepBasic_TimeUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a TimeUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_TimeUnit_swiginit(self, _StepBasic.new_StepBasic_TimeUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_TimeUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_TimeUnit
StepBasic_TimeUnit_swigregister = _StepBasic.StepBasic_TimeUnit_swigregister
StepBasic_TimeUnit_swigregister(StepBasic_TimeUnit)

class StepBasic_UncertaintyMeasureWithUnit(StepBasic_MeasureWithUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_UncertaintyMeasureWithUnit_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aValueComponent:
        	:type aValueComponent: StepBasic_MeasureValueMember
        	:param aUnitComponent:
        	:type aUnitComponent: StepBasic_Unit
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_UncertaintyMeasureWithUnit_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepBasic.StepBasic_UncertaintyMeasureWithUnit_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_UncertaintyMeasureWithUnit_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepBasic.StepBasic_UncertaintyMeasureWithUnit_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a UncertaintyMeasureWithUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_UncertaintyMeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_UncertaintyMeasureWithUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_UncertaintyMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_UncertaintyMeasureWithUnit
StepBasic_UncertaintyMeasureWithUnit.Description = new_instancemethod(_StepBasic.StepBasic_UncertaintyMeasureWithUnit_Description, None, StepBasic_UncertaintyMeasureWithUnit)
StepBasic_UncertaintyMeasureWithUnit.Init = new_instancemethod(_StepBasic.StepBasic_UncertaintyMeasureWithUnit_Init, None, StepBasic_UncertaintyMeasureWithUnit)
StepBasic_UncertaintyMeasureWithUnit.Name = new_instancemethod(_StepBasic.StepBasic_UncertaintyMeasureWithUnit_Name, None, StepBasic_UncertaintyMeasureWithUnit)
StepBasic_UncertaintyMeasureWithUnit.SetDescription = new_instancemethod(_StepBasic.StepBasic_UncertaintyMeasureWithUnit_SetDescription, None, StepBasic_UncertaintyMeasureWithUnit)
StepBasic_UncertaintyMeasureWithUnit.SetName = new_instancemethod(_StepBasic.StepBasic_UncertaintyMeasureWithUnit_SetName, None, StepBasic_UncertaintyMeasureWithUnit)
StepBasic_UncertaintyMeasureWithUnit_swigregister = _StepBasic.StepBasic_UncertaintyMeasureWithUnit_swigregister
StepBasic_UncertaintyMeasureWithUnit_swigregister(StepBasic_UncertaintyMeasureWithUnit)

class StepBasic_VolumeUnit(StepBasic_NamedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_VolumeUnit_swiginit(self, _StepBasic.new_StepBasic_VolumeUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_VolumeUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_VolumeUnit
StepBasic_VolumeUnit_swigregister = _StepBasic.StepBasic_VolumeUnit_swigregister
StepBasic_VolumeUnit_swigregister(StepBasic_VolumeUnit)

class StepBasic_WeekOfYearAndDayDate(StepBasic_Date):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DayComponent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_WeekOfYearAndDayDate_DayComponent(self, *args)


    def HasDayComponent(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepBasic.StepBasic_WeekOfYearAndDayDate_HasDayComponent(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aYearComponent:
        	:type aYearComponent: int
        	:param aWeekComponent:
        	:type aWeekComponent: int
        	:param hasAdayComponent:
        	:type hasAdayComponent: bool
        	:param aDayComponent:
        	:type aDayComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_WeekOfYearAndDayDate_Init(self, *args)


    def SetDayComponent(self, *args) -> "void":
        """
        :param aDayComponent:
        	:type aDayComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_WeekOfYearAndDayDate_SetDayComponent(self, *args)


    def SetWeekComponent(self, *args) -> "void":
        """
        :param aWeekComponent:
        	:type aWeekComponent: int
        	:rtype: None
        """
        return _StepBasic.StepBasic_WeekOfYearAndDayDate_SetWeekComponent(self, *args)


    def __init__(self, *args):
        """
        * Returns a WeekOfYearAndDayDate
        	:rtype: None
        """
        _StepBasic.StepBasic_WeekOfYearAndDayDate_swiginit(self, _StepBasic.new_StepBasic_WeekOfYearAndDayDate(*args))

    def UnSetDayComponent(self, *args) -> "void":
        """:rtype: None"""
        return _StepBasic.StepBasic_WeekOfYearAndDayDate_UnSetDayComponent(self, *args)


    def WeekComponent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepBasic.StepBasic_WeekOfYearAndDayDate_WeekComponent(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_WeekOfYearAndDayDate_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_WeekOfYearAndDayDate
StepBasic_WeekOfYearAndDayDate.DayComponent = new_instancemethod(_StepBasic.StepBasic_WeekOfYearAndDayDate_DayComponent, None, StepBasic_WeekOfYearAndDayDate)
StepBasic_WeekOfYearAndDayDate.HasDayComponent = new_instancemethod(_StepBasic.StepBasic_WeekOfYearAndDayDate_HasDayComponent, None, StepBasic_WeekOfYearAndDayDate)
StepBasic_WeekOfYearAndDayDate.Init = new_instancemethod(_StepBasic.StepBasic_WeekOfYearAndDayDate_Init, None, StepBasic_WeekOfYearAndDayDate)
StepBasic_WeekOfYearAndDayDate.SetDayComponent = new_instancemethod(_StepBasic.StepBasic_WeekOfYearAndDayDate_SetDayComponent, None, StepBasic_WeekOfYearAndDayDate)
StepBasic_WeekOfYearAndDayDate.SetWeekComponent = new_instancemethod(_StepBasic.StepBasic_WeekOfYearAndDayDate_SetWeekComponent, None, StepBasic_WeekOfYearAndDayDate)
StepBasic_WeekOfYearAndDayDate.UnSetDayComponent = new_instancemethod(_StepBasic.StepBasic_WeekOfYearAndDayDate_UnSetDayComponent, None, StepBasic_WeekOfYearAndDayDate)
StepBasic_WeekOfYearAndDayDate.WeekComponent = new_instancemethod(_StepBasic.StepBasic_WeekOfYearAndDayDate_WeekComponent, None, StepBasic_WeekOfYearAndDayDate)
StepBasic_WeekOfYearAndDayDate_swigregister = _StepBasic.StepBasic_WeekOfYearAndDayDate_swigregister
StepBasic_WeekOfYearAndDayDate_swigregister(StepBasic_WeekOfYearAndDayDate)

class StepBasic_ConversionBasedUnitAndAreaUnit(StepBasic_ConversionBasedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AreaUnit(self, *args) -> "opencascade::handle< StepBasic_AreaUnit >":
        """:rtype: opencascade::handle<StepBasic_AreaUnit>"""
        return _StepBasic.StepBasic_ConversionBasedUnitAndAreaUnit_AreaUnit(self, *args)


    def SetAreaUnit(self, *args) -> "void":
        """
        :param anAreaUnit:
        	:type anAreaUnit: StepBasic_AreaUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndAreaUnit_SetAreaUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConversionBasedUnitAndAreaUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_ConversionBasedUnitAndAreaUnit_swiginit(self, _StepBasic.new_StepBasic_ConversionBasedUnitAndAreaUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ConversionBasedUnitAndAreaUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ConversionBasedUnitAndAreaUnit
StepBasic_ConversionBasedUnitAndAreaUnit.AreaUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndAreaUnit_AreaUnit, None, StepBasic_ConversionBasedUnitAndAreaUnit)
StepBasic_ConversionBasedUnitAndAreaUnit.SetAreaUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndAreaUnit_SetAreaUnit, None, StepBasic_ConversionBasedUnitAndAreaUnit)
StepBasic_ConversionBasedUnitAndAreaUnit_swigregister = _StepBasic.StepBasic_ConversionBasedUnitAndAreaUnit_swigregister
StepBasic_ConversionBasedUnitAndAreaUnit_swigregister(StepBasic_ConversionBasedUnitAndAreaUnit)

class StepBasic_ConversionBasedUnitAndLengthUnit(StepBasic_ConversionBasedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aDimensions:
        	:type aDimensions: StepBasic_DimensionalExponents
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aConversionFactor:
        	:type aConversionFactor: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndLengthUnit_Init(self, *args)


    def LengthUnit(self, *args) -> "opencascade::handle< StepBasic_LengthUnit >":
        """:rtype: opencascade::handle<StepBasic_LengthUnit>"""
        return _StepBasic.StepBasic_ConversionBasedUnitAndLengthUnit_LengthUnit(self, *args)


    def SetLengthUnit(self, *args) -> "void":
        """
        :param aLengthUnit:
        	:type aLengthUnit: StepBasic_LengthUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndLengthUnit_SetLengthUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConversionBasedUnitAndLengthUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_ConversionBasedUnitAndLengthUnit_swiginit(self, _StepBasic.new_StepBasic_ConversionBasedUnitAndLengthUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ConversionBasedUnitAndLengthUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ConversionBasedUnitAndLengthUnit
StepBasic_ConversionBasedUnitAndLengthUnit.Init = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndLengthUnit_Init, None, StepBasic_ConversionBasedUnitAndLengthUnit)
StepBasic_ConversionBasedUnitAndLengthUnit.LengthUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndLengthUnit_LengthUnit, None, StepBasic_ConversionBasedUnitAndLengthUnit)
StepBasic_ConversionBasedUnitAndLengthUnit.SetLengthUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndLengthUnit_SetLengthUnit, None, StepBasic_ConversionBasedUnitAndLengthUnit)
StepBasic_ConversionBasedUnitAndLengthUnit_swigregister = _StepBasic.StepBasic_ConversionBasedUnitAndLengthUnit_swigregister
StepBasic_ConversionBasedUnitAndLengthUnit_swigregister(StepBasic_ConversionBasedUnitAndLengthUnit)

class StepBasic_ConversionBasedUnitAndMassUnit(StepBasic_ConversionBasedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aDimensions:
        	:type aDimensions: StepBasic_DimensionalExponents
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aConversionFactor:
        	:type aConversionFactor: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndMassUnit_Init(self, *args)


    def MassUnit(self, *args) -> "opencascade::handle< StepBasic_MassUnit >":
        """:rtype: opencascade::handle<StepBasic_MassUnit>"""
        return _StepBasic.StepBasic_ConversionBasedUnitAndMassUnit_MassUnit(self, *args)


    def SetMassUnit(self, *args) -> "void":
        """
        :param aMassUnit:
        	:type aMassUnit: StepBasic_MassUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndMassUnit_SetMassUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConversionBasedUnitAndLengthUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_ConversionBasedUnitAndMassUnit_swiginit(self, _StepBasic.new_StepBasic_ConversionBasedUnitAndMassUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ConversionBasedUnitAndMassUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ConversionBasedUnitAndMassUnit
StepBasic_ConversionBasedUnitAndMassUnit.Init = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndMassUnit_Init, None, StepBasic_ConversionBasedUnitAndMassUnit)
StepBasic_ConversionBasedUnitAndMassUnit.MassUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndMassUnit_MassUnit, None, StepBasic_ConversionBasedUnitAndMassUnit)
StepBasic_ConversionBasedUnitAndMassUnit.SetMassUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndMassUnit_SetMassUnit, None, StepBasic_ConversionBasedUnitAndMassUnit)
StepBasic_ConversionBasedUnitAndMassUnit_swigregister = _StepBasic.StepBasic_ConversionBasedUnitAndMassUnit_swigregister
StepBasic_ConversionBasedUnitAndMassUnit_swigregister(StepBasic_ConversionBasedUnitAndMassUnit)

class StepBasic_ConversionBasedUnitAndPlaneAngleUnit(StepBasic_ConversionBasedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aDimensions:
        	:type aDimensions: StepBasic_DimensionalExponents
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aConversionFactor:
        	:type aConversionFactor: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndPlaneAngleUnit_Init(self, *args)


    def PlaneAngleUnit(self, *args) -> "opencascade::handle< StepBasic_PlaneAngleUnit >":
        """:rtype: opencascade::handle<StepBasic_PlaneAngleUnit>"""
        return _StepBasic.StepBasic_ConversionBasedUnitAndPlaneAngleUnit_PlaneAngleUnit(self, *args)


    def SetPlaneAngleUnit(self, *args) -> "void":
        """
        :param aPlaneAngleUnit:
        	:type aPlaneAngleUnit: StepBasic_PlaneAngleUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndPlaneAngleUnit_SetPlaneAngleUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConversionBasedUnitAndPlaneAngleUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_ConversionBasedUnitAndPlaneAngleUnit_swiginit(self, _StepBasic.new_StepBasic_ConversionBasedUnitAndPlaneAngleUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ConversionBasedUnitAndPlaneAngleUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ConversionBasedUnitAndPlaneAngleUnit
StepBasic_ConversionBasedUnitAndPlaneAngleUnit.Init = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndPlaneAngleUnit_Init, None, StepBasic_ConversionBasedUnitAndPlaneAngleUnit)
StepBasic_ConversionBasedUnitAndPlaneAngleUnit.PlaneAngleUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndPlaneAngleUnit_PlaneAngleUnit, None, StepBasic_ConversionBasedUnitAndPlaneAngleUnit)
StepBasic_ConversionBasedUnitAndPlaneAngleUnit.SetPlaneAngleUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndPlaneAngleUnit_SetPlaneAngleUnit, None, StepBasic_ConversionBasedUnitAndPlaneAngleUnit)
StepBasic_ConversionBasedUnitAndPlaneAngleUnit_swigregister = _StepBasic.StepBasic_ConversionBasedUnitAndPlaneAngleUnit_swigregister
StepBasic_ConversionBasedUnitAndPlaneAngleUnit_swigregister(StepBasic_ConversionBasedUnitAndPlaneAngleUnit)

class StepBasic_ConversionBasedUnitAndRatioUnit(StepBasic_ConversionBasedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aDimensions:
        	:type aDimensions: StepBasic_DimensionalExponents
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aConversionFactor:
        	:type aConversionFactor: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndRatioUnit_Init(self, *args)


    def RatioUnit(self, *args) -> "opencascade::handle< StepBasic_RatioUnit >":
        """:rtype: opencascade::handle<StepBasic_RatioUnit>"""
        return _StepBasic.StepBasic_ConversionBasedUnitAndRatioUnit_RatioUnit(self, *args)


    def SetRatioUnit(self, *args) -> "void":
        """
        :param aRatioUnit:
        	:type aRatioUnit: StepBasic_RatioUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndRatioUnit_SetRatioUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConversionBasedUnitAndRatioUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_ConversionBasedUnitAndRatioUnit_swiginit(self, _StepBasic.new_StepBasic_ConversionBasedUnitAndRatioUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ConversionBasedUnitAndRatioUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ConversionBasedUnitAndRatioUnit
StepBasic_ConversionBasedUnitAndRatioUnit.Init = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndRatioUnit_Init, None, StepBasic_ConversionBasedUnitAndRatioUnit)
StepBasic_ConversionBasedUnitAndRatioUnit.RatioUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndRatioUnit_RatioUnit, None, StepBasic_ConversionBasedUnitAndRatioUnit)
StepBasic_ConversionBasedUnitAndRatioUnit.SetRatioUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndRatioUnit_SetRatioUnit, None, StepBasic_ConversionBasedUnitAndRatioUnit)
StepBasic_ConversionBasedUnitAndRatioUnit_swigregister = _StepBasic.StepBasic_ConversionBasedUnitAndRatioUnit_swigregister
StepBasic_ConversionBasedUnitAndRatioUnit_swigregister(StepBasic_ConversionBasedUnitAndRatioUnit)

class StepBasic_ConversionBasedUnitAndSolidAngleUnit(StepBasic_ConversionBasedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aDimensions:
        	:type aDimensions: StepBasic_DimensionalExponents
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aConversionFactor:
        	:type aConversionFactor: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndSolidAngleUnit_Init(self, *args)


    def SetSolidAngleUnit(self, *args) -> "void":
        """
        :param aSolidAngleUnit:
        	:type aSolidAngleUnit: StepBasic_SolidAngleUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndSolidAngleUnit_SetSolidAngleUnit(self, *args)


    def SolidAngleUnit(self, *args) -> "opencascade::handle< StepBasic_SolidAngleUnit >":
        """:rtype: opencascade::handle<StepBasic_SolidAngleUnit>"""
        return _StepBasic.StepBasic_ConversionBasedUnitAndSolidAngleUnit_SolidAngleUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConversionBasedUnitAndSolidAngleUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_ConversionBasedUnitAndSolidAngleUnit_swiginit(self, _StepBasic.new_StepBasic_ConversionBasedUnitAndSolidAngleUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ConversionBasedUnitAndSolidAngleUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ConversionBasedUnitAndSolidAngleUnit
StepBasic_ConversionBasedUnitAndSolidAngleUnit.Init = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndSolidAngleUnit_Init, None, StepBasic_ConversionBasedUnitAndSolidAngleUnit)
StepBasic_ConversionBasedUnitAndSolidAngleUnit.SetSolidAngleUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndSolidAngleUnit_SetSolidAngleUnit, None, StepBasic_ConversionBasedUnitAndSolidAngleUnit)
StepBasic_ConversionBasedUnitAndSolidAngleUnit.SolidAngleUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndSolidAngleUnit_SolidAngleUnit, None, StepBasic_ConversionBasedUnitAndSolidAngleUnit)
StepBasic_ConversionBasedUnitAndSolidAngleUnit_swigregister = _StepBasic.StepBasic_ConversionBasedUnitAndSolidAngleUnit_swigregister
StepBasic_ConversionBasedUnitAndSolidAngleUnit_swigregister(StepBasic_ConversionBasedUnitAndSolidAngleUnit)

class StepBasic_ConversionBasedUnitAndTimeUnit(StepBasic_ConversionBasedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aDimensions:
        	:type aDimensions: StepBasic_DimensionalExponents
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aConversionFactor:
        	:type aConversionFactor: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndTimeUnit_Init(self, *args)


    def SetTimeUnit(self, *args) -> "void":
        """
        :param aTimeUnit:
        	:type aTimeUnit: StepBasic_TimeUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndTimeUnit_SetTimeUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConversionBasedUnitAndTimeUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_ConversionBasedUnitAndTimeUnit_swiginit(self, _StepBasic.new_StepBasic_ConversionBasedUnitAndTimeUnit(*args))

    def TimeUnit(self, *args) -> "opencascade::handle< StepBasic_TimeUnit >":
        """:rtype: opencascade::handle<StepBasic_TimeUnit>"""
        return _StepBasic.StepBasic_ConversionBasedUnitAndTimeUnit_TimeUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ConversionBasedUnitAndTimeUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ConversionBasedUnitAndTimeUnit
StepBasic_ConversionBasedUnitAndTimeUnit.Init = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndTimeUnit_Init, None, StepBasic_ConversionBasedUnitAndTimeUnit)
StepBasic_ConversionBasedUnitAndTimeUnit.SetTimeUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndTimeUnit_SetTimeUnit, None, StepBasic_ConversionBasedUnitAndTimeUnit)
StepBasic_ConversionBasedUnitAndTimeUnit.TimeUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndTimeUnit_TimeUnit, None, StepBasic_ConversionBasedUnitAndTimeUnit)
StepBasic_ConversionBasedUnitAndTimeUnit_swigregister = _StepBasic.StepBasic_ConversionBasedUnitAndTimeUnit_swigregister
StepBasic_ConversionBasedUnitAndTimeUnit_swigregister(StepBasic_ConversionBasedUnitAndTimeUnit)

class StepBasic_ConversionBasedUnitAndVolumeUnit(StepBasic_ConversionBasedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def SetVolumeUnit(self, *args) -> "void":
        """
        :param aVolumeUnit:
        	:type aVolumeUnit: StepBasic_VolumeUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_ConversionBasedUnitAndVolumeUnit_SetVolumeUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConversionBasedUnitAndVolumeUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_ConversionBasedUnitAndVolumeUnit_swiginit(self, _StepBasic.new_StepBasic_ConversionBasedUnitAndVolumeUnit(*args))

    def VolumeUnit(self, *args) -> "opencascade::handle< StepBasic_VolumeUnit >":
        """:rtype: opencascade::handle<StepBasic_VolumeUnit>"""
        return _StepBasic.StepBasic_ConversionBasedUnitAndVolumeUnit_VolumeUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ConversionBasedUnitAndVolumeUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ConversionBasedUnitAndVolumeUnit
StepBasic_ConversionBasedUnitAndVolumeUnit.SetVolumeUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndVolumeUnit_SetVolumeUnit, None, StepBasic_ConversionBasedUnitAndVolumeUnit)
StepBasic_ConversionBasedUnitAndVolumeUnit.VolumeUnit = new_instancemethod(_StepBasic.StepBasic_ConversionBasedUnitAndVolumeUnit_VolumeUnit, None, StepBasic_ConversionBasedUnitAndVolumeUnit)
StepBasic_ConversionBasedUnitAndVolumeUnit_swigregister = _StepBasic.StepBasic_ConversionBasedUnitAndVolumeUnit_swigregister
StepBasic_ConversionBasedUnitAndVolumeUnit_swigregister(StepBasic_ConversionBasedUnitAndVolumeUnit)

class StepBasic_DesignContext(StepBasic_ProductDefinitionContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepBasic.StepBasic_DesignContext_swiginit(self, _StepBasic.new_StepBasic_DesignContext(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_DesignContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_DesignContext
StepBasic_DesignContext_swigregister = _StepBasic.StepBasic_DesignContext_swigregister
StepBasic_DesignContext_swigregister(StepBasic_DesignContext)

class StepBasic_MechanicalContext(StepBasic_ProductContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a MechanicalContext
        	:rtype: None
        """
        _StepBasic.StepBasic_MechanicalContext_swiginit(self, _StepBasic.new_StepBasic_MechanicalContext(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_MechanicalContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_MechanicalContext
StepBasic_MechanicalContext_swigregister = _StepBasic.StepBasic_MechanicalContext_swigregister
StepBasic_MechanicalContext_swigregister(StepBasic_MechanicalContext)

class StepBasic_ProductType(StepBasic_ProductRelatedProductCategory):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a ProductType
        	:rtype: None
        """
        _StepBasic.StepBasic_ProductType_swiginit(self, _StepBasic.new_StepBasic_ProductType(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_ProductType_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_ProductType
StepBasic_ProductType_swigregister = _StepBasic.StepBasic_ProductType_swigregister
StepBasic_ProductType_swigregister(StepBasic_ProductType)

class StepBasic_SiUnitAndAreaUnit(StepBasic_SiUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AreaUnit(self, *args) -> "opencascade::handle< StepBasic_AreaUnit >":
        """:rtype: opencascade::handle<StepBasic_AreaUnit>"""
        return _StepBasic.StepBasic_SiUnitAndAreaUnit_AreaUnit(self, *args)


    def SetAreaUnit(self, *args) -> "void":
        """
        :param anAreaUnit:
        	:type anAreaUnit: StepBasic_AreaUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndAreaUnit_SetAreaUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnitAndAreaUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnitAndAreaUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnitAndAreaUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnitAndAreaUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnitAndAreaUnit
StepBasic_SiUnitAndAreaUnit.AreaUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndAreaUnit_AreaUnit, None, StepBasic_SiUnitAndAreaUnit)
StepBasic_SiUnitAndAreaUnit.SetAreaUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndAreaUnit_SetAreaUnit, None, StepBasic_SiUnitAndAreaUnit)
StepBasic_SiUnitAndAreaUnit_swigregister = _StepBasic.StepBasic_SiUnitAndAreaUnit_swigregister
StepBasic_SiUnitAndAreaUnit_swigregister(StepBasic_SiUnitAndAreaUnit)

class StepBasic_SiUnitAndLengthUnit(StepBasic_SiUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param hasAprefix:
        	:type hasAprefix: bool
        	:param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndLengthUnit_Init(self, *args)


    def LengthUnit(self, *args) -> "opencascade::handle< StepBasic_LengthUnit >":
        """:rtype: opencascade::handle<StepBasic_LengthUnit>"""
        return _StepBasic.StepBasic_SiUnitAndLengthUnit_LengthUnit(self, *args)


    def SetLengthUnit(self, *args) -> "void":
        """
        :param aLengthUnit:
        	:type aLengthUnit: StepBasic_LengthUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndLengthUnit_SetLengthUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnitAndLengthUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnitAndLengthUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnitAndLengthUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnitAndLengthUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnitAndLengthUnit
StepBasic_SiUnitAndLengthUnit.Init = new_instancemethod(_StepBasic.StepBasic_SiUnitAndLengthUnit_Init, None, StepBasic_SiUnitAndLengthUnit)
StepBasic_SiUnitAndLengthUnit.LengthUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndLengthUnit_LengthUnit, None, StepBasic_SiUnitAndLengthUnit)
StepBasic_SiUnitAndLengthUnit.SetLengthUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndLengthUnit_SetLengthUnit, None, StepBasic_SiUnitAndLengthUnit)
StepBasic_SiUnitAndLengthUnit_swigregister = _StepBasic.StepBasic_SiUnitAndLengthUnit_swigregister
StepBasic_SiUnitAndLengthUnit_swigregister(StepBasic_SiUnitAndLengthUnit)

class StepBasic_SiUnitAndMassUnit(StepBasic_SiUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param hasAprefix:
        	:type hasAprefix: bool
        	:param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndMassUnit_Init(self, *args)


    def MassUnit(self, *args) -> "opencascade::handle< StepBasic_MassUnit >":
        """:rtype: opencascade::handle<StepBasic_MassUnit>"""
        return _StepBasic.StepBasic_SiUnitAndMassUnit_MassUnit(self, *args)


    def SetMassUnit(self, *args) -> "void":
        """
        :param aMassUnit:
        	:type aMassUnit: StepBasic_MassUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndMassUnit_SetMassUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnitAndMassUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnitAndMassUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnitAndMassUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnitAndMassUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnitAndMassUnit
StepBasic_SiUnitAndMassUnit.Init = new_instancemethod(_StepBasic.StepBasic_SiUnitAndMassUnit_Init, None, StepBasic_SiUnitAndMassUnit)
StepBasic_SiUnitAndMassUnit.MassUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndMassUnit_MassUnit, None, StepBasic_SiUnitAndMassUnit)
StepBasic_SiUnitAndMassUnit.SetMassUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndMassUnit_SetMassUnit, None, StepBasic_SiUnitAndMassUnit)
StepBasic_SiUnitAndMassUnit_swigregister = _StepBasic.StepBasic_SiUnitAndMassUnit_swigregister
StepBasic_SiUnitAndMassUnit_swigregister(StepBasic_SiUnitAndMassUnit)

class StepBasic_SiUnitAndPlaneAngleUnit(StepBasic_SiUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param hasAprefix:
        	:type hasAprefix: bool
        	:param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndPlaneAngleUnit_Init(self, *args)


    def PlaneAngleUnit(self, *args) -> "opencascade::handle< StepBasic_PlaneAngleUnit >":
        """:rtype: opencascade::handle<StepBasic_PlaneAngleUnit>"""
        return _StepBasic.StepBasic_SiUnitAndPlaneAngleUnit_PlaneAngleUnit(self, *args)


    def SetPlaneAngleUnit(self, *args) -> "void":
        """
        :param aPlaneAngleUnit:
        	:type aPlaneAngleUnit: StepBasic_PlaneAngleUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndPlaneAngleUnit_SetPlaneAngleUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnitAndPlaneAngleUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnitAndPlaneAngleUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnitAndPlaneAngleUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnitAndPlaneAngleUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnitAndPlaneAngleUnit
StepBasic_SiUnitAndPlaneAngleUnit.Init = new_instancemethod(_StepBasic.StepBasic_SiUnitAndPlaneAngleUnit_Init, None, StepBasic_SiUnitAndPlaneAngleUnit)
StepBasic_SiUnitAndPlaneAngleUnit.PlaneAngleUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndPlaneAngleUnit_PlaneAngleUnit, None, StepBasic_SiUnitAndPlaneAngleUnit)
StepBasic_SiUnitAndPlaneAngleUnit.SetPlaneAngleUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndPlaneAngleUnit_SetPlaneAngleUnit, None, StepBasic_SiUnitAndPlaneAngleUnit)
StepBasic_SiUnitAndPlaneAngleUnit_swigregister = _StepBasic.StepBasic_SiUnitAndPlaneAngleUnit_swigregister
StepBasic_SiUnitAndPlaneAngleUnit_swigregister(StepBasic_SiUnitAndPlaneAngleUnit)

class StepBasic_SiUnitAndRatioUnit(StepBasic_SiUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param hasAprefix:
        	:type hasAprefix: bool
        	:param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndRatioUnit_Init(self, *args)


    def RatioUnit(self, *args) -> "opencascade::handle< StepBasic_RatioUnit >":
        """:rtype: opencascade::handle<StepBasic_RatioUnit>"""
        return _StepBasic.StepBasic_SiUnitAndRatioUnit_RatioUnit(self, *args)


    def SetRatioUnit(self, *args) -> "void":
        """
        :param aRatioUnit:
        	:type aRatioUnit: StepBasic_RatioUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndRatioUnit_SetRatioUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnitAndRatioUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnitAndRatioUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnitAndRatioUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnitAndRatioUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnitAndRatioUnit
StepBasic_SiUnitAndRatioUnit.Init = new_instancemethod(_StepBasic.StepBasic_SiUnitAndRatioUnit_Init, None, StepBasic_SiUnitAndRatioUnit)
StepBasic_SiUnitAndRatioUnit.RatioUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndRatioUnit_RatioUnit, None, StepBasic_SiUnitAndRatioUnit)
StepBasic_SiUnitAndRatioUnit.SetRatioUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndRatioUnit_SetRatioUnit, None, StepBasic_SiUnitAndRatioUnit)
StepBasic_SiUnitAndRatioUnit_swigregister = _StepBasic.StepBasic_SiUnitAndRatioUnit_swigregister
StepBasic_SiUnitAndRatioUnit_swigregister(StepBasic_SiUnitAndRatioUnit)

class StepBasic_SiUnitAndSolidAngleUnit(StepBasic_SiUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param hasAprefix:
        	:type hasAprefix: bool
        	:param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndSolidAngleUnit_Init(self, *args)


    def SetSolidAngleUnit(self, *args) -> "void":
        """
        :param aSolidAngleUnit:
        	:type aSolidAngleUnit: StepBasic_SolidAngleUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndSolidAngleUnit_SetSolidAngleUnit(self, *args)


    def SolidAngleUnit(self, *args) -> "opencascade::handle< StepBasic_SolidAngleUnit >":
        """:rtype: opencascade::handle<StepBasic_SolidAngleUnit>"""
        return _StepBasic.StepBasic_SiUnitAndSolidAngleUnit_SolidAngleUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnitAndSolidAngleUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnitAndSolidAngleUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnitAndSolidAngleUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnitAndSolidAngleUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnitAndSolidAngleUnit
StepBasic_SiUnitAndSolidAngleUnit.Init = new_instancemethod(_StepBasic.StepBasic_SiUnitAndSolidAngleUnit_Init, None, StepBasic_SiUnitAndSolidAngleUnit)
StepBasic_SiUnitAndSolidAngleUnit.SetSolidAngleUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndSolidAngleUnit_SetSolidAngleUnit, None, StepBasic_SiUnitAndSolidAngleUnit)
StepBasic_SiUnitAndSolidAngleUnit.SolidAngleUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndSolidAngleUnit_SolidAngleUnit, None, StepBasic_SiUnitAndSolidAngleUnit)
StepBasic_SiUnitAndSolidAngleUnit_swigregister = _StepBasic.StepBasic_SiUnitAndSolidAngleUnit_swigregister
StepBasic_SiUnitAndSolidAngleUnit_swigregister(StepBasic_SiUnitAndSolidAngleUnit)

class StepBasic_SiUnitAndThermodynamicTemperatureUnit(StepBasic_SiUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param hasAprefix:
        	:type hasAprefix: bool
        	:param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndThermodynamicTemperatureUnit_Init(self, *args)


    def SetThermodynamicTemperatureUnit(self, *args) -> "void":
        """
        :param aThermodynamicTemperatureUnit:
        	:type aThermodynamicTemperatureUnit: StepBasic_ThermodynamicTemperatureUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndThermodynamicTemperatureUnit_SetThermodynamicTemperatureUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnitAndThermodynamicTemperatureUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnitAndThermodynamicTemperatureUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnitAndThermodynamicTemperatureUnit(*args))

    def ThermodynamicTemperatureUnit(self, *args) -> "opencascade::handle< StepBasic_ThermodynamicTemperatureUnit >":
        """:rtype: opencascade::handle<StepBasic_ThermodynamicTemperatureUnit>"""
        return _StepBasic.StepBasic_SiUnitAndThermodynamicTemperatureUnit_ThermodynamicTemperatureUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnitAndThermodynamicTemperatureUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnitAndThermodynamicTemperatureUnit
StepBasic_SiUnitAndThermodynamicTemperatureUnit.Init = new_instancemethod(_StepBasic.StepBasic_SiUnitAndThermodynamicTemperatureUnit_Init, None, StepBasic_SiUnitAndThermodynamicTemperatureUnit)
StepBasic_SiUnitAndThermodynamicTemperatureUnit.SetThermodynamicTemperatureUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndThermodynamicTemperatureUnit_SetThermodynamicTemperatureUnit, None, StepBasic_SiUnitAndThermodynamicTemperatureUnit)
StepBasic_SiUnitAndThermodynamicTemperatureUnit.ThermodynamicTemperatureUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndThermodynamicTemperatureUnit_ThermodynamicTemperatureUnit, None, StepBasic_SiUnitAndThermodynamicTemperatureUnit)
StepBasic_SiUnitAndThermodynamicTemperatureUnit_swigregister = _StepBasic.StepBasic_SiUnitAndThermodynamicTemperatureUnit_swigregister
StepBasic_SiUnitAndThermodynamicTemperatureUnit_swigregister(StepBasic_SiUnitAndThermodynamicTemperatureUnit)

class StepBasic_SiUnitAndTimeUnit(StepBasic_SiUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param hasAprefix:
        	:type hasAprefix: bool
        	:param aPrefix:
        	:type aPrefix: StepBasic_SiPrefix
        	:param aName:
        	:type aName: StepBasic_SiUnitName
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndTimeUnit_Init(self, *args)


    def SetTimeUnit(self, *args) -> "void":
        """
        :param aTimeUnit:
        	:type aTimeUnit: StepBasic_TimeUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndTimeUnit_SetTimeUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnitAndTimeUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnitAndTimeUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnitAndTimeUnit(*args))

    def TimeUnit(self, *args) -> "opencascade::handle< StepBasic_TimeUnit >":
        """:rtype: opencascade::handle<StepBasic_TimeUnit>"""
        return _StepBasic.StepBasic_SiUnitAndTimeUnit_TimeUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnitAndTimeUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnitAndTimeUnit
StepBasic_SiUnitAndTimeUnit.Init = new_instancemethod(_StepBasic.StepBasic_SiUnitAndTimeUnit_Init, None, StepBasic_SiUnitAndTimeUnit)
StepBasic_SiUnitAndTimeUnit.SetTimeUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndTimeUnit_SetTimeUnit, None, StepBasic_SiUnitAndTimeUnit)
StepBasic_SiUnitAndTimeUnit.TimeUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndTimeUnit_TimeUnit, None, StepBasic_SiUnitAndTimeUnit)
StepBasic_SiUnitAndTimeUnit_swigregister = _StepBasic.StepBasic_SiUnitAndTimeUnit_swigregister
StepBasic_SiUnitAndTimeUnit_swigregister(StepBasic_SiUnitAndTimeUnit)

class StepBasic_SiUnitAndVolumeUnit(StepBasic_SiUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def SetVolumeUnit(self, *args) -> "void":
        """
        :param aVolumeUnit:
        	:type aVolumeUnit: StepBasic_VolumeUnit
        	:rtype: None
        """
        return _StepBasic.StepBasic_SiUnitAndVolumeUnit_SetVolumeUnit(self, *args)


    def __init__(self, *args):
        """
        * Returns a SiUnitAndVolumeUnit
        	:rtype: None
        """
        _StepBasic.StepBasic_SiUnitAndVolumeUnit_swiginit(self, _StepBasic.new_StepBasic_SiUnitAndVolumeUnit(*args))

    def VolumeUnit(self, *args) -> "opencascade::handle< StepBasic_VolumeUnit >":
        """:rtype: opencascade::handle<StepBasic_VolumeUnit>"""
        return _StepBasic.StepBasic_SiUnitAndVolumeUnit_VolumeUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_SiUnitAndVolumeUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepBasic.delete_StepBasic_SiUnitAndVolumeUnit
StepBasic_SiUnitAndVolumeUnit.SetVolumeUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndVolumeUnit_SetVolumeUnit, None, StepBasic_SiUnitAndVolumeUnit)
StepBasic_SiUnitAndVolumeUnit.VolumeUnit = new_instancemethod(_StepBasic.StepBasic_SiUnitAndVolumeUnit_VolumeUnit, None, StepBasic_SiUnitAndVolumeUnit)
StepBasic_SiUnitAndVolumeUnit_swigregister = _StepBasic.StepBasic_SiUnitAndVolumeUnit_swigregister
StepBasic_SiUnitAndVolumeUnit_swigregister(StepBasic_SiUnitAndVolumeUnit)

class StepBasic_HArray1OfOrganization(StepBasic_Array1OfOrganization, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfOrganization_swiginit(self, _StepBasic.new_StepBasic_HArray1OfOrganization(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfOrganization_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfOrganization
StepBasic_HArray1OfOrganization.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfOrganization_Array1, None, StepBasic_HArray1OfOrganization)
StepBasic_HArray1OfOrganization.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfOrganization_ChangeArray1, None, StepBasic_HArray1OfOrganization)
StepBasic_HArray1OfOrganization_swigregister = _StepBasic.StepBasic_HArray1OfOrganization_swigregister
StepBasic_HArray1OfOrganization_swigregister(StepBasic_HArray1OfOrganization)

class StepBasic_HArray1OfProductDefinition(StepBasic_Array1OfProductDefinition, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfProductDefinition_swiginit(self, _StepBasic.new_StepBasic_HArray1OfProductDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfProductDefinition_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfProductDefinition
StepBasic_HArray1OfProductDefinition.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfProductDefinition_Array1, None, StepBasic_HArray1OfProductDefinition)
StepBasic_HArray1OfProductDefinition.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfProductDefinition_ChangeArray1, None, StepBasic_HArray1OfProductDefinition)
StepBasic_HArray1OfProductDefinition_swigregister = _StepBasic.StepBasic_HArray1OfProductDefinition_swigregister
StepBasic_HArray1OfProductDefinition_swigregister(StepBasic_HArray1OfProductDefinition)

class StepBasic_HArray1OfDerivedUnitElement(StepBasic_Array1OfDerivedUnitElement, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfDerivedUnitElement_swiginit(self, _StepBasic.new_StepBasic_HArray1OfDerivedUnitElement(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfDerivedUnitElement_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfDerivedUnitElement
StepBasic_HArray1OfDerivedUnitElement.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfDerivedUnitElement_Array1, None, StepBasic_HArray1OfDerivedUnitElement)
StepBasic_HArray1OfDerivedUnitElement.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfDerivedUnitElement_ChangeArray1, None, StepBasic_HArray1OfDerivedUnitElement)
StepBasic_HArray1OfDerivedUnitElement_swigregister = _StepBasic.StepBasic_HArray1OfDerivedUnitElement_swigregister
StepBasic_HArray1OfDerivedUnitElement_swigregister(StepBasic_HArray1OfDerivedUnitElement)

class StepBasic_HArray1OfPerson(StepBasic_Array1OfPerson, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfPerson_swiginit(self, _StepBasic.new_StepBasic_HArray1OfPerson(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfPerson_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfPerson
StepBasic_HArray1OfPerson.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfPerson_Array1, None, StepBasic_HArray1OfPerson)
StepBasic_HArray1OfPerson.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfPerson_ChangeArray1, None, StepBasic_HArray1OfPerson)
StepBasic_HArray1OfPerson_swigregister = _StepBasic.StepBasic_HArray1OfPerson_swigregister
StepBasic_HArray1OfPerson_swigregister(StepBasic_HArray1OfPerson)

class StepBasic_HArray1OfUncertaintyMeasureWithUnit(StepBasic_Array1OfUncertaintyMeasureWithUnit, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfUncertaintyMeasureWithUnit_swiginit(self, _StepBasic.new_StepBasic_HArray1OfUncertaintyMeasureWithUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfUncertaintyMeasureWithUnit
StepBasic_HArray1OfUncertaintyMeasureWithUnit.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfUncertaintyMeasureWithUnit_Array1, None, StepBasic_HArray1OfUncertaintyMeasureWithUnit)
StepBasic_HArray1OfUncertaintyMeasureWithUnit.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfUncertaintyMeasureWithUnit_ChangeArray1, None, StepBasic_HArray1OfUncertaintyMeasureWithUnit)
StepBasic_HArray1OfUncertaintyMeasureWithUnit_swigregister = _StepBasic.StepBasic_HArray1OfUncertaintyMeasureWithUnit_swigregister
StepBasic_HArray1OfUncertaintyMeasureWithUnit_swigregister(StepBasic_HArray1OfUncertaintyMeasureWithUnit)

class StepBasic_HArray1OfApproval(StepBasic_Array1OfApproval, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfApproval_swiginit(self, _StepBasic.new_StepBasic_HArray1OfApproval(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfApproval_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfApproval
StepBasic_HArray1OfApproval.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfApproval_Array1, None, StepBasic_HArray1OfApproval)
StepBasic_HArray1OfApproval.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfApproval_ChangeArray1, None, StepBasic_HArray1OfApproval)
StepBasic_HArray1OfApproval_swigregister = _StepBasic.StepBasic_HArray1OfApproval_swigregister
StepBasic_HArray1OfApproval_swigregister(StepBasic_HArray1OfApproval)

class StepBasic_HArray1OfNamedUnit(StepBasic_Array1OfNamedUnit, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfNamedUnit_swiginit(self, _StepBasic.new_StepBasic_HArray1OfNamedUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfNamedUnit_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfNamedUnit
StepBasic_HArray1OfNamedUnit.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfNamedUnit_Array1, None, StepBasic_HArray1OfNamedUnit)
StepBasic_HArray1OfNamedUnit.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfNamedUnit_ChangeArray1, None, StepBasic_HArray1OfNamedUnit)
StepBasic_HArray1OfNamedUnit_swigregister = _StepBasic.StepBasic_HArray1OfNamedUnit_swigregister
StepBasic_HArray1OfNamedUnit_swigregister(StepBasic_HArray1OfNamedUnit)

class StepBasic_HArray1OfProductContext(StepBasic_Array1OfProductContext, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfProductContext_swiginit(self, _StepBasic.new_StepBasic_HArray1OfProductContext(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfProductContext_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfProductContext
StepBasic_HArray1OfProductContext.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfProductContext_Array1, None, StepBasic_HArray1OfProductContext)
StepBasic_HArray1OfProductContext.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfProductContext_ChangeArray1, None, StepBasic_HArray1OfProductContext)
StepBasic_HArray1OfProductContext_swigregister = _StepBasic.StepBasic_HArray1OfProductContext_swigregister
StepBasic_HArray1OfProductContext_swigregister(StepBasic_HArray1OfProductContext)

class StepBasic_HArray1OfDocument(StepBasic_Array1OfDocument, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfDocument_swiginit(self, _StepBasic.new_StepBasic_HArray1OfDocument(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfDocument_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfDocument
StepBasic_HArray1OfDocument.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfDocument_Array1, None, StepBasic_HArray1OfDocument)
StepBasic_HArray1OfDocument.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfDocument_ChangeArray1, None, StepBasic_HArray1OfDocument)
StepBasic_HArray1OfDocument_swigregister = _StepBasic.StepBasic_HArray1OfDocument_swigregister
StepBasic_HArray1OfDocument_swigregister(StepBasic_HArray1OfDocument)

class StepBasic_HArray1OfProduct(StepBasic_Array1OfProduct, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepBasic.StepBasic_HArray1OfProduct_swiginit(self, _StepBasic.new_StepBasic_HArray1OfProduct(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepBasic_HArray1OfProduct_DownCast(t)

    __swig_destroy__ = _StepBasic.delete_StepBasic_HArray1OfProduct
StepBasic_HArray1OfProduct.Array1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfProduct_Array1, None, StepBasic_HArray1OfProduct)
StepBasic_HArray1OfProduct.ChangeArray1 = new_instancemethod(_StepBasic.StepBasic_HArray1OfProduct_ChangeArray1, None, StepBasic_HArray1OfProduct)
StepBasic_HArray1OfProduct_swigregister = _StepBasic.StepBasic_HArray1OfProduct_swigregister
StepBasic_HArray1OfProduct_swigregister(StepBasic_HArray1OfProduct)



