# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TColGeom2d module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_tcolgeom2d.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _TColGeom2d.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_TColGeom2d')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_TColGeom2d')
    _TColGeom2d = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TColGeom2d', [dirname(__file__)])
        except ImportError:
            import _TColGeom2d
            return _TColGeom2d
        try:
            _mod = imp.load_module('_TColGeom2d', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _TColGeom2d = swig_import_helper()
    del swig_import_helper
else:
    import _TColGeom2d
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TColGeom2d.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_TColGeom2d.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TColGeom2d.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TColGeom2d.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TColGeom2d.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TColGeom2d.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TColGeom2d.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TColGeom2d.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TColGeom2d.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TColGeom2d.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TColGeom2d.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TColGeom2d.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TColGeom2d.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TColGeom2d.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TColGeom2d.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TColGeom2d.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TColGeom2d.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _TColGeom2d.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _TColGeom2d.process_exception(error, method_name, class_name)
process_exception = _TColGeom2d.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.Geom2d
import OCC.Core.gp
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.TColStd
import OCC.Core.TCollection

def Handle_TColGeom2d_HArray1OfCurve_Create() -> "opencascade::handle< TColGeom2d_HArray1OfCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HArray1OfCurve_Create()
Handle_TColGeom2d_HArray1OfCurve_Create = _TColGeom2d.Handle_TColGeom2d_HArray1OfCurve_Create

def Handle_TColGeom2d_HArray1OfCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TColGeom2d_HArray1OfCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HArray1OfCurve_DownCast(t)
Handle_TColGeom2d_HArray1OfCurve_DownCast = _TColGeom2d.Handle_TColGeom2d_HArray1OfCurve_DownCast

def Handle_TColGeom2d_HArray1OfCurve_IsNull(t: 'opencascade::handle< TColGeom2d_HArray1OfCurve > const &') -> "bool":
    return _TColGeom2d.Handle_TColGeom2d_HArray1OfCurve_IsNull(t)
Handle_TColGeom2d_HArray1OfCurve_IsNull = _TColGeom2d.Handle_TColGeom2d_HArray1OfCurve_IsNull

def Handle_TColGeom2d_HArray1OfBezierCurve_Create() -> "opencascade::handle< TColGeom2d_HArray1OfBezierCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HArray1OfBezierCurve_Create()
Handle_TColGeom2d_HArray1OfBezierCurve_Create = _TColGeom2d.Handle_TColGeom2d_HArray1OfBezierCurve_Create

def Handle_TColGeom2d_HArray1OfBezierCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TColGeom2d_HArray1OfBezierCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HArray1OfBezierCurve_DownCast(t)
Handle_TColGeom2d_HArray1OfBezierCurve_DownCast = _TColGeom2d.Handle_TColGeom2d_HArray1OfBezierCurve_DownCast

def Handle_TColGeom2d_HArray1OfBezierCurve_IsNull(t: 'opencascade::handle< TColGeom2d_HArray1OfBezierCurve > const &') -> "bool":
    return _TColGeom2d.Handle_TColGeom2d_HArray1OfBezierCurve_IsNull(t)
Handle_TColGeom2d_HArray1OfBezierCurve_IsNull = _TColGeom2d.Handle_TColGeom2d_HArray1OfBezierCurve_IsNull

def Handle_TColGeom2d_HArray1OfBSplineCurve_Create() -> "opencascade::handle< TColGeom2d_HArray1OfBSplineCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HArray1OfBSplineCurve_Create()
Handle_TColGeom2d_HArray1OfBSplineCurve_Create = _TColGeom2d.Handle_TColGeom2d_HArray1OfBSplineCurve_Create

def Handle_TColGeom2d_HArray1OfBSplineCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TColGeom2d_HArray1OfBSplineCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HArray1OfBSplineCurve_DownCast(t)
Handle_TColGeom2d_HArray1OfBSplineCurve_DownCast = _TColGeom2d.Handle_TColGeom2d_HArray1OfBSplineCurve_DownCast

def Handle_TColGeom2d_HArray1OfBSplineCurve_IsNull(t: 'opencascade::handle< TColGeom2d_HArray1OfBSplineCurve > const &') -> "bool":
    return _TColGeom2d.Handle_TColGeom2d_HArray1OfBSplineCurve_IsNull(t)
Handle_TColGeom2d_HArray1OfBSplineCurve_IsNull = _TColGeom2d.Handle_TColGeom2d_HArray1OfBSplineCurve_IsNull

def Handle_TColGeom2d_HSequenceOfBoundedCurve_Create() -> "opencascade::handle< TColGeom2d_HSequenceOfBoundedCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HSequenceOfBoundedCurve_Create()
Handle_TColGeom2d_HSequenceOfBoundedCurve_Create = _TColGeom2d.Handle_TColGeom2d_HSequenceOfBoundedCurve_Create

def Handle_TColGeom2d_HSequenceOfBoundedCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TColGeom2d_HSequenceOfBoundedCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HSequenceOfBoundedCurve_DownCast(t)
Handle_TColGeom2d_HSequenceOfBoundedCurve_DownCast = _TColGeom2d.Handle_TColGeom2d_HSequenceOfBoundedCurve_DownCast

def Handle_TColGeom2d_HSequenceOfBoundedCurve_IsNull(t: 'opencascade::handle< TColGeom2d_HSequenceOfBoundedCurve > const &') -> "bool":
    return _TColGeom2d.Handle_TColGeom2d_HSequenceOfBoundedCurve_IsNull(t)
Handle_TColGeom2d_HSequenceOfBoundedCurve_IsNull = _TColGeom2d.Handle_TColGeom2d_HSequenceOfBoundedCurve_IsNull

def Handle_TColGeom2d_HSequenceOfCurve_Create() -> "opencascade::handle< TColGeom2d_HSequenceOfCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HSequenceOfCurve_Create()
Handle_TColGeom2d_HSequenceOfCurve_Create = _TColGeom2d.Handle_TColGeom2d_HSequenceOfCurve_Create

def Handle_TColGeom2d_HSequenceOfCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TColGeom2d_HSequenceOfCurve >":
    return _TColGeom2d.Handle_TColGeom2d_HSequenceOfCurve_DownCast(t)
Handle_TColGeom2d_HSequenceOfCurve_DownCast = _TColGeom2d.Handle_TColGeom2d_HSequenceOfCurve_DownCast

def Handle_TColGeom2d_HSequenceOfCurve_IsNull(t: 'opencascade::handle< TColGeom2d_HSequenceOfCurve > const &') -> "bool":
    return _TColGeom2d.Handle_TColGeom2d_HSequenceOfCurve_IsNull(t)
Handle_TColGeom2d_HSequenceOfCurve_IsNull = _TColGeom2d.Handle_TColGeom2d_HSequenceOfCurve_IsNull
class TColGeom2d_SequenceOfCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_SequenceOfCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_SequenceOfCurve(*args))
    delNode = staticmethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_delNode)
    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_SequenceOfCurve
TColGeom2d_SequenceOfCurve.begin = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_begin, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.end = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_end, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.cbegin = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_cbegin, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.cend = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_cend, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Size = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Size, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Length = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Length, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Lower = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Lower, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Upper = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Upper, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.IsEmpty = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_IsEmpty, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Reverse = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Reverse, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Exchange = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Exchange, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Clear = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Clear, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Assign = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Assign, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Set = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Set, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Remove = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Remove, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Append = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Append, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Prepend = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Prepend, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.InsertBefore = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_InsertBefore, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.InsertAfter = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_InsertAfter, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Split = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Split, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.First = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_First, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.ChangeFirst = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_ChangeFirst, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Last = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Last, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.ChangeLast = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_ChangeLast, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.Value = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_Value, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.ChangeValue = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_ChangeValue, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.__call__ = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve___call__, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve.SetValue = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfCurve_SetValue, None, TColGeom2d_SequenceOfCurve)
TColGeom2d_SequenceOfCurve_swigregister = _TColGeom2d.TColGeom2d_SequenceOfCurve_swigregister
TColGeom2d_SequenceOfCurve_swigregister(TColGeom2d_SequenceOfCurve)

def TColGeom2d_SequenceOfCurve_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _TColGeom2d.TColGeom2d_SequenceOfCurve_delNode(theNode, theAl)
TColGeom2d_SequenceOfCurve_delNode = _TColGeom2d.TColGeom2d_SequenceOfCurve_delNode

class TColGeom2d_SequenceOfGeometry(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_SequenceOfGeometry_swiginit(self, _TColGeom2d.new_TColGeom2d_SequenceOfGeometry(*args))
    delNode = staticmethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_delNode)
    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_SequenceOfGeometry
TColGeom2d_SequenceOfGeometry.begin = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_begin, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.end = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_end, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.cbegin = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_cbegin, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.cend = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_cend, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Size = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Size, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Length = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Length, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Lower = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Lower, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Upper = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Upper, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.IsEmpty = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_IsEmpty, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Reverse = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Reverse, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Exchange = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Exchange, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Clear = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Clear, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Assign = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Assign, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Set = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Set, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Remove = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Remove, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Append = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Append, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Prepend = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Prepend, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.InsertBefore = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_InsertBefore, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.InsertAfter = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_InsertAfter, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Split = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Split, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.First = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_First, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.ChangeFirst = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_ChangeFirst, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Last = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Last, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.ChangeLast = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_ChangeLast, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.Value = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_Value, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.ChangeValue = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_ChangeValue, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.__call__ = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry___call__, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry.SetValue = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfGeometry_SetValue, None, TColGeom2d_SequenceOfGeometry)
TColGeom2d_SequenceOfGeometry_swigregister = _TColGeom2d.TColGeom2d_SequenceOfGeometry_swigregister
TColGeom2d_SequenceOfGeometry_swigregister(TColGeom2d_SequenceOfGeometry)

def TColGeom2d_SequenceOfGeometry_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _TColGeom2d.TColGeom2d_SequenceOfGeometry_delNode(theNode, theAl)
TColGeom2d_SequenceOfGeometry_delNode = _TColGeom2d.TColGeom2d_SequenceOfGeometry_delNode

class TColGeom2d_Array1OfCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_Array1OfCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_Array1OfCurve(*args))
    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_Array1OfCurve

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

TColGeom2d_Array1OfCurve.begin = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_begin, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.end = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_end, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.cbegin = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_cbegin, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.cend = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_cend, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Init = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Init, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Size = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Size, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Length = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Length, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.IsEmpty = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_IsEmpty, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Lower = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Lower, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Upper = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Upper, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.IsDeletable = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_IsDeletable, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.IsAllocated = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_IsAllocated, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Assign = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Assign, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Move = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Move, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Set = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Set, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.First = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_First, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.ChangeFirst = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_ChangeFirst, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Last = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Last, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.ChangeLast = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_ChangeLast, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Value = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Value, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.ChangeValue = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_ChangeValue, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.__call__ = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve___call__, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.SetValue = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_SetValue, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve.Resize = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfCurve_Resize, None, TColGeom2d_Array1OfCurve)
TColGeom2d_Array1OfCurve_swigregister = _TColGeom2d.TColGeom2d_Array1OfCurve_swigregister
TColGeom2d_Array1OfCurve_swigregister(TColGeom2d_Array1OfCurve)

class TColGeom2d_SequenceOfBoundedCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_SequenceOfBoundedCurve(*args))
    delNode = staticmethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_delNode)
    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_SequenceOfBoundedCurve
TColGeom2d_SequenceOfBoundedCurve.begin = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_begin, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.end = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_end, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.cbegin = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_cbegin, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.cend = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_cend, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Size = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Size, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Length = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Length, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Lower = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Lower, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Upper = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Upper, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.IsEmpty = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_IsEmpty, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Reverse = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Reverse, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Exchange = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Exchange, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Clear = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Clear, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Assign = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Assign, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Set = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Set, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Remove = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Remove, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Append = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Append, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Prepend = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Prepend, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.InsertBefore = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_InsertBefore, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.InsertAfter = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_InsertAfter, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Split = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Split, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.First = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_First, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.ChangeFirst = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_ChangeFirst, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Last = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Last, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.ChangeLast = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_ChangeLast, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.Value = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_Value, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.ChangeValue = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_ChangeValue, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.__call__ = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve___call__, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve.SetValue = new_instancemethod(_TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_SetValue, None, TColGeom2d_SequenceOfBoundedCurve)
TColGeom2d_SequenceOfBoundedCurve_swigregister = _TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_swigregister
TColGeom2d_SequenceOfBoundedCurve_swigregister(TColGeom2d_SequenceOfBoundedCurve)

def TColGeom2d_SequenceOfBoundedCurve_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_delNode(theNode, theAl)
TColGeom2d_SequenceOfBoundedCurve_delNode = _TColGeom2d.TColGeom2d_SequenceOfBoundedCurve_delNode

class TColGeom2d_Array1OfBezierCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_Array1OfBezierCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_Array1OfBezierCurve(*args))
    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_Array1OfBezierCurve

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

TColGeom2d_Array1OfBezierCurve.begin = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_begin, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.end = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_end, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.cbegin = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_cbegin, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.cend = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_cend, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Init = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Init, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Size = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Size, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Length = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Length, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.IsEmpty = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_IsEmpty, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Lower = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Lower, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Upper = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Upper, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.IsDeletable = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_IsDeletable, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.IsAllocated = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_IsAllocated, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Assign = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Assign, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Move = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Move, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Set = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Set, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.First = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_First, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.ChangeFirst = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_ChangeFirst, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Last = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Last, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.ChangeLast = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_ChangeLast, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Value = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Value, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.ChangeValue = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_ChangeValue, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.__call__ = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve___call__, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.SetValue = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_SetValue, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve.Resize = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBezierCurve_Resize, None, TColGeom2d_Array1OfBezierCurve)
TColGeom2d_Array1OfBezierCurve_swigregister = _TColGeom2d.TColGeom2d_Array1OfBezierCurve_swigregister
TColGeom2d_Array1OfBezierCurve_swigregister(TColGeom2d_Array1OfBezierCurve)

class TColGeom2d_Array1OfBSplineCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_Array1OfBSplineCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_Array1OfBSplineCurve(*args))
    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_Array1OfBSplineCurve

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

TColGeom2d_Array1OfBSplineCurve.begin = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_begin, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.end = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_end, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.cbegin = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_cbegin, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.cend = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_cend, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Init = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Init, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Size = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Size, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Length = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Length, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.IsEmpty = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_IsEmpty, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Lower = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Lower, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Upper = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Upper, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.IsDeletable = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_IsDeletable, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.IsAllocated = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_IsAllocated, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Assign = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Assign, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Move = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Move, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Set = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Set, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.First = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_First, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.ChangeFirst = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_ChangeFirst, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Last = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Last, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.ChangeLast = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_ChangeLast, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Value = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Value, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.ChangeValue = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_ChangeValue, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.__call__ = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve___call__, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.SetValue = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_SetValue, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve.Resize = new_instancemethod(_TColGeom2d.TColGeom2d_Array1OfBSplineCurve_Resize, None, TColGeom2d_Array1OfBSplineCurve)
TColGeom2d_Array1OfBSplineCurve_swigregister = _TColGeom2d.TColGeom2d_Array1OfBSplineCurve_swigregister
TColGeom2d_Array1OfBSplineCurve_swigregister(TColGeom2d_Array1OfBSplineCurve)

class TColGeom2d_HArray1OfCurve(TColGeom2d_Array1OfCurve, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_HArray1OfCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_HArray1OfCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom2d_HArray1OfCurve_DownCast(t)

    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_HArray1OfCurve
TColGeom2d_HArray1OfCurve.Array1 = new_instancemethod(_TColGeom2d.TColGeom2d_HArray1OfCurve_Array1, None, TColGeom2d_HArray1OfCurve)
TColGeom2d_HArray1OfCurve.ChangeArray1 = new_instancemethod(_TColGeom2d.TColGeom2d_HArray1OfCurve_ChangeArray1, None, TColGeom2d_HArray1OfCurve)
TColGeom2d_HArray1OfCurve_swigregister = _TColGeom2d.TColGeom2d_HArray1OfCurve_swigregister
TColGeom2d_HArray1OfCurve_swigregister(TColGeom2d_HArray1OfCurve)

class TColGeom2d_HArray1OfBezierCurve(TColGeom2d_Array1OfBezierCurve, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_HArray1OfBezierCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_HArray1OfBezierCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom2d_HArray1OfBezierCurve_DownCast(t)

    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_HArray1OfBezierCurve
TColGeom2d_HArray1OfBezierCurve.Array1 = new_instancemethod(_TColGeom2d.TColGeom2d_HArray1OfBezierCurve_Array1, None, TColGeom2d_HArray1OfBezierCurve)
TColGeom2d_HArray1OfBezierCurve.ChangeArray1 = new_instancemethod(_TColGeom2d.TColGeom2d_HArray1OfBezierCurve_ChangeArray1, None, TColGeom2d_HArray1OfBezierCurve)
TColGeom2d_HArray1OfBezierCurve_swigregister = _TColGeom2d.TColGeom2d_HArray1OfBezierCurve_swigregister
TColGeom2d_HArray1OfBezierCurve_swigregister(TColGeom2d_HArray1OfBezierCurve)

class TColGeom2d_HArray1OfBSplineCurve(TColGeom2d_Array1OfBSplineCurve, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_HArray1OfBSplineCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_HArray1OfBSplineCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom2d_HArray1OfBSplineCurve_DownCast(t)

    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_HArray1OfBSplineCurve
TColGeom2d_HArray1OfBSplineCurve.Array1 = new_instancemethod(_TColGeom2d.TColGeom2d_HArray1OfBSplineCurve_Array1, None, TColGeom2d_HArray1OfBSplineCurve)
TColGeom2d_HArray1OfBSplineCurve.ChangeArray1 = new_instancemethod(_TColGeom2d.TColGeom2d_HArray1OfBSplineCurve_ChangeArray1, None, TColGeom2d_HArray1OfBSplineCurve)
TColGeom2d_HArray1OfBSplineCurve_swigregister = _TColGeom2d.TColGeom2d_HArray1OfBSplineCurve_swigregister
TColGeom2d_HArray1OfBSplineCurve_swigregister(TColGeom2d_HArray1OfBSplineCurve)

class TColGeom2d_HSequenceOfBoundedCurve(TColGeom2d_SequenceOfBoundedCurve, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_HSequenceOfBoundedCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_HSequenceOfBoundedCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom2d_HSequenceOfBoundedCurve_DownCast(t)

    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_HSequenceOfBoundedCurve
TColGeom2d_HSequenceOfBoundedCurve.Sequence = new_instancemethod(_TColGeom2d.TColGeom2d_HSequenceOfBoundedCurve_Sequence, None, TColGeom2d_HSequenceOfBoundedCurve)
TColGeom2d_HSequenceOfBoundedCurve.Append = new_instancemethod(_TColGeom2d.TColGeom2d_HSequenceOfBoundedCurve_Append, None, TColGeom2d_HSequenceOfBoundedCurve)
TColGeom2d_HSequenceOfBoundedCurve.ChangeSequence = new_instancemethod(_TColGeom2d.TColGeom2d_HSequenceOfBoundedCurve_ChangeSequence, None, TColGeom2d_HSequenceOfBoundedCurve)
TColGeom2d_HSequenceOfBoundedCurve_swigregister = _TColGeom2d.TColGeom2d_HSequenceOfBoundedCurve_swigregister
TColGeom2d_HSequenceOfBoundedCurve_swigregister(TColGeom2d_HSequenceOfBoundedCurve)

class TColGeom2d_HSequenceOfCurve(TColGeom2d_SequenceOfCurve, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom2d.TColGeom2d_HSequenceOfCurve_swiginit(self, _TColGeom2d.new_TColGeom2d_HSequenceOfCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom2d_HSequenceOfCurve_DownCast(t)

    __swig_destroy__ = _TColGeom2d.delete_TColGeom2d_HSequenceOfCurve
TColGeom2d_HSequenceOfCurve.Sequence = new_instancemethod(_TColGeom2d.TColGeom2d_HSequenceOfCurve_Sequence, None, TColGeom2d_HSequenceOfCurve)
TColGeom2d_HSequenceOfCurve.Append = new_instancemethod(_TColGeom2d.TColGeom2d_HSequenceOfCurve_Append, None, TColGeom2d_HSequenceOfCurve)
TColGeom2d_HSequenceOfCurve.ChangeSequence = new_instancemethod(_TColGeom2d.TColGeom2d_HSequenceOfCurve_ChangeSequence, None, TColGeom2d_HSequenceOfCurve)
TColGeom2d_HSequenceOfCurve_swigregister = _TColGeom2d.TColGeom2d_HSequenceOfCurve_swigregister
TColGeom2d_HSequenceOfCurve_swigregister(TColGeom2d_HSequenceOfCurve)



