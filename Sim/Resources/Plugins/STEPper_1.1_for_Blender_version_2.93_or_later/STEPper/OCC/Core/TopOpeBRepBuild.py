# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TopOpeBRepBuild module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_topopebrepbuild.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _TopOpeBRepBuild.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_TopOpeBRepBuild')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_TopOpeBRepBuild')
    _TopOpeBRepBuild = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TopOpeBRepBuild', [dirname(__file__)])
        except ImportError:
            import _TopOpeBRepBuild
            return _TopOpeBRepBuild
        try:
            _mod = imp.load_module('_TopOpeBRepBuild', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _TopOpeBRepBuild = swig_import_helper()
    del swig_import_helper
else:
    import _TopOpeBRepBuild
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TopOpeBRepBuild.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _TopOpeBRepBuild.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _TopOpeBRepBuild.process_exception(error, method_name, class_name)
process_exception = _TopOpeBRepBuild.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.TopOpeBRepDS
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TopOpeBRepTool
import OCC.Core.TopTools
import OCC.Core.BRepClass3d
import OCC.Core.IntCurveSurface
import OCC.Core.math
import OCC.Core.Adaptor3d
import OCC.Core.Adaptor2d
import OCC.Core.Geom2d
import OCC.Core.Intf
import OCC.Core.Bnd
import OCC.Core.BVH
import OCC.Core.IntSurf
import OCC.Core.IntCurvesFace
import OCC.Core.BRepAdaptor
import OCC.Core.GeomAdaptor
import OCC.Core.Geom2dAdaptor
import OCC.Core.TopExp
import OCC.Core.Extrema
TopOpeBRepBuild_ANYLOOP = _TopOpeBRepBuild.TopOpeBRepBuild_ANYLOOP
TopOpeBRepBuild_BOUNDARY = _TopOpeBRepBuild.TopOpeBRepBuild_BOUNDARY
TopOpeBRepBuild_BLOCK = _TopOpeBRepBuild.TopOpeBRepBuild_BLOCK

def Handle_TopOpeBRepBuild_HBuilder_Create() -> "opencascade::handle< TopOpeBRepBuild_HBuilder >":
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_Create()
Handle_TopOpeBRepBuild_HBuilder_Create = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_Create

def Handle_TopOpeBRepBuild_HBuilder_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepBuild_HBuilder >":
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_DownCast(t)
Handle_TopOpeBRepBuild_HBuilder_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_DownCast

def Handle_TopOpeBRepBuild_HBuilder_IsNull(t: 'opencascade::handle< TopOpeBRepBuild_HBuilder > const &') -> "bool":
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_IsNull(t)
Handle_TopOpeBRepBuild_HBuilder_IsNull = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_IsNull

def Handle_TopOpeBRepBuild_Loop_Create() -> "opencascade::handle< TopOpeBRepBuild_Loop >":
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_Create()
Handle_TopOpeBRepBuild_Loop_Create = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_Create

def Handle_TopOpeBRepBuild_Loop_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepBuild_Loop >":
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_DownCast(t)
Handle_TopOpeBRepBuild_Loop_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_DownCast

def Handle_TopOpeBRepBuild_Loop_IsNull(t: 'opencascade::handle< TopOpeBRepBuild_Loop > const &') -> "bool":
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_IsNull(t)
Handle_TopOpeBRepBuild_Loop_IsNull = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_IsNull

def Handle_TopOpeBRepBuild_Pave_Create() -> "opencascade::handle< TopOpeBRepBuild_Pave >":
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_Create()
Handle_TopOpeBRepBuild_Pave_Create = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_Create

def Handle_TopOpeBRepBuild_Pave_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepBuild_Pave >":
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_DownCast(t)
Handle_TopOpeBRepBuild_Pave_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_DownCast

def Handle_TopOpeBRepBuild_Pave_IsNull(t: 'opencascade::handle< TopOpeBRepBuild_Pave > const &') -> "bool":
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_IsNull(t)
Handle_TopOpeBRepBuild_Pave_IsNull = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_IsNull
class TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.begin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_begin, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.end = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_end, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.cbegin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_cbegin, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.cend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_cend, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Exchange = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Exchange, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Assign, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Set, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.ReSize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ReSize, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Bind = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Bind, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Bound = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Bound, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.IsBound = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_IsBound, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.UnBind = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_UnBind, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Seek = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Seek, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Find = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Find, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.ChangeSeek = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ChangeSeek, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.ChangeFind = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ChangeFind, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.__call__ = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape___call__, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Clear, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Size = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Size, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swigregister
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swigregister(TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)

class TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.begin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_begin, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.end = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_end, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.cbegin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_cbegin, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.cend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_cend, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Exchange = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Exchange, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Assign, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Set, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.ReSize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ReSize, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Add = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Add, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Contains = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Contains, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Substitute = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Substitute, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Swap = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Swap, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.RemoveLast = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_RemoveLast, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.RemoveFromIndex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_RemoveFromIndex, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.RemoveKey = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_RemoveKey, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.FindKey = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindKey, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.FindFromIndex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromIndex, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.ChangeFromIndex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromIndex, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.__call__ = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo___call__, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.FindIndex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindIndex, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.ChangeFromKey = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromKey, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Seek = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Seek, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.ChangeSeek = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeSeek, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.FindFromKey = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromKey, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Clear, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Size = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Size, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swigregister
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swigregister(TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)

class TopOpeBRepBuild_ListOfPave(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfPave(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListOfPave
TopOpeBRepBuild_ListOfPave.begin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_begin, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.end = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_end, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.cbegin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_cbegin, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.cend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_cend, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Size = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Size, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Assign, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Set, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Clear, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.First = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_First, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Last = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Last, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Append, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Prepend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Prepend, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.RemoveFirst = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_RemoveFirst, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Remove = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Remove, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.InsertBefore = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_InsertBefore, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.InsertAfter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_InsertAfter, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Reverse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Reverse, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_swigregister
TopOpeBRepBuild_ListOfPave_swigregister(TopOpeBRepBuild_ListOfPave)

class TopOpeBRepBuild_ListIteratorOfListOfPave(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfPave(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListIteratorOfListOfPave
TopOpeBRepBuild_ListIteratorOfListOfPave.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_More, None, TopOpeBRepBuild_ListIteratorOfListOfPave)
TopOpeBRepBuild_ListIteratorOfListOfPave.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Next, None, TopOpeBRepBuild_ListIteratorOfListOfPave)
TopOpeBRepBuild_ListIteratorOfListOfPave.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Value, None, TopOpeBRepBuild_ListIteratorOfListOfPave)
TopOpeBRepBuild_ListIteratorOfListOfPave.ChangeValue = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_ChangeValue, None, TopOpeBRepBuild_ListIteratorOfListOfPave)
TopOpeBRepBuild_ListIteratorOfListOfPave_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_swigregister
TopOpeBRepBuild_ListIteratorOfListOfPave_swigregister(TopOpeBRepBuild_ListIteratorOfListOfPave)

class TopOpeBRepBuild_ListOfShapeListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfShapeListOfShape(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListOfShapeListOfShape
TopOpeBRepBuild_ListOfShapeListOfShape.begin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_begin, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.end = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_end, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.cbegin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_cbegin, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.cend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_cend, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Size = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Size, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Assign, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Set, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Clear, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.First = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_First, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Last = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Last, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Append, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Prepend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Prepend, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.RemoveFirst = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_RemoveFirst, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Remove = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Remove, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.InsertBefore = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_InsertBefore, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.InsertAfter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_InsertAfter, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Reverse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Reverse, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_swigregister
TopOpeBRepBuild_ListOfShapeListOfShape_swigregister(TopOpeBRepBuild_ListOfShapeListOfShape)

class TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_More, None, TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Next, None, TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Value, None, TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape.ChangeValue = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_ChangeValue, None, TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swigregister
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swigregister(TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)

class TopOpeBRepBuild_ListOfLoop(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfLoop(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListOfLoop
TopOpeBRepBuild_ListOfLoop.begin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_begin, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.end = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_end, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.cbegin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_cbegin, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.cend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_cend, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Size = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Size, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Assign, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Set, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Clear, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.First = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_First, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Last = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Last, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Append, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Prepend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Prepend, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.RemoveFirst = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_RemoveFirst, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Remove = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Remove, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.InsertBefore = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_InsertBefore, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.InsertAfter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_InsertAfter, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Reverse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Reverse, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_swigregister
TopOpeBRepBuild_ListOfLoop_swigregister(TopOpeBRepBuild_ListOfLoop)

class TopOpeBRepBuild_ListIteratorOfListOfLoop(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfLoop(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListIteratorOfListOfLoop
TopOpeBRepBuild_ListIteratorOfListOfLoop.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_More, None, TopOpeBRepBuild_ListIteratorOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfLoop.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Next, None, TopOpeBRepBuild_ListIteratorOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfLoop.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Value, None, TopOpeBRepBuild_ListIteratorOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfLoop.ChangeValue = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_ChangeValue, None, TopOpeBRepBuild_ListIteratorOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_swigregister
TopOpeBRepBuild_ListIteratorOfListOfLoop_swigregister(TopOpeBRepBuild_ListIteratorOfListOfLoop)

class TopOpeBRepBuild_ListOfListOfLoop(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfListOfLoop(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListOfListOfLoop
TopOpeBRepBuild_ListOfListOfLoop.begin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_begin, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.end = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_end, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.cbegin = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_cbegin, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.cend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_cend, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Size = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Size, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Assign, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Set, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Clear, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.First = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_First, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Last = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Last, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Append, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Prepend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Prepend, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.RemoveFirst = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_RemoveFirst, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Remove = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Remove, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.InsertBefore = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_InsertBefore, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.InsertAfter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_InsertAfter, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Reverse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Reverse, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_swigregister
TopOpeBRepBuild_ListOfListOfLoop_swigregister(TopOpeBRepBuild_ListOfListOfLoop)

class TopOpeBRepBuild_ListIteratorOfListOfListOfLoop(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfListOfLoop(*args))
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListIteratorOfListOfListOfLoop
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_More, None, TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Next, None, TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Value, None, TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop.ChangeValue = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_ChangeValue, None, TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swigregister
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swigregister(TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)

class TopOpeBRepBuild_AreaBuilder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ADD_LISTOFLoop_TO_LISTOFLoop(self, *args) -> "void":
        """
        :param LOL1:
        	:type LOL1: TopOpeBRepBuild_ListOfLoop
        	:param LOL2:
        	:type LOL2: TopOpeBRepBuild_ListOfLoop
        	:param s: default value is NULL
        	:type s: Standard_Address
        	:param s1: default value is NULL
        	:type s1: Standard_Address
        	:param s2: default value is NULL
        	:type s2: Standard_Address
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_LISTOFLoop_TO_LISTOFLoop(self, *args)


    def ADD_Loop_TO_LISTOFLoop(self, *args) -> "void":
        """
        :param L:
        	:type L: TopOpeBRepBuild_Loop
        	:param LOL:
        	:type LOL: TopOpeBRepBuild_ListOfLoop
        	:param s: default value is NULL
        	:type s: Standard_Address
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_Loop_TO_LISTOFLoop(self, *args)


    def InitArea(self, *args) -> "Standard_Integer":
        """
        * Initialize iteration on areas.
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitArea(self, *args)


    def InitAreaBuilder(self, *args) -> "void":
        """
        * Sets a AreaBuilder to find the areas on the shapes described by <LS> using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitAreaBuilder(self, *args)


    def InitLoop(self, *args) -> "Standard_Integer":
        """
        * Initialize iteration on loops of current Area.
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitLoop(self, *args)


    def Loop(self, *args) -> "opencascade::handle< TopOpeBRepBuild_Loop > const &":
        """
        * Returns the current Loop in the current area.
        	:rtype: opencascade::handle<TopOpeBRepBuild_Loop>
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_Loop(self, *args)


    def MoreArea(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreArea(self, *args)


    def MoreLoop(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreLoop(self, *args)


    def NextArea(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextArea(self, *args)


    def NextLoop(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextLoop(self, *args)


    def REM_Loop_FROM_LISTOFLoop(self, *args) -> "void":
        """
        :param ITLOL:
        	:type ITLOL: TopOpeBRepBuild_ListIteratorOfListOfLoop
        	:param LOL:
        	:type LOL: TopOpeBRepBuild_ListOfLoop
        	:param s: default value is NULL
        	:type s: Standard_Address
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_REM_Loop_FROM_LISTOFLoop(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        * Creates a AreaBuilder to build the areas on the shapes described by <LS> using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_AreaBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_AreaBuilder
TopOpeBRepBuild_AreaBuilder.ADD_LISTOFLoop_TO_LISTOFLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_LISTOFLoop_TO_LISTOFLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.ADD_Loop_TO_LISTOFLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_Loop_TO_LISTOFLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.InitArea = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitArea, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.InitAreaBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitAreaBuilder, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.InitLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.Loop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_Loop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.MoreArea = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreArea, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.MoreLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.NextArea = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextArea, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.NextLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.REM_Loop_FROM_LISTOFLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_REM_Loop_FROM_LISTOFLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_swigregister
TopOpeBRepBuild_AreaBuilder_swigregister(TopOpeBRepBuild_AreaBuilder)

class TopOpeBRepBuild_BlockBuilder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddElement(self, *args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_AddElement(self, *args)


    def BlockIterator(self, *args) -> "TopOpeBRepBuild_BlockIterator":
        """:rtype: TopOpeBRepBuild_BlockIterator"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_BlockIterator(self, *args)


    def CurrentBlockIsRegular(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_CurrentBlockIsRegular(self, *args)


    def Element(self, *args) -> "Standard_Integer":
        """
        * Returns the current element of <BI>.
        	:param BI:
        	:type BI: TopOpeBRepBuild_BlockIterator
        	:rtype: TopoDS_Shape
        :param I:
        	:type I: int
        	:rtype: TopoDS_Shape
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_Element(self, *args)


    def ElementIsValid(self, *args) -> "Standard_Boolean":
        """
        :param BI:
        	:type BI: TopOpeBRepBuild_BlockIterator
        	:rtype: bool
        :param I:
        	:type I: int
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_ElementIsValid(self, *args)


    def InitBlock(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_InitBlock(self, *args)


    def MakeBlock(self, *args) -> "void":
        """
        :param SS:
        	:type SS: TopOpeBRepBuild_ShapeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MakeBlock(self, *args)


    def MoreBlock(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MoreBlock(self, *args)


    def NextBlock(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_NextBlock(self, *args)


    def SetValid(self, *args) -> "void":
        """
        :param BI:
        	:type BI: TopOpeBRepBuild_BlockIterator
        	:param isvalid:
        	:type isvalid: bool
        	:rtype: None
        :param I:
        	:type I: int
        	:param isvalid:
        	:type isvalid: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_SetValid(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param SS:
        	:type SS: TopOpeBRepBuild_ShapeSet
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_BlockBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_BlockBuilder
TopOpeBRepBuild_BlockBuilder.AddElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_AddElement, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.BlockIterator = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_BlockIterator, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.CurrentBlockIsRegular = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_CurrentBlockIsRegular, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.Element = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_Element, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.ElementIsValid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_ElementIsValid, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.InitBlock = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_InitBlock, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.MakeBlock = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MakeBlock, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.MoreBlock = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MoreBlock, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.NextBlock = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_NextBlock, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.SetValid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_SetValid, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_swigregister
TopOpeBRepBuild_BlockBuilder_swigregister(TopOpeBRepBuild_BlockBuilder)

class TopOpeBRepBuild_BlockIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Extent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Extent(self, *args)


    def Initialize(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Initialize(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_More(self, *args)


    def Next(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Next(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param Lower:
        	:type Lower: int
        	:param Upper:
        	:type Upper: int
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_BlockIterator(*args))

    def Value(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_BlockIterator
TopOpeBRepBuild_BlockIterator.Extent = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Extent, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator.Initialize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Initialize, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_More, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Next, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Value, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_swigregister
TopOpeBRepBuild_BlockIterator_swigregister(TopOpeBRepBuild_BlockIterator)

class TopOpeBRepBuild_Builder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddONPatchesSFS(self, *args) -> "void":
        """
        :param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_AddONPatchesSFS(self, *args)


    def BuildEdges(self, *args) -> "void":
        """
        * update the DS by creating new geometries. create shapes from the new geometries.
        	:param DS:
        	:type DS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_BuildEdges(self, *args)


    def BuildTool(self, *args) -> "TopOpeBRepDS_BuildTool const &":
        """:rtype: TopOpeBRepDS_BuildTool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_BuildTool(self, *args)


    def BuildVertices(self, *args) -> "void":
        """
        * update the DS by creating new geometries. create vertices on DS points.
        	:param DS:
        	:type DS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_BuildVertices(self, *args)


    def ChangeBuildTool(self, *args) -> "TopOpeBRepDS_BuildTool &":
        """:rtype: TopOpeBRepDS_BuildTool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeBuildTool(self, *args)


    def ChangeClassify(self, *args) -> "void":
        """
        :param B:
        	:type B: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeClassify(self, *args)


    def ChangeMSplit(self, *args) -> "TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &":
        """
        :param s:
        	:type s: TopAbs_State
        	:rtype: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeMSplit(self, *args)


    def ChangeSplit(self, *args) -> "TopTools_ListOfShape &":
        """
        * Returns a ref.on the list of shapes connected to <S> as <TB> split parts of <S>. Mark <S> as split in <TB> parts.
        	:param S:
        	:type S: TopoDS_Shape
        	:param TB:
        	:type TB: TopAbs_State
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeSplit(self, *args)


    def Classify(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Classify(self, *args)


    def Clear(self, *args) -> "void":
        """
        * Removes all splits and merges already performed. Does NOT clear the handled DS.
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Clear(self, *args)


    def ClearMaps(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_ClearMaps(self, *args)


    def Contains(*args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Contains(*args)

    Contains = staticmethod(Contains)

    def DataStructure(self, *args) -> "opencascade::handle< TopOpeBRepDS_HDataStructure >":
        """
        * returns the DS handled by this builder
        	:rtype: opencascade::handle<TopOpeBRepDS_HDataStructure>
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_DataStructure(self, *args)


    def End(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_End(self, *args)


    def FillOnPatches(self, *args) -> "void":
        """
        :param anEdgesON:
        	:type anEdgesON: TopTools_ListOfShape
        	:param aBaseFace:
        	:type aBaseFace: TopoDS_Shape
        	:param avoidMap:
        	:type avoidMap: TopTools_IndexedMapOfOrientedShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_FillOnPatches(self, *args)


    def FillSecEdgeAncestorMap(self, *args) -> "void":
        """
        * Fills anAncMap with pairs (edge,ancestor edge) for each split from the map aMapON for the shape object identified by ShapeRank
        	:param aShapeRank:
        	:type aShapeRank: int
        	:param aMapON:
        	:type aMapON: TopTools_MapOfShape
        	:param anAncMap:
        	:type anAncMap: TopTools_DataMapOfShapeShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_FillSecEdgeAncestorMap(self, *args)


    def FindFacesTouchingEdge(self, *args) -> "void":
        """
        :param aFace:
        	:type aFace: TopoDS_Shape
        	:param anEdge:
        	:type anEdge: TopoDS_Shape
        	:param aShRank:
        	:type aShRank: int
        	:param aFaces:
        	:type aFaces: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindFacesTouchingEdge(self, *args)


    def FindIsKPart(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindIsKPart(self, *args)


    def FindSameDomain(self, *args) -> "void":
        """
        :param L1:
        	:type L1: TopTools_ListOfShape
        	:param L2:
        	:type L2: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindSameDomain(self, *args)


    def FindSameDomainSameOrientation(self, *args) -> "void":
        """
        :param LSO:
        	:type LSO: TopTools_ListOfShape
        	:param LDO:
        	:type LDO: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindSameDomainSameOrientation(self, *args)


    def FindSameRank(self, *args) -> "void":
        """
        :param L1:
        	:type L1: TopTools_ListOfShape
        	:param R:
        	:type R: int
        	:param L2:
        	:type L2: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindSameRank(self, *args)


    def GClearMaps(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GClearMaps(self, *args)


    def GContains(*args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GContains(*args)

    GContains = staticmethod(GContains)

    def GCopyList(*args) -> "void":
        """
        :param Lin:
        	:type Lin: TopTools_ListOfShape
        	:param i1:
        	:type i1: int
        	:param i2:
        	:type i2: int
        	:param Lou:
        	:type Lou: TopTools_ListOfShape
        	:rtype: void
        :param Lin:
        	:type Lin: TopTools_ListOfShape
        	:param Lou:
        	:type Lou: TopTools_ListOfShape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GCopyList(*args)

    GCopyList = staticmethod(GCopyList)

    def GEDBUMakeEdges(self, *args) -> "void":
        """
        :param EF:
        	:type EF: TopoDS_Shape
        	:param EDBU:
        	:type EDBU: TopOpeBRepBuild_EdgeBuilder
        	:param LOE:
        	:type LOE: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GEDBUMakeEdges(self, *args)


    def GFABUMakeFaces(self, *args) -> "void":
        """
        :param FF:
        	:type FF: TopoDS_Shape
        	:param FABU:
        	:type FABU: TopOpeBRepBuild_FaceBuilder
        	:param LOF:
        	:type LOF: TopTools_ListOfShape
        	:param MWisOld:
        	:type MWisOld: TopTools_DataMapOfShapeInteger
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFABUMakeFaces(self, *args)


    def GFillCurveTopologyWES(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        :param IT:
        	:type IT: TopOpeBRepDS_CurveIterator
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillCurveTopologyWES(self, *args)


    def GFillEdgePVS(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param LE2:
        	:type LE2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param PVS:
        	:type PVS: TopOpeBRepBuild_PaveSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillEdgePVS(self, *args)


    def GFillEdgeWES(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillEdgeWES(self, *args)


    def GFillEdgesPVS(self, *args) -> "void":
        """
        :param LE1:
        	:type LE1: TopTools_ListOfShape
        	:param LE2:
        	:type LE2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param PVS:
        	:type PVS: TopOpeBRepBuild_PaveSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillEdgesPVS(self, *args)


    def GFillFaceSFS(self, *args) -> "void":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFaceSFS(self, *args)


    def GFillFaceWES(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFaceWES(self, *args)


    def GFillFacesWES(self, *args) -> "void":
        """
        :param LF1:
        	:type LF1: TopTools_ListOfShape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFacesWES(self, *args)


    def GFillFacesWESK(self, *args) -> "void":
        """
        :param LF1:
        	:type LF1: TopTools_ListOfShape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:param K:
        	:type K: int
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFacesWESK(self, *args)


    def GFillFacesWESMakeFaces(self, *args) -> "void":
        """
        :param LF1:
        	:type LF1: TopTools_ListOfShape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param LSO:
        	:type LSO: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFacesWESMakeFaces(self, *args)


    def GFillONPartsWES(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param LSclass:
        	:type LSclass: TopTools_ListOfShape
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillONPartsWES(self, *args)


    def GFillPointTopologyPVS(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param PVS:
        	:type PVS: TopOpeBRepBuild_PaveSet
        	:rtype: None
        :param E:
        	:type E: TopoDS_Shape
        	:param IT:
        	:type IT: TopOpeBRepDS_PointIterator
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param PVS:
        	:type PVS: TopOpeBRepBuild_PaveSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillPointTopologyPVS(self, *args)


    def GFillShellSFS(self, *args) -> "void":
        """
        :param SH1:
        	:type SH1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillShellSFS(self, *args)


    def GFillSolidSFS(self, *args) -> "void":
        """
        :param SO1:
        	:type SO1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillSolidSFS(self, *args)


    def GFillSolidsSFS(self, *args) -> "void":
        """
        :param LSO1:
        	:type LSO1: TopTools_ListOfShape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillSolidsSFS(self, *args)


    def GFillSurfaceTopologySFS(self, *args) -> "void":
        """
        :param SO1:
        	:type SO1: TopoDS_Shape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: None
        :param IT:
        	:type IT: TopOpeBRepDS_SurfaceIterator
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillSurfaceTopologySFS(self, *args)


    def GFillWireWES(self, *args) -> "void":
        """
        :param W:
        	:type W: TopoDS_Shape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillWireWES(self, *args)


    def GFindSamDom(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param L1:
        	:type L1: TopTools_ListOfShape
        	:param L2:
        	:type L2: TopTools_ListOfShape
        	:rtype: None
        :param L1:
        	:type L1: TopTools_ListOfShape
        	:param L2:
        	:type L2: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFindSamDom(self, *args)


    def GFindSamDomSODO(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param LSO:
        	:type LSO: TopTools_ListOfShape
        	:param LDO:
        	:type LDO: TopTools_ListOfShape
        	:rtype: None
        :param LSO:
        	:type LSO: TopTools_ListOfShape
        	:param LDO:
        	:type LDO: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFindSamDomSODO(self, *args)


    def GFindSameRank(self, *args) -> "void":
        """
        :param L1:
        	:type L1: TopTools_ListOfShape
        	:param R:
        	:type R: int
        	:param L2:
        	:type L2: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFindSameRank(self, *args)


    def GIsShapeOf(self, *args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param I12:
        	:type I12: int
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GIsShapeOf(self, *args)


    def GKeepShape(self, *args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param Lref:
        	:type Lref: TopTools_ListOfShape
        	:param T:
        	:type T: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GKeepShape(self, *args)


    def GKeepShape1(self, *args) -> "Standard_Boolean":
        """
        * return True if S is classified <T> / Lref shapes
        	:param S:
        	:type S: TopoDS_Shape
        	:param Lref:
        	:type Lref: TopTools_ListOfShape
        	:param T:
        	:type T: TopAbs_State
        	:param pos:
        	:type pos: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GKeepShape1(self, *args)


    def GKeepShapes(self, *args) -> "void":
        """
        * add to Lou the shapes of Lin classified <T> / Lref shapes. Lou is not cleared. (S is a dummy trace argument)
        	:param S:
        	:type S: TopoDS_Shape
        	:param Lref:
        	:type Lref: TopTools_ListOfShape
        	:param T:
        	:type T: TopAbs_State
        	:param Lin:
        	:type Lin: TopTools_ListOfShape
        	:param Lou:
        	:type Lou: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GKeepShapes(self, *args)


    def GMapShapes(self, *args) -> "void":
        """
        :param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMapShapes(self, *args)


    def GMergeEdgeWES(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeEdgeWES(self, *args)


    def GMergeEdges(self, *args) -> "void":
        """
        :param LE1:
        	:type LE1: TopTools_ListOfShape
        	:param LE2:
        	:type LE2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeEdges(self, *args)


    def GMergeFaceSFS(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeFaceSFS(self, *args)


    def GMergeFaces(self, *args) -> "void":
        """
        :param LF1:
        	:type LF1: TopTools_ListOfShape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeFaces(self, *args)


    def GMergeSolids(self, *args) -> "void":
        """
        :param LSO1:
        	:type LSO1: TopTools_ListOfShape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeSolids(self, *args)


    def GPVSMakeEdges(self, *args) -> "void":
        """
        :param EF:
        	:type EF: TopoDS_Shape
        	:param PVS:
        	:type PVS: TopOpeBRepBuild_PaveSet
        	:param LOE:
        	:type LOE: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GPVSMakeEdges(self, *args)


    def GParamOnReference(self, *args) -> "Standard_Boolean":
        """
        :param V:
        	:type V: TopoDS_Vertex
        	:param E:
        	:type E: TopoDS_Edge
        	:param P:
        	:type P: float
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GParamOnReference(self, *args)


    def GSFSMakeSolids(self, *args) -> "void":
        """
        :param SOF:
        	:type SOF: TopoDS_Shape
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:param LOSO:
        	:type LOSO: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSFSMakeSolids(self, *args)


    def GSOBUMakeSolids(self, *args) -> "void":
        """
        :param SOF:
        	:type SOF: TopoDS_Shape
        	:param SOBU:
        	:type SOBU: TopOpeBRepBuild_SolidBuilder
        	:param LOSO:
        	:type LOSO: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSOBUMakeSolids(self, *args)


    def GShapeRank(self, *args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GShapeRank(self, *args)


    def GSplitEdge(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param LSclass:
        	:type LSclass: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitEdge(self, *args)


    def GSplitEdgeWES(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitEdgeWES(self, *args)


    def GSplitFace(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param LSclass:
        	:type LSclass: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitFace(self, *args)


    def GSplitFaceSFS(self, *args) -> "void":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param LSclass:
        	:type LSclass: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitFaceSFS(self, *args)


    def GTakeCommonOfDiff(*args) -> "Standard_Boolean":
        """
        :param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GTakeCommonOfDiff(*args)

    GTakeCommonOfDiff = staticmethod(GTakeCommonOfDiff)

    def GTakeCommonOfSame(*args) -> "Standard_Boolean":
        """
        :param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GTakeCommonOfSame(*args)

    GTakeCommonOfSame = staticmethod(GTakeCommonOfSame)

    def GToMerge(self, *args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GToMerge(self, *args)


    def GToSplit(self, *args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param TB:
        	:type TB: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GToSplit(self, *args)


    def GWESMakeFaces(self, *args) -> "void":
        """
        :param FF:
        	:type FF: TopoDS_Shape
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:param LOF:
        	:type LOF: TopTools_ListOfShape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GWESMakeFaces(self, *args)


    def GcheckNBOUNDS(*args) -> "Standard_Boolean":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GcheckNBOUNDS(*args)

    GcheckNBOUNDS = staticmethod(GcheckNBOUNDS)

    def GdumpEDBU(self, *args) -> "void":
        """
        :param EB:
        	:type EB: TopOpeBRepBuild_EdgeBuilder
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEDBU(self, *args)


    def GdumpEDG(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param str: default value is NULL
        	:type str: Standard_Address
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEDG(self, *args)


    def GdumpEDGVER(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param V:
        	:type V: TopoDS_Shape
        	:param str: default value is NULL
        	:type str: Standard_Address
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEDGVER(self, *args)


    def GdumpEXP(self, *args) -> "void":
        """
        :param E:
        	:type E: TopOpeBRepTool_ShapeExplorer
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEXP(self, *args)


    def GdumpFABU(self, *args) -> "void":
        """
        :param FB:
        	:type FB: TopOpeBRepBuild_FaceBuilder
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpFABU(self, *args)


    def GdumpLS(self, *args) -> "void":
        """
        :param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpLS(self, *args)


    def GdumpORIPARPNT(*args) -> "void":
        """
        :param o:
        	:type o: TopAbs_Orientation
        	:param p:
        	:type p: float
        	:param Pnt:
        	:type Pnt: gp_Pnt
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpORIPARPNT(*args)

    GdumpORIPARPNT = staticmethod(GdumpORIPARPNT)

    def GdumpPNT(*args) -> "void":
        """
        :param P:
        	:type P: gp_Pnt
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpPNT(*args)

    GdumpPNT = staticmethod(GdumpPNT)

    def GdumpSAMDOM(self, *args) -> "void":
        """
        :param L:
        	:type L: TopTools_ListOfShape
        	:param str: default value is NULL
        	:type str: Standard_Address
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSAMDOM(self, *args)


    def GdumpSHA(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param str: default value is NULL
        	:type str: Standard_Address
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHA(self, *args)


    def GdumpSHAORI(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param str: default value is NULL
        	:type str: Standard_Address
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHAORI(self, *args)


    def GdumpSHAORIGEO(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param str: default value is NULL
        	:type str: Standard_Address
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHAORIGEO(self, *args)


    def GdumpSHASETindex(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHASETindex(self, *args)


    def GdumpSHASETreset(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHASETreset(self, *args)


    def GdumpSHASTA(self, *args) -> "void":
        """
        :param iS:
        	:type iS: int
        	:param T:
        	:type T: TopAbs_State
        	:param a: default value is 
        	:type a: TCollection_AsciiString
        	:param b: default value is 
        	:type b: TCollection_AsciiString
        	:rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:param T:
        	:type T: TopAbs_State
        	:param a: default value is 
        	:type a: TCollection_AsciiString
        	:param b: default value is 
        	:type b: TCollection_AsciiString
        	:rtype: None
        :param iS:
        	:type iS: int
        	:param T:
        	:type T: TopAbs_State
        	:param SS:
        	:type SS: TopOpeBRepBuild_ShapeSet
        	:param a: default value is 
        	:type a: TCollection_AsciiString
        	:param b: default value is 
        	:type b: TCollection_AsciiString
        	:param c: default value is '
        '
        	:type c: TCollection_AsciiString
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHASTA(self, *args)


    def GdumpSOBU(self, *args) -> "void":
        """
        :param SB:
        	:type SB: TopOpeBRepBuild_SolidBuilder
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSOBU(self, *args)


    def GtraceSPS(self, *args) -> "Standard_Boolean":
        """
        :param iS:
        	:type iS: int
        	:rtype: bool
        :param iS:
        	:type iS: int
        	:param jS:
        	:type jS: int
        	:rtype: bool
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: bool
        :param S:
        	:type S: TopoDS_Shape
        	:param IS:
        	:type IS: int
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GtraceSPS(self, *args)


    def InitSection(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_InitSection(self, *args)


    def IsKPart(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsKPart(self, *args)


    def IsMerged(self, *args) -> "Standard_Boolean":
        """
        * Returns True if the shape <S> has been merged.
        	:param S:
        	:type S: TopoDS_Shape
        	:param TB:
        	:type TB: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsMerged(self, *args)


    def IsShapeOf(self, *args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param I12:
        	:type I12: int
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsShapeOf(self, *args)


    def IsSplit(self, *args) -> "Standard_Boolean":
        """
        * Returns True if the shape <S> has been split.
        	:param S:
        	:type S: TopoDS_Shape
        	:param TB:
        	:type TB: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsSplit(self, *args)


    def KPClearMaps(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPClearMaps(self, *args)


    def KPContains(*args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPContains(*args)

    KPContains = staticmethod(KPContains)

    def KPSameDomain(self, *args) -> "void":
        """
        :param L1:
        	:type L1: TopTools_ListOfShape
        	:param L2:
        	:type L2: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPSameDomain(self, *args)


    def KPclasSS(self, *args) -> "TopAbs_State":
        """
        :param S1:
        	:type S1: TopoDS_Shape
        	:param exceptLS1:
        	:type exceptLS1: TopTools_ListOfShape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: TopAbs_State
        :param S1:
        	:type S1: TopoDS_Shape
        	:param exceptS1:
        	:type exceptS1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: TopAbs_State
        :param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: TopAbs_State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPclasSS(self, *args)


    def KPclassF(self, *args) -> "TopAbs_State":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param F2:
        	:type F2: TopoDS_Shape
        	:rtype: TopAbs_State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPclassF(self, *args)


    def KPclassFF(self, *args) -> "void":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param F2:
        	:type F2: TopoDS_Shape
        	:param T1:
        	:type T1: TopAbs_State
        	:param T2:
        	:type T2: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPclassFF(self, *args)


    def KPisdisj(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisdisj(self, *args)


    def KPisdisjanalyse(self, *args) -> "void":
        """
        :param ST1:
        	:type ST1: TopAbs_State
        	:param ST2:
        	:type ST2: TopAbs_State
        	:param I:
        	:type I: int
        	:param IC1:
        	:type IC1: int
        	:param IC2:
        	:type IC2: int
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisdisjanalyse(self, *args)


    def KPisdisjsh(self, *args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisdisjsh(self, *args)


    def KPisfafa(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisfafa(self, *args)


    def KPisfafash(self, *args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisfafash(self, *args)


    def KPiskole(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskole(self, *args)


    def KPiskoleFF(self, *args) -> "Standard_Boolean":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param F2:
        	:type F2: TopoDS_Shape
        	:param T1:
        	:type T1: TopAbs_State
        	:param T2:
        	:type T2: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoleFF(self, *args)


    def KPiskoleanalyse(self, *args) -> "void":
        """
        :param FT1:
        	:type FT1: TopAbs_State
        	:param FT2:
        	:type FT2: TopAbs_State
        	:param ST1:
        	:type ST1: TopAbs_State
        	:param ST2:
        	:type ST2: TopAbs_State
        	:param I:
        	:type I: int
        	:param I1:
        	:type I1: int
        	:param I2:
        	:type I2: int
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoleanalyse(self, *args)


    def KPiskolesh(self, *args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param LS:
        	:type LS: TopTools_ListOfShape
        	:param LF:
        	:type LF: TopTools_ListOfShape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskolesh(self, *args)


    def KPiskoletge(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoletge(self, *args)


    def KPiskoletgeanalyse(self, *args) -> "void":
        """
        :param Conf:
        	:type Conf: TopOpeBRepDS_Config
        	:param ST1:
        	:type ST1: TopAbs_State
        	:param ST2:
        	:type ST2: TopAbs_State
        	:param I:
        	:type I: int
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoletgeanalyse(self, *args)


    def KPiskoletgesh(self, *args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param LS:
        	:type LS: TopTools_ListOfShape
        	:param LF:
        	:type LF: TopTools_ListOfShape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoletgesh(self, *args)


    def KPissoso(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPissoso(self, *args)


    def KPissososh(self, *args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPissososh(self, *args)


    def KPlhg(self, *args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param T:
        	:type T: TopAbs_ShapeEnum
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: int
        :param S:
        	:type S: TopoDS_Shape
        	:param T:
        	:type T: TopAbs_ShapeEnum
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPlhg(self, *args)


    def KPlhsd(self, *args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param T:
        	:type T: TopAbs_ShapeEnum
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: int
        :param S:
        	:type S: TopoDS_Shape
        	:param T:
        	:type T: TopAbs_ShapeEnum
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPlhsd(self, *args)


    def KPls(*args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param T:
        	:type T: TopAbs_ShapeEnum
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: int
        :param S:
        	:type S: TopoDS_Shape
        	:param T:
        	:type T: TopAbs_ShapeEnum
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPls(*args)

    KPls = staticmethod(KPls)

    def KPmakeface(self, *args) -> "TopoDS_Shape":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param T1:
        	:type T1: TopAbs_State
        	:param T2:
        	:type T2: TopAbs_State
        	:param R1:
        	:type R1: bool
        	:param R2:
        	:type R2: bool
        	:rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPmakeface(self, *args)


    def KPreturn(*args) -> "Standard_Integer":
        """
        :param KP:
        	:type KP: int
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPreturn(*args)

    KPreturn = staticmethod(KPreturn)

    def KeepShape(self, *args) -> "Standard_Boolean":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param LS:
        	:type LS: TopTools_ListOfShape
        	:param T:
        	:type T: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KeepShape(self, *args)


    def MSplit(self, *args) -> "TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State const &":
        """
        :param s:
        	:type s: TopAbs_State
        	:rtype: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MSplit(self, *args)


    def MakeEdges(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param B:
        	:type B: TopOpeBRepBuild_EdgeBuilder
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeEdges(self, *args)


    def MakeFaces(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param B:
        	:type B: TopOpeBRepBuild_FaceBuilder
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeFaces(self, *args)


    def MakeShells(self, *args) -> "void":
        """
        :param B:
        	:type B: TopOpeBRepBuild_SolidBuilder
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeShells(self, *args)


    def MakeSolids(self, *args) -> "void":
        """
        :param B:
        	:type B: TopOpeBRepBuild_SolidBuilder
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeSolids(self, *args)


    def MapShapes(self, *args) -> "void":
        """
        :param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MapShapes(self, *args)


    def MergeEdges(self, *args) -> "void":
        """
        * Merges the two edges <S1> and <S2> keeping the parts in each edge of states <TB1> and <TB2>. Booleans onA, onB, onAB indicate wheter parts of edges found as state ON respectively on first, second, and both shapes must be (or not) built.
        	:param L1:
        	:type L1: TopTools_ListOfShape
        	:param TB1:
        	:type TB1: TopAbs_State
        	:param L2:
        	:type L2: TopTools_ListOfShape
        	:param TB2:
        	:type TB2: TopAbs_State
        	:param onA: default value is Standard_False
        	:type onA: bool
        	:param onB: default value is Standard_False
        	:type onB: bool
        	:param onAB: default value is Standard_False
        	:type onAB: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeEdges(self, *args)


    def MergeFaces(self, *args) -> "void":
        """
        * Merges the two faces <S1> and <S2> keeping the parts in each face of states <TB1> and <TB2>.
        	:param S1:
        	:type S1: TopTools_ListOfShape
        	:param TB1:
        	:type TB1: TopAbs_State
        	:param S2:
        	:type S2: TopTools_ListOfShape
        	:param TB2:
        	:type TB2: TopAbs_State
        	:param onA: default value is Standard_False
        	:type onA: bool
        	:param onB: default value is Standard_False
        	:type onB: bool
        	:param onAB: default value is Standard_False
        	:type onAB: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeFaces(self, *args)


    def MergeKPart(self, *args) -> "void":
        """
        :rtype: void
        :param TB1:
        	:type TB1: TopAbs_State
        	:param TB2:
        	:type TB2: TopAbs_State
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPart(self, *args)


    def MergeKPartisdisj(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartisdisj(self, *args)


    def MergeKPartisfafa(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartisfafa(self, *args)


    def MergeKPartiskole(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartiskole(self, *args)


    def MergeKPartiskoletge(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartiskoletge(self, *args)


    def MergeKPartissoso(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartissoso(self, *args)


    def MergeShapes(self, *args) -> "void":
        """
        * Merges the two shapes <S1> and <S2> keeping the parts of states <TB1>,<TB2> in <S1>,<S2>.
        	:param S1:
        	:type S1: TopoDS_Shape
        	:param TB1:
        	:type TB1: TopAbs_State
        	:param S2:
        	:type S2: TopoDS_Shape
        	:param TB2:
        	:type TB2: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeShapes(self, *args)


    def MergeSolid(self, *args) -> "void":
        """
        * Merges the solid <S> keeping the parts of state <TB>.
        	:param S:
        	:type S: TopoDS_Shape
        	:param TB:
        	:type TB: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeSolid(self, *args)


    def MergeSolids(self, *args) -> "void":
        """
        * Merges the two solids <S1> and <S2> keeping the parts in each solid of states <TB1> and <TB2>.
        	:param S1:
        	:type S1: TopoDS_Shape
        	:param TB1:
        	:type TB1: TopAbs_State
        	:param S2:
        	:type S2: TopoDS_Shape
        	:param TB2:
        	:type TB2: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeSolids(self, *args)


    def Merged(self, *args) -> "TopTools_ListOfShape const &":
        """
        * Returns the merged parts <TB> of shape <S>.
        	:param S:
        	:type S: TopoDS_Shape
        	:param TB:
        	:type TB: TopAbs_State
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Merged(self, *args)


    def NewEdges(self, *args) -> "TopTools_ListOfShape const &":
        """
        * Returns the edges created on curve <I>.
        	:param I:
        	:type I: int
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_NewEdges(self, *args)


    def NewFaces(self, *args) -> "TopTools_ListOfShape const &":
        """
        * Returns the faces created on surface <I>.
        	:param I:
        	:type I: int
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_NewFaces(self, *args)


    def NewVertex(self, *args) -> "TopoDS_Shape const":
        """
        * Returns the vertex created on point <I>.
        	:param I:
        	:type I: int
        	:rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_NewVertex(self, *args)


    def Opec12(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opec12(self, *args)


    def Opec21(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opec21(self, *args)


    def Opecom(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opecom(self, *args)


    def Opefus(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opefus(self, *args)


    def Orient(*args) -> "TopAbs_Orientation":
        """
        :param O:
        	:type O: TopAbs_Orientation
        	:param R:
        	:type R: bool
        	:rtype: TopAbs_Orientation
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Orient(*args)

    Orient = staticmethod(Orient)

    def Perform(self, *args) -> "void":
        """
        * Stores the data structure <HDS>, Create shapes from the new geometries.
        	:param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: void
        * Stores the data structure <HDS>, Create shapes from the new geometries, Evaluates if an operation performed on shapes S1,S2 is a particular case.
        	:param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Perform(self, *args)


    def PrintCur(*args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Edge
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintCur(*args)

    PrintCur = staticmethod(PrintCur)

    def PrintGeo(*args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintGeo(*args)

    PrintGeo = staticmethod(PrintGeo)

    def PrintOri(*args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintOri(*args)

    PrintOri = staticmethod(PrintOri)

    def PrintPnt(*args) -> "void":
        """
        :param V:
        	:type V: TopoDS_Vertex
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintPnt(*args)

    PrintPnt = staticmethod(PrintPnt)

    def PrintSur(*args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Face
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintSur(*args)

    PrintSur = staticmethod(PrintSur)

    def RegularizeFace(self, *args) -> "void":
        """
        :param FF:
        	:type FF: TopoDS_Shape
        	:param newFace:
        	:type newFace: TopoDS_Shape
        	:param LOF:
        	:type LOF: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeFace(self, *args)


    def RegularizeFaces(self, *args) -> "void":
        """
        :param FF:
        	:type FF: TopoDS_Shape
        	:param lnewFace:
        	:type lnewFace: TopTools_ListOfShape
        	:param LOF:
        	:type LOF: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeFaces(self, *args)


    def RegularizeSolid(self, *args) -> "void":
        """
        :param SS:
        	:type SS: TopoDS_Shape
        	:param newSolid:
        	:type newSolid: TopoDS_Shape
        	:param LOS:
        	:type LOS: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeSolid(self, *args)


    def RegularizeSolids(self, *args) -> "void":
        """
        :param SS:
        	:type SS: TopoDS_Shape
        	:param lnewSolid:
        	:type lnewSolid: TopTools_ListOfShape
        	:param LOS:
        	:type LOS: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeSolids(self, *args)


    def Reverse(*args) -> "Standard_Boolean":
        """
        :param T1:
        	:type T1: TopAbs_State
        	:param T2:
        	:type T2: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Reverse(*args)

    Reverse = staticmethod(Reverse)

    def Section(self, *args) -> "TopTools_ListOfShape const &":
        """
        * return all section edges.
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        :rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Section(self, *args)


    def SectionCurves(self, *args) -> "void":
        """
        * return the section edges built on new curves.
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_SectionCurves(self, *args)


    def SectionEdges(self, *args) -> "void":
        """
        * return the parts of edges found ON the boundary of the two arguments S1,S2 of Perform()
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_SectionEdges(self, *args)


    def ShapePosition(self, *args) -> "TopAbs_State":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param LS:
        	:type LS: TopTools_ListOfShape
        	:rtype: TopAbs_State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_ShapePosition(self, *args)


    def ShapeRank(self, *args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_ShapeRank(self, *args)


    def SplitEvisoONperiodicF(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_SplitEvisoONperiodicF(self, *args)


    def SplitSectionEdge(self, *args) -> "void":
        """
        * create parts ON solid of section edges
        	:param E:
        	:type E: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_SplitSectionEdge(self, *args)


    def SplitSectionEdges(self, *args) -> "void":
        """
        * create parts ON solid of section edges
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_SplitSectionEdges(self, *args)


    def Splits(self, *args) -> "TopTools_ListOfShape const &":
        """
        * Returns the split parts <TB> of shape <S>.
        	:param S:
        	:type S: TopoDS_Shape
        	:param TB:
        	:type TB: TopAbs_State
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Splits(self, *args)


    def StringState(*args) -> "TCollection_AsciiString":
        """
        :param S:
        	:type S: TopAbs_State
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_StringState(*args)

    StringState = staticmethod(StringState)

    def __init__(self, *args):
        """
        :param BT:
        	:type BT: TopOpeBRepDS_BuildTool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Builder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Builder(*args))

    def TopType(*args) -> "TopAbs_ShapeEnum":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: TopAbs_ShapeEnum
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_TopType(*args)

    TopType = staticmethod(TopType)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Builder
TopOpeBRepBuild_Builder.AddONPatchesSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_AddONPatchesSFS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.BuildEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_BuildEdges, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.BuildTool = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_BuildTool, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.BuildVertices = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_BuildVertices, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.ChangeBuildTool = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeBuildTool, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.ChangeClassify = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeClassify, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.ChangeMSplit = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeMSplit, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.ChangeSplit = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeSplit, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Classify = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Classify, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Clear, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.ClearMaps = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ClearMaps, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.DataStructure = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_DataStructure, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.End = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_End, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.FillOnPatches = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FillOnPatches, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.FillSecEdgeAncestorMap = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FillSecEdgeAncestorMap, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.FindFacesTouchingEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindFacesTouchingEdge, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.FindIsKPart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindIsKPart, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.FindSameDomain = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindSameDomain, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.FindSameDomainSameOrientation = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindSameDomainSameOrientation, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.FindSameRank = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindSameRank, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GClearMaps = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GClearMaps, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GEDBUMakeEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GEDBUMakeEdges, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFABUMakeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFABUMakeFaces, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillCurveTopologyWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillCurveTopologyWES, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillEdgePVS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillEdgePVS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillEdgeWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillEdgeWES, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillEdgesPVS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillEdgesPVS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillFaceSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFaceSFS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillFaceWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFaceWES, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillFacesWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFacesWES, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillFacesWESK = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFacesWESK, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillFacesWESMakeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFacesWESMakeFaces, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillONPartsWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillONPartsWES, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillPointTopologyPVS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillPointTopologyPVS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillShellSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillShellSFS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillSolidSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillSolidSFS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillSolidsSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillSolidsSFS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillSurfaceTopologySFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillSurfaceTopologySFS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFillWireWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillWireWES, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFindSamDom = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFindSamDom, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFindSamDomSODO = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFindSamDomSODO, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GFindSameRank = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFindSameRank, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GIsShapeOf = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GIsShapeOf, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GKeepShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GKeepShape, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GKeepShape1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GKeepShape1, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GKeepShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GKeepShapes, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GMapShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMapShapes, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GMergeEdgeWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeEdgeWES, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GMergeEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeEdges, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GMergeFaceSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeFaceSFS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GMergeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeFaces, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GMergeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeSolids, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GPVSMakeEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GPVSMakeEdges, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GParamOnReference = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GParamOnReference, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GSFSMakeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSFSMakeSolids, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GSOBUMakeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSOBUMakeSolids, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GShapeRank = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GShapeRank, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GSplitEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitEdge, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GSplitEdgeWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitEdgeWES, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GSplitFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitFace, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GSplitFaceSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitFaceSFS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GToMerge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GToMerge, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GToSplit = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GToSplit, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GWESMakeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GWESMakeFaces, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpEDBU = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEDBU, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpEDG = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEDG, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpEDGVER = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEDGVER, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpEXP = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEXP, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpFABU = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpFABU, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpLS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpLS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpSAMDOM = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSAMDOM, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpSHA = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHA, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpSHAORI = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHAORI, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpSHAORIGEO = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHAORIGEO, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpSHASETindex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHASETindex, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpSHASETreset = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHASETreset, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpSHASTA = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHASTA, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GdumpSOBU = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSOBU, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.GtraceSPS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GtraceSPS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.InitSection = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_InitSection, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.IsKPart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsKPart, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.IsMerged = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsMerged, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.IsShapeOf = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsShapeOf, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.IsSplit = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsSplit, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPClearMaps = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPClearMaps, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPSameDomain = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPSameDomain, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPclasSS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPclasSS, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPclassF = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPclassF, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPclassFF = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPclassFF, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPisdisj = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisdisj, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPisdisjanalyse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisdisjanalyse, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPisdisjsh = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisdisjsh, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPisfafa = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisfafa, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPisfafash = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisfafash, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPiskole = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskole, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPiskoleFF = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoleFF, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPiskoleanalyse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoleanalyse, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPiskolesh = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskolesh, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPiskoletge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoletge, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPiskoletgeanalyse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoletgeanalyse, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPiskoletgesh = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoletgesh, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPissoso = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPissoso, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPissososh = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPissososh, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPlhg = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPlhg, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPlhsd = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPlhsd, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KPmakeface = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPmakeface, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.KeepShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KeepShape, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MSplit = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MSplit, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MakeEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeEdges, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MakeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeFaces, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MakeShells = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeShells, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MakeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeSolids, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MapShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MapShapes, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeEdges, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeFaces, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeKPart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPart, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeKPartisdisj = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartisdisj, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeKPartisfafa = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartisfafa, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeKPartiskole = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartiskole, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeKPartiskoletge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartiskoletge, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeKPartissoso = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartissoso, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeShapes, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeSolid, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.MergeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeSolids, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Merged = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Merged, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.NewEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_NewEdges, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.NewFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_NewFaces, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.NewVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_NewVertex, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Opec12 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opec12, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Opec21 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opec21, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Opecom = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opecom, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Opefus = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opefus, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Perform = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Perform, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.RegularizeFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeFace, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.RegularizeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeFaces, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.RegularizeSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeSolid, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.RegularizeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeSolids, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Section = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Section, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.SectionCurves = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SectionCurves, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.SectionEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SectionEdges, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.ShapePosition = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ShapePosition, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.ShapeRank = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ShapeRank, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.SplitEvisoONperiodicF = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SplitEvisoONperiodicF, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.SplitSectionEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SplitSectionEdge, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.SplitSectionEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SplitSectionEdges, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder.Splits = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Splits, None, TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_swigregister
TopOpeBRepBuild_Builder_swigregister(TopOpeBRepBuild_Builder)

def TopOpeBRepBuild_Builder_Contains(*args) -> "Standard_Boolean":
    """
    :param S:
    	:type S: TopoDS_Shape
    	:param L:
    	:type L: TopTools_ListOfShape
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Contains(*args)

def TopOpeBRepBuild_Builder_GContains(*args) -> "Standard_Boolean":
    """
    :param S:
    	:type S: TopoDS_Shape
    	:param L:
    	:type L: TopTools_ListOfShape
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GContains(*args)

def TopOpeBRepBuild_Builder_GCopyList(*args) -> "void":
    """
    :param Lin:
    	:type Lin: TopTools_ListOfShape
    	:param i1:
    	:type i1: int
    	:param i2:
    	:type i2: int
    	:param Lou:
    	:type Lou: TopTools_ListOfShape
    	:rtype: void
    :param Lin:
    	:type Lin: TopTools_ListOfShape
    	:param Lou:
    	:type Lou: TopTools_ListOfShape
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GCopyList(*args)

def TopOpeBRepBuild_Builder_GTakeCommonOfDiff(*args) -> "Standard_Boolean":
    """
    :param G:
    	:type G: TopOpeBRepBuild_GTopo
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GTakeCommonOfDiff(*args)

def TopOpeBRepBuild_Builder_GTakeCommonOfSame(*args) -> "Standard_Boolean":
    """
    :param G:
    	:type G: TopOpeBRepBuild_GTopo
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GTakeCommonOfSame(*args)

def TopOpeBRepBuild_Builder_GcheckNBOUNDS(*args) -> "Standard_Boolean":
    """
    :param E:
    	:type E: TopoDS_Shape
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GcheckNBOUNDS(*args)

def TopOpeBRepBuild_Builder_GdumpORIPARPNT(*args) -> "void":
    """
    :param o:
    	:type o: TopAbs_Orientation
    	:param p:
    	:type p: float
    	:param Pnt:
    	:type Pnt: gp_Pnt
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpORIPARPNT(*args)

def TopOpeBRepBuild_Builder_GdumpPNT(*args) -> "void":
    """
    :param P:
    	:type P: gp_Pnt
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpPNT(*args)

def TopOpeBRepBuild_Builder_KPContains(*args) -> "Standard_Boolean":
    """
    :param S:
    	:type S: TopoDS_Shape
    	:param L:
    	:type L: TopTools_ListOfShape
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPContains(*args)

def TopOpeBRepBuild_Builder_KPls(*args) -> "Standard_Integer":
    """
    :param S:
    	:type S: TopoDS_Shape
    	:param T:
    	:type T: TopAbs_ShapeEnum
    	:param L:
    	:type L: TopTools_ListOfShape
    	:rtype: int
    :param S:
    	:type S: TopoDS_Shape
    	:param T:
    	:type T: TopAbs_ShapeEnum
    	:rtype: int
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPls(*args)

def TopOpeBRepBuild_Builder_KPreturn(*args) -> "Standard_Integer":
    """
    :param KP:
    	:type KP: int
    	:rtype: int
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPreturn(*args)

def TopOpeBRepBuild_Builder_Orient(*args) -> "TopAbs_Orientation":
    """
    :param O:
    	:type O: TopAbs_Orientation
    	:param R:
    	:type R: bool
    	:rtype: TopAbs_Orientation
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Orient(*args)

def TopOpeBRepBuild_Builder_PrintCur(*args) -> "void":
    """
    :param E:
    	:type E: TopoDS_Edge
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintCur(*args)

def TopOpeBRepBuild_Builder_PrintGeo(*args) -> "void":
    """
    :param S:
    	:type S: TopoDS_Shape
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintGeo(*args)

def TopOpeBRepBuild_Builder_PrintOri(*args) -> "void":
    """
    :param S:
    	:type S: TopoDS_Shape
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintOri(*args)

def TopOpeBRepBuild_Builder_PrintPnt(*args) -> "void":
    """
    :param V:
    	:type V: TopoDS_Vertex
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintPnt(*args)

def TopOpeBRepBuild_Builder_PrintSur(*args) -> "void":
    """
    :param F:
    	:type F: TopoDS_Face
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintSur(*args)

def TopOpeBRepBuild_Builder_Reverse(*args) -> "Standard_Boolean":
    """
    :param T1:
    	:type T1: TopAbs_State
    	:param T2:
    	:type T2: TopAbs_State
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Reverse(*args)

def TopOpeBRepBuild_Builder_StringState(*args) -> "TCollection_AsciiString":
    """
    :param S:
    	:type S: TopAbs_State
    	:rtype: TCollection_AsciiString
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_StringState(*args)

def TopOpeBRepBuild_Builder_TopType(*args) -> "TopAbs_ShapeEnum":
    """
    :param S:
    	:type S: TopoDS_Shape
    	:rtype: TopAbs_ShapeEnum
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Builder_TopType(*args)

class TopOpeBRepBuild_BuilderON(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GFillONCheckI(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONCheckI(self, *args)


    def GFillONParts2dWES2(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param EspON:
        	:type EspON: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONParts2dWES2(self, *args)


    def GFillONPartsWES1(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES1(self, *args)


    def GFillONPartsWES2(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param EspON:
        	:type EspON: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES2(self, *args)


    def Perform(self, *args) -> "void":
        """
        :param PB:
        	:type PB: TopOpeBRepBuild_PBuilder
        	:param F:
        	:type F: TopoDS_Shape
        	:param PG:
        	:type PG: TopOpeBRepBuild_PGTopo
        	:param PLSclass:
        	:type PLSclass: TopOpeBRepTool_Plos
        	:param PWES:
        	:type PWES: TopOpeBRepBuild_PWireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform(self, *args)


    def Perform2d(self, *args) -> "void":
        """
        :param PB:
        	:type PB: TopOpeBRepBuild_PBuilder
        	:param F:
        	:type F: TopoDS_Shape
        	:param PG:
        	:type PG: TopOpeBRepBuild_PGTopo
        	:param PLSclass:
        	:type PLSclass: TopOpeBRepTool_Plos
        	:param PWES:
        	:type PWES: TopOpeBRepBuild_PWireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform2d(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param PB:
        	:type PB: TopOpeBRepBuild_PBuilder
        	:param F:
        	:type F: TopoDS_Shape
        	:param PG:
        	:type PG: TopOpeBRepBuild_PGTopo
        	:param PLSclass:
        	:type PLSclass: TopOpeBRepTool_Plos
        	:param PWES:
        	:type PWES: TopOpeBRepBuild_PWireEdgeSet
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_BuilderON(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_BuilderON
TopOpeBRepBuild_BuilderON.GFillONCheckI = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONCheckI, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.GFillONParts2dWES2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONParts2dWES2, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.GFillONPartsWES1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES1, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.GFillONPartsWES2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES2, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.Perform = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.Perform2d = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform2d, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_swigregister
TopOpeBRepBuild_BuilderON_swigregister(TopOpeBRepBuild_BuilderON)

class TopOpeBRepBuild_CorrectFace2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CheckList(*args) -> "void":
        """
        :param aFace:
        	:type aFace: TopoDS_Face
        	:param aHeadList:
        	:type aHeadList: TopTools_ListOfShape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CheckList(*args)

    CheckList = staticmethod(CheckList)

    def CorrectedFace(self, *args) -> "TopoDS_Face const":
        """:rtype: TopoDS_Face"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CorrectedFace(self, *args)


    def ErrorStatus(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_ErrorStatus(self, *args)


    def Face(self, *args) -> "TopoDS_Face const":
        """:rtype: TopoDS_Face"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Face(self, *args)


    def GetP2dFL(*args) -> "void":
        """
        :param aFace:
        	:type aFace: TopoDS_Face
        	:param anEdge:
        	:type anEdge: TopoDS_Edge
        	:param P2dF:
        	:type P2dF: gp_Pnt2d
        	:param P2dL:
        	:type P2dL: gp_Pnt2d
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_GetP2dFL(*args)

    GetP2dFL = staticmethod(GetP2dFL)

    def IsDone(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_IsDone(self, *args)


    def MapOfTrans2dInfo(self, *args) -> "TopTools_IndexedDataMapOfShapeShape &":
        """:rtype: TopTools_IndexedDataMapOfShapeShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_MapOfTrans2dInfo(self, *args)


    def Perform(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Perform(self, *args)


    def SetMapOfTrans2dInfo(self, *args) -> "void":
        """
        :param aMap:
        	:type aMap: TopTools_IndexedDataMapOfShapeShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_SetMapOfTrans2dInfo(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aFace:
        	:type aFace: TopoDS_Face
        	:param anAvoidMap:
        	:type anAvoidMap: TopTools_IndexedMapOfOrientedShape
        	:param aMap:
        	:type aMap: TopTools_IndexedDataMapOfShapeShape
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_CorrectFace2d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_CorrectFace2d
TopOpeBRepBuild_CorrectFace2d.CorrectedFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CorrectedFace, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.ErrorStatus = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_ErrorStatus, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.Face = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Face, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.IsDone = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_IsDone, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.MapOfTrans2dInfo = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_MapOfTrans2dInfo, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.Perform = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Perform, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.SetMapOfTrans2dInfo = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_SetMapOfTrans2dInfo, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_swigregister
TopOpeBRepBuild_CorrectFace2d_swigregister(TopOpeBRepBuild_CorrectFace2d)

def TopOpeBRepBuild_CorrectFace2d_CheckList(*args) -> "void":
    """
    :param aFace:
    	:type aFace: TopoDS_Face
    	:param aHeadList:
    	:type aHeadList: TopTools_ListOfShape
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CheckList(*args)

def TopOpeBRepBuild_CorrectFace2d_GetP2dFL(*args) -> "void":
    """
    :param aFace:
    	:type aFace: TopoDS_Face
    	:param anEdge:
    	:type anEdge: TopoDS_Edge
    	:param P2dF:
    	:type P2dF: gp_Pnt2d
    	:param P2dL:
    	:type P2dL: gp_Pnt2d
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_GetP2dFL(*args)

class TopOpeBRepBuild_FaceBuilder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddEdgeWire(self, *args) -> "Standard_Integer":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param W:
        	:type W: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_AddEdgeWire(self, *args)


    def CorrectGclosedWire(self, *args) -> "void":
        """
        * Using the given maps, change the topology of the 3d-closed wires, in order to get closed wires.
        	:param mapVVref:
        	:type mapVVref: TopTools_IndexedDataMapOfShapeShape
        	:param mapVon1Edge:
        	:type mapVon1Edge: TopTools_IndexedDataMapOfShapeShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_CorrectGclosedWire(self, *args)


    def DetectPseudoInternalEdge(self, *args) -> "void":
        """
        * Removes edges appearing twice (FORWARD,REVERSED) with a bounding vertex not connected to any other edge. mapE contains edges found. modifies myBlockBuilder.
        	:param mapE:
        	:type mapE: TopTools_IndexedMapOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectPseudoInternalEdge(self, *args)


    def DetectUnclosedWire(self, *args) -> "void":
        """
        * Removes are non 3d-closed wires. Fills up maps <mapVVsameG> and <mapVon1Edge>, in order to correct 3d-closed but unclosed (topologic connexity) wires. modifies myBlockBuilder
        	:param mapVVsameG:
        	:type mapVVsameG: TopTools_IndexedDataMapOfShapeShape
        	:param mapVon1Edge:
        	:type mapVon1Edge: TopTools_IndexedDataMapOfShapeShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectUnclosedWire(self, *args)


    def Edge(self, *args) -> "TopoDS_Shape const":
        """
        * Returns current new edge of current new wire.
        	:rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Edge(self, *args)


    def EdgeConnexity(self, *args) -> "Standard_Integer":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_EdgeConnexity(self, *args)


    def Face(self, *args) -> "TopoDS_Shape const":
        """
        * return myFace
        	:rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Face(self, *args)


    def FindNextValidElement(self, *args) -> "void":
        """
        * Iterates on myBlockIterator until finding a valid element
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_FindNextValidElement(self, *args)


    def InitEdge(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitEdge(self, *args)


    def InitFace(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFace(self, *args)


    def InitFaceBuilder(self, *args) -> "void":
        """
        :param ES:
        	:type ES: TopOpeBRepBuild_WireEdgeSet
        	:param F:
        	:type F: TopoDS_Shape
        	:param ForceClass:
        	:type ForceClass: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFaceBuilder(self, *args)


    def InitWire(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitWire(self, *args)


    def IsOldWire(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_IsOldWire(self, *args)


    def MoreEdge(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreEdge(self, *args)


    def MoreFace(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreFace(self, *args)


    def MoreWire(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreWire(self, *args)


    def NextEdge(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextEdge(self, *args)


    def NextFace(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextFace(self, *args)


    def NextWire(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextWire(self, *args)


    def OldWire(self, *args) -> "TopoDS_Shape const":
        """
        * Returns current wire This wire may be : * an old wire OldWire(), which has not been reconstructed; * a new wire made of edges described by ...NewEdge() methods.
        	:rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_OldWire(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        * Create a FaceBuilder to build the faces on the shapes (wires, blocks of edge) described by <LS>.
        	:param ES:
        	:type ES: TopOpeBRepBuild_WireEdgeSet
        	:param F:
        	:type F: TopoDS_Shape
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_FaceBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_FaceBuilder
TopOpeBRepBuild_FaceBuilder.AddEdgeWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_AddEdgeWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.CorrectGclosedWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_CorrectGclosedWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.DetectPseudoInternalEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectPseudoInternalEdge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.DetectUnclosedWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectUnclosedWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.Edge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Edge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.EdgeConnexity = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_EdgeConnexity, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.Face = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Face, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.FindNextValidElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_FindNextValidElement, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.InitEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitEdge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.InitFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFace, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.InitFaceBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFaceBuilder, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.InitWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.IsOldWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_IsOldWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.MoreEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreEdge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.MoreFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreFace, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.MoreWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.NextEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextEdge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.NextFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextFace, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.NextWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.OldWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_OldWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_swigregister
TopOpeBRepBuild_FaceBuilder_swigregister(TopOpeBRepBuild_FaceBuilder)

class TopOpeBRepBuild_FuseFace(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ClearEdge(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearEdge(self, *args)


    def ClearVertex(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearVertex(self, *args)


    def Init(self, *args) -> "void":
        """
        :param LIF:
        	:type LIF: TopTools_ListOfShape
        	:param LRF:
        	:type LRF: TopTools_ListOfShape
        	:param CXM:
        	:type CXM: int
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_Init(self, *args)


    def IsDone(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsDone(self, *args)


    def IsModified(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsModified(self, *args)


    def LExternEdge(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternEdge(self, *args)


    def LExternVertex(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternVertex(self, *args)


    def LFuseFace(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LFuseFace(self, *args)


    def LInternEdge(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternEdge(self, *args)


    def LInternVertex(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternVertex(self, *args)


    def LModifEdge(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifEdge(self, *args)


    def LModifVertex(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifVertex(self, *args)


    def PerformEdge(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformEdge(self, *args)


    def PerformFace(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformFace(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param LIF:
        	:type LIF: TopTools_ListOfShape
        	:param LRF:
        	:type LRF: TopTools_ListOfShape
        	:param CXM:
        	:type CXM: int
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_FuseFace(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_FuseFace
TopOpeBRepBuild_FuseFace.ClearEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.ClearVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearVertex, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.Init = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_Init, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.IsDone = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsDone, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.IsModified = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsModified, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LExternEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LExternVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternVertex, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LFuseFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LFuseFace, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LInternEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LInternVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternVertex, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LModifEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LModifVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifVertex, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.PerformEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.PerformFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformFace, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_swigregister
TopOpeBRepBuild_FuseFace_swigregister(TopOpeBRepBuild_FuseFace)

class TopOpeBRepBuild_GIter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Current(self, *args) -> "void":
        """
        :param s1:
        	:type s1: TopAbs_State
        	:param s2:
        	:type s2: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_Current(self, *args)


    def DumpToString(self) -> "std::string":
        """DumpToString(TopOpeBRepBuild_GIter self) -> std::string"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_DumpToString(self)


    def Init(self, *args) -> "void":
        """
        :rtype: None
        :param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_Init(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_More(self, *args)


    def Next(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_Next(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_GIter_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_GIter(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_GIter
TopOpeBRepBuild_GIter.Current = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_Current, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter.DumpToString = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_DumpToString, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter.Init = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_Init, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_More, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_Next, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_GIter_swigregister
TopOpeBRepBuild_GIter_swigregister(TopOpeBRepBuild_GIter)

class TopOpeBRepBuild_GTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DumpToString(self) -> "std::string":
        """DumpToString(TopOpeBRepBuild_GTool self) -> std::string"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_DumpToString(self)


    def GComDiff(*args) -> "TopOpeBRepBuild_GTopo":
        """
        :param s1:
        	:type s1: TopAbs_ShapeEnum
        	:param s2:
        	:type s2: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepBuild_GTopo
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComDiff(*args)

    GComDiff = staticmethod(GComDiff)

    def GComSame(*args) -> "TopOpeBRepBuild_GTopo":
        """
        :param s1:
        	:type s1: TopAbs_ShapeEnum
        	:param s2:
        	:type s2: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepBuild_GTopo
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComSame(*args)

    GComSame = staticmethod(GComSame)

    def GComUnsh(*args) -> "TopOpeBRepBuild_GTopo":
        """
        :param s1:
        	:type s1: TopAbs_ShapeEnum
        	:param s2:
        	:type s2: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepBuild_GTopo
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComUnsh(*args)

    GComUnsh = staticmethod(GComUnsh)

    def GCutDiff(*args) -> "TopOpeBRepBuild_GTopo":
        """
        :param s1:
        	:type s1: TopAbs_ShapeEnum
        	:param s2:
        	:type s2: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepBuild_GTopo
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutDiff(*args)

    GCutDiff = staticmethod(GCutDiff)

    def GCutSame(*args) -> "TopOpeBRepBuild_GTopo":
        """
        :param s1:
        	:type s1: TopAbs_ShapeEnum
        	:param s2:
        	:type s2: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepBuild_GTopo
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutSame(*args)

    GCutSame = staticmethod(GCutSame)

    def GCutUnsh(*args) -> "TopOpeBRepBuild_GTopo":
        """
        :param s1:
        	:type s1: TopAbs_ShapeEnum
        	:param s2:
        	:type s2: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepBuild_GTopo
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutUnsh(*args)

    GCutUnsh = staticmethod(GCutUnsh)

    def GFusDiff(*args) -> "TopOpeBRepBuild_GTopo":
        """
        :param s1:
        	:type s1: TopAbs_ShapeEnum
        	:param s2:
        	:type s2: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepBuild_GTopo
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusDiff(*args)

    GFusDiff = staticmethod(GFusDiff)

    def GFusSame(*args) -> "TopOpeBRepBuild_GTopo":
        """
        :param s1:
        	:type s1: TopAbs_ShapeEnum
        	:param s2:
        	:type s2: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepBuild_GTopo
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusSame(*args)

    GFusSame = staticmethod(GFusSame)

    def GFusUnsh(*args) -> "TopOpeBRepBuild_GTopo":
        """
        :param s1:
        	:type s1: TopAbs_ShapeEnum
        	:param s2:
        	:type s2: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepBuild_GTopo
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusUnsh(*args)

    GFusUnsh = staticmethod(GFusUnsh)

    __repr__ = _dumps_object


    def __init__(self):
        """__init__(TopOpeBRepBuild_GTool self) -> TopOpeBRepBuild_GTool"""
        _TopOpeBRepBuild.TopOpeBRepBuild_GTool_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_GTool())
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_GTool
TopOpeBRepBuild_GTool.DumpToString = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_DumpToString, None, TopOpeBRepBuild_GTool)
TopOpeBRepBuild_GTool_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_swigregister
TopOpeBRepBuild_GTool_swigregister(TopOpeBRepBuild_GTool)

def TopOpeBRepBuild_GTool_GComDiff(*args) -> "TopOpeBRepBuild_GTopo":
    """
    :param s1:
    	:type s1: TopAbs_ShapeEnum
    	:param s2:
    	:type s2: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepBuild_GTopo
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComDiff(*args)

def TopOpeBRepBuild_GTool_GComSame(*args) -> "TopOpeBRepBuild_GTopo":
    """
    :param s1:
    	:type s1: TopAbs_ShapeEnum
    	:param s2:
    	:type s2: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepBuild_GTopo
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComSame(*args)

def TopOpeBRepBuild_GTool_GComUnsh(*args) -> "TopOpeBRepBuild_GTopo":
    """
    :param s1:
    	:type s1: TopAbs_ShapeEnum
    	:param s2:
    	:type s2: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepBuild_GTopo
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComUnsh(*args)

def TopOpeBRepBuild_GTool_GCutDiff(*args) -> "TopOpeBRepBuild_GTopo":
    """
    :param s1:
    	:type s1: TopAbs_ShapeEnum
    	:param s2:
    	:type s2: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepBuild_GTopo
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutDiff(*args)

def TopOpeBRepBuild_GTool_GCutSame(*args) -> "TopOpeBRepBuild_GTopo":
    """
    :param s1:
    	:type s1: TopAbs_ShapeEnum
    	:param s2:
    	:type s2: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepBuild_GTopo
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutSame(*args)

def TopOpeBRepBuild_GTool_GCutUnsh(*args) -> "TopOpeBRepBuild_GTopo":
    """
    :param s1:
    	:type s1: TopAbs_ShapeEnum
    	:param s2:
    	:type s2: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepBuild_GTopo
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutUnsh(*args)

def TopOpeBRepBuild_GTool_GFusDiff(*args) -> "TopOpeBRepBuild_GTopo":
    """
    :param s1:
    	:type s1: TopAbs_ShapeEnum
    	:param s2:
    	:type s2: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepBuild_GTopo
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusDiff(*args)

def TopOpeBRepBuild_GTool_GFusSame(*args) -> "TopOpeBRepBuild_GTopo":
    """
    :param s1:
    	:type s1: TopAbs_ShapeEnum
    	:param s2:
    	:type s2: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepBuild_GTopo
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusSame(*args)

def TopOpeBRepBuild_GTool_GFusUnsh(*args) -> "TopOpeBRepBuild_GTopo":
    """
    :param s1:
    	:type s1: TopAbs_ShapeEnum
    	:param s2:
    	:type s2: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepBuild_GTopo
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusUnsh(*args)

class TopOpeBRepBuild_GTopo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeConfig(self, *args) -> "void":
        """
        :param C1:
        	:type C1: TopOpeBRepDS_Config
        	:param C2:
        	:type C2: TopOpeBRepDS_Config
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeConfig(self, *args)


    def ChangeType(self, *args) -> "void":
        """
        :param t1:
        	:type t1: TopAbs_ShapeEnum
        	:param t2:
        	:type t2: TopAbs_ShapeEnum
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeType(self, *args)


    def ChangeValue(self, *args) -> "void":
        """
        :param i1:
        	:type i1: int
        	:param i2:
        	:type i2: int
        	:param b:
        	:type b: bool
        	:rtype: None
        :param s1:
        	:type s1: TopAbs_State
        	:param s2:
        	:type s2: TopAbs_State
        	:param b:
        	:type b: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeValue(self, *args)


    def Config1(self, *args) -> "TopOpeBRepDS_Config":
        """:rtype: TopOpeBRepDS_Config"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config1(self, *args)


    def Config2(self, *args) -> "TopOpeBRepDS_Config":
        """:rtype: TopOpeBRepDS_Config"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config2(self, *args)


    def CopyPermuted(self, *args) -> "TopOpeBRepBuild_GTopo":
        """:rtype: TopOpeBRepBuild_GTopo"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_CopyPermuted(self, *args)


    def Dump(self, *args) -> "void":
        """
        :param OS:
        	:type OS: Standard_OStream
        	:param s: default value is NULL
        	:type s: Standard_Address
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Dump(self, *args)


    def DumpSSB(*args) -> "void":
        """
        :param OS:
        	:type OS: Standard_OStream
        	:param s1:
        	:type s1: TopAbs_State
        	:param s2:
        	:type s2: TopAbs_State
        	:param b:
        	:type b: bool
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpSSB(*args)

    DumpSSB = staticmethod(DumpSSB)

    def DumpTypeToString(self) -> "std::string":
        """DumpTypeToString(TopOpeBRepBuild_GTopo self) -> std::string"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpTypeToString(self)


    def DumpVal(self, *args) -> "void":
        """
        :param OS:
        	:type OS: Standard_OStream
        	:param s1:
        	:type s1: TopAbs_State
        	:param s2:
        	:type s2: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpVal(self, *args)


    def GIndex(self, *args) -> "Standard_Integer":
        """
        :param S:
        	:type S: TopAbs_State
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GIndex(self, *args)


    def GState(self, *args) -> "TopAbs_State":
        """
        :param I:
        	:type I: int
        	:rtype: TopAbs_State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GState(self, *args)


    def Index(self, *args) -> "void":
        """
        :param II:
        	:type II: int
        	:param i1:
        	:type i1: int
        	:param i2:
        	:type i2: int
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Index(self, *args)


    def IsToReverse1(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse1(self, *args)


    def IsToReverse2(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse2(self, *args)


    def Reset(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reset(self, *args)


    def Reverse(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reverse(self, *args)


    def Set(self, *args) -> "void":
        """
        :param II:
        	:type II: bool
        	:param IN:
        	:type IN: bool
        	:param IO:
        	:type IO: bool
        	:param NI:
        	:type NI: bool
        	:param NN:
        	:type NN: bool
        	:param NO:
        	:type NO: bool
        	:param OI:
        	:type OI: bool
        	:param ON:
        	:type ON: bool
        	:param OO:
        	:type OO: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Set(self, *args)


    def SetReverse(self, *args) -> "void":
        """
        :param rev:
        	:type rev: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_SetReverse(self, *args)


    def StatesON(self, *args) -> "void":
        """
        :param s1:
        	:type s1: TopAbs_State
        	:param s2:
        	:type s2: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_StatesON(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param II:
        	:type II: bool
        	:param IN:
        	:type IN: bool
        	:param IO:
        	:type IO: bool
        	:param NI:
        	:type NI: bool
        	:param NN:
        	:type NN: bool
        	:param NO:
        	:type NO: bool
        	:param OI:
        	:type OI: bool
        	:param ON:
        	:type ON: bool
        	:param OO:
        	:type OO: bool
        	:param t1:
        	:type t1: TopAbs_ShapeEnum
        	:param t2:
        	:type t2: TopAbs_ShapeEnum
        	:param C1:
        	:type C1: TopOpeBRepDS_Config
        	:param C2:
        	:type C2: TopOpeBRepDS_Config
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_GTopo(*args))

    def Type(self, *args) -> "void":
        """
        :param t1:
        	:type t1: TopAbs_ShapeEnum
        	:param t2:
        	:type t2: TopAbs_ShapeEnum
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Type(self, *args)


    def Value(self, *args) -> "Standard_Boolean":
        """
        :param s1:
        	:type s1: TopAbs_State
        	:param s2:
        	:type s2: TopAbs_State
        	:rtype: bool
        :param I1:
        	:type I1: int
        	:param I2:
        	:type I2: int
        	:rtype: bool
        :param II:
        	:type II: int
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_GTopo
TopOpeBRepBuild_GTopo.ChangeConfig = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeConfig, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.ChangeType = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeType, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.ChangeValue = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeValue, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Config1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config1, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Config2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config2, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.CopyPermuted = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_CopyPermuted, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Dump = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Dump, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.DumpTypeToString = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpTypeToString, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.DumpVal = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpVal, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.GIndex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GIndex, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.GState = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GState, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Index = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Index, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.IsToReverse1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse1, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.IsToReverse2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse2, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Reset = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reset, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Reverse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reverse, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Set, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.SetReverse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_SetReverse, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.StatesON = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_StatesON, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Type = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Type, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Value, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_swigregister
TopOpeBRepBuild_GTopo_swigregister(TopOpeBRepBuild_GTopo)

def TopOpeBRepBuild_GTopo_DumpSSB(*args) -> "void":
    """
    :param OS:
    	:type OS: Standard_OStream
    	:param s1:
    	:type s1: TopAbs_State
    	:param s2:
    	:type s2: TopAbs_State
    	:param b:
    	:type b: bool
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpSSB(*args)

class TopOpeBRepBuild_HBuilder(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BuildTool(self, *args) -> "TopOpeBRepDS_BuildTool const &":
        """:rtype: TopOpeBRepDS_BuildTool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_BuildTool(self, *args)


    def ChangeBuildTool(self, *args) -> "TopOpeBRepDS_BuildTool &":
        """:rtype: TopOpeBRepDS_BuildTool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuildTool(self, *args)


    def ChangeBuilder(self, *args) -> "TopOpeBRepBuild_Builder &":
        """:rtype: TopOpeBRepBuild_Builder"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuilder(self, *args)


    def ChangeNewEdges(self, *args) -> "TopTools_ListOfShape &":
        """
        * Returns the edges created on curve <I>.
        	:param I:
        	:type I: int
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeNewEdges(self, *args)


    def Clear(self, *args) -> "void":
        """
        * Removes all split and merge already performed. Does NOT clear the handled DS.
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Clear(self, *args)


    def CurrentSection(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_CurrentSection(self, *args)


    def DataStructure(self, *args) -> "opencascade::handle< TopOpeBRepDS_HDataStructure >":
        """
        * returns the DS handled by this builder
        	:rtype: opencascade::handle<TopOpeBRepDS_HDataStructure>
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_DataStructure(self, *args)


    def EdgeCurveAncestors(self, *args) -> "Standard_Boolean":
        """
        * search for the couple of face F1,F2 (from arguments of supra Perform(S1,S2,HDS)) method which intersection gives section edge E built on an intersection curve. returns True if F1,F2 have been valued. returns False if E is not a section edge built on intersection curve IC.
        	:param E:
        	:type E: TopoDS_Shape
        	:param F1:
        	:type F1: TopoDS_Shape
        	:param F2:
        	:type F2: TopoDS_Shape
        	:param IC:
        	:type IC: int
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeCurveAncestors(self, *args)


    def EdgeSectionAncestors(self, *args) -> "Standard_Boolean":
        """
        * search for the couple of face F1,F2 (from arguments of supra Perform(S1,S2,HDS)) method which intersection gives section edge E built on at least one edge . returns True if F1,F2 have been valued. returns False if E is not a section edge built on at least one edge of S1 and/or S2. LE1,LE2 are edges of S1,S2 which common part is edge E. LE1 or LE2 may be empty() but not both.
        	:param E:
        	:type E: TopoDS_Shape
        	:param LF1:
        	:type LF1: TopTools_ListOfShape
        	:param LF2:
        	:type LF2: TopTools_ListOfShape
        	:param LE1:
        	:type LE1: TopTools_ListOfShape
        	:param LE2:
        	:type LE2: TopTools_ListOfShape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeSectionAncestors(self, *args)


    def GetDSCurveFromSectEdge(self, *args) -> "Standard_Integer":
        """
        :param SectEdge:
        	:type SectEdge: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSCurveFromSectEdge(self, *args)


    def GetDSEdgeFromSectEdge(self, *args) -> "Standard_Integer":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param rank:
        	:type rank: int
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSEdgeFromSectEdge(self, *args)


    def GetDSFaceFromDSCurve(self, *args) -> "Standard_Integer":
        """
        :param indexCur:
        	:type indexCur: int
        	:param rank:
        	:type rank: int
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSCurve(self, *args)


    def GetDSFaceFromDSEdge(self, *args) -> "TColStd_ListOfInteger &":
        """
        :param indexEdg:
        	:type indexEdg: int
        	:param rank:
        	:type rank: int
        	:rtype: TColStd_ListOfInteger
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSEdge(self, *args)


    def GetDSPointFromNewVertex(self, *args) -> "Standard_Integer":
        """
        :param NewVert:
        	:type NewVert: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSPointFromNewVertex(self, *args)


    def InitExtendedSectionDS(self, *args) -> "void":
        """
        :param k: default value is 3
        	:type k: int
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitExtendedSectionDS(self, *args)


    def InitSection(self, *args) -> "void":
        """
        :param k: default value is 3
        	:type k: int
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitSection(self, *args)


    def IsKPart(self, *args) -> "Standard_Integer":
        """
        * Returns 0 is standard operation, != 0 if particular case
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsKPart(self, *args)


    def IsMerged(self, *args) -> "Standard_Boolean":
        """
        * Returns True if the shape <S> has been merged.
        	:param S:
        	:type S: TopoDS_Shape
        	:param ToBuild:
        	:type ToBuild: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsMerged(self, *args)


    def IsSplit(self, *args) -> "Standard_Boolean":
        """
        * Returns True if the shape <S> has been split.
        	:param S:
        	:type S: TopoDS_Shape
        	:param ToBuild:
        	:type ToBuild: TopAbs_State
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsSplit(self, *args)


    def MergeKPart(self, *args) -> "void":
        """
        :param TB1:
        	:type TB1: TopAbs_State
        	:param TB2:
        	:type TB2: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeKPart(self, *args)


    def MergeShapes(self, *args) -> "void":
        """
        * Merges the two shapes <S1> and <S2> keeping the parts of states <TB1>,<TB2> in <S1>,<S2>.
        	:param S1:
        	:type S1: TopoDS_Shape
        	:param TB1:
        	:type TB1: TopAbs_State
        	:param S2:
        	:type S2: TopoDS_Shape
        	:param TB2:
        	:type TB2: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeShapes(self, *args)


    def MergeSolid(self, *args) -> "void":
        """
        * Merges the solid <S> keeping the parts of state <TB>.
        	:param S:
        	:type S: TopoDS_Shape
        	:param TB:
        	:type TB: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolid(self, *args)


    def MergeSolids(self, *args) -> "void":
        """
        * Merges the two solids <S1> and <S2> keeping the parts in each solid of states <TB1> and <TB2>.
        	:param S1:
        	:type S1: TopoDS_Shape
        	:param TB1:
        	:type TB1: TopAbs_State
        	:param S2:
        	:type S2: TopoDS_Shape
        	:param TB2:
        	:type TB2: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolids(self, *args)


    def Merged(self, *args) -> "TopTools_ListOfShape const &":
        """
        * Returns the merged parts <ToBuild> of shape <S>.
        	:param S:
        	:type S: TopoDS_Shape
        	:param ToBuild:
        	:type ToBuild: TopAbs_State
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Merged(self, *args)


    def MoreSection(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MoreSection(self, *args)


    def NewEdges(self, *args) -> "TopTools_ListOfShape const &":
        """
        * Returns the edges created on curve <I>.
        	:param I:
        	:type I: int
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewEdges(self, *args)


    def NewFaces(self, *args) -> "TopTools_ListOfShape const &":
        """
        * Returns the faces created on surface <I>.
        	:param I:
        	:type I: int
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewFaces(self, *args)


    def NewVertex(self, *args) -> "TopoDS_Shape const":
        """
        * Returns the vertex created on point <I>.
        	:param I:
        	:type I: int
        	:rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewVertex(self, *args)


    def NextSection(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NextSection(self, *args)


    def Perform(self, *args) -> "void":
        """
        * Stores the data structure <HDS>, Create shapes from the new geometries described in <HDS>.
        	:param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        * Same as previous + evaluates if an operation performed on shapes S1,S2 is a particular case.
        	:param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Perform(self, *args)


    def Section(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Section(self, *args)


    def Splits(self, *args) -> "TopTools_ListOfShape const &":
        """
        * Returns the split parts <ToBuild> of shape <S>.
        	:param S:
        	:type S: TopoDS_Shape
        	:param ToBuild:
        	:type ToBuild: TopAbs_State
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Splits(self, *args)


    def __init__(self, *args):
        """
        :param BT:
        	:type BT: TopOpeBRepDS_BuildTool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_HBuilder(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepBuild_HBuilder_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_HBuilder
TopOpeBRepBuild_HBuilder.BuildTool = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_BuildTool, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.ChangeBuildTool = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuildTool, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.ChangeBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuilder, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.ChangeNewEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeNewEdges, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Clear, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.CurrentSection = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_CurrentSection, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.DataStructure = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_DataStructure, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.EdgeCurveAncestors = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeCurveAncestors, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.EdgeSectionAncestors = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeSectionAncestors, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSCurveFromSectEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSCurveFromSectEdge, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSEdgeFromSectEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSEdgeFromSectEdge, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSFaceFromDSCurve = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSCurve, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSFaceFromDSEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSEdge, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSPointFromNewVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSPointFromNewVertex, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.InitExtendedSectionDS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitExtendedSectionDS, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.InitSection = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitSection, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.IsKPart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsKPart, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.IsMerged = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsMerged, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.IsSplit = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsSplit, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MergeKPart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeKPart, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MergeShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeShapes, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MergeSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolid, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MergeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolids, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Merged = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Merged, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MoreSection = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MoreSection, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.NewEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewEdges, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.NewFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewFaces, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.NewVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewVertex, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.NextSection = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NextSection, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Perform = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Perform, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Section = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Section, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Splits = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Splits, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_swigregister
TopOpeBRepBuild_HBuilder_swigregister(TopOpeBRepBuild_HBuilder)

class TopOpeBRepBuild_Loop(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BlockIterator(self, *args) -> "TopOpeBRepBuild_BlockIterator const &":
        """:rtype: TopOpeBRepBuild_BlockIterator"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop_BlockIterator(self, *args)


    def Dump(self, *args) -> "void":
        """:rtype: void"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop_Dump(self, *args)


    def IsShape(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop_IsShape(self, *args)


    def Shape(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop_Shape(self, *args)


    def __init__(self, *args):
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: None
        :param BI:
        	:type BI: TopOpeBRepBuild_BlockIterator
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Loop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Loop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepBuild_Loop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Loop
TopOpeBRepBuild_Loop.BlockIterator = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_BlockIterator, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop.Dump = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_Dump, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop.IsShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_IsShape, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop.Shape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_Shape, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Loop_swigregister
TopOpeBRepBuild_Loop_swigregister(TopOpeBRepBuild_Loop)

class TopOpeBRepBuild_LoopClassifier(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def Compare(self, *args) -> "TopAbs_State":
        """
        * Returns the state of loop <L1> compared with loop <L2>.
        	:param L1:
        	:type L1: TopOpeBRepBuild_Loop
        	:param L2:
        	:type L2: TopOpeBRepBuild_Loop
        	:rtype: TopAbs_State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_Compare(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_LoopClassifier
TopOpeBRepBuild_LoopClassifier.Compare = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_Compare, None, TopOpeBRepBuild_LoopClassifier)
TopOpeBRepBuild_LoopClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_swigregister
TopOpeBRepBuild_LoopClassifier_swigregister(TopOpeBRepBuild_LoopClassifier)

class TopOpeBRepBuild_LoopSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeListOfLoop(self, *args) -> "TopOpeBRepBuild_ListOfLoop &":
        """:rtype: TopOpeBRepBuild_ListOfLoop"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_ChangeListOfLoop(self, *args)


    def InitLoop(self, *args) -> "void":
        """:rtype: void"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_InitLoop(self, *args)


    def Loop(self, *args) -> "opencascade::handle< TopOpeBRepBuild_Loop >":
        """:rtype: opencascade::handle<TopOpeBRepBuild_Loop>"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_Loop(self, *args)


    def MoreLoop(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_MoreLoop(self, *args)


    def NextLoop(self, *args) -> "void":
        """:rtype: void"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_NextLoop(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_LoopSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_LoopSet
TopOpeBRepBuild_LoopSet.ChangeListOfLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_ChangeListOfLoop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet.InitLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_InitLoop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet.Loop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_Loop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet.MoreLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_MoreLoop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet.NextLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_NextLoop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_swigregister
TopOpeBRepBuild_LoopSet_swigregister(TopOpeBRepBuild_LoopSet)

class TopOpeBRepBuild_ShapeListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeList(self, *args) -> "TopTools_ListOfShape &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeList(self, *args)


    def ChangeShape(self, *args) -> "TopoDS_Shape":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeShape(self, *args)


    def List(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_List(self, *args)


    def Shape(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_Shape(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShapeListOfShape(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShapeListOfShape
TopOpeBRepBuild_ShapeListOfShape.ChangeList = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeList, None, TopOpeBRepBuild_ShapeListOfShape)
TopOpeBRepBuild_ShapeListOfShape.ChangeShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeShape, None, TopOpeBRepBuild_ShapeListOfShape)
TopOpeBRepBuild_ShapeListOfShape.List = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_List, None, TopOpeBRepBuild_ShapeListOfShape)
TopOpeBRepBuild_ShapeListOfShape.Shape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_Shape, None, TopOpeBRepBuild_ShapeListOfShape)
TopOpeBRepBuild_ShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_swigregister
TopOpeBRepBuild_ShapeListOfShape_swigregister(TopOpeBRepBuild_ShapeListOfShape)

class TopOpeBRepBuild_ShapeSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddElement(self, *args) -> "void":
        """
        * for each subshape SE of S of type mySubShapeType - Add subshapes of S to the map of subshapes (mySubShapeMap) - Add S to the list of shape incident to subshapes of S.
        	:param S:
        	:type S: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddElement(self, *args)


    def AddShape(self, *args) -> "void":
        """
        * Adds <S> to the list of shapes. (wires or shells).
        	:param S:
        	:type S: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddShape(self, *args)


    def AddStartElement(self, *args) -> "void":
        """
        * (S is a face or edge) Add S to the list of starting shapes used for reconstructions. apply AddElement(S).
        	:param S:
        	:type S: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddStartElement(self, *args)


    def ChangeStartShapes(self, *args) -> "TopTools_ListOfShape &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_ChangeStartShapes(self, *args)


    def CheckShape(self, *args) -> "Standard_Boolean":
        """
        :param checkshape:
        	:type checkshape: bool
        	:rtype: None
        :rtype: bool
        :param S:
        	:type S: TopoDS_Shape
        	:param checkgeom: default value is Standard_False
        	:type checkgeom: bool
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_CheckShape(self, *args)


    def DEBName(self, *args) -> "TCollection_AsciiString const &":
        """
        :param N:
        	:type N: TCollection_AsciiString
        	:rtype: None
        :rtype: TCollection_AsciiString
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBName(self, *args)


    def DEBNumber(self, *args) -> "Standard_Integer":
        """
        :param I:
        	:type I: int
        	:rtype: None
        :rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBNumber(self, *args)


    def DumpBB(self, *args) -> "void":
        """:rtype: void"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpBB(self, *args)


    def DumpCheck(self, *args) -> "void":
        """
        :param OS:
        	:type OS: Standard_OStream
        	:param str:
        	:type str: TCollection_AsciiString
        	:param S:
        	:type S: TopoDS_Shape
        	:param chk:
        	:type chk: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpCheck(self, *args)


    def DumpName(self, *args) -> "void":
        """
        :param OS:
        	:type OS: Standard_OStream
        	:param str:
        	:type str: TCollection_AsciiString
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpName(self, *args)


    def DumpSS(self, *args) -> "void":
        """:rtype: void"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpSS(self, *args)


    def FindNeighbours(self, *args) -> "void":
        """
        * Build the list of neighbour shapes of myCurrentShape (neighbour shapes and myCurrentShapes are of type t) Initialize myIncidentShapesIter on neighbour shapes.
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_FindNeighbours(self, *args)


    def InitNeighbours(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitNeighbours(self, *args)


    def InitShapes(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitShapes(self, *args)


    def InitStartElements(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitStartElements(self, *args)


    def MakeNeighboursList(self, *args) -> "TopTools_ListOfShape const &":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param V:
        	:type V: TopoDS_Shape
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MakeNeighboursList(self, *args)


    def MaxNumberSubShape(self, *args) -> "Standard_Integer":
        """
        :param Shape:
        	:type Shape: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MaxNumberSubShape(self, *args)


    def MoreNeighbours(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreNeighbours(self, *args)


    def MoreShapes(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreShapes(self, *args)


    def MoreStartElements(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreStartElements(self, *args)


    def Neighbour(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Neighbour(self, *args)


    def NextNeighbour(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextNeighbour(self, *args)


    def NextShape(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextShape(self, *args)


    def NextStartElement(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextStartElement(self, *args)


    def SName(self, *args) -> "TCollection_AsciiString":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        :param S:
        	:type S: TopTools_ListOfShape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SName(self, *args)


    def SNameori(self, *args) -> "TCollection_AsciiString":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        :param S:
        	:type S: TopTools_ListOfShape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SNameori(self, *args)


    def Shape(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Shape(self, *args)


    def StartElement(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElement(self, *args)


    def StartElements(self, *args) -> "TopTools_ListOfShape const &":
        """
        * return a reference on myStartShapes
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElements(self, *args)


    def __init__(self, *args):
        """
        * Creates a ShapeSet in order to build shapes connected by <SubShapeType> shapes. <checkshape>:check (or not) the shapes, startelements, elements added.
        	:param SubShapeType:
        	:type SubShapeType: TopAbs_ShapeEnum
        	:param checkshape: default value is Standard_True
        	:type checkshape: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShapeSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShapeSet
TopOpeBRepBuild_ShapeSet.AddElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddElement, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.AddShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddShape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.AddStartElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddStartElement, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.ChangeStartShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_ChangeStartShapes, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.CheckShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_CheckShape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DEBName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBName, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DEBNumber = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBNumber, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DumpBB = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpBB, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DumpCheck = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpCheck, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DumpName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpName, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DumpSS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpSS, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.FindNeighbours = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_FindNeighbours, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.InitNeighbours = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitNeighbours, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.InitShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitShapes, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.InitStartElements = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitStartElements, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MakeNeighboursList = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MakeNeighboursList, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MaxNumberSubShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MaxNumberSubShape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MoreNeighbours = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreNeighbours, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MoreShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreShapes, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MoreStartElements = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreStartElements, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.Neighbour = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Neighbour, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.NextNeighbour = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextNeighbour, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.NextShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextShape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.NextStartElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextStartElement, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.SName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SName, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.SNameori = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SNameori, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.Shape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Shape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.StartElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElement, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.StartElements = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElements, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_swigregister
TopOpeBRepBuild_ShapeSet_swigregister(TopOpeBRepBuild_ShapeSet)

class TopOpeBRepBuild_ShellToSolid(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddShell(self, *args) -> "void":
        """
        :param Sh:
        	:type Sh: TopoDS_Shell
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_AddShell(self, *args)


    def Init(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_Init(self, *args)


    def MakeSolids(self, *args) -> "void":
        """
        :param So:
        	:type So: TopoDS_Solid
        	:param LSo:
        	:type LSo: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_MakeSolids(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShellToSolid(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShellToSolid
TopOpeBRepBuild_ShellToSolid.AddShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_AddShell, None, TopOpeBRepBuild_ShellToSolid)
TopOpeBRepBuild_ShellToSolid.Init = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_Init, None, TopOpeBRepBuild_ShellToSolid)
TopOpeBRepBuild_ShellToSolid.MakeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_MakeSolids, None, TopOpeBRepBuild_ShellToSolid)
TopOpeBRepBuild_ShellToSolid_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_swigregister
TopOpeBRepBuild_ShellToSolid_swigregister(TopOpeBRepBuild_ShellToSolid)

class TopOpeBRepBuild_SolidBuilder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Face(self, *args) -> "TopoDS_Shape const":
        """
        * Returns current new face of current new shell.
        	:rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_Face(self, *args)


    def InitFace(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitFace(self, *args)


    def InitShell(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitShell(self, *args)


    def InitSolid(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolid(self, *args)


    def InitSolidBuilder(self, *args) -> "void":
        """
        :param FS:
        	:type FS: TopOpeBRepBuild_ShellFaceSet
        	:param ForceClass:
        	:type ForceClass: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolidBuilder(self, *args)


    def IsOldShell(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_IsOldShell(self, *args)


    def MoreFace(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreFace(self, *args)


    def MoreShell(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreShell(self, *args)


    def MoreSolid(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreSolid(self, *args)


    def NextFace(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextFace(self, *args)


    def NextShell(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextShell(self, *args)


    def NextSolid(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextSolid(self, *args)


    def OldShell(self, *args) -> "TopoDS_Shape const":
        """
        * Returns current shell This shell may be : * an old shell OldShell(), which has not been reconstructed; * a new shell made of faces described by ...NewFace() methods.
        	:rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_OldShell(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        * Create a SolidBuilder to build the areas on the shapes (shells, blocks of faces) described by <LS>.
        	:param FS:
        	:type FS: TopOpeBRepBuild_ShellFaceSet
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_SolidBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_SolidBuilder
TopOpeBRepBuild_SolidBuilder.Face = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_Face, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.InitFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitFace, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.InitShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.InitSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolid, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.InitSolidBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolidBuilder, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.IsOldShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_IsOldShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.MoreFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreFace, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.MoreShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.MoreSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreSolid, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.NextFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextFace, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.NextShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.NextSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextSolid, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.OldShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_OldShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_swigregister
TopOpeBRepBuild_SolidBuilder_swigregister(TopOpeBRepBuild_SolidBuilder)

class TopOpeBRepBuild_Tools(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CheckFaceClosed2d(*args) -> "Standard_Boolean":
        """
        * Checks if <theFace> has the properly closed in 2D boundary(ies)
        	:param theFace:
        	:type theFace: TopoDS_Face
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CheckFaceClosed2d(*args)

    CheckFaceClosed2d = staticmethod(CheckFaceClosed2d)

    def CorrectCurveOnSurface(*args) -> "void":
        """
        :param aS:
        	:type aS: TopoDS_Shape
        	:param aTolMax: default value is 0.0001
        	:type aTolMax: float
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectCurveOnSurface(*args)

    CorrectCurveOnSurface = staticmethod(CorrectCurveOnSurface)

    def CorrectFace2d(*args) -> "void":
        """
        * test if UV representation of <oldFace> is good (i.e. face is closed in 2d). if face is not closed , this method will try to close such face and will return corrected edges in the <aMapOfCorrect2dEdges>. Parameter <aSourceShapes> used to fix the edge (or wires) which should be correct (Corrector used it as a start shapes). NOTE : Parameter corrFace doesn't mean anything. If you want to use this method , rebuild resulting face after by yourself using corrected edges.
        	:param oldFace:
        	:type oldFace: TopoDS_Shape
        	:param corrFace:
        	:type corrFace: TopoDS_Shape
        	:param aSourceShapes:
        	:type aSourceShapes: TopTools_IndexedMapOfOrientedShape
        	:param aMapOfCorrect2dEdges:
        	:type aMapOfCorrect2dEdges: TopTools_IndexedDataMapOfShapeShape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectFace2d(*args)

    CorrectFace2d = staticmethod(CorrectFace2d)

    def CorrectPointOnCurve(*args) -> "void":
        """
        :param aS:
        	:type aS: TopoDS_Shape
        	:param aTolMax: default value is 0.0001
        	:type aTolMax: float
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectPointOnCurve(*args)

    CorrectPointOnCurve = staticmethod(CorrectPointOnCurve)

    def CorrectTolerances(*args) -> "void":
        """
        :param aS:
        	:type aS: TopoDS_Shape
        	:param aTolMax: default value is 0.0001
        	:type aTolMax: float
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectTolerances(*args)

    CorrectTolerances = staticmethod(CorrectTolerances)

    def FindState(*args) -> "void":
        """
        :param aVertex:
        	:type aVertex: TopoDS_Shape
        	:param aState:
        	:type aState: TopAbs_State
        	:param aShapeEnum:
        	:type aShapeEnum: TopAbs_ShapeEnum
        	:param aMapVertexEdges:
        	:type aMapVertexEdges: TopTools_IndexedDataMapOfShapeListOfShape
        	:param aMapProcessedVertices:
        	:type aMapProcessedVertices: TopTools_MapOfShape
        	:param aMapVs:
        	:type aMapVs: TopOpeBRepDS_DataMapOfShapeState
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState(*args)

    FindState = staticmethod(FindState)

    def FindState1(*args) -> "void":
        """
        :param anEdge:
        	:type anEdge: TopoDS_Shape
        	:param aState:
        	:type aState: TopAbs_State
        	:param aMapEdgesFaces:
        	:type aMapEdgesFaces: TopTools_IndexedDataMapOfShapeListOfShape
        	:param aMapProcessedVertices:
        	:type aMapProcessedVertices: TopTools_MapOfShape
        	:param aMapVs:
        	:type aMapVs: TopOpeBRepDS_DataMapOfShapeState
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState1(*args)

    FindState1 = staticmethod(FindState1)

    def FindState2(*args) -> "void":
        """
        :param anEdge:
        	:type anEdge: TopoDS_Shape
        	:param aState:
        	:type aState: TopAbs_State
        	:param aMapEdgesFaces:
        	:type aMapEdgesFaces: TopTools_IndexedDataMapOfShapeListOfShape
        	:param aMapProcessedEdges:
        	:type aMapProcessedEdges: TopTools_MapOfShape
        	:param aMapVs:
        	:type aMapVs: TopOpeBRepDS_DataMapOfShapeState
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState2(*args)

    FindState2 = staticmethod(FindState2)

    def FindStateThroughVertex(*args) -> "TopAbs_State":
        """
        :param aShape:
        	:type aShape: TopoDS_Shape
        	:param aShapeClassifier:
        	:type aShapeClassifier: TopOpeBRepTool_ShapeClassifier
        	:param aMapOfShapeWithState:
        	:type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState
        	:param anAvoidSubshMap:
        	:type anAvoidSubshMap: TopTools_MapOfShape
        	:rtype: TopAbs_State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindStateThroughVertex(*args)

    FindStateThroughVertex = staticmethod(FindStateThroughVertex)

    def GetAdjacentFace(*args) -> "Standard_Boolean":
        """
        :param aFaceObj:
        	:type aFaceObj: TopoDS_Shape
        	:param anEObj:
        	:type anEObj: TopoDS_Shape
        	:param anEdgeFaceMap:
        	:type anEdgeFaceMap: TopTools_IndexedDataMapOfShapeListOfShape
        	:param anAdjFaceObj:
        	:type anAdjFaceObj: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetAdjacentFace(*args)

    GetAdjacentFace = staticmethod(GetAdjacentFace)

    def GetNormalInNearestPoint(*args) -> "void":
        """
        * This function used to compute normal in point which is located near the point with param UV (used for computation of normals where the normal in the point UV equal to zero).
        	:param aFace:
        	:type aFace: TopoDS_Face
        	:param anEdge:
        	:type anEdge: TopoDS_Edge
        	:param aNormal:
        	:type aNormal: gp_Vec
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalInNearestPoint(*args)

    GetNormalInNearestPoint = staticmethod(GetNormalInNearestPoint)

    def GetNormalToFaceOnEdge(*args) -> "void":
        """
        :param aFObj:
        	:type aFObj: TopoDS_Face
        	:param anEdgeObj:
        	:type anEdgeObj: TopoDS_Edge
        	:param aDirNormal:
        	:type aDirNormal: gp_Vec
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalToFaceOnEdge(*args)

    GetNormalToFaceOnEdge = staticmethod(GetNormalToFaceOnEdge)

    def GetTangentToEdge(*args) -> "Standard_Boolean":
        """
        :param anEdgeObj:
        	:type anEdgeObj: TopoDS_Edge
        	:param aTangent:
        	:type aTangent: gp_Vec
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdge(*args)

    GetTangentToEdge = staticmethod(GetTangentToEdge)

    def GetTangentToEdgeEdge(*args) -> "Standard_Boolean":
        """
        :param aFObj:
        	:type aFObj: TopoDS_Face
        	:param anEdgeObj:
        	:type anEdgeObj: TopoDS_Edge
        	:param aOriEObj:
        	:type aOriEObj: TopoDS_Edge
        	:param aTangent:
        	:type aTangent: gp_Vec
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdgeEdge(*args)

    GetTangentToEdgeEdge = staticmethod(GetTangentToEdgeEdge)

    def IsDegEdgesTheSame(*args) -> "Standard_Boolean":
        """
        :param anE1:
        	:type anE1: TopoDS_Shape
        	:param anE2:
        	:type anE2: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_IsDegEdgesTheSame(*args)

    IsDegEdgesTheSame = staticmethod(IsDegEdgesTheSame)

    def NormalizeFace(*args) -> "void":
        """
        * test if <oldFace> does not contain INTERNAL or EXTERNAL edges and remove such edges in case of its presence. The result is stored in <corrFace>
        	:param oldFace:
        	:type oldFace: TopoDS_Shape
        	:param corrFace:
        	:type corrFace: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_NormalizeFace(*args)

    NormalizeFace = staticmethod(NormalizeFace)

    def PropagateState(*args) -> "void":
        """
        :param aSplEdgesState:
        	:type aSplEdgesState: TopOpeBRepDS_DataMapOfShapeState
        	:param anEdgesToRestMap:
        	:type anEdgesToRestMap: TopTools_IndexedMapOfShape
        	:param aShapeEnum1:
        	:type aShapeEnum1: TopAbs_ShapeEnum
        	:param aShapeEnum2:
        	:type aShapeEnum2: TopAbs_ShapeEnum
        	:param aShapeClassifier:
        	:type aShapeClassifier: TopOpeBRepTool_ShapeClassifier
        	:param aMapOfShapeWithState:
        	:type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState
        	:param anUnkStateShapes:
        	:type anUnkStateShapes: TopTools_MapOfShape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateState(*args)

    PropagateState = staticmethod(PropagateState)

    def PropagateStateForWires(*args) -> "void":
        """
        :param aFacesToRestMap:
        	:type aFacesToRestMap: TopTools_IndexedMapOfShape
        	:param aMapOfShapeWithState:
        	:type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateStateForWires(*args)

    PropagateStateForWires = staticmethod(PropagateStateForWires)

    def SpreadStateToChild(*args) -> "void":
        """
        :param aShape:
        	:type aShape: TopoDS_Shape
        	:param aState:
        	:type aState: TopAbs_State
        	:param aMapOfShapeWithState:
        	:type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_SpreadStateToChild(*args)

    SpreadStateToChild = staticmethod(SpreadStateToChild)

    def UpdateEdgeOnFace(*args) -> "void":
        """
        * recompute PCurve of the edge on the NewFace
        	:param aEdgeToUpdate:
        	:type aEdgeToUpdate: TopoDS_Edge
        	:param OldFace:
        	:type OldFace: TopoDS_Face
        	:param NewFace:
        	:type NewFace: TopoDS_Face
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnFace(*args)

    UpdateEdgeOnFace = staticmethod(UpdateEdgeOnFace)

    def UpdateEdgeOnPeriodicalFace(*args) -> "void":
        """
        * recompute PCurves of the closing (SIM , with 2 PCurves) edge on the NewFace
        	:param aEdgeToUpdate:
        	:type aEdgeToUpdate: TopoDS_Edge
        	:param OldFace:
        	:type OldFace: TopoDS_Face
        	:param NewFace:
        	:type NewFace: TopoDS_Face
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnPeriodicalFace(*args)

    UpdateEdgeOnPeriodicalFace = staticmethod(UpdateEdgeOnPeriodicalFace)

    def UpdatePCurves(*args) -> "void":
        """
        * Recompute PCurves of the all edges from the wire on the <toFace>
        	:param aWire:
        	:type aWire: TopoDS_Wire
        	:param fromFace:
        	:type fromFace: TopoDS_Face
        	:param toFace:
        	:type toFace: TopoDS_Face
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdatePCurves(*args)

    UpdatePCurves = staticmethod(UpdatePCurves)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRepBuild.TopOpeBRepBuild_Tools_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Tools())
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Tools
TopOpeBRepBuild_Tools_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_swigregister
TopOpeBRepBuild_Tools_swigregister(TopOpeBRepBuild_Tools)

def TopOpeBRepBuild_Tools_CheckFaceClosed2d(*args) -> "Standard_Boolean":
    """
    * Checks if <theFace> has the properly closed in 2D boundary(ies)
    	:param theFace:
    	:type theFace: TopoDS_Face
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CheckFaceClosed2d(*args)

def TopOpeBRepBuild_Tools_CorrectCurveOnSurface(*args) -> "void":
    """
    :param aS:
    	:type aS: TopoDS_Shape
    	:param aTolMax: default value is 0.0001
    	:type aTolMax: float
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectCurveOnSurface(*args)

def TopOpeBRepBuild_Tools_CorrectFace2d(*args) -> "void":
    """
    * test if UV representation of <oldFace> is good (i.e. face is closed in 2d). if face is not closed , this method will try to close such face and will return corrected edges in the <aMapOfCorrect2dEdges>. Parameter <aSourceShapes> used to fix the edge (or wires) which should be correct (Corrector used it as a start shapes). NOTE : Parameter corrFace doesn't mean anything. If you want to use this method , rebuild resulting face after by yourself using corrected edges.
    	:param oldFace:
    	:type oldFace: TopoDS_Shape
    	:param corrFace:
    	:type corrFace: TopoDS_Shape
    	:param aSourceShapes:
    	:type aSourceShapes: TopTools_IndexedMapOfOrientedShape
    	:param aMapOfCorrect2dEdges:
    	:type aMapOfCorrect2dEdges: TopTools_IndexedDataMapOfShapeShape
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectFace2d(*args)

def TopOpeBRepBuild_Tools_CorrectPointOnCurve(*args) -> "void":
    """
    :param aS:
    	:type aS: TopoDS_Shape
    	:param aTolMax: default value is 0.0001
    	:type aTolMax: float
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectPointOnCurve(*args)

def TopOpeBRepBuild_Tools_CorrectTolerances(*args) -> "void":
    """
    :param aS:
    	:type aS: TopoDS_Shape
    	:param aTolMax: default value is 0.0001
    	:type aTolMax: float
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectTolerances(*args)

def TopOpeBRepBuild_Tools_FindState(*args) -> "void":
    """
    :param aVertex:
    	:type aVertex: TopoDS_Shape
    	:param aState:
    	:type aState: TopAbs_State
    	:param aShapeEnum:
    	:type aShapeEnum: TopAbs_ShapeEnum
    	:param aMapVertexEdges:
    	:type aMapVertexEdges: TopTools_IndexedDataMapOfShapeListOfShape
    	:param aMapProcessedVertices:
    	:type aMapProcessedVertices: TopTools_MapOfShape
    	:param aMapVs:
    	:type aMapVs: TopOpeBRepDS_DataMapOfShapeState
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState(*args)

def TopOpeBRepBuild_Tools_FindState1(*args) -> "void":
    """
    :param anEdge:
    	:type anEdge: TopoDS_Shape
    	:param aState:
    	:type aState: TopAbs_State
    	:param aMapEdgesFaces:
    	:type aMapEdgesFaces: TopTools_IndexedDataMapOfShapeListOfShape
    	:param aMapProcessedVertices:
    	:type aMapProcessedVertices: TopTools_MapOfShape
    	:param aMapVs:
    	:type aMapVs: TopOpeBRepDS_DataMapOfShapeState
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState1(*args)

def TopOpeBRepBuild_Tools_FindState2(*args) -> "void":
    """
    :param anEdge:
    	:type anEdge: TopoDS_Shape
    	:param aState:
    	:type aState: TopAbs_State
    	:param aMapEdgesFaces:
    	:type aMapEdgesFaces: TopTools_IndexedDataMapOfShapeListOfShape
    	:param aMapProcessedEdges:
    	:type aMapProcessedEdges: TopTools_MapOfShape
    	:param aMapVs:
    	:type aMapVs: TopOpeBRepDS_DataMapOfShapeState
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState2(*args)

def TopOpeBRepBuild_Tools_FindStateThroughVertex(*args) -> "TopAbs_State":
    """
    :param aShape:
    	:type aShape: TopoDS_Shape
    	:param aShapeClassifier:
    	:type aShapeClassifier: TopOpeBRepTool_ShapeClassifier
    	:param aMapOfShapeWithState:
    	:type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState
    	:param anAvoidSubshMap:
    	:type anAvoidSubshMap: TopTools_MapOfShape
    	:rtype: TopAbs_State
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindStateThroughVertex(*args)

def TopOpeBRepBuild_Tools_GetAdjacentFace(*args) -> "Standard_Boolean":
    """
    :param aFaceObj:
    	:type aFaceObj: TopoDS_Shape
    	:param anEObj:
    	:type anEObj: TopoDS_Shape
    	:param anEdgeFaceMap:
    	:type anEdgeFaceMap: TopTools_IndexedDataMapOfShapeListOfShape
    	:param anAdjFaceObj:
    	:type anAdjFaceObj: TopoDS_Shape
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetAdjacentFace(*args)

def TopOpeBRepBuild_Tools_GetNormalInNearestPoint(*args) -> "void":
    """
    * This function used to compute normal in point which is located near the point with param UV (used for computation of normals where the normal in the point UV equal to zero).
    	:param aFace:
    	:type aFace: TopoDS_Face
    	:param anEdge:
    	:type anEdge: TopoDS_Edge
    	:param aNormal:
    	:type aNormal: gp_Vec
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalInNearestPoint(*args)

def TopOpeBRepBuild_Tools_GetNormalToFaceOnEdge(*args) -> "void":
    """
    :param aFObj:
    	:type aFObj: TopoDS_Face
    	:param anEdgeObj:
    	:type anEdgeObj: TopoDS_Edge
    	:param aDirNormal:
    	:type aDirNormal: gp_Vec
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalToFaceOnEdge(*args)

def TopOpeBRepBuild_Tools_GetTangentToEdge(*args) -> "Standard_Boolean":
    """
    :param anEdgeObj:
    	:type anEdgeObj: TopoDS_Edge
    	:param aTangent:
    	:type aTangent: gp_Vec
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdge(*args)

def TopOpeBRepBuild_Tools_GetTangentToEdgeEdge(*args) -> "Standard_Boolean":
    """
    :param aFObj:
    	:type aFObj: TopoDS_Face
    	:param anEdgeObj:
    	:type anEdgeObj: TopoDS_Edge
    	:param aOriEObj:
    	:type aOriEObj: TopoDS_Edge
    	:param aTangent:
    	:type aTangent: gp_Vec
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdgeEdge(*args)

def TopOpeBRepBuild_Tools_IsDegEdgesTheSame(*args) -> "Standard_Boolean":
    """
    :param anE1:
    	:type anE1: TopoDS_Shape
    	:param anE2:
    	:type anE2: TopoDS_Shape
    	:rtype: bool
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_IsDegEdgesTheSame(*args)

def TopOpeBRepBuild_Tools_NormalizeFace(*args) -> "void":
    """
    * test if <oldFace> does not contain INTERNAL or EXTERNAL edges and remove such edges in case of its presence. The result is stored in <corrFace>
    	:param oldFace:
    	:type oldFace: TopoDS_Shape
    	:param corrFace:
    	:type corrFace: TopoDS_Shape
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_NormalizeFace(*args)

def TopOpeBRepBuild_Tools_PropagateState(*args) -> "void":
    """
    :param aSplEdgesState:
    	:type aSplEdgesState: TopOpeBRepDS_DataMapOfShapeState
    	:param anEdgesToRestMap:
    	:type anEdgesToRestMap: TopTools_IndexedMapOfShape
    	:param aShapeEnum1:
    	:type aShapeEnum1: TopAbs_ShapeEnum
    	:param aShapeEnum2:
    	:type aShapeEnum2: TopAbs_ShapeEnum
    	:param aShapeClassifier:
    	:type aShapeClassifier: TopOpeBRepTool_ShapeClassifier
    	:param aMapOfShapeWithState:
    	:type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState
    	:param anUnkStateShapes:
    	:type anUnkStateShapes: TopTools_MapOfShape
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateState(*args)

def TopOpeBRepBuild_Tools_PropagateStateForWires(*args) -> "void":
    """
    :param aFacesToRestMap:
    	:type aFacesToRestMap: TopTools_IndexedMapOfShape
    	:param aMapOfShapeWithState:
    	:type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateStateForWires(*args)

def TopOpeBRepBuild_Tools_SpreadStateToChild(*args) -> "void":
    """
    :param aShape:
    	:type aShape: TopoDS_Shape
    	:param aState:
    	:type aState: TopAbs_State
    	:param aMapOfShapeWithState:
    	:type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_SpreadStateToChild(*args)

def TopOpeBRepBuild_Tools_UpdateEdgeOnFace(*args) -> "void":
    """
    * recompute PCurve of the edge on the NewFace
    	:param aEdgeToUpdate:
    	:type aEdgeToUpdate: TopoDS_Edge
    	:param OldFace:
    	:type OldFace: TopoDS_Face
    	:param NewFace:
    	:type NewFace: TopoDS_Face
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnFace(*args)

def TopOpeBRepBuild_Tools_UpdateEdgeOnPeriodicalFace(*args) -> "void":
    """
    * recompute PCurves of the closing (SIM , with 2 PCurves) edge on the NewFace
    	:param aEdgeToUpdate:
    	:type aEdgeToUpdate: TopoDS_Edge
    	:param OldFace:
    	:type OldFace: TopoDS_Face
    	:param NewFace:
    	:type NewFace: TopoDS_Face
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnPeriodicalFace(*args)

def TopOpeBRepBuild_Tools_UpdatePCurves(*args) -> "void":
    """
    * Recompute PCurves of the all edges from the wire on the <toFace>
    	:param aWire:
    	:type aWire: TopoDS_Wire
    	:param fromFace:
    	:type fromFace: TopoDS_Face
    	:param toFace:
    	:type toFace: TopoDS_Face
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdatePCurves(*args)

class TopOpeBRepBuild_Tools2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DumpMapOfShapeVertexInfo(*args) -> "void":
        """
        :param aMap:
        	:type aMap: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_DumpMapOfShapeVertexInfo(*args)

    DumpMapOfShapeVertexInfo = staticmethod(DumpMapOfShapeVertexInfo)

    def MakeMapOfShapeVertexInfo(*args) -> "void":
        """
        :param aWire:
        	:type aWire: TopoDS_Wire
        	:param aMap:
        	:type aMap: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_MakeMapOfShapeVertexInfo(*args)

    MakeMapOfShapeVertexInfo = staticmethod(MakeMapOfShapeVertexInfo)

    def Path(*args) -> "void":
        """
        :param aWire:
        	:type aWire: TopoDS_Wire
        	:param aResList:
        	:type aResList: TopTools_ListOfShape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_Path(*args)

    Path = staticmethod(Path)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Tools2d())
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Tools2d
TopOpeBRepBuild_Tools2d_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_swigregister
TopOpeBRepBuild_Tools2d_swigregister(TopOpeBRepBuild_Tools2d)

def TopOpeBRepBuild_Tools2d_DumpMapOfShapeVertexInfo(*args) -> "void":
    """
    :param aMap:
    	:type aMap: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_DumpMapOfShapeVertexInfo(*args)

def TopOpeBRepBuild_Tools2d_MakeMapOfShapeVertexInfo(*args) -> "void":
    """
    :param aWire:
    	:type aWire: TopoDS_Wire
    	:param aMap:
    	:type aMap: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_MakeMapOfShapeVertexInfo(*args)

def TopOpeBRepBuild_Tools2d_Path(*args) -> "void":
    """
    :param aWire:
    	:type aWire: TopoDS_Wire
    	:param aResList:
    	:type aResList: TopTools_ListOfShape
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_Path(*args)

class TopOpeBRepBuild_VertexInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddIn(self, *args) -> "void":
        """
        :param anE:
        	:type anE: TopoDS_Edge
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddIn(self, *args)


    def AddOut(self, *args) -> "void":
        """
        :param anE:
        	:type anE: TopoDS_Edge
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddOut(self, *args)


    def AppendPassed(self, *args) -> "void":
        """
        :param anE:
        	:type anE: TopoDS_Edge
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AppendPassed(self, *args)


    def ChangeEdgesOut(self, *args) -> "TopTools_IndexedMapOfOrientedShape &":
        """:rtype: TopTools_IndexedMapOfOrientedShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ChangeEdgesOut(self, *args)


    def CurrentOut(self, *args) -> "TopoDS_Edge const":
        """:rtype: TopoDS_Edge"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_CurrentOut(self, *args)


    def Dump(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Dump(self, *args)


    def EdgesIn(self, *args) -> "TopTools_IndexedMapOfOrientedShape const &":
        """:rtype: TopTools_IndexedMapOfOrientedShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesIn(self, *args)


    def EdgesOut(self, *args) -> "TopTools_IndexedMapOfOrientedShape const &":
        """:rtype: TopTools_IndexedMapOfOrientedShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesOut(self, *args)


    def FoundOut(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_FoundOut(self, *args)


    def ListPassed(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ListPassed(self, *args)


    def NbCases(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_NbCases(self, *args)


    def Prepare(self, *args) -> "void":
        """
        :param aL:
        	:type aL: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Prepare(self, *args)


    def RemovePassed(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_RemovePassed(self, *args)


    def SetCurrentIn(self, *args) -> "void":
        """
        :param anE:
        	:type anE: TopoDS_Edge
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetCurrentIn(self, *args)


    def SetSmart(self, *args) -> "void":
        """
        :param aFlag:
        	:type aFlag: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetSmart(self, *args)


    def SetVertex(self, *args) -> "void":
        """
        :param aV:
        	:type aV: TopoDS_Vertex
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetVertex(self, *args)


    def Smart(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Smart(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_VertexInfo(*args))

    def Vertex(self, *args) -> "TopoDS_Vertex const":
        """:rtype: TopoDS_Vertex"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Vertex(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_VertexInfo
TopOpeBRepBuild_VertexInfo.AddIn = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddIn, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.AddOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.AppendPassed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AppendPassed, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.ChangeEdgesOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ChangeEdgesOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.CurrentOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_CurrentOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.Dump = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Dump, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.EdgesIn = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesIn, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.EdgesOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.FoundOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_FoundOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.ListPassed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ListPassed, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.NbCases = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_NbCases, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.Prepare = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Prepare, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.RemovePassed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_RemovePassed, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.SetCurrentIn = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetCurrentIn, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.SetSmart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetSmart, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.SetVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetVertex, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.Smart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Smart, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.Vertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Vertex, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_swigregister
TopOpeBRepBuild_VertexInfo_swigregister(TopOpeBRepBuild_VertexInfo)

class TopOpeBRepBuild_WireToFace(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddWire(self, *args) -> "void":
        """
        :param W:
        	:type W: TopoDS_Wire
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_AddWire(self, *args)


    def Init(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_Init(self, *args)


    def MakeFaces(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Face
        	:param LF:
        	:type LF: TopTools_ListOfShape
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_MakeFaces(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_WireToFace(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_WireToFace
TopOpeBRepBuild_WireToFace.AddWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_AddWire, None, TopOpeBRepBuild_WireToFace)
TopOpeBRepBuild_WireToFace.Init = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_Init, None, TopOpeBRepBuild_WireToFace)
TopOpeBRepBuild_WireToFace.MakeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_MakeFaces, None, TopOpeBRepBuild_WireToFace)
TopOpeBRepBuild_WireToFace_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_swigregister
TopOpeBRepBuild_WireToFace_swigregister(TopOpeBRepBuild_WireToFace)

class TopOpeBRepBuild_Area1dBuilder(TopOpeBRepBuild_AreaBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DumpList(*args) -> "void":
        """
        :param L:
        	:type L: TopOpeBRepBuild_ListOfLoop
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_DumpList(*args)

    DumpList = staticmethod(DumpList)

    def __init__(self, *args):
        """
        :rtype: None
        * Creates a Area1dBuilder to find the areas of the shapes described by <LS> using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_PaveSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_PaveClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Area1dBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Area1dBuilder
TopOpeBRepBuild_Area1dBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_swigregister
TopOpeBRepBuild_Area1dBuilder_swigregister(TopOpeBRepBuild_Area1dBuilder)

def TopOpeBRepBuild_Area1dBuilder_DumpList(*args) -> "void":
    """
    :param L:
    	:type L: TopOpeBRepBuild_ListOfLoop
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_DumpList(*args)

class TopOpeBRepBuild_Area2dBuilder(TopOpeBRepBuild_AreaBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None
        * Creates a Area2dBuilder to build faces on the (wires,blocks of edge) of <LS>, using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Area2dBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Area2dBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Area2dBuilder
TopOpeBRepBuild_Area2dBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Area2dBuilder_swigregister
TopOpeBRepBuild_Area2dBuilder_swigregister(TopOpeBRepBuild_Area2dBuilder)

class TopOpeBRepBuild_Area3dBuilder(TopOpeBRepBuild_AreaBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None
        * Creates a Area3dBuilder to build Solids on the (shells,blocks of face) of <LS>, using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Area3dBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Area3dBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Area3dBuilder
TopOpeBRepBuild_Area3dBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Area3dBuilder_swigregister
TopOpeBRepBuild_Area3dBuilder_swigregister(TopOpeBRepBuild_Area3dBuilder)

class TopOpeBRepBuild_Builder1(TopOpeBRepBuild_Builder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CorrectResult2d(self, *args) -> "Standard_Integer":
        """
        :param aResult:
        	:type aResult: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_CorrectResult2d(self, *args)


    def GFillEdgeNotSameDomWES(self, *args) -> "void":
        """
        :param E1:
        	:type E1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeNotSameDomWES(self, *args)


    def GFillEdgeSameDomWES(self, *args) -> "void":
        """
        :param E1:
        	:type E1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeSameDomWES(self, *args)


    def GFillFaceNotSameDomSFS(self, *args) -> "void":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomSFS(self, *args)


    def GFillFaceNotSameDomWES(self, *args) -> "void":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomWES(self, *args)


    def GFillFaceSameDomSFS(self, *args) -> "void":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param SFS:
        	:type SFS: TopOpeBRepBuild_ShellFaceSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomSFS(self, *args)


    def GFillFaceSameDomWES(self, *args) -> "void":
        """
        :param F1:
        	:type F1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomWES(self, *args)


    def GFillWireNotSameDomWES(self, *args) -> "void":
        """
        :param W1:
        	:type W1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireNotSameDomWES(self, *args)


    def GFillWireSameDomWES(self, *args) -> "void":
        """
        :param W1:
        	:type W1: TopoDS_Shape
        	:param LSO2:
        	:type LSO2: TopTools_ListOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireSameDomWES(self, *args)


    def MergeKPart(self, *args) -> "void":
        """
        :rtype: void
        :param TB1:
        	:type TB1: TopAbs_State
        	:param TB2:
        	:type TB2: TopAbs_State
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_MergeKPart(self, *args)


    def Perform(self, *args) -> "void":
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: void
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_Perform(self, *args)


    def PerformONParts(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param SDfaces:
        	:type SDfaces: TopTools_IndexedMapOfShape
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param WES:
        	:type WES: TopOpeBRepBuild_WireEdgeSet
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformONParts(self, *args)


    def PerformPieceIn2D(self, *args) -> "void":
        """
        :param aPieceToPerform:
        	:type aPieceToPerform: TopoDS_Edge
        	:param aOriginalEdge:
        	:type aOriginalEdge: TopoDS_Edge
        	:param edgeFace:
        	:type edgeFace: TopoDS_Face
        	:param toFace:
        	:type toFace: TopoDS_Face
        	:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:param keep:
        	:type keep: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceIn2D(self, *args)


    def PerformPieceOn2D(self, *args) -> "Standard_Integer":
        """
        :param aPieceObj:
        	:type aPieceObj: TopoDS_Shape
        	:param aFaceObj:
        	:type aFaceObj: TopoDS_Shape
        	:param aEdgeObj:
        	:type aEdgeObj: TopoDS_Shape
        	:param aListOfPieces:
        	:type aListOfPieces: TopTools_ListOfShape
        	:param aListOfFaces:
        	:type aListOfFaces: TopTools_ListOfShape
        	:param aListOfPiecesOut2d:
        	:type aListOfPiecesOut2d: TopTools_ListOfShape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceOn2D(self, *args)


    def __init__(self, *args):
        """
        :param BT:
        	:type BT: TopOpeBRepDS_BuildTool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Builder1(*args))

    def TwoPiecesON(self, *args) -> "Standard_Integer":
        """
        :param aSeq:
        	:type aSeq: TopTools_SequenceOfShape
        	:param aListOfPieces:
        	:type aListOfPieces: TopTools_ListOfShape
        	:param aListOfFaces:
        	:type aListOfFaces: TopTools_ListOfShape
        	:param aListOfPiecesOut2d:
        	:type aListOfPiecesOut2d: TopTools_ListOfShape
        	:rtype: int
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_TwoPiecesON(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Builder1
TopOpeBRepBuild_Builder1.CorrectResult2d = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_CorrectResult2d, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillEdgeNotSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeNotSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillEdgeSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillFaceNotSameDomSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomSFS, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillFaceNotSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillFaceSameDomSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomSFS, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillFaceSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillWireNotSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireNotSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillWireSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.MergeKPart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_MergeKPart, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.Perform = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_Perform, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.PerformONParts = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformONParts, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.PerformPieceIn2D = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceIn2D, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.PerformPieceOn2D = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceOn2D, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.TwoPiecesON = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_TwoPiecesON, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_swigregister
TopOpeBRepBuild_Builder1_swigregister(TopOpeBRepBuild_Builder1)

class TopOpeBRepBuild_CompositeClassifier(TopOpeBRepBuild_LoopClassifier):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def CompareElement(self, *args) -> "Standard_Boolean":
        """
        * Add element <E> in the set of elements used in classification. Returns False if the element <E> has been already added to the set of elements, otherwise returns True.
        	:param E:
        	:type E: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElement(self, *args)


    def CompareElementToShape(self, *args) -> "TopAbs_State":
        """
        * classify element <E> with shape <B>
        	:param E:
        	:type E: TopoDS_Shape
        	:param B:
        	:type B: TopoDS_Shape
        	:rtype: TopAbs_State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElementToShape(self, *args)


    def CompareShapes(self, *args) -> "TopAbs_State":
        """
        * classify shape <B1> with shape <B2>
        	:param B1:
        	:type B1: TopoDS_Shape
        	:param B2:
        	:type B2: TopoDS_Shape
        	:rtype: TopAbs_State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareShapes(self, *args)


    def ResetElement(self, *args) -> "void":
        """
        * prepare classification involving element <E>.
        	:param E:
        	:type E: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetElement(self, *args)


    def ResetShape(self, *args) -> "void":
        """
        * prepare classification involving shape <B> calls ResetElement on first element of <B>
        	:param B:
        	:type B: TopoDS_Shape
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetShape(self, *args)


    def State(self, *args) -> "TopAbs_State":
        """
        * Returns state of classification of 2D point, defined by ResetElement, with the current set of elements, defined by Compare.
        	:rtype: TopAbs_State
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_State(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_CompositeClassifier
TopOpeBRepBuild_CompositeClassifier.CompareElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElement, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.CompareElementToShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElementToShape, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.CompareShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareShapes, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.ResetElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetElement, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.ResetShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetShape, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.State = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_State, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_swigregister
TopOpeBRepBuild_CompositeClassifier_swigregister(TopOpeBRepBuild_CompositeClassifier)

class TopOpeBRepBuild_Pave(TopOpeBRepBuild_Loop):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeVertex(self, *args) -> "TopoDS_Shape":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_ChangeVertex(self, *args)


    def HasSameDomain(self, *args) -> "Standard_Boolean":
        """
        :param b:
        	:type b: bool
        	:rtype: None
        :rtype: bool
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_HasSameDomain(self, *args)


    def InterferenceType(self, *args) -> "TopOpeBRepDS_Kind &":
        """:rtype: TopOpeBRepDS_Kind"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_InterferenceType(self, *args)


    def Parameter(self, *args) -> "void":
        """
        :rtype: float
        :param Par:
        	:type Par: float
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_Parameter(self, *args)


    def SameDomain(self, *args) -> "TopoDS_Shape const":
        """
        :param VSD:
        	:type VSD: TopoDS_Shape
        	:rtype: None
        :rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_SameDomain(self, *args)


    def __init__(self, *args):
        """
        * V = vertex, P = parameter of vertex <V> bound = True if <V> is an old vertex bound = False if <V> is a new vertex
        	:param V:
        	:type V: TopoDS_Shape
        	:param P:
        	:type P: float
        	:param bound:
        	:type bound: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Pave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Pave(*args))

    def Vertex(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_Vertex(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepBuild_Pave_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Pave
TopOpeBRepBuild_Pave.ChangeVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_ChangeVertex, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.HasSameDomain = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_HasSameDomain, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.InterferenceType = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_InterferenceType, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.Parameter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_Parameter, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.SameDomain = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_SameDomain, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.Vertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_Vertex, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Pave_swigregister
TopOpeBRepBuild_Pave_swigregister(TopOpeBRepBuild_Pave)

class TopOpeBRepBuild_PaveClassifier(TopOpeBRepBuild_LoopClassifier):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AdjustCase(*args) -> "Standard_Integer &":
        """
        :param p1:
        	:type p1: float
        	:param o:
        	:type o: TopAbs_Orientation
        	:param first:
        	:type first: float
        	:param period:
        	:type period: float
        	:param tol:
        	:type tol: float
        	:param cas:
        	:type cas: int
        	:rtype: float
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_AdjustCase(*args)

    AdjustCase = staticmethod(AdjustCase)

    def ClosedVertices(self, *args) -> "void":
        """
        :param B:
        	:type B: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_ClosedVertices(self, *args)


    def SetFirstParameter(self, *args) -> "void":
        """
        :param P:
        	:type P: float
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_SetFirstParameter(self, *args)


    def __init__(self, *args):
        """
        * Create a Pave classifier to compare vertices on edge <E>.
        	:param E:
        	:type E: TopoDS_Shape
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_PaveClassifier(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_PaveClassifier
TopOpeBRepBuild_PaveClassifier.ClosedVertices = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_ClosedVertices, None, TopOpeBRepBuild_PaveClassifier)
TopOpeBRepBuild_PaveClassifier.SetFirstParameter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_SetFirstParameter, None, TopOpeBRepBuild_PaveClassifier)
TopOpeBRepBuild_PaveClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_swigregister
TopOpeBRepBuild_PaveClassifier_swigregister(TopOpeBRepBuild_PaveClassifier)

def TopOpeBRepBuild_PaveClassifier_AdjustCase(*args) -> "Standard_Integer &":
    """
    :param p1:
    	:type p1: float
    	:param o:
    	:type o: TopAbs_Orientation
    	:param first:
    	:type first: float
    	:param period:
    	:type period: float
    	:param tol:
    	:type tol: float
    	:param cas:
    	:type cas: int
    	:rtype: float
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_AdjustCase(*args)

class TopOpeBRepBuild_PaveSet(TopOpeBRepBuild_LoopSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Append(self, *args) -> "void":
        """
        * Add <PV> in the Pave set.
        	:param PV:
        	:type PV: TopOpeBRepBuild_Pave
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Append(self, *args)


    def ClosedVertices(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_ClosedVertices(self, *args)


    def Edge(self, *args) -> "TopoDS_Edge const":
        """:rtype: TopoDS_Edge"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Edge(self, *args)


    def EqualParameters(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_EqualParameters(self, *args)


    def HasEqualParameters(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_HasEqualParameters(self, *args)


    def RemovePV(self, *args) -> "void":
        """
        :param B:
        	:type B: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_RemovePV(self, *args)


    def SortPave(*args) -> "void":
        """
        :param Lin:
        	:type Lin: TopOpeBRepBuild_ListOfPave
        	:param Lout:
        	:type Lout: TopOpeBRepBuild_ListOfPave
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_SortPave(*args)

    SortPave = staticmethod(SortPave)

    def __init__(self, *args):
        """
        * Create a Pave set on edge <E>. It contains <E> vertices.
        	:param E:
        	:type E: TopoDS_Shape
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_PaveSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_PaveSet
TopOpeBRepBuild_PaveSet.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Append, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.ClosedVertices = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_ClosedVertices, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.Edge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Edge, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.EqualParameters = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_EqualParameters, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.HasEqualParameters = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_HasEqualParameters, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.RemovePV = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_RemovePV, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_swigregister
TopOpeBRepBuild_PaveSet_swigregister(TopOpeBRepBuild_PaveSet)

def TopOpeBRepBuild_PaveSet_SortPave(*args) -> "void":
    """
    :param Lin:
    	:type Lin: TopOpeBRepBuild_ListOfPave
    	:param Lout:
    	:type Lout: TopOpeBRepBuild_ListOfPave
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_SortPave(*args)

class TopOpeBRepBuild_ShellFaceSet(TopOpeBRepBuild_ShapeSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def SName(self, *args) -> "TCollection_AsciiString":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        :param S:
        	:type S: TopTools_ListOfShape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SName(self, *args)


    def SNameori(self, *args) -> "TCollection_AsciiString":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        :param S:
        	:type S: TopTools_ListOfShape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SNameori(self, *args)


    def Solid(self, *args) -> "TopoDS_Solid const":
        """:rtype: TopoDS_Solid"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_Solid(self, *args)


    def __init__(self, *args):
        """
        * Creates a ShellFaceSet to build blocks of faces connected by edges.
        	:rtype: None
        * Creates a ShellFaceSet to build blocks of faces connected by edges.
        	:param S:
        	:type S: TopoDS_Shape
        	:param Addr: default value is NULL
        	:type Addr: Standard_Address
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShellFaceSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShellFaceSet
TopOpeBRepBuild_ShellFaceSet.SName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SName, None, TopOpeBRepBuild_ShellFaceSet)
TopOpeBRepBuild_ShellFaceSet.SNameori = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SNameori, None, TopOpeBRepBuild_ShellFaceSet)
TopOpeBRepBuild_ShellFaceSet.Solid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_Solid, None, TopOpeBRepBuild_ShellFaceSet)
TopOpeBRepBuild_ShellFaceSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_swigregister
TopOpeBRepBuild_ShellFaceSet_swigregister(TopOpeBRepBuild_ShellFaceSet)

class TopOpeBRepBuild_WireEdgeSet(TopOpeBRepBuild_ShapeSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Face(self, *args) -> "TopoDS_Face const":
        """
        * value of field myFace
        	:rtype: TopoDS_Face
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_Face(self, *args)


    def IsUVISO(*args) -> "Standard_Boolean &, Standard_Boolean &":
        """
        :param E:
        	:type E: TopoDS_Edge
        	:param F:
        	:type F: TopoDS_Face
        	:param uiso:
        	:type uiso: bool
        	:param viso:
        	:type viso: bool
        	:rtype: void
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_IsUVISO(*args)

    IsUVISO = staticmethod(IsUVISO)

    def SName(self, *args) -> "TCollection_AsciiString":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        :param S:
        	:type S: TopTools_ListOfShape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SName(self, *args)


    def SNameori(self, *args) -> "TCollection_AsciiString":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        :param S:
        	:type S: TopTools_ListOfShape
        	:param sb: default value is 
        	:type sb: TCollection_AsciiString
        	:param sa: default value is 
        	:type sa: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SNameori(self, *args)


    def __init__(self, *args):
        """
        * Creates a WireEdgeSet to build edges connected by vertices on face F. Edges of the WireEdgeSet must have a representation on surface of face F.
        	:param F:
        	:type F: TopoDS_Shape
        	:param Addr: default value is NULL
        	:type Addr: Standard_Address
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_WireEdgeSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_WireEdgeSet
TopOpeBRepBuild_WireEdgeSet.Face = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_Face, None, TopOpeBRepBuild_WireEdgeSet)
TopOpeBRepBuild_WireEdgeSet.SName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SName, None, TopOpeBRepBuild_WireEdgeSet)
TopOpeBRepBuild_WireEdgeSet.SNameori = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SNameori, None, TopOpeBRepBuild_WireEdgeSet)
TopOpeBRepBuild_WireEdgeSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_swigregister
TopOpeBRepBuild_WireEdgeSet_swigregister(TopOpeBRepBuild_WireEdgeSet)

def TopOpeBRepBuild_WireEdgeSet_IsUVISO(*args) -> "Standard_Boolean &, Standard_Boolean &":
    """
    :param E:
    	:type E: TopoDS_Edge
    	:param F:
    	:type F: TopoDS_Face
    	:param uiso:
    	:type uiso: bool
    	:param viso:
    	:type viso: bool
    	:rtype: void
    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_IsUVISO(*args)

class TopOpeBRepBuild_EdgeBuilder(TopOpeBRepBuild_Area1dBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def InitEdge(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdge(self, *args)


    def InitEdgeBuilder(self, *args) -> "void":
        """
        :param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdgeBuilder(self, *args)


    def InitVertex(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitVertex(self, *args)


    def MoreEdge(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreEdge(self, *args)


    def MoreVertex(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreVertex(self, *args)


    def NextEdge(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextEdge(self, *args)


    def NextVertex(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextVertex(self, *args)


    def Parameter(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Parameter(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        * Creates a EdgeBuilder to find the areas of the shapes described by <LS> using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_PaveSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_PaveClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_EdgeBuilder(*args))

    def Vertex(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Vertex(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_EdgeBuilder
TopOpeBRepBuild_EdgeBuilder.InitEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdge, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.InitEdgeBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdgeBuilder, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.InitVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitVertex, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.MoreEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreEdge, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.MoreVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreVertex, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.NextEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextEdge, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.NextVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextVertex, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.Parameter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Parameter, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.Vertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Vertex, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_swigregister
TopOpeBRepBuild_EdgeBuilder_swigregister(TopOpeBRepBuild_EdgeBuilder)

class TopOpeBRepBuild_FaceAreaBuilder(TopOpeBRepBuild_Area2dBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def InitFaceAreaBuilder(self, *args) -> "void":
        """
        :param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_InitFaceAreaBuilder(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        * Creates a FaceAreaBuilder to build faces on the (wires,blocks of edge) of <LS>, using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_FaceAreaBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_FaceAreaBuilder
TopOpeBRepBuild_FaceAreaBuilder.InitFaceAreaBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_InitFaceAreaBuilder, None, TopOpeBRepBuild_FaceAreaBuilder)
TopOpeBRepBuild_FaceAreaBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_swigregister
TopOpeBRepBuild_FaceAreaBuilder_swigregister(TopOpeBRepBuild_FaceAreaBuilder)

class TopOpeBRepBuild_ShellFaceClassifier(TopOpeBRepBuild_CompositeClassifier):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Clear(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_Clear(self, *args)


    def __init__(self, *args):
        """
        * Creates a classifier in 3D space, to compare : a face with a set of faces a shell with a set of faces a shell with a shell
        	:param BB:
        	:type BB: TopOpeBRepBuild_BlockBuilder
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShellFaceClassifier(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShellFaceClassifier
TopOpeBRepBuild_ShellFaceClassifier.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_Clear, None, TopOpeBRepBuild_ShellFaceClassifier)
TopOpeBRepBuild_ShellFaceClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_swigregister
TopOpeBRepBuild_ShellFaceClassifier_swigregister(TopOpeBRepBuild_ShellFaceClassifier)

class TopOpeBRepBuild_SolidAreaBuilder(TopOpeBRepBuild_Area3dBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def InitSolidAreaBuilder(self, *args) -> "void":
        """
        :param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_InitSolidAreaBuilder(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        * Creates a SolidAreaBuilder to build Solids on the (shells,blocks of face) of <LS>, using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_SolidAreaBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_SolidAreaBuilder
TopOpeBRepBuild_SolidAreaBuilder.InitSolidAreaBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_InitSolidAreaBuilder, None, TopOpeBRepBuild_SolidAreaBuilder)
TopOpeBRepBuild_SolidAreaBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_swigregister
TopOpeBRepBuild_SolidAreaBuilder_swigregister(TopOpeBRepBuild_SolidAreaBuilder)

class TopOpeBRepBuild_WireEdgeClassifier(TopOpeBRepBuild_CompositeClassifier):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def LoopToShape(self, *args) -> "TopoDS_Shape":
        """
        :param L:
        	:type L: TopOpeBRepBuild_Loop
        	:rtype: TopoDS_Shape
        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_LoopToShape(self, *args)


    def __init__(self, *args):
        """
        * Creates a classifier on edge <F>. Used to compare edges and wires on the edge <F>.
        	:param F:
        	:type F: TopoDS_Shape
        	:param BB:
        	:type BB: TopOpeBRepBuild_BlockBuilder
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_WireEdgeClassifier(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_WireEdgeClassifier
TopOpeBRepBuild_WireEdgeClassifier.LoopToShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_LoopToShape, None, TopOpeBRepBuild_WireEdgeClassifier)
TopOpeBRepBuild_WireEdgeClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_swigregister
TopOpeBRepBuild_WireEdgeClassifier_swigregister(TopOpeBRepBuild_WireEdgeClassifier)



