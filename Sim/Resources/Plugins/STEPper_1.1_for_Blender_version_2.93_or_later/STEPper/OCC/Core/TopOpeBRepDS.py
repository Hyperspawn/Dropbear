# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TopOpeBRepDS module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_topopebrepds.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _TopOpeBRepDS.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_TopOpeBRepDS')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_TopOpeBRepDS')
    _TopOpeBRepDS = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TopOpeBRepDS', [dirname(__file__)])
        except ImportError:
            import _TopOpeBRepDS
            return _TopOpeBRepDS
        try:
            _mod = imp.load_module('_TopOpeBRepDS', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _TopOpeBRepDS = swig_import_helper()
    del swig_import_helper
else:
    import _TopOpeBRepDS
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TopOpeBRepDS.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _TopOpeBRepDS.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _TopOpeBRepDS.process_exception(error, method_name, class_name)
process_exception = _TopOpeBRepDS.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.Geom
import OCC.Core.gp
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TopAbs
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.TopLoc
import OCC.Core.TopOpeBRepTool
import OCC.Core.TopTools
import OCC.Core.BRepClass3d
import OCC.Core.IntCurveSurface
import OCC.Core.math
import OCC.Core.Adaptor3d
import OCC.Core.Adaptor2d
import OCC.Core.Geom2d
import OCC.Core.Intf
import OCC.Core.Bnd
import OCC.Core.BVH
import OCC.Core.IntSurf
import OCC.Core.IntCurvesFace
import OCC.Core.BRepAdaptor
import OCC.Core.GeomAdaptor
import OCC.Core.Geom2dAdaptor
import OCC.Core.TopExp
import OCC.Core.Extrema
TopOpeBRepDS_UNSHGEOMETRY = _TopOpeBRepDS.TopOpeBRepDS_UNSHGEOMETRY
TopOpeBRepDS_SAMEORIENTED = _TopOpeBRepDS.TopOpeBRepDS_SAMEORIENTED
TopOpeBRepDS_DIFFORIENTED = _TopOpeBRepDS.TopOpeBRepDS_DIFFORIENTED
TopOpeBRepDS_OK = _TopOpeBRepDS.TopOpeBRepDS_OK
TopOpeBRepDS_NOK = _TopOpeBRepDS.TopOpeBRepDS_NOK
TopOpeBRepDS_POINT = _TopOpeBRepDS.TopOpeBRepDS_POINT
TopOpeBRepDS_CURVE = _TopOpeBRepDS.TopOpeBRepDS_CURVE
TopOpeBRepDS_SURFACE = _TopOpeBRepDS.TopOpeBRepDS_SURFACE
TopOpeBRepDS_VERTEX = _TopOpeBRepDS.TopOpeBRepDS_VERTEX
TopOpeBRepDS_EDGE = _TopOpeBRepDS.TopOpeBRepDS_EDGE
TopOpeBRepDS_WIRE = _TopOpeBRepDS.TopOpeBRepDS_WIRE
TopOpeBRepDS_FACE = _TopOpeBRepDS.TopOpeBRepDS_FACE
TopOpeBRepDS_SHELL = _TopOpeBRepDS.TopOpeBRepDS_SHELL
TopOpeBRepDS_SOLID = _TopOpeBRepDS.TopOpeBRepDS_SOLID
TopOpeBRepDS_COMPSOLID = _TopOpeBRepDS.TopOpeBRepDS_COMPSOLID
TopOpeBRepDS_COMPOUND = _TopOpeBRepDS.TopOpeBRepDS_COMPOUND
TopOpeBRepDS_UNKNOWN = _TopOpeBRepDS.TopOpeBRepDS_UNKNOWN

def Handle_TopOpeBRepDS_Association_Create() -> "opencascade::handle< TopOpeBRepDS_Association >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_Create()
Handle_TopOpeBRepDS_Association_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_Create

def Handle_TopOpeBRepDS_Association_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_Association >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_DownCast(t)
Handle_TopOpeBRepDS_Association_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_DownCast

def Handle_TopOpeBRepDS_Association_IsNull(t: 'opencascade::handle< TopOpeBRepDS_Association > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_IsNull(t)
Handle_TopOpeBRepDS_Association_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_IsNull

def Handle_TopOpeBRepDS_Check_Create() -> "opencascade::handle< TopOpeBRepDS_Check >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_Create()
Handle_TopOpeBRepDS_Check_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_Create

def Handle_TopOpeBRepDS_Check_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_Check >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_DownCast(t)
Handle_TopOpeBRepDS_Check_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_DownCast

def Handle_TopOpeBRepDS_Check_IsNull(t: 'opencascade::handle< TopOpeBRepDS_Check > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_IsNull(t)
Handle_TopOpeBRepDS_Check_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_IsNull

def Handle_TopOpeBRepDS_GapTool_Create() -> "opencascade::handle< TopOpeBRepDS_GapTool >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_Create()
Handle_TopOpeBRepDS_GapTool_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_Create

def Handle_TopOpeBRepDS_GapTool_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_GapTool >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_DownCast(t)
Handle_TopOpeBRepDS_GapTool_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_DownCast

def Handle_TopOpeBRepDS_GapTool_IsNull(t: 'opencascade::handle< TopOpeBRepDS_GapTool > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_IsNull(t)
Handle_TopOpeBRepDS_GapTool_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_IsNull

def Handle_TopOpeBRepDS_Interference_Create() -> "opencascade::handle< TopOpeBRepDS_Interference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_Create()
Handle_TopOpeBRepDS_Interference_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_Create

def Handle_TopOpeBRepDS_Interference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_Interference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_DownCast(t)
Handle_TopOpeBRepDS_Interference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_DownCast

def Handle_TopOpeBRepDS_Interference_IsNull(t: 'opencascade::handle< TopOpeBRepDS_Interference > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_IsNull(t)
Handle_TopOpeBRepDS_Interference_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_IsNull

def Handle_TopOpeBRepDS_Marker_Create() -> "opencascade::handle< TopOpeBRepDS_Marker >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_Create()
Handle_TopOpeBRepDS_Marker_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_Create

def Handle_TopOpeBRepDS_Marker_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_Marker >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_DownCast(t)
Handle_TopOpeBRepDS_Marker_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_DownCast

def Handle_TopOpeBRepDS_Marker_IsNull(t: 'opencascade::handle< TopOpeBRepDS_Marker > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_IsNull(t)
Handle_TopOpeBRepDS_Marker_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_IsNull

def Handle_TopOpeBRepDS_CurvePointInterference_Create() -> "opencascade::handle< TopOpeBRepDS_CurvePointInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_Create()
Handle_TopOpeBRepDS_CurvePointInterference_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_Create

def Handle_TopOpeBRepDS_CurvePointInterference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_CurvePointInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_DownCast(t)
Handle_TopOpeBRepDS_CurvePointInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_DownCast

def Handle_TopOpeBRepDS_CurvePointInterference_IsNull(t: 'opencascade::handle< TopOpeBRepDS_CurvePointInterference > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_IsNull(t)
Handle_TopOpeBRepDS_CurvePointInterference_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_IsNull

def Handle_TopOpeBRepDS_ShapeShapeInterference_Create() -> "opencascade::handle< TopOpeBRepDS_ShapeShapeInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_Create()
Handle_TopOpeBRepDS_ShapeShapeInterference_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_Create

def Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_ShapeShapeInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast(t)
Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast

def Handle_TopOpeBRepDS_ShapeShapeInterference_IsNull(t: 'opencascade::handle< TopOpeBRepDS_ShapeShapeInterference > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_IsNull(t)
Handle_TopOpeBRepDS_ShapeShapeInterference_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_IsNull

def Handle_TopOpeBRepDS_SolidSurfaceInterference_Create() -> "opencascade::handle< TopOpeBRepDS_SolidSurfaceInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_Create()
Handle_TopOpeBRepDS_SolidSurfaceInterference_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_Create

def Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_SolidSurfaceInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast(t)
Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast

def Handle_TopOpeBRepDS_SolidSurfaceInterference_IsNull(t: 'opencascade::handle< TopOpeBRepDS_SolidSurfaceInterference > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_IsNull(t)
Handle_TopOpeBRepDS_SolidSurfaceInterference_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_IsNull

def Handle_TopOpeBRepDS_SurfaceCurveInterference_Create() -> "opencascade::handle< TopOpeBRepDS_SurfaceCurveInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_Create()
Handle_TopOpeBRepDS_SurfaceCurveInterference_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_Create

def Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_SurfaceCurveInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast(t)
Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast

def Handle_TopOpeBRepDS_SurfaceCurveInterference_IsNull(t: 'opencascade::handle< TopOpeBRepDS_SurfaceCurveInterference > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_IsNull(t)
Handle_TopOpeBRepDS_SurfaceCurveInterference_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_IsNull

def Handle_TopOpeBRepDS_EdgeVertexInterference_Create() -> "opencascade::handle< TopOpeBRepDS_EdgeVertexInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_Create()
Handle_TopOpeBRepDS_EdgeVertexInterference_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_Create

def Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_EdgeVertexInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast(t)
Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast

def Handle_TopOpeBRepDS_EdgeVertexInterference_IsNull(t: 'opencascade::handle< TopOpeBRepDS_EdgeVertexInterference > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_IsNull(t)
Handle_TopOpeBRepDS_EdgeVertexInterference_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_IsNull

def Handle_TopOpeBRepDS_FaceEdgeInterference_Create() -> "opencascade::handle< TopOpeBRepDS_FaceEdgeInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_Create()
Handle_TopOpeBRepDS_FaceEdgeInterference_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_Create

def Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_FaceEdgeInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast(t)
Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast

def Handle_TopOpeBRepDS_FaceEdgeInterference_IsNull(t: 'opencascade::handle< TopOpeBRepDS_FaceEdgeInterference > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_IsNull(t)
Handle_TopOpeBRepDS_FaceEdgeInterference_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_IsNull

def Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Create() -> "opencascade::handle< TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Create()
Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Create = _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Create

def Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference >":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast(t)
Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast

def Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_IsNull(t: 'opencascade::handle< TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference > const &') -> "bool":
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_IsNull(t)
Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_IsNull = _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_IsNull
class TopOpeBRepDS_IndexedDataMapOfVertexPoint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_IndexedDataMapOfVertexPoint(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_IndexedDataMapOfVertexPoint
TopOpeBRepDS_IndexedDataMapOfVertexPoint.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_begin, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_end, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_cbegin, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_cend, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Exchange, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Assign, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Set, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ReSize, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Add, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Contains = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Contains, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Substitute = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Substitute, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Swap = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Swap, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.RemoveLast = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_RemoveLast, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.RemoveFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_RemoveFromIndex, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.RemoveKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_RemoveKey, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.FindKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindKey, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.FindFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindFromIndex, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.ChangeFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ChangeFromIndex, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint___call__, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.FindIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindIndex, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.ChangeFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ChangeFromKey, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Seek, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ChangeSeek, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.FindFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindFromKey, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Clear, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Size, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint_swigregister = _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_swigregister
TopOpeBRepDS_IndexedDataMapOfVertexPoint_swigregister(TopOpeBRepDS_IndexedDataMapOfVertexPoint)

class TopOpeBRepDS_MapOfSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfSurface(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_MapOfSurface
TopOpeBRepDS_MapOfSurface.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_begin, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_end, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_cbegin, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_cend, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Exchange, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Assign, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Set, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_ReSize, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Bind, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Bound, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_IsBound, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_UnBind, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Seek, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Find, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_ChangeSeek, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_ChangeFind, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface___call__, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Clear, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Size, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Keys = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Keys, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_swigregister
TopOpeBRepDS_MapOfSurface_swigregister(TopOpeBRepDS_MapOfSurface)

class TopOpeBRepDS_MapOfShapeData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfShapeData(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_MapOfShapeData
TopOpeBRepDS_MapOfShapeData.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_begin, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_end, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_cbegin, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_cend, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Exchange, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Assign, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Set, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ReSize, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Add, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Contains = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Contains, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Substitute = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Substitute, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Swap = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Swap, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.RemoveLast = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_RemoveLast, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.RemoveFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_RemoveFromIndex, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.RemoveKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_RemoveKey, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.FindKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindKey, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.FindFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindFromIndex, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.ChangeFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ChangeFromIndex, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData___call__, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.FindIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindIndex, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.ChangeFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ChangeFromKey, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Seek, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ChangeSeek, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.FindFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindFromKey, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Clear, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Size, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_swigregister
TopOpeBRepDS_MapOfShapeData_swigregister(TopOpeBRepDS_MapOfShapeData)

class TopOpeBRepDS_DataMapOfIntegerListOfInterference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfIntegerListOfInterference(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_DataMapOfIntegerListOfInterference
TopOpeBRepDS_DataMapOfIntegerListOfInterference.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_begin, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_end, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_cbegin, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_cend, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Exchange, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Assign, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Set, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_ReSize, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Bind, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Bound, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_IsBound, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_UnBind, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Seek, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Find, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_ChangeSeek, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_ChangeFind, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference___call__, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Clear, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Size, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Keys = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Keys, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_swigregister
TopOpeBRepDS_DataMapOfIntegerListOfInterference_swigregister(TopOpeBRepDS_DataMapOfIntegerListOfInterference)

class TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_begin, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_end, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_cbegin, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_cend, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Exchange, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Assign, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Set, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_ReSize, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Bind, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Bound, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_IsBound, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_UnBind, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Seek, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Find, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_ChangeSeek, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_ChangeFind, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State___call__, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Clear, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Size, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_swigregister
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_swigregister(TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)

class TopOpeBRepDS_DataMapOfCheckStatus(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfCheckStatus(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_DataMapOfCheckStatus
TopOpeBRepDS_DataMapOfCheckStatus.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_begin, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_end, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_cbegin, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_cend, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Exchange, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Assign, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Set, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_ReSize, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Bind, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Bound, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_IsBound, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_UnBind, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Seek, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Find, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_ChangeSeek, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_ChangeFind, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus___call__, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Clear, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Size, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Keys = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Keys, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_swigregister
TopOpeBRepDS_DataMapOfCheckStatus_swigregister(TopOpeBRepDS_DataMapOfCheckStatus)

class TopOpeBRepDS_DataMapOfShapeState(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfShapeState(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_DataMapOfShapeState
TopOpeBRepDS_DataMapOfShapeState.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_begin, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_end, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_cbegin, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_cend, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Exchange, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Assign, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Set, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_ReSize, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Bind, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Bound, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_IsBound, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_UnBind, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Seek, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Find, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_ChangeSeek, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_ChangeFind, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState___call__, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Clear, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Size, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_swigregister
TopOpeBRepDS_DataMapOfShapeState_swigregister(TopOpeBRepDS_DataMapOfShapeState)

class TopOpeBRepDS_IndexedDataMapOfShapeWithState(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_IndexedDataMapOfShapeWithState(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_IndexedDataMapOfShapeWithState
TopOpeBRepDS_IndexedDataMapOfShapeWithState.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_begin, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_end, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_cbegin, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_cend, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Exchange, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Assign, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Set, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ReSize, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Add, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Contains = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Contains, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Substitute = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Substitute, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Swap = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Swap, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.RemoveLast = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_RemoveLast, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.RemoveFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_RemoveFromIndex, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.RemoveKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_RemoveKey, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.FindKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindKey, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.FindFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindFromIndex, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.ChangeFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ChangeFromIndex, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState___call__, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.FindIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindIndex, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.ChangeFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ChangeFromKey, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Seek, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ChangeSeek, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.FindFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindFromKey, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Clear, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Size, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState_swigregister = _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_swigregister
TopOpeBRepDS_IndexedDataMapOfShapeWithState_swigregister(TopOpeBRepDS_IndexedDataMapOfShapeWithState)

class TopOpeBRepDS_DataMapOfInterferenceListOfInterference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfInterferenceListOfInterference(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_DataMapOfInterferenceListOfInterference
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_begin, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_end, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_cbegin, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_cend, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Exchange, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Assign, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Set, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_ReSize, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Bind, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Bound, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_IsBound, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_UnBind, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Seek, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Find, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_ChangeSeek, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_ChangeFind, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference___call__, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Clear, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Size, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_swigregister
TopOpeBRepDS_DataMapOfInterferenceListOfInterference_swigregister(TopOpeBRepDS_DataMapOfInterferenceListOfInterference)

class TopOpeBRepDS_ListOfInterference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ListOfInterference(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_ListOfInterference
TopOpeBRepDS_ListOfInterference.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_begin, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_end, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_cbegin, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_cend, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Size, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Assign, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Set, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Clear, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.First = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_First, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Last = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Last, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Append = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Append, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Prepend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Prepend, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.RemoveFirst = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_RemoveFirst, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Remove = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Remove, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.InsertBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_InsertBefore, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.InsertAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_InsertAfter, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Reverse = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Reverse, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_swigregister
TopOpeBRepDS_ListOfInterference_swigregister(TopOpeBRepDS_ListOfInterference)

class TopOpeBRepDS_ListIteratorOfListOfInterference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ListIteratorOfListOfInterference(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_ListIteratorOfListOfInterference
TopOpeBRepDS_ListIteratorOfListOfInterference.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_More, None, TopOpeBRepDS_ListIteratorOfListOfInterference)
TopOpeBRepDS_ListIteratorOfListOfInterference.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_Next, None, TopOpeBRepDS_ListIteratorOfListOfInterference)
TopOpeBRepDS_ListIteratorOfListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_Value, None, TopOpeBRepDS_ListIteratorOfListOfInterference)
TopOpeBRepDS_ListIteratorOfListOfInterference.ChangeValue = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_ChangeValue, None, TopOpeBRepDS_ListIteratorOfListOfInterference)
TopOpeBRepDS_ListIteratorOfListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_swigregister
TopOpeBRepDS_ListIteratorOfListOfInterference_swigregister(TopOpeBRepDS_ListIteratorOfListOfInterference)

class TopOpeBRepDS_ShapeSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ShapeSurface(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_ShapeSurface
TopOpeBRepDS_ShapeSurface.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_begin, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_end, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_cbegin, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_cend, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Exchange, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Assign, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Set, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_ReSize, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Bind, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Bound, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_IsBound, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_UnBind, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Seek, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Find, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_ChangeSeek, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_ChangeFind, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface___call__, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Clear, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Size, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_swigregister
TopOpeBRepDS_ShapeSurface_swigregister(TopOpeBRepDS_ShapeSurface)

class TopOpeBRepDS_DataMapOfInterferenceShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfInterferenceShape(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_DataMapOfInterferenceShape
TopOpeBRepDS_DataMapOfInterferenceShape.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_begin, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_end, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_cbegin, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_cend, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Exchange, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Assign, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Set, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_ReSize, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Bind, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Bound, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_IsBound, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_UnBind, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Seek, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Find, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_ChangeSeek, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_ChangeFind, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape___call__, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Clear, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Size, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_swigregister
TopOpeBRepDS_DataMapOfInterferenceShape_swigregister(TopOpeBRepDS_DataMapOfInterferenceShape)

class TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_begin, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_end, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_cbegin, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_cend, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Init, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Size, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Length = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Length, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.IsEmpty = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_IsEmpty, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Lower = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Lower, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Upper = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Upper, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.IsDeletable = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_IsDeletable, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.IsAllocated = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_IsAllocated, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Assign, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Move = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Move, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Set, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.First = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_First, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.ChangeFirst = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_ChangeFirst, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Last = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Last, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.ChangeLast = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_ChangeLast, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Value, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.ChangeValue = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_ChangeValue, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference___call__, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.SetValue = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_SetValue, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Resize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Resize, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_swigregister
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_swigregister(TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)

class TopOpeBRepDS_MapOfIntegerShapeData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfIntegerShapeData(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_MapOfIntegerShapeData
TopOpeBRepDS_MapOfIntegerShapeData.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_begin, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_end, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_cbegin, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_cend, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Exchange, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Assign, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Set, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_ReSize, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Bind, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Bound, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_IsBound, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_UnBind, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Seek, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Find, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_ChangeSeek, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_ChangeFind, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData___call__, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Clear, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Size, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Keys = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Keys, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_swigregister
TopOpeBRepDS_MapOfIntegerShapeData_swigregister(TopOpeBRepDS_MapOfIntegerShapeData)

class TopOpeBRepDS_MapOfPoint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfPoint(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_MapOfPoint
TopOpeBRepDS_MapOfPoint.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_begin, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_end, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_cbegin, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_cend, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Exchange, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Assign, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Set, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_ReSize, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Bind, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Bound, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_IsBound, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_UnBind, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Seek, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Find, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_ChangeSeek, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_ChangeFind, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint___call__, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Clear, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Size, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Keys = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Keys, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_swigregister
TopOpeBRepDS_MapOfPoint_swigregister(TopOpeBRepDS_MapOfPoint)

class TopOpeBRepDS_MapOfCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfCurve(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_MapOfCurve
TopOpeBRepDS_MapOfCurve.begin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_begin, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.end = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_end, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.cbegin = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_cbegin, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.cend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_cend, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Exchange, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Assign, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Set, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_ReSize, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Bind, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Bound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Bound, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_IsBound, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_UnBind, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Seek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Seek, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Find, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.ChangeSeek = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_ChangeSeek, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_ChangeFind, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.__call__ = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve___call__, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Clear, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Size, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Keys = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Keys, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_swigregister
TopOpeBRepDS_MapOfCurve_swigregister(TopOpeBRepDS_MapOfCurve)

class TopOpeBRepDS_DoubleMapOfIntegerShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DoubleMapOfIntegerShape(*args))
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_DoubleMapOfIntegerShape
TopOpeBRepDS_DoubleMapOfIntegerShape.Exchange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Exchange, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Assign, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Set, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_ReSize, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Bind, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.AreBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_AreBound, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.IsBound1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_IsBound1, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.IsBound2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_IsBound2, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.UnBind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_UnBind1, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.UnBind2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_UnBind2, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Find1, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Seek1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Seek1, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Find2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Find2, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Seek2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Seek2, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Clear, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Size = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Size, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_swigregister
TopOpeBRepDS_DoubleMapOfIntegerShape_swigregister(TopOpeBRepDS_DoubleMapOfIntegerShape)

class topopebrepds(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def IsGeometry(*args) -> "Standard_Boolean":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:rtype: bool
        """
        return _TopOpeBRepDS.topopebrepds_IsGeometry(*args)

    IsGeometry = staticmethod(IsGeometry)

    def IsTopology(*args) -> "Standard_Boolean":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:rtype: bool
        """
        return _TopOpeBRepDS.topopebrepds_IsTopology(*args)

    IsTopology = staticmethod(IsTopology)

    def KindToShape(*args) -> "TopAbs_ShapeEnum":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:rtype: TopAbs_ShapeEnum
        """
        return _TopOpeBRepDS.topopebrepds_KindToShape(*args)

    KindToShape = staticmethod(KindToShape)

    def Print(*args) -> "Standard_OStream &":
        """
        :param S:
        	:type S: TopAbs_State
        	:param OS:
        	:type OS: Standard_OStream
        	:rtype: Standard_OStream
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param S:
        	:type S: Standard_OStream
        	:rtype: Standard_OStream
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param I:
        	:type I: int
        	:param S:
        	:type S: Standard_OStream
        	:param B: default value is 
        	:type B: TCollection_AsciiString
        	:param A: default value is 
        	:type A: TCollection_AsciiString
        	:rtype: Standard_OStream
        :param T:
        	:type T: TopAbs_ShapeEnum
        	:param I:
        	:type I: int
        	:param S:
        	:type S: Standard_OStream
        	:rtype: Standard_OStream
        :param C:
        	:type C: TopOpeBRepDS_Config
        	:param S:
        	:type S: Standard_OStream
        	:rtype: Standard_OStream
        """
        return _TopOpeBRepDS.topopebrepds_Print(*args)

    Print = staticmethod(Print)

    def SPrint(*args) -> "TCollection_AsciiString":
        """
        * IN OU ON UN
        	:param S:
        	:type S: TopAbs_State
        	:rtype: TCollection_AsciiString
        * <K>
        	:param K:
        	:type K: TopOpeBRepDS_Kind
        	:rtype: TCollection_AsciiString
        * S1(<K>,<I>)S2
        	:param K:
        	:type K: TopOpeBRepDS_Kind
        	:param I:
        	:type I: int
        	:param B: default value is 
        	:type B: TCollection_AsciiString
        	:param A: default value is 
        	:type A: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        :param T:
        	:type T: TopAbs_ShapeEnum
        	:rtype: TCollection_AsciiString
        * (<T>,<I>)
        	:param T:
        	:type T: TopAbs_ShapeEnum
        	:param I:
        	:type I: int
        	:rtype: TCollection_AsciiString
        :param O:
        	:type O: TopAbs_Orientation
        	:rtype: TCollection_AsciiString
        :param C:
        	:type C: TopOpeBRepDS_Config
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepDS.topopebrepds_SPrint(*args)

    SPrint = staticmethod(SPrint)

    def ShapeToKind(*args) -> "TopOpeBRepDS_Kind":
        """
        :param S:
        	:type S: TopAbs_ShapeEnum
        	:rtype: TopOpeBRepDS_Kind
        """
        return _TopOpeBRepDS.topopebrepds_ShapeToKind(*args)

    ShapeToKind = staticmethod(ShapeToKind)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRepDS.topopebrepds_swiginit(self, _TopOpeBRepDS.new_topopebrepds())
    __swig_destroy__ = _TopOpeBRepDS.delete_topopebrepds
topopebrepds_swigregister = _TopOpeBRepDS.topopebrepds_swigregister
topopebrepds_swigregister(topopebrepds)

def topopebrepds_IsGeometry(*args) -> "Standard_Boolean":
    """
    :param K:
    	:type K: TopOpeBRepDS_Kind
    	:rtype: bool
    """
    return _TopOpeBRepDS.topopebrepds_IsGeometry(*args)

def topopebrepds_IsTopology(*args) -> "Standard_Boolean":
    """
    :param K:
    	:type K: TopOpeBRepDS_Kind
    	:rtype: bool
    """
    return _TopOpeBRepDS.topopebrepds_IsTopology(*args)

def topopebrepds_KindToShape(*args) -> "TopAbs_ShapeEnum":
    """
    :param K:
    	:type K: TopOpeBRepDS_Kind
    	:rtype: TopAbs_ShapeEnum
    """
    return _TopOpeBRepDS.topopebrepds_KindToShape(*args)

def topopebrepds_Print(*args) -> "Standard_OStream &":
    """
    :param S:
    	:type S: TopAbs_State
    	:param OS:
    	:type OS: Standard_OStream
    	:rtype: Standard_OStream
    :param K:
    	:type K: TopOpeBRepDS_Kind
    	:param S:
    	:type S: Standard_OStream
    	:rtype: Standard_OStream
    :param K:
    	:type K: TopOpeBRepDS_Kind
    	:param I:
    	:type I: int
    	:param S:
    	:type S: Standard_OStream
    	:param B: default value is 
    	:type B: TCollection_AsciiString
    	:param A: default value is 
    	:type A: TCollection_AsciiString
    	:rtype: Standard_OStream
    :param T:
    	:type T: TopAbs_ShapeEnum
    	:param I:
    	:type I: int
    	:param S:
    	:type S: Standard_OStream
    	:rtype: Standard_OStream
    :param C:
    	:type C: TopOpeBRepDS_Config
    	:param S:
    	:type S: Standard_OStream
    	:rtype: Standard_OStream
    """
    return _TopOpeBRepDS.topopebrepds_Print(*args)

def topopebrepds_SPrint(*args) -> "TCollection_AsciiString":
    """
    * IN OU ON UN
    	:param S:
    	:type S: TopAbs_State
    	:rtype: TCollection_AsciiString
    * <K>
    	:param K:
    	:type K: TopOpeBRepDS_Kind
    	:rtype: TCollection_AsciiString
    * S1(<K>,<I>)S2
    	:param K:
    	:type K: TopOpeBRepDS_Kind
    	:param I:
    	:type I: int
    	:param B: default value is 
    	:type B: TCollection_AsciiString
    	:param A: default value is 
    	:type A: TCollection_AsciiString
    	:rtype: TCollection_AsciiString
    :param T:
    	:type T: TopAbs_ShapeEnum
    	:rtype: TCollection_AsciiString
    * (<T>,<I>)
    	:param T:
    	:type T: TopAbs_ShapeEnum
    	:param I:
    	:type I: int
    	:rtype: TCollection_AsciiString
    :param O:
    	:type O: TopAbs_Orientation
    	:rtype: TCollection_AsciiString
    :param C:
    	:type C: TopOpeBRepDS_Config
    	:rtype: TCollection_AsciiString
    """
    return _TopOpeBRepDS.topopebrepds_SPrint(*args)

def topopebrepds_ShapeToKind(*args) -> "TopOpeBRepDS_Kind":
    """
    :param S:
    	:type S: TopAbs_ShapeEnum
    	:rtype: TopOpeBRepDS_Kind
    """
    return _TopOpeBRepDS.topopebrepds_ShapeToKind(*args)

class TopOpeBRepDS_Association(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AreAssociated(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param K:
        	:type K: TopOpeBRepDS_Interference
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Association_AreAssociated(self, *args)


    def Associate(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param K:
        	:type K: TopOpeBRepDS_Interference
        	:rtype: None
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param LI:
        	:type LI: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Association_Associate(self, *args)


    def Associated(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Association_Associated(self, *args)


    def HasAssociation(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Association_HasAssociation(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepDS.TopOpeBRepDS_Association_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Association(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_Association_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Association
TopOpeBRepDS_Association.AreAssociated = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association_AreAssociated, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association.Associate = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association_Associate, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association.Associated = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association_Associated, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association.HasAssociation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association_HasAssociation, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Association_swigregister
TopOpeBRepDS_Association_swigregister(TopOpeBRepDS_Association)

class TopOpeBRepDS_BuildTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddEdgeVertex(self, *args) -> "void":
        """
        :param Ein:
        	:type Ein: TopoDS_Shape
        	:param Eou:
        	:type Eou: TopoDS_Shape
        	:param V:
        	:type V: TopoDS_Shape
        	:rtype: None
        :param E:
        	:type E: TopoDS_Shape
        	:param V:
        	:type V: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddEdgeVertex(self, *args)


    def AddFaceWire(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param W:
        	:type W: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddFaceWire(self, *args)


    def AddShellFace(self, *args) -> "void":
        """
        :param Sh:
        	:type Sh: TopoDS_Shape
        	:param F:
        	:type F: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddShellFace(self, *args)


    def AddSolidShell(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param Sh:
        	:type Sh: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddSolidShell(self, *args)


    def AddWireEdge(self, *args) -> "void":
        """
        :param W:
        	:type W: TopoDS_Shape
        	:param E:
        	:type E: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddWireEdge(self, *args)


    def ApproxCurves(self, *args) -> "void":
        """
        :param C:
        	:type C: TopOpeBRepDS_Curve
        	:param E:
        	:type E: TopoDS_Edge
        	:param inewC:
        	:type inewC: int
        	:param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_ApproxCurves(self, *args)


    def Approximation(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Approximation(self, *args)


    def ChangeGeomTool(self, *args) -> "TopOpeBRepTool_GeomTool &":
        """:rtype: TopOpeBRepTool_GeomTool"""
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_ChangeGeomTool(self, *args)


    def Closed(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param B:
        	:type B: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Closed(self, *args)


    def ComputePCurves(self, *args) -> "void":
        """
        :param C:
        	:type C: TopOpeBRepDS_Curve
        	:param E:
        	:type E: TopoDS_Edge
        	:param newC:
        	:type newC: TopOpeBRepDS_Curve
        	:param CompPC1:
        	:type CompPC1: bool
        	:param CompPC2:
        	:type CompPC2: bool
        	:param CompC3D:
        	:type CompC3D: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_ComputePCurves(self, *args)


    def CopyEdge(self, *args) -> "void":
        """
        * Make an edge <Eou> with the curve of the edge <Ein>
        	:param Ein:
        	:type Ein: TopoDS_Shape
        	:param Eou:
        	:type Eou: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_CopyEdge(self, *args)


    def CopyFace(self, *args) -> "void":
        """
        * Make a face <Fou> with the surface of the face <Fin>
        	:param Fin:
        	:type Fin: TopoDS_Shape
        	:param Fou:
        	:type Fou: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_CopyFace(self, *args)


    def Curve3D(self, *args) -> "void":
        """
        * Sets the curve <C> for the edge <E>
        	:param E:
        	:type E: TopoDS_Shape
        	:param C:
        	:type C: Geom_Curve
        	:param Tol:
        	:type Tol: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Curve3D(self, *args)


    def GetGeomTool(self, *args) -> "TopOpeBRepTool_GeomTool const &":
        """:rtype: TopOpeBRepTool_GeomTool"""
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_GetGeomTool(self, *args)


    def GetOrientedEdgeVertices(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Edge
        	:param Vmin:
        	:type Vmin: TopoDS_Vertex
        	:param Vmax:
        	:type Vmax: TopoDS_Vertex
        	:param Parmin:
        	:type Parmin: float
        	:param Parmax:
        	:type Parmax: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_GetOrientedEdgeVertices(self, *args)


    def MakeEdge(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param C:
        	:type C: TopOpeBRepDS_Curve
        	:rtype: None
        :param E:
        	:type E: TopoDS_Shape
        	:param C:
        	:type C: TopOpeBRepDS_Curve
        	:param DS:
        	:type DS: TopOpeBRepDS_DataStructure
        	:rtype: None
        :param E:
        	:type E: TopoDS_Shape
        	:param C:
        	:type C: Geom_Curve
        	:param Tol:
        	:type Tol: float
        	:rtype: None
        :param E:
        	:type E: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeEdge(self, *args)


    def MakeFace(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param S:
        	:type S: TopOpeBRepDS_Surface
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeFace(self, *args)


    def MakeShell(self, *args) -> "void":
        """
        :param Sh:
        	:type Sh: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeShell(self, *args)


    def MakeSolid(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeSolid(self, *args)


    def MakeVertex(self, *args) -> "void":
        """
        :param V:
        	:type V: TopoDS_Shape
        	:param P:
        	:type P: TopOpeBRepDS_Point
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeVertex(self, *args)


    def MakeWire(self, *args) -> "void":
        """
        :param W:
        	:type W: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeWire(self, *args)


    def Orientation(self, *args) -> "TopAbs_Orientation":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param O:
        	:type O: TopAbs_Orientation
        	:rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: TopAbs_Orientation
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Orientation(self, *args)


    def OverWrite(self, *args) -> "void":
        """
        :rtype: bool
        :param O:
        	:type O: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_OverWrite(self, *args)


    def PCurve(self, *args) -> "void":
        """
        * Sets the pcurve <C> for the edge <E> on the face <F>. If OverWrite is True the old pcurve if there is one is overwritten, else the two pcurves are set.
        	:param F:
        	:type F: TopoDS_Shape
        	:param E:
        	:type E: TopoDS_Shape
        	:param C:
        	:type C: Geom2d_Curve
        	:rtype: None
        :param F:
        	:type F: TopoDS_Shape
        	:param E:
        	:type E: TopoDS_Shape
        	:param CDS:
        	:type CDS: TopOpeBRepDS_Curve
        	:param C:
        	:type C: Geom2d_Curve
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_PCurve(self, *args)


    def Parameter(self, *args) -> "void":
        """
        * Sets the parameter <P> for the vertex <V> on the edge <E>.
        	:param E:
        	:type E: TopoDS_Shape
        	:param V:
        	:type V: TopoDS_Shape
        	:param P:
        	:type P: float
        	:rtype: None
        * Compute the parameter of the vertex <V>, supported by the edge <E>, on the curve <C>.
        	:param C:
        	:type C: TopOpeBRepDS_Curve
        	:param E:
        	:type E: TopoDS_Shape
        	:param V:
        	:type V: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Parameter(self, *args)


    def PutPCurves(self, *args) -> "void":
        """
        :param newC:
        	:type newC: TopOpeBRepDS_Curve
        	:param E:
        	:type E: TopoDS_Edge
        	:param CompPC1:
        	:type CompPC1: bool
        	:param CompPC2:
        	:type CompPC2: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_PutPCurves(self, *args)


    def Range(self, *args) -> "void":
        """
        * Sets the range of edge <E>.
        	:param E:
        	:type E: TopoDS_Shape
        	:param first:
        	:type first: float
        	:param last:
        	:type last: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Range(self, *args)


    def RecomputeCurves(self, *args) -> "void":
        """
        :param C:
        	:type C: TopOpeBRepDS_Curve
        	:param oldE:
        	:type oldE: TopoDS_Edge
        	:param E:
        	:type E: TopoDS_Edge
        	:param inewC:
        	:type inewC: int
        	:param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_RecomputeCurves(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param OutCurveType:
        	:type OutCurveType: TopOpeBRepTool_OutCurveType
        	:rtype: None
        :param GT:
        	:type GT: TopOpeBRepTool_GeomTool
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_BuildTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_BuildTool(*args))

    def Translate(self, *args) -> "void":
        """
        :rtype: bool
        :param T:
        	:type T: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Translate(self, *args)


    def UpdateEdge(self, *args) -> "void":
        """
        * Sets the range of edge <Eou> from <Ein> only when <Ein> has a closed geometry.
        	:param Ein:
        	:type Ein: TopoDS_Shape
        	:param Eou:
        	:type Eou: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateEdge(self, *args)


    def UpdateEdgeCurveTol(self, *args) -> "void":
        """
        :param F1:
        	:type F1: TopoDS_Face
        	:param F2:
        	:type F2: TopoDS_Face
        	:param E:
        	:type E: TopoDS_Edge
        	:param C3Dnew:
        	:type C3Dnew: Geom_Curve
        	:param tol3d:
        	:type tol3d: float
        	:param tol2d1:
        	:type tol2d1: float
        	:param tol2d2:
        	:type tol2d2: float
        	:param newtol:
        	:type newtol: float
        	:param newparmin:
        	:type newparmin: float
        	:param newparmax:
        	:type newparmax: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateEdgeCurveTol(self, *args)


    def UpdateSurface(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param SU:
        	:type SU: Geom_Surface
        	:rtype: None
        :param E:
        	:type E: TopoDS_Shape
        	:param oldF:
        	:type oldF: TopoDS_Shape
        	:param newF:
        	:type newF: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateSurface(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_BuildTool
TopOpeBRepDS_BuildTool.AddEdgeVertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddEdgeVertex, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.AddFaceWire = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddFaceWire, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.AddShellFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddShellFace, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.AddSolidShell = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddSolidShell, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.AddWireEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddWireEdge, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.ApproxCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_ApproxCurves, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Approximation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Approximation, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.ChangeGeomTool = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_ChangeGeomTool, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Closed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Closed, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.ComputePCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_ComputePCurves, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.CopyEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_CopyEdge, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.CopyFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_CopyFace, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Curve3D = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Curve3D, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.GetGeomTool = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_GetGeomTool, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.GetOrientedEdgeVertices = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_GetOrientedEdgeVertices, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeEdge, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeFace, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeShell = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeShell, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeSolid = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeSolid, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeVertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeVertex, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeWire = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeWire, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Orientation, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.OverWrite = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_OverWrite, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.PCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_PCurve, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Parameter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Parameter, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.PutPCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_PutPCurves, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Range = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Range, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.RecomputeCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_RecomputeCurves, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Translate = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Translate, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.UpdateEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateEdge, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.UpdateEdgeCurveTol = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateEdgeCurveTol, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.UpdateSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateSurface, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_BuildTool_swigregister
TopOpeBRepDS_BuildTool_swigregister(TopOpeBRepDS_BuildTool)

class TopOpeBRepDS_Check(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeHDS(self, *args) -> "opencascade::handle< TopOpeBRepDS_HDataStructure > &":
        """:rtype: opencascade::handle<TopOpeBRepDS_HDataStructure>"""
        return _TopOpeBRepDS.TopOpeBRepDS_Check_ChangeHDS(self, *args)


    def CheckDS(self, *args) -> "Standard_Boolean":
        """
        * Verifie que le ieme element de la DS existe, et pour un K de type topologique, verifie qu'il est du bon type (VERTEX, EDGE, WIRE, FACE, SHELL ou SOLID)
        	:param i:
        	:type i: int
        	:param K:
        	:type K: TopOpeBRepDS_Kind
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_CheckDS(self, *args)


    def CheckShapes(self, *args) -> "Standard_Boolean":
        """
        * Verifie que les Shapes existent bien dans la DS Utile pour les Shapes SameDomain si la liste est vide, renvoie vrai
        	:param LS:
        	:type LS: TopTools_ListOfShape
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_CheckShapes(self, *args)


    def ChkIntg(self, *args) -> "Standard_Boolean":
        """
        * Check integrition of DS
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntg(self, *args)


    def ChkIntgInterf(self, *args) -> "Standard_Boolean":
        """
        * Check integrition of interferences (les supports et les geometries de LI)
        	:param LI:
        	:type LI: TopOpeBRepDS_ListOfInterference
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntgInterf(self, *args)


    def ChkIntgSamDom(self, *args) -> "Standard_Boolean":
        """
        * Check integrition des champs SameDomain de la DS
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntgSamDom(self, *args)


    def HDS(self, *args) -> "opencascade::handle< TopOpeBRepDS_HDataStructure > const &":
        """:rtype: opencascade::handle<TopOpeBRepDS_HDataStructure>"""
        return _TopOpeBRepDS.TopOpeBRepDS_Check_HDS(self, *args)


    def OneVertexOnPnt(self, *args) -> "Standard_Boolean":
        """
        * Verifie que les Vertex non SameDomain sont bien nonSameDomain, que les vertex sameDomain sont bien SameDomain, que les Points sont non confondus ni entre eux, ni avec des Vertex.
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_OneVertexOnPnt(self, *args)


    def Print(self, *args) -> "Standard_OStream &":
        """
        * Prints the name of CheckStatus <stat> as a String
        	:param stat:
        	:type stat: TopOpeBRepDS_CheckStatus
        	:param S:
        	:type S: Standard_OStream
        	:rtype: Standard_OStream
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_Print(self, *args)


    def PrintIntgToString(self) -> "std::string":
        """PrintIntgToString(TopOpeBRepDS_Check self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_Check_PrintIntgToString(self)


    def PrintShape(self, *args) -> "Standard_OStream &":
        """
        * Prints the name of CheckStatus <stat> as a String
        	:param SE:
        	:type SE: TopAbs_ShapeEnum
        	:param S:
        	:type S: Standard_OStream
        	:rtype: Standard_OStream
        * Prints the name of CheckStatus <stat> as a String
        	:param index:
        	:type index: int
        	:param S:
        	:type S: Standard_OStream
        	:rtype: Standard_OStream
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_PrintShape(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Check_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Check(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_Check_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Check
TopOpeBRepDS_Check.ChangeHDS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_ChangeHDS, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.CheckDS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_CheckDS, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.CheckShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_CheckShapes, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.ChkIntg = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntg, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.ChkIntgInterf = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntgInterf, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.ChkIntgSamDom = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntgSamDom, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.HDS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_HDS, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.OneVertexOnPnt = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_OneVertexOnPnt, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.Print = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_Print, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.PrintIntgToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_PrintIntgToString, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.PrintShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_PrintShape, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Check_swigregister
TopOpeBRepDS_Check_swigregister(TopOpeBRepDS_Check)

class TopOpeBRepDS_Curve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeCurve(self, *args) -> "opencascade::handle< Geom_Curve > &":
        """:rtype: opencascade::handle<Geom_Curve>"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeCurve(self, *args)


    def ChangeDSIndex(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeDSIndex(self, *args)


    def ChangeIsWalk(self, *args) -> "void":
        """
        :param B:
        	:type B: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeIsWalk(self, *args)


    def ChangeKeep(self, *args) -> "void":
        """
        :param B:
        	:type B: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeKeep(self, *args)


    def ChangeMother(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeMother(self, *args)


    def ChangeShape1(self, *args) -> "TopoDS_Shape":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeShape1(self, *args)


    def ChangeShape2(self, *args) -> "TopoDS_Shape":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeShape2(self, *args)


    def Curve(self, *args) -> "void":
        """
        :rtype: opencascade::handle<Geom_Curve>
        :param C3D:
        	:type C3D: Geom_Curve
        	:param Tol:
        	:type Tol: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Curve(self, *args)


    def Curve1(self, *args) -> "void":
        """
        :rtype: opencascade::handle<Geom2d_Curve>
        :param PC1:
        	:type PC1: Geom2d_Curve
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Curve1(self, *args)


    def Curve2(self, *args) -> "void":
        """
        :rtype: opencascade::handle<Geom2d_Curve>
        :param PC2:
        	:type PC2: Geom2d_Curve
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Curve2(self, *args)


    def DSIndex(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_DSIndex(self, *args)


    def DefineCurve(self, *args) -> "void":
        """
        :param P:
        	:type P: Geom_Curve
        	:param T:
        	:type T: float
        	:param IsWalk:
        	:type IsWalk: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_DefineCurve(self, *args)


    def GetSCI(self, *args) -> "void":
        """
        :param I1:
        	:type I1: TopOpeBRepDS_Interference
        	:param I2:
        	:type I2: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI(self, *args)


    def GetSCI1(self, *args) -> "opencascade::handle< TopOpeBRepDS_Interference > const &":
        """:rtype: opencascade::handle<TopOpeBRepDS_Interference>"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI1(self, *args)


    def GetSCI2(self, *args) -> "opencascade::handle< TopOpeBRepDS_Interference > const &":
        """:rtype: opencascade::handle<TopOpeBRepDS_Interference>"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI2(self, *args)


    def GetShapes(self, *args) -> "void":
        """
        :param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_GetShapes(self, *args)


    def IsWalk(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_IsWalk(self, *args)


    def Keep(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Keep(self, *args)


    def Mother(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Mother(self, *args)


    def Range(self, *args) -> "Standard_Boolean":
        """
        :param First:
        	:type First: float
        	:param Last:
        	:type Last: float
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Range(self, *args)


    def SetRange(self, *args) -> "void":
        """
        :param First:
        	:type First: float
        	:param Last:
        	:type Last: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_SetRange(self, *args)


    def SetSCI(self, *args) -> "void":
        """
        * define the interferences face/curve.
        	:param I1:
        	:type I1: TopOpeBRepDS_Interference
        	:param I2:
        	:type I2: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_SetSCI(self, *args)


    def SetShapes(self, *args) -> "void":
        """
        :param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_SetShapes(self, *args)


    def Shape1(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Shape1(self, *args)


    def Shape2(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Shape2(self, *args)


    def Tolerance(self, *args) -> "Standard_Real":
        """
        * Update the tolerance
        	:param tol:
        	:type tol: float
        	:rtype: None
        :rtype: float
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Tolerance(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param P:
        	:type P: Geom_Curve
        	:param T:
        	:type T: float
        	:param IsWalk: default value is Standard_False
        	:type IsWalk: bool
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Curve_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Curve(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Curve
TopOpeBRepDS_Curve.ChangeCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeCurve, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeDSIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeDSIndex, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeIsWalk = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeIsWalk, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeKeep, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeMother = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeMother, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeShape1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeShape1, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeShape2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeShape2, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Curve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Curve, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Curve1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Curve1, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Curve2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Curve2, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.DSIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_DSIndex, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.DefineCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_DefineCurve, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.GetSCI = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.GetSCI1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI1, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.GetSCI2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI2, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.GetShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_GetShapes, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.IsWalk = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_IsWalk, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Keep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Keep, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Mother = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Mother, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Range = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Range, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.SetRange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_SetRange, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.SetSCI = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_SetSCI, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.SetShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_SetShapes, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Shape1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Shape1, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Shape2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Shape2, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Tolerance = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Tolerance, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Curve_swigregister
TopOpeBRepDS_Curve_swigregister(TopOpeBRepDS_Curve)

class TopOpeBRepDS_CurveExplorer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Curve(self, *args) -> "TopOpeBRepDS_Curve const &":
        """
        :rtype: TopOpeBRepDS_Curve
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Curve
        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Curve(self, *args)


    def Index(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Index(self, *args)


    def Init(self, *args) -> "void":
        """
        :param DS:
        	:type DS: TopOpeBRepDS_DataStructure
        	:param FindOnlyKeep: default value is Standard_True
        	:type FindOnlyKeep: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Init(self, *args)


    def IsCurve(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_IsCurve(self, *args)


    def IsCurveKeep(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_IsCurveKeep(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_More(self, *args)


    def NbCurve(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_NbCurve(self, *args)


    def Next(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Next(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param DS:
        	:type DS: TopOpeBRepDS_DataStructure
        	:param FindOnlyKeep: default value is Standard_True
        	:type FindOnlyKeep: bool
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_CurveExplorer(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_CurveExplorer
TopOpeBRepDS_CurveExplorer.Curve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Curve, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Index, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Init, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.IsCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_IsCurve, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.IsCurveKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_IsCurveKeep, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_More, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.NbCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_NbCurve, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Next, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_swigregister
TopOpeBRepDS_CurveExplorer_swigregister(TopOpeBRepDS_CurveExplorer)

class TopOpeBRepDS_DataStructure(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddCurve(self, *args) -> "Standard_Integer":
        """
        * Insert a new curve. Returns the index.
        	:param S:
        	:type S: TopOpeBRepDS_Curve
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddCurve(self, *args)


    def AddPoint(self, *args) -> "Standard_Integer":
        """
        * Insert a new point. Returns the index.
        	:param PDS:
        	:type PDS: TopOpeBRepDS_Point
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddPoint(self, *args)


    def AddPointSS(self, *args) -> "Standard_Integer":
        """
        * Insert a new point. Returns the index.
        	:param PDS:
        	:type PDS: TopOpeBRepDS_Point
        	:param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddPointSS(self, *args)


    def AddSectionEdge(self, *args) -> "Standard_Integer":
        """
        :param E:
        	:type E: TopoDS_Edge
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddSectionEdge(self, *args)


    def AddShape(self, *args) -> "Standard_Integer":
        """
        * Insert a shape S. Returns the index.
        	:param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        * Insert a shape S which ancestor is I = 1 or 2. Returns the index.
        	:param S:
        	:type S: TopoDS_Shape
        	:param I:
        	:type I: int
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShape(self, *args)


    def AddShapeInterference(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShapeInterference(self, *args)


    def AddShapeSameDomain(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param SSD:
        	:type SSD: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShapeSameDomain(self, *args)


    def AddSurface(self, *args) -> "Standard_Integer":
        """
        * Insert a new surface. Returns the index.
        	:param S:
        	:type S: TopOpeBRepDS_Surface
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddSurface(self, *args)


    def AncestorRank(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:rtype: int
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        :param I:
        	:type I: int
        	:param Ianc:
        	:type Ianc: int
        	:rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:param Ianc:
        	:type Ianc: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AncestorRank(self, *args)


    def ChangeCurve(self, *args) -> "TopOpeBRepDS_Curve &":
        """
        * Returns the Curve of index <I>.
        	:param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Curve
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeCurve(self, *args)


    def ChangeCurveInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeCurveInterferences(self, *args)


    def ChangeKeepCurve(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:param FindKeep:
        	:type FindKeep: bool
        	:rtype: None
        :param C:
        	:type C: TopOpeBRepDS_Curve
        	:param FindKeep:
        	:type FindKeep: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepCurve(self, *args)


    def ChangeKeepPoint(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:param FindKeep:
        	:type FindKeep: bool
        	:rtype: None
        :param P:
        	:type P: TopOpeBRepDS_Point
        	:param FindKeep:
        	:type FindKeep: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepPoint(self, *args)


    def ChangeKeepShape(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:param FindKeep:
        	:type FindKeep: bool
        	:rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:param FindKeep:
        	:type FindKeep: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepShape(self, *args)


    def ChangeKeepSurface(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:param FindKeep:
        	:type FindKeep: bool
        	:rtype: None
        :param S:
        	:type S: TopOpeBRepDS_Surface
        	:param FindKeep:
        	:type FindKeep: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepSurface(self, *args)


    def ChangeMapOfRejectedShapesObj(self, *args) -> "TopTools_IndexedMapOfShape &":
        """:rtype: TopTools_IndexedMapOfShape"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfRejectedShapesObj(self, *args)


    def ChangeMapOfRejectedShapesTool(self, *args) -> "TopTools_IndexedMapOfShape &":
        """:rtype: TopTools_IndexedMapOfShape"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfRejectedShapesTool(self, *args)


    def ChangeMapOfShapeWithState(self, *args) -> "TopOpeBRepDS_IndexedDataMapOfShapeWithState &":
        """
        :param aShape:
        	:type aShape: TopoDS_Shape
        	:param aFlag:
        	:type aFlag: bool
        	:rtype: TopOpeBRepDS_IndexedDataMapOfShapeWithState
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithState(self, *args)


    def ChangeMapOfShapeWithStateObj(self, *args) -> "TopOpeBRepDS_IndexedDataMapOfShapeWithState &":
        """:rtype: TopOpeBRepDS_IndexedDataMapOfShapeWithState"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithStateObj(self, *args)


    def ChangeMapOfShapeWithStateTool(self, *args) -> "TopOpeBRepDS_IndexedDataMapOfShapeWithState &":
        """:rtype: TopOpeBRepDS_IndexedDataMapOfShapeWithState"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithStateTool(self, *args)


    def ChangeNbCurves(self, *args) -> "void":
        """
        :param N:
        	:type N: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeNbCurves(self, *args)


    def ChangePoint(self, *args) -> "TopOpeBRepDS_Point &":
        """
        * Returns the point of index <I>.
        	:param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Point
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangePoint(self, *args)


    def ChangePointInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangePointInterferences(self, *args)


    def ChangeShapeInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: TopOpeBRepDS_ListOfInterference
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapeInterferences(self, *args)


    def ChangeShapeSameDomain(self, *args) -> "TopTools_ListOfShape &":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: TopTools_ListOfShape
        :param I:
        	:type I: int
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapeSameDomain(self, *args)


    def ChangeShapes(self, *args) -> "TopOpeBRepDS_MapOfShapeData &":
        """:rtype: TopOpeBRepDS_MapOfShapeData"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapes(self, *args)


    def ChangeSurface(self, *args) -> "TopOpeBRepDS_Surface &":
        """
        * Returns the surface of index <I>.
        	:param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Surface
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeSurface(self, *args)


    def ChangeSurfaceInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeSurfaceInterferences(self, *args)


    def Curve(self, *args) -> "TopOpeBRepDS_Curve const &":
        """
        * Returns the Curve of index <I>.
        	:param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Curve
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Curve(self, *args)


    def CurveInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_CurveInterferences(self, *args)


    def FillShapesSameDomain(self, *args) -> "void":
        """
        :param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:param refFirst: default value is Standard_True
        	:type refFirst: bool
        	:rtype: None
        :param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:param c1:
        	:type c1: TopOpeBRepDS_Config
        	:param c2:
        	:type c2: TopOpeBRepDS_Config
        	:param refFirst: default value is Standard_True
        	:type refFirst: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_FillShapesSameDomain(self, *args)


    def GetShapeWithState(self, *args) -> "TopOpeBRepDS_ShapeWithState const &":
        """
        :param aShape:
        	:type aShape: TopoDS_Shape
        	:rtype: TopOpeBRepDS_ShapeWithState
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_GetShapeWithState(self, *args)


    def HasGeometry(self, *args) -> "Standard_Boolean":
        """
        * Returns True if <S> has new geometries, i.e : True si : HasShape(S) True S a une liste d'interferences non vide. S = SOLID, FACE, EDGE : true/false S = SHELL, WIRE, VERTEX : false.
        	:param S:
        	:type S: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasGeometry(self, *args)


    def HasNewSurface(self, *args) -> "Standard_Boolean":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasNewSurface(self, *args)


    def HasShape(self, *args) -> "Standard_Boolean":
        """
        * Returns True if <S> est dans myShapes
        	:param S:
        	:type S: TopoDS_Shape
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasShape(self, *args)


    def Init(self, *args) -> "void":
        """
        * reset the data structure
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Init(self, *args)


    def InitSectionEdges(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_InitSectionEdges(self, *args)


    def IsSectionEdge(self, *args) -> "Standard_Boolean":
        """
        :param E:
        	:type E: TopoDS_Edge
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_IsSectionEdge(self, *args)


    def Isfafa(self, *args) -> "Standard_Boolean":
        """
        :param isfafa:
        	:type isfafa: bool
        	:rtype: None
        :rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Isfafa(self, *args)


    def KeepCurve(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:rtype: bool
        :param C:
        	:type C: TopOpeBRepDS_Curve
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepCurve(self, *args)


    def KeepPoint(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:rtype: bool
        :param P:
        	:type P: TopOpeBRepDS_Point
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepPoint(self, *args)


    def KeepShape(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: bool
        :param S:
        	:type S: TopoDS_Shape
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepShape(self, *args)


    def KeepSurface(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:rtype: bool
        :param S:
        	:type S: TopOpeBRepDS_Surface
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepSurface(self, *args)


    def NbCurves(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbCurves(self, *args)


    def NbPoints(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbPoints(self, *args)


    def NbSectionEdges(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbSectionEdges(self, *args)


    def NbShapes(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbShapes(self, *args)


    def NbSurfaces(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbSurfaces(self, *args)


    def NewSurface(self, *args) -> "opencascade::handle< Geom_Surface > const &":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:rtype: opencascade::handle<Geom_Surface>
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NewSurface(self, *args)


    def Point(self, *args) -> "TopOpeBRepDS_Point const &":
        """
        * Returns the point of index <I>.
        	:param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Point
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Point(self, *args)


    def PointInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_PointInterferences(self, *args)


    def RemoveCurve(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveCurve(self, *args)


    def RemovePoint(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemovePoint(self, *args)


    def RemoveShapeInterference(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveShapeInterference(self, *args)


    def RemoveShapeSameDomain(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param SSD:
        	:type SSD: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveShapeSameDomain(self, *args)


    def RemoveSurface(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveSurface(self, *args)


    def SameDomainInd(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:rtype: int
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        :param I:
        	:type I: int
        	:param Ind:
        	:type Ind: int
        	:rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:param Ind:
        	:type Ind: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainInd(self, *args)


    def SameDomainOri(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Config
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: TopOpeBRepDS_Config
        :param I:
        	:type I: int
        	:param Ori:
        	:type Ori: TopOpeBRepDS_Config
        	:rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:param Ori:
        	:type Ori: TopOpeBRepDS_Config
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainOri(self, *args)


    def SameDomainRef(self, *args) -> "void":
        """
        :param I:
        	:type I: int
        	:rtype: int
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: int
        :param I:
        	:type I: int
        	:param Ref:
        	:type Ref: int
        	:rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:param Ref:
        	:type Ref: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainRef(self, *args)


    def SectionEdge(self, *args) -> "Standard_Integer":
        """
        :param I:
        	:type I: int
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: TopoDS_Edge
        :param E:
        	:type E: TopoDS_Edge
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SectionEdge(self, *args)


    def SetNewSurface(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Shape
        	:param S:
        	:type S: Geom_Surface
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SetNewSurface(self, *args)


    def Shape(self, *args) -> "Standard_Integer":
        """
        * returns the shape of index I stored in the map myShapes, accessing a list of interference.
        	:param I:
        	:type I: int
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: TopoDS_Shape
        * returns the index of shape <S> stored in the map myShapes, accessing a list of interference. returns 0 if <S> is not in the map.
        	:param S:
        	:type S: TopoDS_Shape
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Shape(self, *args)


    def ShapeInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: TopOpeBRepDS_ListOfInterference
        :param I:
        	:type I: int
        	:param FindKeep: default value is Standard_True
        	:type FindKeep: bool
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ShapeInterferences(self, *args)


    def ShapeSameDomain(self, *args) -> "TopTools_ListOfShape const &":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: TopTools_ListOfShape
        :param I:
        	:type I: int
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ShapeSameDomain(self, *args)


    def Surface(self, *args) -> "TopOpeBRepDS_Surface const &":
        """
        * Returns the surface of index <I>.
        	:param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Surface
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Surface(self, *args)


    def SurfaceInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SurfaceInterferences(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepDS.TopOpeBRepDS_DataStructure_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataStructure(*args))

    def UnfillShapesSameDomain(self, *args) -> "void":
        """
        :param S1:
        	:type S1: TopoDS_Shape
        	:param S2:
        	:type S2: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_UnfillShapesSameDomain(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_DataStructure
TopOpeBRepDS_DataStructure.AddCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddPoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddPointSS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddPointSS, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddSectionEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddSectionEdge, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddShapeInterference = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShapeInterference, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddShapeSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShapeSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AncestorRank = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AncestorRank, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeCurveInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeCurveInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeKeepCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeKeepPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepPoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeKeepShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepShape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeKeepSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfRejectedShapesObj = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfRejectedShapesObj, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfRejectedShapesTool = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfRejectedShapesTool, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfShapeWithState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithState, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfShapeWithStateObj = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithStateObj, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfShapeWithStateTool = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithStateTool, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeNbCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeNbCurves, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangePoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangePoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangePointInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangePointInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeShapeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapeInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeShapeSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapeSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapes, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeSurfaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeSurfaceInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Curve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Curve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.CurveInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_CurveInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.FillShapesSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_FillShapesSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.GetShapeWithState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_GetShapeWithState, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.HasGeometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasGeometry, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.HasNewSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasNewSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.HasShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasShape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Init, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.InitSectionEdges = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_InitSectionEdges, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.IsSectionEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_IsSectionEdge, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Isfafa = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Isfafa, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.KeepCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.KeepPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepPoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.KeepShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepShape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.KeepSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbCurves, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbPoints = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbPoints, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbSectionEdges = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbSectionEdges, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbShapes, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbSurfaces = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbSurfaces, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NewSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NewSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Point = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Point, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.PointInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_PointInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemoveCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemovePoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemovePoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemoveShapeInterference = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveShapeInterference, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemoveShapeSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveShapeSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemoveSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SameDomainInd = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainInd, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SameDomainOri = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainOri, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SameDomainRef = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainRef, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SectionEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SectionEdge, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SetNewSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SetNewSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Shape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Shape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ShapeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ShapeInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ShapeSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ShapeSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Surface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Surface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SurfaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SurfaceInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.UnfillShapesSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_UnfillShapesSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataStructure_swigregister
TopOpeBRepDS_DataStructure_swigregister(TopOpeBRepDS_DataStructure)

class TopOpeBRepDS_Dumper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def SDumpRefOri(self, *args) -> "TCollection_AsciiString":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param I:
        	:type I: int
        	:rtype: TCollection_AsciiString
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_SDumpRefOri(self, *args)


    def SPrintShape(self, *args) -> "TCollection_AsciiString":
        """
        :param I:
        	:type I: int
        	:rtype: TCollection_AsciiString
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_SPrintShape(self, *args)


    def SPrintShapeRefOri(self, *args) -> "TCollection_AsciiString":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param B: default value is 
        	:type B: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        :param L:
        	:type L: TopTools_ListOfShape
        	:param B: default value is 
        	:type B: TCollection_AsciiString
        	:rtype: TCollection_AsciiString
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_SPrintShapeRefOri(self, *args)


    def __init__(self, *args):
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Dumper_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Dumper(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Dumper
TopOpeBRepDS_Dumper.SDumpRefOri = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_SDumpRefOri, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.SPrintShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_SPrintShape, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.SPrintShapeRefOri = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_SPrintShapeRefOri, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Dumper_swigregister
TopOpeBRepDS_Dumper_swigregister(TopOpeBRepDS_Dumper)

class TopOpeBRepDS_EIR(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ProcessEdgeInterferences(self, *args) -> "void":
        """
        :rtype: None
        :param I:
        	:type I: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_EIR_ProcessEdgeInterferences(self, *args)


    def __init__(self, *args):
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_EIR_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_EIR(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_EIR
TopOpeBRepDS_EIR.ProcessEdgeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EIR_ProcessEdgeInterferences, None, TopOpeBRepDS_EIR)
TopOpeBRepDS_EIR_swigregister = _TopOpeBRepDS.TopOpeBRepDS_EIR_swigregister
TopOpeBRepDS_EIR_swigregister(TopOpeBRepDS_EIR)

class TopOpeBRepDS_Edge3dInterferenceTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Add(self, *args) -> "void":
        """
        :param Eref:
        	:type Eref: TopoDS_Shape
        	:param E:
        	:type E: TopoDS_Shape
        	:param F:
        	:type F: TopoDS_Shape
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Add(self, *args)


    def Init(self, *args) -> "void":
        """
        :param Eref:
        	:type Eref: TopoDS_Shape
        	:param E:
        	:type E: TopoDS_Shape
        	:param F:
        	:type F: TopoDS_Shape
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Init(self, *args)


    def InitPointVertex(self, *args) -> "void":
        """
        :param IsVertex:
        	:type IsVertex: int
        	:param VonOO:
        	:type VonOO: TopoDS_Shape
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_InitPointVertex(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Edge3dInterferenceTool(*args))

    def Transition(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Transition(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Edge3dInterferenceTool
TopOpeBRepDS_Edge3dInterferenceTool.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Add, None, TopOpeBRepDS_Edge3dInterferenceTool)
TopOpeBRepDS_Edge3dInterferenceTool.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Init, None, TopOpeBRepDS_Edge3dInterferenceTool)
TopOpeBRepDS_Edge3dInterferenceTool.InitPointVertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_InitPointVertex, None, TopOpeBRepDS_Edge3dInterferenceTool)
TopOpeBRepDS_Edge3dInterferenceTool.Transition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Transition, None, TopOpeBRepDS_Edge3dInterferenceTool)
TopOpeBRepDS_Edge3dInterferenceTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_swigregister
TopOpeBRepDS_Edge3dInterferenceTool_swigregister(TopOpeBRepDS_Edge3dInterferenceTool)

class TopOpeBRepDS_EdgeInterferenceTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Add(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param V:
        	:type V: TopoDS_Shape
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        :param E:
        	:type E: TopoDS_Shape
        	:param P:
        	:type P: TopOpeBRepDS_Point
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Add(self, *args)


    def Init(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Shape
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Init(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_EdgeInterferenceTool(*args))

    def Transition(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Transition(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_EdgeInterferenceTool
TopOpeBRepDS_EdgeInterferenceTool.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Add, None, TopOpeBRepDS_EdgeInterferenceTool)
TopOpeBRepDS_EdgeInterferenceTool.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Init, None, TopOpeBRepDS_EdgeInterferenceTool)
TopOpeBRepDS_EdgeInterferenceTool.Transition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Transition, None, TopOpeBRepDS_EdgeInterferenceTool)
TopOpeBRepDS_EdgeInterferenceTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_swigregister
TopOpeBRepDS_EdgeInterferenceTool_swigregister(TopOpeBRepDS_EdgeInterferenceTool)

class TopOpeBRepDS_Explorer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Current(self, *args) -> "TopoDS_Shape const":
        """:rtype: TopoDS_Shape"""
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Current(self, *args)


    def Edge(self, *args) -> "TopoDS_Edge const":
        """:rtype: TopoDS_Edge"""
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Edge(self, *args)


    def Face(self, *args) -> "TopoDS_Face const":
        """:rtype: TopoDS_Face"""
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Face(self, *args)


    def Index(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Index(self, *args)


    def Init(self, *args) -> "void":
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param T: default value is TopAbs_SHAPE
        	:type T: TopAbs_ShapeEnum
        	:param findkeep: default value is Standard_True
        	:type findkeep: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Init(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_More(self, *args)


    def Next(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Next(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param T: default value is TopAbs_SHAPE
        	:type T: TopAbs_ShapeEnum
        	:param findkeep: default value is Standard_True
        	:type findkeep: bool
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Explorer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Explorer(*args))

    def Type(self, *args) -> "TopAbs_ShapeEnum":
        """:rtype: TopAbs_ShapeEnum"""
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Type(self, *args)


    def Vertex(self, *args) -> "TopoDS_Vertex const":
        """:rtype: TopoDS_Vertex"""
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Vertex(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Explorer
TopOpeBRepDS_Explorer.Current = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Current, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Edge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Edge, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Face = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Face, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Index, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Init, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_More, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Next, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Type = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Type, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Vertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Vertex, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Explorer_swigregister
TopOpeBRepDS_Explorer_swigregister(TopOpeBRepDS_Explorer)

class TopOpeBRepDS_FIR(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ProcessFaceInterferences(self, *args) -> "void":
        """
        :param M:
        	:type M: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
        	:rtype: None
        :param I:
        	:type I: int
        	:param M:
        	:type M: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_FIR_ProcessFaceInterferences(self, *args)


    def __init__(self, *args):
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_FIR_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_FIR(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_FIR
TopOpeBRepDS_FIR.ProcessFaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FIR_ProcessFaceInterferences, None, TopOpeBRepDS_FIR)
TopOpeBRepDS_FIR_swigregister = _TopOpeBRepDS.TopOpeBRepDS_FIR_swigregister
TopOpeBRepDS_FIR_swigregister(TopOpeBRepDS_FIR)

class TopOpeBRepDS_FaceInterferenceTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Add(self, *args) -> "void":
        """
        * Eisnew = true if E is a new edge built on edge I->Geometry() false if E is shape <=> I->Geometry()
        	:param FI:
        	:type FI: TopoDS_Shape
        	:param F:
        	:type F: TopoDS_Shape
        	:param E:
        	:type E: TopoDS_Shape
        	:param Eisnew:
        	:type Eisnew: bool
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        :param E:
        	:type E: TopoDS_Shape
        	:param C:
        	:type C: TopOpeBRepDS_Curve
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Add(self, *args)


    def GetEdgePntPar(self, *args) -> "void":
        """
        :param P:
        	:type P: gp_Pnt
        	:param par:
        	:type par: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_GetEdgePntPar(self, *args)


    def Init(self, *args) -> "void":
        """
        * Eisnew = true if E is a new edge built on edge I->Geometry() false if E is shape <=> I->Geometry()
        	:param FI:
        	:type FI: TopoDS_Shape
        	:param E:
        	:type E: TopoDS_Shape
        	:param Eisnew:
        	:type Eisnew: bool
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Init(self, *args)


    def IsEdgePntParDef(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_IsEdgePntParDef(self, *args)


    def SetEdgePntPar(self, *args) -> "void":
        """
        :param P:
        	:type P: gp_Pnt
        	:param par:
        	:type par: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_SetEdgePntPar(self, *args)


    def __init__(self, *args):
        """
        :param P:
        	:type P: TopOpeBRepDS_PDataStructure
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_FaceInterferenceTool(*args))

    def Transition(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Transition(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_FaceInterferenceTool
TopOpeBRepDS_FaceInterferenceTool.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Add, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.GetEdgePntPar = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_GetEdgePntPar, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Init, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.IsEdgePntParDef = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_IsEdgePntParDef, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.SetEdgePntPar = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_SetEdgePntPar, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.Transition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Transition, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_swigregister
TopOpeBRepDS_FaceInterferenceTool_swigregister(TopOpeBRepDS_FaceInterferenceTool)

class TopOpeBRepDS_Filter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ProcessCurveInterferences(self, *args) -> "void":
        """
        :rtype: None
        :param I:
        	:type I: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessCurveInterferences(self, *args)


    def ProcessEdgeInterferences(self, *args) -> "void":
        """
        :rtype: None
        :param I:
        	:type I: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessEdgeInterferences(self, *args)


    def ProcessFaceInterferences(self, *args) -> "void":
        """
        :param MEsp:
        	:type MEsp: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
        	:rtype: None
        :param I:
        	:type I: int
        	:param MEsp:
        	:type MEsp: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessFaceInterferences(self, *args)


    def ProcessInterferences(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessInterferences(self, *args)


    def __init__(self, *args):
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param pClassif: default value is 0
        	:type pClassif: TopOpeBRepTool_PShapeClassifier
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Filter_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Filter(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Filter
TopOpeBRepDS_Filter.ProcessCurveInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessCurveInterferences, None, TopOpeBRepDS_Filter)
TopOpeBRepDS_Filter.ProcessEdgeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessEdgeInterferences, None, TopOpeBRepDS_Filter)
TopOpeBRepDS_Filter.ProcessFaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessFaceInterferences, None, TopOpeBRepDS_Filter)
TopOpeBRepDS_Filter.ProcessInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessInterferences, None, TopOpeBRepDS_Filter)
TopOpeBRepDS_Filter_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Filter_swigregister
TopOpeBRepDS_Filter_swigregister(TopOpeBRepDS_Filter)

class TopOpeBRepDS_GapFiller(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddPointsOnConnexShape(self, *args) -> "void":
        """
        * Methodes pour reduire la liste des Points qui peuvent correspondre a une Point donne.
        	:param F:
        	:type F: TopoDS_Shape
        	:param LI:
        	:type LI: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_AddPointsOnConnexShape(self, *args)


    def AddPointsOnShape(self, *args) -> "void":
        """
        :param S:
        	:type S: TopoDS_Shape
        	:param LI:
        	:type LI: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_AddPointsOnShape(self, *args)


    def BuildNewGeometries(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_BuildNewGeometries(self, *args)


    def CheckConnexity(self, *args) -> "Standard_Boolean":
        """
        * Enchaine les sections via les points d'Interferences deja associe; Renvoit dans <L> les points extremites des Lignes. Methodes pour construire la liste des Points qui peuvent correspondre a une Point donne.
        	:param LI:
        	:type LI: TopOpeBRepDS_ListOfInterference
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_CheckConnexity(self, *args)


    def FilterByEdge(self, *args) -> "void":
        """
        :param E:
        	:type E: TopoDS_Edge
        	:param LI:
        	:type LI: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByEdge(self, *args)


    def FilterByFace(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Face
        	:param LI:
        	:type LI: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByFace(self, *args)


    def FilterByIncidentDistance(self, *args) -> "void":
        """
        :param F:
        	:type F: TopoDS_Face
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:param LI:
        	:type LI: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByIncidentDistance(self, *args)


    def FindAssociatedPoints(self, *args) -> "void":
        """
        * Recherche parmi l'ensemble des points d'Interference la Liste <LI> des points qui correspondent au point d'indice <Index>
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:param LI:
        	:type LI: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_FindAssociatedPoints(self, *args)


    def IsOnEdge(self, *args) -> "Standard_Boolean":
        """
        * Return True si I ou une de ses representaions a pour support <E>. Methodes de reconstructions des geometries des point et des courbes de section
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:param E:
        	:type E: TopoDS_Edge
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_IsOnEdge(self, *args)


    def IsOnFace(self, *args) -> "Standard_Boolean":
        """
        * Return True si I a ete obtenu par une intersection avec <F>.
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:param F:
        	:type F: TopoDS_Face
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_IsOnFace(self, *args)


    def Perform(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_Perform(self, *args)


    def ReBuildGeom(self, *args) -> "void":
        """
        :param I1:
        	:type I1: TopOpeBRepDS_Interference
        	:param Done:
        	:type Done: TColStd_MapOfInteger
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_ReBuildGeom(self, *args)


    def __init__(self, *args):
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_GapFiller_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_GapFiller(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_GapFiller
TopOpeBRepDS_GapFiller.AddPointsOnConnexShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_AddPointsOnConnexShape, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.AddPointsOnShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_AddPointsOnShape, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.BuildNewGeometries = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_BuildNewGeometries, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.CheckConnexity = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_CheckConnexity, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.FilterByEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByEdge, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.FilterByFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByFace, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.FilterByIncidentDistance = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByIncidentDistance, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.FindAssociatedPoints = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_FindAssociatedPoints, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.IsOnEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_IsOnEdge, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.IsOnFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_IsOnFace, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.Perform = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_Perform, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.ReBuildGeom = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_ReBuildGeom, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller_swigregister = _TopOpeBRepDS.TopOpeBRepDS_GapFiller_swigregister
TopOpeBRepDS_GapFiller_swigregister(TopOpeBRepDS_GapFiller)

class TopOpeBRepDS_GapTool(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeSameInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_ChangeSameInterferences(self, *args)


    def Curve(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param C:
        	:type C: TopOpeBRepDS_Curve
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_Curve(self, *args)


    def EdgeSupport(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param E:
        	:type E: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_EdgeSupport(self, *args)


    def FacesSupport(self, *args) -> "Standard_Boolean":
        """
        * Return les faces qui ont genere la section origine de I
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:param F1:
        	:type F1: TopoDS_Shape
        	:param F2:
        	:type F2: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_FacesSupport(self, *args)


    def Init(self, *args) -> "void":
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_Init(self, *args)


    def Interferences(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """
        :param IndexPoint:
        	:type IndexPoint: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_Interferences(self, *args)


    def ParameterOnEdge(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param E:
        	:type E: TopoDS_Shape
        	:param U:
        	:type U: float
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_ParameterOnEdge(self, *args)


    def SameInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_SameInterferences(self, *args)


    def SetParameterOnEdge(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param E:
        	:type E: TopoDS_Shape
        	:param U:
        	:type U: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_SetParameterOnEdge(self, *args)


    def SetPoint(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:param IndexPoint:
        	:type IndexPoint: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_SetPoint(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_GapTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_GapTool(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_GapTool_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_GapTool
TopOpeBRepDS_GapTool.ChangeSameInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_ChangeSameInterferences, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.Curve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_Curve, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.EdgeSupport = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_EdgeSupport, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.FacesSupport = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_FacesSupport, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_Init, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.Interferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_Interferences, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.ParameterOnEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_ParameterOnEdge, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.SameInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_SameInterferences, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.SetParameterOnEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_SetParameterOnEdge, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.SetPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_SetPoint, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_GapTool_swigregister
TopOpeBRepDS_GapTool_swigregister(TopOpeBRepDS_GapTool)

class TopOpeBRepDS_GeometryData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddInterference(self, *args) -> "void":
        """
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_AddInterference(self, *args)


    def Assign(self, *args) -> "void":
        """
        :param Other:
        	:type Other: TopOpeBRepDS_GeometryData
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_Assign(self, *args)


    def ChangeInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """:rtype: TopOpeBRepDS_ListOfInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_ChangeInterferences(self, *args)


    def Interferences(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """:rtype: TopOpeBRepDS_ListOfInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_Interferences(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param Other:
        	:type Other: TopOpeBRepDS_GeometryData
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_GeometryData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_GeometryData(*args))

    def Set(self, *args) -> "void":
        """
        :param Other:
        	:type Other: TopOpeBRepDS_GeometryData
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_Set(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_GeometryData
TopOpeBRepDS_GeometryData.AddInterference = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_AddInterference, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_Assign, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData.ChangeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_ChangeInterferences, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData.Interferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_Interferences, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_Set, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_GeometryData_swigregister
TopOpeBRepDS_GeometryData_swigregister(TopOpeBRepDS_GeometryData)

class TopOpeBRepDS_Interference(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeTransition(self, *args) -> "TopOpeBRepDS_Transition &":
        """:rtype: TopOpeBRepDS_Transition"""
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_ChangeTransition(self, *args)


    def GKGSKS(self, *args) -> "void":
        """
        * return GeometryType + Geometry + SupportType + Support
        	:param GK:
        	:type GK: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:param SK:
        	:type SK: TopOpeBRepDS_Kind
        	:param S:
        	:type S: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_GKGSKS(self, *args)


    def Geometry(self, *args) -> "void":
        """
        :rtype: int
        :param G:
        	:type G: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_Geometry(self, *args)


    def GeometryType(self, *args) -> "void":
        """
        :rtype: TopOpeBRepDS_Kind
        :param GT:
        	:type GT: TopOpeBRepDS_Kind
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_GeometryType(self, *args)


    def HasSameGeometry(self, *args) -> "Standard_Boolean":
        """
        :param Other:
        	:type Other: TopOpeBRepDS_Interference
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_HasSameGeometry(self, *args)


    def HasSameSupport(self, *args) -> "Standard_Boolean":
        """
        :param Other:
        	:type Other: TopOpeBRepDS_Interference
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_HasSameSupport(self, *args)


    def SetGeometry(self, *args) -> "void":
        """
        :param GI:
        	:type GI: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_SetGeometry(self, *args)


    def Support(self, *args) -> "void":
        """
        :rtype: int
        :param S:
        	:type S: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_Support(self, *args)


    def SupportType(self, *args) -> "void":
        """
        :rtype: TopOpeBRepDS_Kind
        :param ST:
        	:type ST: TopOpeBRepDS_Kind
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_SupportType(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param Transition:
        	:type Transition: TopOpeBRepDS_Transition
        	:param SupportType:
        	:type SupportType: TopOpeBRepDS_Kind
        	:param Support:
        	:type Support: int
        	:param GeometryType:
        	:type GeometryType: TopOpeBRepDS_Kind
        	:param Geometry:
        	:type Geometry: int
        	:rtype: None
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Interference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Interference(*args))

    def Transition(self, *args) -> "void":
        """
        :rtype: TopOpeBRepDS_Transition
        :param T:
        	:type T: TopOpeBRepDS_Transition
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_Transition(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_Interference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Interference
TopOpeBRepDS_Interference.ChangeTransition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_ChangeTransition, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.GKGSKS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_GKGSKS, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.Geometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_Geometry, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.GeometryType = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_GeometryType, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.HasSameGeometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_HasSameGeometry, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.HasSameSupport = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_HasSameSupport, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.SetGeometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_SetGeometry, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.Support = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_Support, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.SupportType = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_SupportType, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.Transition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_Transition, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Interference_swigregister
TopOpeBRepDS_Interference_swigregister(TopOpeBRepDS_Interference)

class TopOpeBRepDS_InterferenceIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeIterator(self, *args) -> "TopOpeBRepDS_ListIteratorOfListOfInterference &":
        """:rtype: TopOpeBRepDS_ListIteratorOfListOfInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_ChangeIterator(self, *args)


    def Geometry(self, *args) -> "void":
        """
        * define a condition on interference iteration process. Interference must match the Geometry <G>
        	:param G:
        	:type G: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Geometry(self, *args)


    def GeometryKind(self, *args) -> "void":
        """
        * define a condition on interference iteration process. Interference must match the Geometry Kind <ST>
        	:param GK:
        	:type GK: TopOpeBRepDS_Kind
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_GeometryKind(self, *args)


    def Init(self, *args) -> "void":
        """
        * re-initialize interference iteration process on the list of interference <L>. Conditions are not modified.
        	:param L:
        	:type L: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Init(self, *args)


    def Match(self, *args) -> "void":
        """
        * reach for an interference matching the conditions (if defined).
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Match(self, *args)


    def MatchInterference(self, *args) -> "Standard_Boolean":
        """
        * Returns True if the Interference <I> matches the conditions (if defined). If no conditions defined, returns True.
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_MatchInterference(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """
        * Returns True if there is a current Interference in the iteration.
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_More(self, *args)


    def Next(self, *args) -> "void":
        """
        * Move to the next Interference.
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Next(self, *args)


    def Support(self, *args) -> "void":
        """
        * define a condition on interference iteration process. Interference must match the Support <S>
        	:param S:
        	:type S: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Support(self, *args)


    def SupportKind(self, *args) -> "void":
        """
        * define a condition on interference iteration process. Interference must match the Support Kind <ST>
        	:param ST:
        	:type ST: TopOpeBRepDS_Kind
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_SupportKind(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        * Creates an iterator on the Interference of list <L>.
        	:param L:
        	:type L: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_InterferenceIterator(*args))

    def Value(self, *args) -> "opencascade::handle< TopOpeBRepDS_Interference > const &":
        """
        * Returns the current Interference, matching the conditions (if defined).
        	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_InterferenceIterator
TopOpeBRepDS_InterferenceIterator.ChangeIterator = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_ChangeIterator, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Geometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Geometry, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.GeometryKind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_GeometryKind, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Init, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Match = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Match, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.MatchInterference = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_MatchInterference, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_More, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Next, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Support = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Support, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.SupportKind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_SupportKind, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Value, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator_swigregister = _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_swigregister
TopOpeBRepDS_InterferenceIterator_swigregister(TopOpeBRepDS_InterferenceIterator)

class TopOpeBRepDS_InterferenceTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DuplicateCurvePointInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
        """
        * duplicate I in a new interference with Complement() transition.
        	:param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_DuplicateCurvePointInterference(*args)

    DuplicateCurvePointInterference = staticmethod(DuplicateCurvePointInterference)

    def MakeCurveInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
        """
        :param T:
        	:type T: TopOpeBRepDS_Transition
        	:param SK:
        	:type SK: TopOpeBRepDS_Kind
        	:param SI:
        	:type SI: int
        	:param GK:
        	:type GK: TopOpeBRepDS_Kind
        	:param GI:
        	:type GI: int
        	:param P:
        	:type P: float
        	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeCurveInterference(*args)

    MakeCurveInterference = staticmethod(MakeCurveInterference)

    def MakeEdgeInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
        """
        :param T:
        	:type T: TopOpeBRepDS_Transition
        	:param SK:
        	:type SK: TopOpeBRepDS_Kind
        	:param SI:
        	:type SI: int
        	:param GK:
        	:type GK: TopOpeBRepDS_Kind
        	:param GI:
        	:type GI: int
        	:param P:
        	:type P: float
        	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeEdgeInterference(*args)

    MakeEdgeInterference = staticmethod(MakeEdgeInterference)

    def MakeEdgeVertexInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
        """
        :param Transition:
        	:type Transition: TopOpeBRepDS_Transition
        	:param EdgeI:
        	:type EdgeI: int
        	:param VertexI:
        	:type VertexI: int
        	:param VertexIsBound:
        	:type VertexIsBound: bool
        	:param Config:
        	:type Config: TopOpeBRepDS_Config
        	:param param:
        	:type param: float
        	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeEdgeVertexInterference(*args)

    MakeEdgeVertexInterference = staticmethod(MakeEdgeVertexInterference)

    def MakeFaceCurveInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
        """
        :param Transition:
        	:type Transition: TopOpeBRepDS_Transition
        	:param FaceI:
        	:type FaceI: int
        	:param CurveI:
        	:type CurveI: int
        	:param PC:
        	:type PC: Geom2d_Curve
        	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeFaceCurveInterference(*args)

    MakeFaceCurveInterference = staticmethod(MakeFaceCurveInterference)

    def MakeFaceEdgeInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
        """
        :param Transition:
        	:type Transition: TopOpeBRepDS_Transition
        	:param FaceI:
        	:type FaceI: int
        	:param EdgeI:
        	:type EdgeI: int
        	:param EdgeIsBound:
        	:type EdgeIsBound: bool
        	:param Config:
        	:type Config: TopOpeBRepDS_Config
        	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeFaceEdgeInterference(*args)

    MakeFaceEdgeInterference = staticmethod(MakeFaceEdgeInterference)

    def MakeSolidSurfaceInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
        """
        :param Transition:
        	:type Transition: TopOpeBRepDS_Transition
        	:param SolidI:
        	:type SolidI: int
        	:param SurfaceI:
        	:type SurfaceI: int
        	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeSolidSurfaceInterference(*args)

    MakeSolidSurfaceInterference = staticmethod(MakeSolidSurfaceInterference)

    def Parameter(*args) -> "void":
        """
        :param CPI:
        	:type CPI: TopOpeBRepDS_Interference
        	:rtype: float
        :param CPI:
        	:type CPI: TopOpeBRepDS_Interference
        	:param Par:
        	:type Par: float
        	:rtype: void
        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_Parameter(*args)

    Parameter = staticmethod(Parameter)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_InterferenceTool())
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_InterferenceTool
TopOpeBRepDS_InterferenceTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_swigregister
TopOpeBRepDS_InterferenceTool_swigregister(TopOpeBRepDS_InterferenceTool)

def TopOpeBRepDS_InterferenceTool_DuplicateCurvePointInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
    """
    * duplicate I in a new interference with Complement() transition.
    	:param I:
    	:type I: TopOpeBRepDS_Interference
    	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_DuplicateCurvePointInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeCurveInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
    """
    :param T:
    	:type T: TopOpeBRepDS_Transition
    	:param SK:
    	:type SK: TopOpeBRepDS_Kind
    	:param SI:
    	:type SI: int
    	:param GK:
    	:type GK: TopOpeBRepDS_Kind
    	:param GI:
    	:type GI: int
    	:param P:
    	:type P: float
    	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeCurveInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeEdgeInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
    """
    :param T:
    	:type T: TopOpeBRepDS_Transition
    	:param SK:
    	:type SK: TopOpeBRepDS_Kind
    	:param SI:
    	:type SI: int
    	:param GK:
    	:type GK: TopOpeBRepDS_Kind
    	:param GI:
    	:type GI: int
    	:param P:
    	:type P: float
    	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeEdgeInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeEdgeVertexInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
    """
    :param Transition:
    	:type Transition: TopOpeBRepDS_Transition
    	:param EdgeI:
    	:type EdgeI: int
    	:param VertexI:
    	:type VertexI: int
    	:param VertexIsBound:
    	:type VertexIsBound: bool
    	:param Config:
    	:type Config: TopOpeBRepDS_Config
    	:param param:
    	:type param: float
    	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeEdgeVertexInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeFaceCurveInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
    """
    :param Transition:
    	:type Transition: TopOpeBRepDS_Transition
    	:param FaceI:
    	:type FaceI: int
    	:param CurveI:
    	:type CurveI: int
    	:param PC:
    	:type PC: Geom2d_Curve
    	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeFaceCurveInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeFaceEdgeInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
    """
    :param Transition:
    	:type Transition: TopOpeBRepDS_Transition
    	:param FaceI:
    	:type FaceI: int
    	:param EdgeI:
    	:type EdgeI: int
    	:param EdgeIsBound:
    	:type EdgeIsBound: bool
    	:param Config:
    	:type Config: TopOpeBRepDS_Config
    	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeFaceEdgeInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeSolidSurfaceInterference(*args) -> "opencascade::handle< TopOpeBRepDS_Interference >":
    """
    :param Transition:
    	:type Transition: TopOpeBRepDS_Transition
    	:param SolidI:
    	:type SolidI: int
    	:param SurfaceI:
    	:type SurfaceI: int
    	:rtype: opencascade::handle<TopOpeBRepDS_Interference>
    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeSolidSurfaceInterference(*args)

def TopOpeBRepDS_InterferenceTool_Parameter(*args) -> "void":
    """
    :param CPI:
    	:type CPI: TopOpeBRepDS_Interference
    	:rtype: float
    :param CPI:
    	:type CPI: TopOpeBRepDS_Interference
    	:param Par:
    	:type Par: float
    	:rtype: void
    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_Parameter(*args)

class TopOpeBRepDS_ListOfShapeOn1State(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeListOnState(self, *args) -> "TopTools_ListOfShape &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_ChangeListOnState(self, *args)


    def Clear(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_Clear(self, *args)


    def IsSplit(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_IsSplit(self, *args)


    def ListOnState(self, *args) -> "TopTools_ListOfShape const &":
        """:rtype: TopTools_ListOfShape"""
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_ListOnState(self, *args)


    def Split(self, *args) -> "void":
        """
        :param B: default value is Standard_True
        	:type B: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_Split(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ListOfShapeOn1State(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_ListOfShapeOn1State
TopOpeBRepDS_ListOfShapeOn1State.ChangeListOnState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_ChangeListOnState, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_Clear, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State.IsSplit = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_IsSplit, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State.ListOnState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_ListOnState, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State.Split = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_Split, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_swigregister
TopOpeBRepDS_ListOfShapeOn1State_swigregister(TopOpeBRepDS_ListOfShapeOn1State)

class TopOpeBRepDS_Marker(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Allocate(self, *args) -> "void":
        """
        :param n:
        	:type n: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Marker_Allocate(self, *args)


    def GetI(self, *args) -> "Standard_Boolean":
        """
        :param i:
        	:type i: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Marker_GetI(self, *args)


    def Reset(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_Marker_Reset(self, *args)


    def Set(self, *args) -> "void":
        """
        :param i:
        	:type i: int
        	:param b:
        	:type b: bool
        	:rtype: None
        :param b:
        	:type b: bool
        	:param n:
        	:type n: int
        	:param a:
        	:type a: Standard_Address
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Marker_Set(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepDS.TopOpeBRepDS_Marker_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Marker(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_Marker_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Marker
TopOpeBRepDS_Marker.Allocate = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker_Allocate, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker.GetI = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker_GetI, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker.Reset = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker_Reset, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker_Set, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Marker_swigregister
TopOpeBRepDS_Marker_swigregister(TopOpeBRepDS_Marker)

class TopOpeBRepDS_Point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeKeep(self, *args) -> "void":
        """
        :param B:
        	:type B: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Point_ChangeKeep(self, *args)


    def ChangePoint(self, *args) -> "gp_Pnt":
        """:rtype: gp_Pnt"""
        return _TopOpeBRepDS.TopOpeBRepDS_Point_ChangePoint(self, *args)


    def IsEqual(self, *args) -> "Standard_Boolean":
        """
        :param other:
        	:type other: TopOpeBRepDS_Point
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Point_IsEqual(self, *args)


    def Keep(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_Point_Keep(self, *args)


    def Point(self, *args) -> "gp_Pnt const":
        """:rtype: gp_Pnt"""
        return _TopOpeBRepDS.TopOpeBRepDS_Point_Point(self, *args)


    def Tolerance(self, *args) -> "void":
        """
        :rtype: float
        :param Tol:
        	:type Tol: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Point_Tolerance(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param P:
        	:type P: gp_Pnt
        	:param T:
        	:type T: float
        	:rtype: None
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Point_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Point(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Point
TopOpeBRepDS_Point.ChangeKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_ChangeKeep, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.ChangePoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_ChangePoint, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.IsEqual = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_IsEqual, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.Keep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_Keep, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.Point = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_Point, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.Tolerance = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_Tolerance, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Point_swigregister
TopOpeBRepDS_Point_swigregister(TopOpeBRepDS_Point)

class TopOpeBRepDS_PointExplorer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Index(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Index(self, *args)


    def Init(self, *args) -> "void":
        """
        :param DS:
        	:type DS: TopOpeBRepDS_DataStructure
        	:param FindOnlyKeep: default value is Standard_True
        	:type FindOnlyKeep: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Init(self, *args)


    def IsPoint(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_IsPoint(self, *args)


    def IsPointKeep(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_IsPointKeep(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_More(self, *args)


    def NbPoint(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_NbPoint(self, *args)


    def Next(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Next(self, *args)


    def Point(self, *args) -> "TopOpeBRepDS_Point const &":
        """
        :rtype: TopOpeBRepDS_Point
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Point
        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Point(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param DS:
        	:type DS: TopOpeBRepDS_DataStructure
        	:param FindOnlyKeep: default value is Standard_True
        	:type FindOnlyKeep: bool
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_PointExplorer(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_PointExplorer
TopOpeBRepDS_PointExplorer.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Index, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Init, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.IsPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_IsPoint, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.IsPointKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_IsPointKeep, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_More, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.NbPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_NbPoint, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Next, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.Point = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Point, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_swigregister
TopOpeBRepDS_PointExplorer_swigregister(TopOpeBRepDS_PointExplorer)

class TopOpeBRepDS_Reducer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ProcessEdgeInterferences(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_Reducer_ProcessEdgeInterferences(self, *args)


    def ProcessFaceInterferences(self, *args) -> "void":
        """
        :param M:
        	:type M: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Reducer_ProcessFaceInterferences(self, *args)


    def __init__(self, *args):
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Reducer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Reducer(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Reducer
TopOpeBRepDS_Reducer.ProcessEdgeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Reducer_ProcessEdgeInterferences, None, TopOpeBRepDS_Reducer)
TopOpeBRepDS_Reducer.ProcessFaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Reducer_ProcessFaceInterferences, None, TopOpeBRepDS_Reducer)
TopOpeBRepDS_Reducer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Reducer_swigregister
TopOpeBRepDS_Reducer_swigregister(TopOpeBRepDS_Reducer)

class TopOpeBRepDS_ShapeData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ChangeInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """:rtype: TopOpeBRepDS_ListOfInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeData_ChangeInterferences(self, *args)


    def ChangeKeep(self, *args) -> "void":
        """
        :param B:
        	:type B: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeData_ChangeKeep(self, *args)


    def Interferences(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """:rtype: TopOpeBRepDS_ListOfInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeData_Interferences(self, *args)


    def Keep(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeData_Keep(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepDS.TopOpeBRepDS_ShapeData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ShapeData(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_ShapeData
TopOpeBRepDS_ShapeData.ChangeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeData_ChangeInterferences, None, TopOpeBRepDS_ShapeData)
TopOpeBRepDS_ShapeData.ChangeKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeData_ChangeKeep, None, TopOpeBRepDS_ShapeData)
TopOpeBRepDS_ShapeData.Interferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeData_Interferences, None, TopOpeBRepDS_ShapeData)
TopOpeBRepDS_ShapeData.Keep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeData_Keep, None, TopOpeBRepDS_ShapeData)
TopOpeBRepDS_ShapeData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ShapeData_swigregister
TopOpeBRepDS_ShapeData_swigregister(TopOpeBRepDS_ShapeData)

class TopOpeBRepDS_ShapeWithState(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddPart(self, *args) -> "void":
        """
        :param aShape:
        	:type aShape: TopoDS_Shape
        	:param aState:
        	:type aState: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_AddPart(self, *args)


    def AddParts(self, *args) -> "void":
        """
        :param aListOfShape:
        	:type aListOfShape: TopTools_ListOfShape
        	:param aState:
        	:type aState: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_AddParts(self, *args)


    def IsSplitted(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_IsSplitted(self, *args)


    def Part(self, *args) -> "TopTools_ListOfShape const &":
        """
        :param aState:
        	:type aState: TopAbs_State
        	:rtype: TopTools_ListOfShape
        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_Part(self, *args)


    def SetIsSplitted(self, *args) -> "void":
        """
        :param anIsSplitted:
        	:type anIsSplitted: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_SetIsSplitted(self, *args)


    def SetState(self, *args) -> "void":
        """
        :param aState:
        	:type aState: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_SetState(self, *args)


    def State(self, *args) -> "TopAbs_State":
        """:rtype: TopAbs_State"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_State(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ShapeWithState(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_ShapeWithState
TopOpeBRepDS_ShapeWithState.AddPart = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_AddPart, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.AddParts = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_AddParts, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.IsSplitted = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_IsSplitted, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.Part = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_Part, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.SetIsSplitted = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_SetIsSplitted, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.SetState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_SetState, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.State = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_State, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_swigregister
TopOpeBRepDS_ShapeWithState_swigregister(TopOpeBRepDS_ShapeWithState)

class TopOpeBRepDS_Surface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Assign(self, *args) -> "void":
        """
        :param Other:
        	:type Other: TopOpeBRepDS_Surface
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Assign(self, *args)


    def ChangeKeep(self, *args) -> "void":
        """
        :param theToKeep:
        	:type theToKeep: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_ChangeKeep(self, *args)


    def Keep(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Keep(self, *args)


    def Surface(self, *args) -> "opencascade::handle< Geom_Surface > const &":
        """:rtype: opencascade::handle<Geom_Surface>"""
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Surface(self, *args)


    def Tolerance(self, *args) -> "void":
        """
        :rtype: float
        * Update the tolerance
        	:param theTol:
        	:type theTol: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Tolerance(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param P:
        	:type P: Geom_Surface
        	:param T:
        	:type T: float
        	:rtype: None
        :param Other:
        	:type Other: TopOpeBRepDS_Surface
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Surface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Surface(*args))

    def Set(self, *args) -> "void":
        """
        :param Other:
        	:type Other: TopOpeBRepDS_Surface
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Set(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Surface
TopOpeBRepDS_Surface.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Assign, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.ChangeKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_ChangeKeep, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.Keep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Keep, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.Surface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Surface, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.Tolerance = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Tolerance, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Set, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Surface_swigregister
TopOpeBRepDS_Surface_swigregister(TopOpeBRepDS_Surface)

class TopOpeBRepDS_SurfaceExplorer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Index(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Index(self, *args)


    def Init(self, *args) -> "void":
        """
        :param DS:
        	:type DS: TopOpeBRepDS_DataStructure
        	:param FindOnlyKeep: default value is Standard_True
        	:type FindOnlyKeep: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Init(self, *args)


    def IsSurface(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_IsSurface(self, *args)


    def IsSurfaceKeep(self, *args) -> "Standard_Boolean":
        """
        :param I:
        	:type I: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_IsSurfaceKeep(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_More(self, *args)


    def NbSurface(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_NbSurface(self, *args)


    def Next(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Next(self, *args)


    def Surface(self, *args) -> "TopOpeBRepDS_Surface const &":
        """
        :rtype: TopOpeBRepDS_Surface
        :param I:
        	:type I: int
        	:rtype: TopOpeBRepDS_Surface
        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Surface(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param DS:
        	:type DS: TopOpeBRepDS_DataStructure
        	:param FindOnlyKeep: default value is Standard_True
        	:type FindOnlyKeep: bool
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SurfaceExplorer(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_SurfaceExplorer
TopOpeBRepDS_SurfaceExplorer.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Index, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Init, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.IsSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_IsSurface, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.IsSurfaceKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_IsSurfaceKeep, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_More, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.NbSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_NbSurface, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Next, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.Surface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Surface, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_swigregister
TopOpeBRepDS_SurfaceExplorer_swigregister(TopOpeBRepDS_SurfaceExplorer)

class TopOpeBRepDS_TKI(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Add(self, *args) -> "void":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:rtype: None
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:param HI:
        	:type HI: TopOpeBRepDS_Interference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Add(self, *args)


    def ChangeInterferences(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_ChangeInterferences(self, *args)


    def ChangeValue(self, *args) -> "TopOpeBRepDS_ListOfInterference &":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_ChangeValue(self, *args)


    def Clear(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Clear(self, *args)


    def DumpTKIIterator(self, *args) -> "void":
        """
        :param s1: default value is 
        	:type s1: TCollection_AsciiString
        	:param s2: default value is 
        	:type s2: TCollection_AsciiString
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_DumpTKIIterator(self, *args)


    def FillOnGeometry(self, *args) -> "void":
        """
        :param L:
        	:type L: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_FillOnGeometry(self, *args)


    def FillOnSupport(self, *args) -> "void":
        """
        :param L:
        	:type L: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_FillOnSupport(self, *args)


    def HasInterferences(self, *args) -> "Standard_Boolean":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_HasInterferences(self, *args)


    def Init(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Init(self, *args)


    def Interferences(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Interferences(self, *args)


    def IsBound(self, *args) -> "Standard_Boolean":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_IsBound(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_More(self, *args)


    def Next(self, *args) -> "void":
        """:rtype: None"""
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Next(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _TopOpeBRepDS.TopOpeBRepDS_TKI_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_TKI(*args))

    def Value(self, *args) -> "TopOpeBRepDS_ListOfInterference const &":
        """
        :param K:
        	:type K: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:rtype: TopOpeBRepDS_ListOfInterference
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_TKI
TopOpeBRepDS_TKI.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Add, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.ChangeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_ChangeInterferences, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.ChangeValue = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_ChangeValue, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Clear, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.DumpTKIIterator = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_DumpTKIIterator, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.FillOnGeometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_FillOnGeometry, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.FillOnSupport = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_FillOnSupport, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.HasInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_HasInterferences, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Init, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Interferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Interferences, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_IsBound, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_More, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Next, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Value, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI_swigregister = _TopOpeBRepDS.TopOpeBRepDS_TKI_swigregister
TopOpeBRepDS_TKI_swigregister(TopOpeBRepDS_TKI)

class TopOpeBRepDS_TOOL(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EShareG(*args) -> "Standard_Integer":
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param E:
        	:type E: TopoDS_Edge
        	:param lEsd:
        	:type lEsd: TopTools_ListOfShape
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_EShareG(*args)

    EShareG = staticmethod(EShareG)

    def GetConfig(*args) -> "Standard_Integer &":
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param MEspON:
        	:type MEspON: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
        	:param ie:
        	:type ie: int
        	:param iesd:
        	:type iesd: int
        	:param conf:
        	:type conf: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_GetConfig(*args)

    GetConfig = staticmethod(GetConfig)

    def GetEsd(*args) -> "Standard_Integer &":
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param S:
        	:type S: TopoDS_Shape
        	:param ie:
        	:type ie: int
        	:param iesd:
        	:type iesd: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_GetEsd(*args)

    GetEsd = staticmethod(GetEsd)

    def ShareG(*args) -> "Standard_Boolean":
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param is1:
        	:type is1: int
        	:param is2:
        	:type is2: int
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_ShareG(*args)

    ShareG = staticmethod(ShareG)

    def ShareSplitON(*args) -> "Standard_Boolean":
        """
        :param HDS:
        	:type HDS: TopOpeBRepDS_HDataStructure
        	:param MspON:
        	:type MspON: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
        	:param i1:
        	:type i1: int
        	:param i2:
        	:type i2: int
        	:param spON:
        	:type spON: TopoDS_Shape
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_ShareSplitON(*args)

    ShareSplitON = staticmethod(ShareSplitON)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRepDS.TopOpeBRepDS_TOOL_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_TOOL())
    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_TOOL
TopOpeBRepDS_TOOL_swigregister = _TopOpeBRepDS.TopOpeBRepDS_TOOL_swigregister
TopOpeBRepDS_TOOL_swigregister(TopOpeBRepDS_TOOL)

def TopOpeBRepDS_TOOL_EShareG(*args) -> "Standard_Integer":
    """
    :param HDS:
    	:type HDS: TopOpeBRepDS_HDataStructure
    	:param E:
    	:type E: TopoDS_Edge
    	:param lEsd:
    	:type lEsd: TopTools_ListOfShape
    	:rtype: int
    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_EShareG(*args)

def TopOpeBRepDS_TOOL_GetConfig(*args) -> "Standard_Integer &":
    """
    :param HDS:
    	:type HDS: TopOpeBRepDS_HDataStructure
    	:param MEspON:
    	:type MEspON: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
    	:param ie:
    	:type ie: int
    	:param iesd:
    	:type iesd: int
    	:param conf:
    	:type conf: int
    	:rtype: bool
    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_GetConfig(*args)

def TopOpeBRepDS_TOOL_GetEsd(*args) -> "Standard_Integer &":
    """
    :param HDS:
    	:type HDS: TopOpeBRepDS_HDataStructure
    	:param S:
    	:type S: TopoDS_Shape
    	:param ie:
    	:type ie: int
    	:param iesd:
    	:type iesd: int
    	:rtype: bool
    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_GetEsd(*args)

def TopOpeBRepDS_TOOL_ShareG(*args) -> "Standard_Boolean":
    """
    :param HDS:
    	:type HDS: TopOpeBRepDS_HDataStructure
    	:param is1:
    	:type is1: int
    	:param is2:
    	:type is2: int
    	:rtype: bool
    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_ShareG(*args)

def TopOpeBRepDS_TOOL_ShareSplitON(*args) -> "Standard_Boolean":
    """
    :param HDS:
    	:type HDS: TopOpeBRepDS_HDataStructure
    	:param MspON:
    	:type MspON: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State
    	:param i1:
    	:type i1: int
    	:param i2:
    	:type i2: int
    	:param spON:
    	:type spON: TopoDS_Shape
    	:rtype: bool
    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_ShareSplitON(*args)

class TopOpeBRepDS_Transition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def After(self, *args) -> "TopAbs_State":
        """
        :param S:
        	:type S: TopAbs_State
        	:param ShapeAfter: default value is TopAbs_FACE
        	:type ShapeAfter: TopAbs_ShapeEnum
        	:rtype: None
        :rtype: TopAbs_State
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_After(self, *args)


    def Before(self, *args) -> "TopAbs_State":
        """
        :param S:
        	:type S: TopAbs_State
        	:param ShapeBefore: default value is TopAbs_FACE
        	:type ShapeBefore: TopAbs_ShapeEnum
        	:rtype: None
        :rtype: TopAbs_State
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Before(self, *args)


    def Complement(self, *args) -> "TopOpeBRepDS_Transition":
        """:rtype: TopOpeBRepDS_Transition"""
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Complement(self, *args)


    def Index(self, *args) -> "Standard_Integer":
        """
        :param I:
        	:type I: int
        	:rtype: None
        :rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Index(self, *args)


    def IndexAfter(self, *args) -> "Standard_Integer":
        """
        :param I:
        	:type I: int
        	:rtype: None
        :rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_IndexAfter(self, *args)


    def IndexBefore(self, *args) -> "Standard_Integer":
        """
        :param I:
        	:type I: int
        	:rtype: None
        :rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_IndexBefore(self, *args)


    def IsUnknown(self, *args) -> "Standard_Boolean":
        """
        * returns True if both states are UNKNOWN
        	:rtype: bool
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_IsUnknown(self, *args)


    def ONAfter(self, *args) -> "TopAbs_ShapeEnum":
        """:rtype: TopAbs_ShapeEnum"""
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_ONAfter(self, *args)


    def ONBefore(self, *args) -> "TopAbs_ShapeEnum":
        """:rtype: TopAbs_ShapeEnum"""
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_ONBefore(self, *args)


    def Orientation(self, *args) -> "TopAbs_Orientation":
        """
        * returns the orientation corresponding to state <S> //! Before and After not equal TopAbs_ON : -------------------------------------- Before After Computed orientation //! S not S REVERSED (we leave state S) not S S FORWARD (we enter state S) S S INTERNAL (we stay in state S) not S not S EXTERNAL (we stay outside state S)
        	:param S:
        	:type S: TopAbs_State
        	:param T: default value is TopAbs_FACE
        	:type T: TopAbs_ShapeEnum
        	:rtype: TopAbs_Orientation
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Orientation(self, *args)


    def Set(self, *args) -> "void":
        """
        :param StateBefore:
        	:type StateBefore: TopAbs_State
        	:param StateAfter:
        	:type StateAfter: TopAbs_State
        	:param ShapeBefore: default value is TopAbs_FACE
        	:type ShapeBefore: TopAbs_ShapeEnum
        	:param ShapeAfter: default value is TopAbs_FACE
        	:type ShapeAfter: TopAbs_ShapeEnum
        	:rtype: None
        * set the transition corresponding to orientation <O> //! O Before After //! FORWARD OUT IN REVERSED IN OUT INTERNAL IN IN EXTERNAL OUT OUT
        	:param O:
        	:type O: TopAbs_Orientation
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Set(self, *args)


    def ShapeAfter(self, *args) -> "TopAbs_ShapeEnum":
        """
        :param SE:
        	:type SE: TopAbs_ShapeEnum
        	:rtype: None
        :rtype: TopAbs_ShapeEnum
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_ShapeAfter(self, *args)


    def ShapeBefore(self, *args) -> "TopAbs_ShapeEnum":
        """
        :param SE:
        	:type SE: TopAbs_ShapeEnum
        	:rtype: None
        :rtype: TopAbs_ShapeEnum
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_ShapeBefore(self, *args)


    def StateAfter(self, *args) -> "void":
        """
        :param S:
        	:type S: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_StateAfter(self, *args)


    def StateBefore(self, *args) -> "void":
        """
        :param S:
        	:type S: TopAbs_State
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_StateBefore(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param StateBefore:
        	:type StateBefore: TopAbs_State
        	:param StateAfter:
        	:type StateAfter: TopAbs_State
        	:param ShapeBefore: default value is TopAbs_FACE
        	:type ShapeBefore: TopAbs_ShapeEnum
        	:param ShapeAfter: default value is TopAbs_FACE
        	:type ShapeAfter: TopAbs_ShapeEnum
        	:rtype: None
        :param O:
        	:type O: TopAbs_Orientation
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_Transition_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Transition(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_Transition
TopOpeBRepDS_Transition.After = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_After, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Before = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Before, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Complement = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Complement, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Index, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.IndexAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_IndexAfter, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.IndexBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_IndexBefore, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.IsUnknown = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_IsUnknown, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.ONAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_ONAfter, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.ONBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_ONBefore, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Orientation, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Set, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.ShapeAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_ShapeAfter, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.ShapeBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_ShapeBefore, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.StateAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_StateAfter, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.StateBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_StateBefore, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Transition_swigregister
TopOpeBRepDS_Transition_swigregister(TopOpeBRepDS_Transition)

class TopOpeBRepDS_CurveData(TopOpeBRepDS_GeometryData):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None
        :param C:
        	:type C: TopOpeBRepDS_Curve
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_CurveData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_CurveData(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_CurveData
TopOpeBRepDS_CurveData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_CurveData_swigregister
TopOpeBRepDS_CurveData_swigregister(TopOpeBRepDS_CurveData)

class TopOpeBRepDS_CurveIterator(TopOpeBRepDS_InterferenceIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Current(self, *args) -> "Standard_Integer":
        """
        * Index of the curve in the data structure.
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_Current(self, *args)


    def Orientation(self, *args) -> "TopAbs_Orientation":
        """
        :param S:
        	:type S: TopAbs_State
        	:rtype: TopAbs_Orientation
        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_Orientation(self, *args)


    def PCurve(self, *args) -> "opencascade::handle< Geom2d_Curve > const &":
        """:rtype: opencascade::handle<Geom2d_Curve>"""
        return _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_PCurve(self, *args)


    def __init__(self, *args):
        """
        * Creates an iterator on the curves on surface described by the interferences in <L>.
        	:param L:
        	:type L: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_CurveIterator(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_CurveIterator
TopOpeBRepDS_CurveIterator.Current = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveIterator_Current, None, TopOpeBRepDS_CurveIterator)
TopOpeBRepDS_CurveIterator.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveIterator_Orientation, None, TopOpeBRepDS_CurveIterator)
TopOpeBRepDS_CurveIterator.PCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveIterator_PCurve, None, TopOpeBRepDS_CurveIterator)
TopOpeBRepDS_CurveIterator_swigregister = _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_swigregister
TopOpeBRepDS_CurveIterator_swigregister(TopOpeBRepDS_CurveIterator)

class TopOpeBRepDS_CurvePointInterference(TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Parameter(self, *args) -> "void":
        """
        :rtype: float
        :param P:
        	:type P: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_Parameter(self, *args)


    def __init__(self, *args):
        """
        :param T:
        	:type T: TopOpeBRepDS_Transition
        	:param ST:
        	:type ST: TopOpeBRepDS_Kind
        	:param S:
        	:type S: int
        	:param GT:
        	:type GT: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:param P:
        	:type P: float
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_CurvePointInterference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_CurvePointInterference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_CurvePointInterference
TopOpeBRepDS_CurvePointInterference.Parameter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_Parameter, None, TopOpeBRepDS_CurvePointInterference)
TopOpeBRepDS_CurvePointInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_swigregister
TopOpeBRepDS_CurvePointInterference_swigregister(TopOpeBRepDS_CurvePointInterference)

class TopOpeBRepDS_PointData(TopOpeBRepDS_GeometryData):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GetShapes(self, *args) -> "void":
        """
        :param I1:
        	:type I1: int
        	:param I2:
        	:type I2: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointData_GetShapes(self, *args)


    def SetShapes(self, *args) -> "void":
        """
        :param I1:
        	:type I1: int
        	:param I2:
        	:type I2: int
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointData_SetShapes(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param P:
        	:type P: TopOpeBRepDS_Point
        	:rtype: None
        :param P:
        	:type P: TopOpeBRepDS_Point
        	:param I1:
        	:type I1: int
        	:param I2:
        	:type I2: int
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_PointData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_PointData(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_PointData
TopOpeBRepDS_PointData.GetShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointData_GetShapes, None, TopOpeBRepDS_PointData)
TopOpeBRepDS_PointData.SetShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointData_SetShapes, None, TopOpeBRepDS_PointData)
TopOpeBRepDS_PointData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_PointData_swigregister
TopOpeBRepDS_PointData_swigregister(TopOpeBRepDS_PointData)

class TopOpeBRepDS_PointIterator(TopOpeBRepDS_InterferenceIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Current(self, *args) -> "Standard_Integer":
        """
        * Index of the point in the data structure.
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_Current(self, *args)


    def DiffOriented(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_DiffOriented(self, *args)


    def IsPoint(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_IsPoint(self, *args)


    def IsVertex(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_IsVertex(self, *args)


    def Orientation(self, *args) -> "TopAbs_Orientation":
        """
        :param S:
        	:type S: TopAbs_State
        	:rtype: TopAbs_Orientation
        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_Orientation(self, *args)


    def Parameter(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_Parameter(self, *args)


    def SameOriented(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_SameOriented(self, *args)


    def Support(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_Support(self, *args)


    def __init__(self, *args):
        """
        * Creates an iterator on the points on curves described by the interferences in <L>.
        	:param L:
        	:type L: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_PointIterator_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_PointIterator(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_PointIterator
TopOpeBRepDS_PointIterator.Current = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_Current, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.DiffOriented = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_DiffOriented, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.IsPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_IsPoint, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.IsVertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_IsVertex, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_Orientation, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.Parameter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_Parameter, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.SameOriented = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_SameOriented, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.Support = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_Support, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator_swigregister = _TopOpeBRepDS.TopOpeBRepDS_PointIterator_swigregister
TopOpeBRepDS_PointIterator_swigregister(TopOpeBRepDS_PointIterator)

class TopOpeBRepDS_ShapeShapeInterference(TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Config(self, *args) -> "TopOpeBRepDS_Config":
        """:rtype: TopOpeBRepDS_Config"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_Config(self, *args)


    def GBound(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_GBound(self, *args)


    def SetGBound(self, *args) -> "void":
        """
        :param b:
        	:type b: bool
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_SetGBound(self, *args)


    def __init__(self, *args):
        """
        * a shape interfers on shape <G> with shape <S>. examples : create a ShapeShapeInterference describing : vertex V of edge E1 found on edge E2 : ST,S,GT,G = TopOpeBRepDS_EDGE,E2,TopOpeBRepDS_VERTEX,V //! create a ShapeShapeInterference describing vertex V of edge E found on face F : ST,S,GT,G = TopOpeBRepDS_FACE,F,TopOpeBRepDS_VERTEX,V //! <GBound> indicates if shape <G> is a bound of shape <S>. //! <SCC> : UNSH_GEOMETRY : <S> and <Ancestor> have any types, <S> and <Ancestor> don't share the same geometry SAME_ORIENTED : <S> and <Ancestor> have identical types, <S> and <Ancestor> orientations are IDENTICAL. DIFF_ORIENTED : <S> and <Ancestor> have identical types, <S> and <Ancestor> orientations are DIFFERENT.
        	:param T:
        	:type T: TopOpeBRepDS_Transition
        	:param ST:
        	:type ST: TopOpeBRepDS_Kind
        	:param S:
        	:type S: int
        	:param GT:
        	:type GT: TopOpeBRepDS_Kind
        	:param G:
        	:type G: int
        	:param GBound:
        	:type GBound: bool
        	:param C:
        	:type C: TopOpeBRepDS_Config
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ShapeShapeInterference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_ShapeShapeInterference
TopOpeBRepDS_ShapeShapeInterference.Config = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_Config, None, TopOpeBRepDS_ShapeShapeInterference)
TopOpeBRepDS_ShapeShapeInterference.GBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_GBound, None, TopOpeBRepDS_ShapeShapeInterference)
TopOpeBRepDS_ShapeShapeInterference.SetGBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_SetGBound, None, TopOpeBRepDS_ShapeShapeInterference)
TopOpeBRepDS_ShapeShapeInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_swigregister
TopOpeBRepDS_ShapeShapeInterference_swigregister(TopOpeBRepDS_ShapeShapeInterference)

class TopOpeBRepDS_SolidSurfaceInterference(TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Transition:
        	:type Transition: TopOpeBRepDS_Transition
        	:param SupportType:
        	:type SupportType: TopOpeBRepDS_Kind
        	:param Support:
        	:type Support: int
        	:param GeometryType:
        	:type GeometryType: TopOpeBRepDS_Kind
        	:param Geometry:
        	:type Geometry: int
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SolidSurfaceInterference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_SolidSurfaceInterference
TopOpeBRepDS_SolidSurfaceInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference_swigregister
TopOpeBRepDS_SolidSurfaceInterference_swigregister(TopOpeBRepDS_SolidSurfaceInterference)

class TopOpeBRepDS_SurfaceCurveInterference(TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PCurve(self, *args) -> "void":
        """
        :rtype: opencascade::handle<Geom2d_Curve>
        :param PC:
        	:type PC: Geom2d_Curve
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_PCurve(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param Transition:
        	:type Transition: TopOpeBRepDS_Transition
        	:param SupportType:
        	:type SupportType: TopOpeBRepDS_Kind
        	:param Support:
        	:type Support: int
        	:param GeometryType:
        	:type GeometryType: TopOpeBRepDS_Kind
        	:param Geometry:
        	:type Geometry: int
        	:param PC:
        	:type PC: Geom2d_Curve
        	:rtype: None
        :param I:
        	:type I: TopOpeBRepDS_Interference
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SurfaceCurveInterference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_SurfaceCurveInterference
TopOpeBRepDS_SurfaceCurveInterference.PCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_PCurve, None, TopOpeBRepDS_SurfaceCurveInterference)
TopOpeBRepDS_SurfaceCurveInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_swigregister
TopOpeBRepDS_SurfaceCurveInterference_swigregister(TopOpeBRepDS_SurfaceCurveInterference)

class TopOpeBRepDS_SurfaceData(TopOpeBRepDS_GeometryData):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None
        :param S:
        	:type S: TopOpeBRepDS_Surface
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_SurfaceData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SurfaceData(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_SurfaceData
TopOpeBRepDS_SurfaceData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SurfaceData_swigregister
TopOpeBRepDS_SurfaceData_swigregister(TopOpeBRepDS_SurfaceData)

class TopOpeBRepDS_SurfaceIterator(TopOpeBRepDS_InterferenceIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Current(self, *args) -> "Standard_Integer":
        """
        * Index of the surface in the data structure.
        	:rtype: int
        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_Current(self, *args)


    def Orientation(self, *args) -> "TopAbs_Orientation":
        """
        :param S:
        	:type S: TopAbs_State
        	:rtype: TopAbs_Orientation
        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_Orientation(self, *args)


    def __init__(self, *args):
        """
        * Creates an iterator on the Surfaces on solid described by the interferences in <L>.
        	:param L:
        	:type L: TopOpeBRepDS_ListOfInterference
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SurfaceIterator(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_SurfaceIterator
TopOpeBRepDS_SurfaceIterator.Current = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_Current, None, TopOpeBRepDS_SurfaceIterator)
TopOpeBRepDS_SurfaceIterator.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_Orientation, None, TopOpeBRepDS_SurfaceIterator)
TopOpeBRepDS_SurfaceIterator_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_swigregister
TopOpeBRepDS_SurfaceIterator_swigregister(TopOpeBRepDS_SurfaceIterator)

class TopOpeBRepDS_EdgeVertexInterference(TopOpeBRepDS_ShapeShapeInterference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Parameter(self, *args) -> "void":
        """
        :rtype: float
        :param P:
        	:type P: float
        	:rtype: None
        """
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_Parameter(self, *args)


    def __init__(self, *args):
        """
        * Create an interference of VERTEX <G> on a crossed EDGE E. //! if support type <ST> == EDGE : <S> is edge E FACE : <S> is the face with bound E. <T> is the transition along the edge, crossing the crossed edge. E is the crossed edge. <GIsBound> indicates if <G> is a bound of the edge. <P> is the parameter of <G> on the edge. //! interference is stored in the list of interfs of the edge.
        	:param T:
        	:type T: TopOpeBRepDS_Transition
        	:param ST:
        	:type ST: TopOpeBRepDS_Kind
        	:param S:
        	:type S: int
        	:param G:
        	:type G: int
        	:param GIsBound:
        	:type GIsBound: bool
        	:param C:
        	:type C: TopOpeBRepDS_Config
        	:param P:
        	:type P: float
        	:rtype: None
        * Create an interference of VERTEX <G> on crossed EDGE <S>. //! <T> is the transition along the edge, crossing the crossed edge. <S> is the crossed edge. <GIsBound> indicates if <G> is a bound of the edge. <C> indicates the geometric configuration between the edge and the crossed edge. <P> is the parameter of <G> on the edge. //! interference is stored in the list of interfs of the edge.
        	:param T:
        	:type T: TopOpeBRepDS_Transition
        	:param S:
        	:type S: int
        	:param G:
        	:type G: int
        	:param GIsBound:
        	:type GIsBound: bool
        	:param C:
        	:type C: TopOpeBRepDS_Config
        	:param P:
        	:type P: float
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_EdgeVertexInterference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_EdgeVertexInterference
TopOpeBRepDS_EdgeVertexInterference.Parameter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_Parameter, None, TopOpeBRepDS_EdgeVertexInterference)
TopOpeBRepDS_EdgeVertexInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_swigregister
TopOpeBRepDS_EdgeVertexInterference_swigregister(TopOpeBRepDS_EdgeVertexInterference)

class TopOpeBRepDS_FaceEdgeInterference(TopOpeBRepDS_ShapeShapeInterference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Create an interference of EDGE <G> on FACE <S>.
        	:param T:
        	:type T: TopOpeBRepDS_Transition
        	:param S:
        	:type S: int
        	:param G:
        	:type G: int
        	:param GIsBound:
        	:type GIsBound: bool
        	:param C:
        	:type C: TopOpeBRepDS_Config
        	:rtype: None
        """
        _TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_FaceEdgeInterference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_FaceEdgeInterference
TopOpeBRepDS_FaceEdgeInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference_swigregister
TopOpeBRepDS_FaceEdgeInterference_swigregister(TopOpeBRepDS_FaceEdgeInterference)

class TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference(TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast(t)

    __swig_destroy__ = _TopOpeBRepDS.delete_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.Array1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Array1, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.ChangeArray1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_ChangeArray1, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swigregister
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swigregister(TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)



