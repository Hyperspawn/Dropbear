# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
Vrml module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_vrml.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _Vrml.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_Vrml')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_Vrml')
    _Vrml = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_Vrml', [dirname(__file__)])
        except ImportError:
            import _Vrml
            return _Vrml
        try:
            _mod = imp.load_module('_Vrml', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _Vrml = swig_import_helper()
    del swig_import_helper
else:
    import _Vrml
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _Vrml.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_Vrml.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_Vrml.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_Vrml.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_Vrml.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_Vrml.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_Vrml.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_Vrml.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_Vrml.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_Vrml.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_Vrml.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_Vrml.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_Vrml.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_Vrml.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_Vrml.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_Vrml.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_Vrml.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _Vrml.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _Vrml.process_exception(error, method_name, class_name)
process_exception = _Vrml.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TColgp
import OCC.Core.Quantity
import OCC.Core.gp
Vrml_UNKNOWN_ORDERING = _Vrml.Vrml_UNKNOWN_ORDERING
Vrml_CLOCKWISE = _Vrml.Vrml_CLOCKWISE
Vrml_COUNTERCLOCKWISE = _Vrml.Vrml_COUNTERCLOCKWISE
Vrml_SERIF = _Vrml.Vrml_SERIF
Vrml_SANS = _Vrml.Vrml_SANS
Vrml_TYPEWRITER = _Vrml.Vrml_TYPEWRITER
Vrml_OFF = _Vrml.Vrml_OFF
Vrml_ON = _Vrml.Vrml_ON
Vrml_AUTO = _Vrml.Vrml_AUTO
Vrml_REPEAT = _Vrml.Vrml_REPEAT
Vrml_CLAMP = _Vrml.Vrml_CLAMP
Vrml_UNKNOWN_FACE_TYPE = _Vrml.Vrml_UNKNOWN_FACE_TYPE
Vrml_CONVEX = _Vrml.Vrml_CONVEX
Vrml_LEFT = _Vrml.Vrml_LEFT
Vrml_CENTER = _Vrml.Vrml_CENTER
Vrml_RIGHT = _Vrml.Vrml_RIGHT
Vrml_ConeSIDES = _Vrml.Vrml_ConeSIDES
Vrml_ConeBOTTOM = _Vrml.Vrml_ConeBOTTOM
Vrml_ConeALL = _Vrml.Vrml_ConeALL
Vrml_NULL = _Vrml.Vrml_NULL
Vrml_ONE = _Vrml.Vrml_ONE
Vrml_TWO = _Vrml.Vrml_TWO
Vrml_THREE = _Vrml.Vrml_THREE
Vrml_FOUR = _Vrml.Vrml_FOUR
Vrml_DEFAULT = _Vrml.Vrml_DEFAULT
Vrml_OVERALL = _Vrml.Vrml_OVERALL
Vrml_PER_PART = _Vrml.Vrml_PER_PART
Vrml_PER_PART_INDEXED = _Vrml.Vrml_PER_PART_INDEXED
Vrml_PER_FACE = _Vrml.Vrml_PER_FACE
Vrml_PER_FACE_INDEXED = _Vrml.Vrml_PER_FACE_INDEXED
Vrml_PER_VERTEX = _Vrml.Vrml_PER_VERTEX
Vrml_PER_VERTEX_INDEXED = _Vrml.Vrml_PER_VERTEX_INDEXED
Vrml_UNKNOWN_SHAPE_TYPE = _Vrml.Vrml_UNKNOWN_SHAPE_TYPE
Vrml_SOLID = _Vrml.Vrml_SOLID
Vrml_MAP_NONE = _Vrml.Vrml_MAP_NONE
Vrml_POINT = _Vrml.Vrml_POINT
Vrml_CylinderSIDES = _Vrml.Vrml_CylinderSIDES
Vrml_CylinderTOP = _Vrml.Vrml_CylinderTOP
Vrml_CylinderBOTTOM = _Vrml.Vrml_CylinderBOTTOM
Vrml_CylinderALL = _Vrml.Vrml_CylinderALL
Vrml_NONE = _Vrml.Vrml_NONE
Vrml_BOLD = _Vrml.Vrml_BOLD
Vrml_ITALIC = _Vrml.Vrml_ITALIC

def Handle_Vrml_AsciiText_Create() -> "opencascade::handle< Vrml_AsciiText >":
    return _Vrml.Handle_Vrml_AsciiText_Create()
Handle_Vrml_AsciiText_Create = _Vrml.Handle_Vrml_AsciiText_Create

def Handle_Vrml_AsciiText_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_AsciiText >":
    return _Vrml.Handle_Vrml_AsciiText_DownCast(t)
Handle_Vrml_AsciiText_DownCast = _Vrml.Handle_Vrml_AsciiText_DownCast

def Handle_Vrml_AsciiText_IsNull(t: 'opencascade::handle< Vrml_AsciiText > const &') -> "bool":
    return _Vrml.Handle_Vrml_AsciiText_IsNull(t)
Handle_Vrml_AsciiText_IsNull = _Vrml.Handle_Vrml_AsciiText_IsNull

def Handle_Vrml_Coordinate3_Create() -> "opencascade::handle< Vrml_Coordinate3 >":
    return _Vrml.Handle_Vrml_Coordinate3_Create()
Handle_Vrml_Coordinate3_Create = _Vrml.Handle_Vrml_Coordinate3_Create

def Handle_Vrml_Coordinate3_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_Coordinate3 >":
    return _Vrml.Handle_Vrml_Coordinate3_DownCast(t)
Handle_Vrml_Coordinate3_DownCast = _Vrml.Handle_Vrml_Coordinate3_DownCast

def Handle_Vrml_Coordinate3_IsNull(t: 'opencascade::handle< Vrml_Coordinate3 > const &') -> "bool":
    return _Vrml.Handle_Vrml_Coordinate3_IsNull(t)
Handle_Vrml_Coordinate3_IsNull = _Vrml.Handle_Vrml_Coordinate3_IsNull

def Handle_Vrml_IndexedFaceSet_Create() -> "opencascade::handle< Vrml_IndexedFaceSet >":
    return _Vrml.Handle_Vrml_IndexedFaceSet_Create()
Handle_Vrml_IndexedFaceSet_Create = _Vrml.Handle_Vrml_IndexedFaceSet_Create

def Handle_Vrml_IndexedFaceSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_IndexedFaceSet >":
    return _Vrml.Handle_Vrml_IndexedFaceSet_DownCast(t)
Handle_Vrml_IndexedFaceSet_DownCast = _Vrml.Handle_Vrml_IndexedFaceSet_DownCast

def Handle_Vrml_IndexedFaceSet_IsNull(t: 'opencascade::handle< Vrml_IndexedFaceSet > const &') -> "bool":
    return _Vrml.Handle_Vrml_IndexedFaceSet_IsNull(t)
Handle_Vrml_IndexedFaceSet_IsNull = _Vrml.Handle_Vrml_IndexedFaceSet_IsNull

def Handle_Vrml_IndexedLineSet_Create() -> "opencascade::handle< Vrml_IndexedLineSet >":
    return _Vrml.Handle_Vrml_IndexedLineSet_Create()
Handle_Vrml_IndexedLineSet_Create = _Vrml.Handle_Vrml_IndexedLineSet_Create

def Handle_Vrml_IndexedLineSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_IndexedLineSet >":
    return _Vrml.Handle_Vrml_IndexedLineSet_DownCast(t)
Handle_Vrml_IndexedLineSet_DownCast = _Vrml.Handle_Vrml_IndexedLineSet_DownCast

def Handle_Vrml_IndexedLineSet_IsNull(t: 'opencascade::handle< Vrml_IndexedLineSet > const &') -> "bool":
    return _Vrml.Handle_Vrml_IndexedLineSet_IsNull(t)
Handle_Vrml_IndexedLineSet_IsNull = _Vrml.Handle_Vrml_IndexedLineSet_IsNull

def Handle_Vrml_LOD_Create() -> "opencascade::handle< Vrml_LOD >":
    return _Vrml.Handle_Vrml_LOD_Create()
Handle_Vrml_LOD_Create = _Vrml.Handle_Vrml_LOD_Create

def Handle_Vrml_LOD_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_LOD >":
    return _Vrml.Handle_Vrml_LOD_DownCast(t)
Handle_Vrml_LOD_DownCast = _Vrml.Handle_Vrml_LOD_DownCast

def Handle_Vrml_LOD_IsNull(t: 'opencascade::handle< Vrml_LOD > const &') -> "bool":
    return _Vrml.Handle_Vrml_LOD_IsNull(t)
Handle_Vrml_LOD_IsNull = _Vrml.Handle_Vrml_LOD_IsNull

def Handle_Vrml_Material_Create() -> "opencascade::handle< Vrml_Material >":
    return _Vrml.Handle_Vrml_Material_Create()
Handle_Vrml_Material_Create = _Vrml.Handle_Vrml_Material_Create

def Handle_Vrml_Material_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_Material >":
    return _Vrml.Handle_Vrml_Material_DownCast(t)
Handle_Vrml_Material_DownCast = _Vrml.Handle_Vrml_Material_DownCast

def Handle_Vrml_Material_IsNull(t: 'opencascade::handle< Vrml_Material > const &') -> "bool":
    return _Vrml.Handle_Vrml_Material_IsNull(t)
Handle_Vrml_Material_IsNull = _Vrml.Handle_Vrml_Material_IsNull

def Handle_Vrml_Normal_Create() -> "opencascade::handle< Vrml_Normal >":
    return _Vrml.Handle_Vrml_Normal_Create()
Handle_Vrml_Normal_Create = _Vrml.Handle_Vrml_Normal_Create

def Handle_Vrml_Normal_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_Normal >":
    return _Vrml.Handle_Vrml_Normal_DownCast(t)
Handle_Vrml_Normal_DownCast = _Vrml.Handle_Vrml_Normal_DownCast

def Handle_Vrml_Normal_IsNull(t: 'opencascade::handle< Vrml_Normal > const &') -> "bool":
    return _Vrml.Handle_Vrml_Normal_IsNull(t)
Handle_Vrml_Normal_IsNull = _Vrml.Handle_Vrml_Normal_IsNull

def Handle_Vrml_SFImage_Create() -> "opencascade::handle< Vrml_SFImage >":
    return _Vrml.Handle_Vrml_SFImage_Create()
Handle_Vrml_SFImage_Create = _Vrml.Handle_Vrml_SFImage_Create

def Handle_Vrml_SFImage_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_SFImage >":
    return _Vrml.Handle_Vrml_SFImage_DownCast(t)
Handle_Vrml_SFImage_DownCast = _Vrml.Handle_Vrml_SFImage_DownCast

def Handle_Vrml_SFImage_IsNull(t: 'opencascade::handle< Vrml_SFImage > const &') -> "bool":
    return _Vrml.Handle_Vrml_SFImage_IsNull(t)
Handle_Vrml_SFImage_IsNull = _Vrml.Handle_Vrml_SFImage_IsNull

def Handle_Vrml_TextureCoordinate2_Create() -> "opencascade::handle< Vrml_TextureCoordinate2 >":
    return _Vrml.Handle_Vrml_TextureCoordinate2_Create()
Handle_Vrml_TextureCoordinate2_Create = _Vrml.Handle_Vrml_TextureCoordinate2_Create

def Handle_Vrml_TextureCoordinate2_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_TextureCoordinate2 >":
    return _Vrml.Handle_Vrml_TextureCoordinate2_DownCast(t)
Handle_Vrml_TextureCoordinate2_DownCast = _Vrml.Handle_Vrml_TextureCoordinate2_DownCast

def Handle_Vrml_TextureCoordinate2_IsNull(t: 'opencascade::handle< Vrml_TextureCoordinate2 > const &') -> "bool":
    return _Vrml.Handle_Vrml_TextureCoordinate2_IsNull(t)
Handle_Vrml_TextureCoordinate2_IsNull = _Vrml.Handle_Vrml_TextureCoordinate2_IsNull
class vrml(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CommentWriter(*args) -> "Standard_OStream &":
        """
        :param aComment:
        	:type aComment: char *
        	:param anOStream:
        	:type anOStream: Standard_OStream
        	:rtype: Standard_OStream
        """
        return _Vrml.vrml_CommentWriter(*args)

    CommentWriter = staticmethod(CommentWriter)

    def VrmlHeaderWriterToString(self) -> "std::string":
        """VrmlHeaderWriterToString(vrml self) -> std::string"""
        return _Vrml.vrml_VrmlHeaderWriterToString(self)


    __repr__ = _dumps_object


    def __init__(self):
        """__init__(Vrml self) -> vrml"""
        _Vrml.vrml_swiginit(self, _Vrml.new_vrml())
    __swig_destroy__ = _Vrml.delete_vrml
vrml.VrmlHeaderWriterToString = new_instancemethod(_Vrml.vrml_VrmlHeaderWriterToString, None, vrml)
vrml_swigregister = _Vrml.vrml_swigregister
vrml_swigregister(vrml)

def vrml_CommentWriter(*args) -> "Standard_OStream &":
    """
    :param aComment:
    	:type aComment: char *
    	:param anOStream:
    	:type anOStream: Standard_OStream
    	:rtype: Standard_OStream
    """
    return _Vrml.vrml_CommentWriter(*args)

class Vrml_AsciiText(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Justification(self, *args) -> "Vrml_AsciiTextJustification":
        """:rtype: Vrml_AsciiTextJustification"""
        return _Vrml.Vrml_AsciiText_Justification(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_AsciiText self) -> std::string"""
        return _Vrml.Vrml_AsciiText_PrintToString(self)


    def SetJustification(self, *args) -> "void":
        """
        :param aJustification:
        	:type aJustification: Vrml_AsciiTextJustification
        	:rtype: None
        """
        return _Vrml.Vrml_AsciiText_SetJustification(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        :param aSpacing:
        	:type aSpacing: float
        	:rtype: None
        """
        return _Vrml.Vrml_AsciiText_SetSpacing(self, *args)


    def SetString(self, *args) -> "void":
        """
        :param aString:
        	:type aString: TColStd_HArray1OfAsciiString
        	:rtype: None
        """
        return _Vrml.Vrml_AsciiText_SetString(self, *args)


    def SetWidth(self, *args) -> "void":
        """
        :param aWidth:
        	:type aWidth: float
        	:rtype: None
        """
        return _Vrml.Vrml_AsciiText_SetWidth(self, *args)


    def Spacing(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_AsciiText_Spacing(self, *args)


    def String(self, *args) -> "opencascade::handle< TColStd_HArray1OfAsciiString >":
        """:rtype: opencascade::handle<TColStd_HArray1OfAsciiString>"""
        return _Vrml.Vrml_AsciiText_String(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aString:
        	:type aString: TColStd_HArray1OfAsciiString
        	:param aSpacing:
        	:type aSpacing: float
        	:param aJustification:
        	:type aJustification: Vrml_AsciiTextJustification
        	:param aWidth:
        	:type aWidth: float
        	:rtype: None
        """
        _Vrml.Vrml_AsciiText_swiginit(self, _Vrml.new_Vrml_AsciiText(*args))

    def Width(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_AsciiText_Width(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_AsciiText_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_AsciiText
Vrml_AsciiText.Justification = new_instancemethod(_Vrml.Vrml_AsciiText_Justification, None, Vrml_AsciiText)
Vrml_AsciiText.PrintToString = new_instancemethod(_Vrml.Vrml_AsciiText_PrintToString, None, Vrml_AsciiText)
Vrml_AsciiText.SetJustification = new_instancemethod(_Vrml.Vrml_AsciiText_SetJustification, None, Vrml_AsciiText)
Vrml_AsciiText.SetSpacing = new_instancemethod(_Vrml.Vrml_AsciiText_SetSpacing, None, Vrml_AsciiText)
Vrml_AsciiText.SetString = new_instancemethod(_Vrml.Vrml_AsciiText_SetString, None, Vrml_AsciiText)
Vrml_AsciiText.SetWidth = new_instancemethod(_Vrml.Vrml_AsciiText_SetWidth, None, Vrml_AsciiText)
Vrml_AsciiText.Spacing = new_instancemethod(_Vrml.Vrml_AsciiText_Spacing, None, Vrml_AsciiText)
Vrml_AsciiText.String = new_instancemethod(_Vrml.Vrml_AsciiText_String, None, Vrml_AsciiText)
Vrml_AsciiText.Width = new_instancemethod(_Vrml.Vrml_AsciiText_Width, None, Vrml_AsciiText)
Vrml_AsciiText_swigregister = _Vrml.Vrml_AsciiText_swigregister
Vrml_AsciiText_swigregister(Vrml_AsciiText)

class Vrml_Cone(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BottomRadius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_Cone_BottomRadius(self, *args)


    def Height(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_Cone_Height(self, *args)


    def Parts(self, *args) -> "Vrml_ConeParts":
        """:rtype: Vrml_ConeParts"""
        return _Vrml.Vrml_Cone_Parts(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Cone self) -> std::string"""
        return _Vrml.Vrml_Cone_PrintToString(self)


    def SetBottomRadius(self, *args) -> "void":
        """
        :param aBottomRadius:
        	:type aBottomRadius: float
        	:rtype: None
        """
        return _Vrml.Vrml_Cone_SetBottomRadius(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        :param aHeight:
        	:type aHeight: float
        	:rtype: None
        """
        return _Vrml.Vrml_Cone_SetHeight(self, *args)


    def SetParts(self, *args) -> "void":
        """
        :param aParts:
        	:type aParts: Vrml_ConeParts
        	:rtype: None
        """
        return _Vrml.Vrml_Cone_SetParts(self, *args)


    def __init__(self, *args):
        """
        :param aParts: default value is Vrml_ConeALL
        	:type aParts: Vrml_ConeParts
        	:param aBottomRadius: default value is 1
        	:type aBottomRadius: float
        	:param aHeight: default value is 2
        	:type aHeight: float
        	:rtype: None
        """
        _Vrml.Vrml_Cone_swiginit(self, _Vrml.new_Vrml_Cone(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Cone
Vrml_Cone.BottomRadius = new_instancemethod(_Vrml.Vrml_Cone_BottomRadius, None, Vrml_Cone)
Vrml_Cone.Height = new_instancemethod(_Vrml.Vrml_Cone_Height, None, Vrml_Cone)
Vrml_Cone.Parts = new_instancemethod(_Vrml.Vrml_Cone_Parts, None, Vrml_Cone)
Vrml_Cone.PrintToString = new_instancemethod(_Vrml.Vrml_Cone_PrintToString, None, Vrml_Cone)
Vrml_Cone.SetBottomRadius = new_instancemethod(_Vrml.Vrml_Cone_SetBottomRadius, None, Vrml_Cone)
Vrml_Cone.SetHeight = new_instancemethod(_Vrml.Vrml_Cone_SetHeight, None, Vrml_Cone)
Vrml_Cone.SetParts = new_instancemethod(_Vrml.Vrml_Cone_SetParts, None, Vrml_Cone)
Vrml_Cone_swigregister = _Vrml.Vrml_Cone_swigregister
Vrml_Cone_swigregister(Vrml_Cone)

class Vrml_Coordinate3(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Point(self, *args) -> "opencascade::handle< TColgp_HArray1OfVec >":
        """:rtype: opencascade::handle<TColgp_HArray1OfVec>"""
        return _Vrml.Vrml_Coordinate3_Point(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Coordinate3 self) -> std::string"""
        return _Vrml.Vrml_Coordinate3_PrintToString(self)


    def SetPoint(self, *args) -> "void":
        """
        :param aPoint:
        	:type aPoint: TColgp_HArray1OfVec
        	:rtype: None
        """
        return _Vrml.Vrml_Coordinate3_SetPoint(self, *args)


    def __init__(self, *args):
        """
        :param aPoint:
        	:type aPoint: TColgp_HArray1OfVec
        	:rtype: None
        :rtype: None
        """
        _Vrml.Vrml_Coordinate3_swiginit(self, _Vrml.new_Vrml_Coordinate3(*args))


    @staticmethod
    def DownCast(t):
      return Handle_Vrml_Coordinate3_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Coordinate3
Vrml_Coordinate3.Point = new_instancemethod(_Vrml.Vrml_Coordinate3_Point, None, Vrml_Coordinate3)
Vrml_Coordinate3.PrintToString = new_instancemethod(_Vrml.Vrml_Coordinate3_PrintToString, None, Vrml_Coordinate3)
Vrml_Coordinate3.SetPoint = new_instancemethod(_Vrml.Vrml_Coordinate3_SetPoint, None, Vrml_Coordinate3)
Vrml_Coordinate3_swigregister = _Vrml.Vrml_Coordinate3_swigregister
Vrml_Coordinate3_swigregister(Vrml_Coordinate3)

class Vrml_Cube(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Depth(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_Cube_Depth(self, *args)


    def Height(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_Cube_Height(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Cube self) -> std::string"""
        return _Vrml.Vrml_Cube_PrintToString(self)


    def SetDepth(self, *args) -> "void":
        """
        :param aDepth:
        	:type aDepth: float
        	:rtype: None
        """
        return _Vrml.Vrml_Cube_SetDepth(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        :param aHeight:
        	:type aHeight: float
        	:rtype: None
        """
        return _Vrml.Vrml_Cube_SetHeight(self, *args)


    def SetWidth(self, *args) -> "void":
        """
        :param aWidth:
        	:type aWidth: float
        	:rtype: None
        """
        return _Vrml.Vrml_Cube_SetWidth(self, *args)


    def __init__(self, *args):
        """
        :param aWidth: default value is 2
        	:type aWidth: float
        	:param aHeight: default value is 2
        	:type aHeight: float
        	:param aDepth: default value is 2
        	:type aDepth: float
        	:rtype: None
        """
        _Vrml.Vrml_Cube_swiginit(self, _Vrml.new_Vrml_Cube(*args))

    def Width(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_Cube_Width(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Cube
Vrml_Cube.Depth = new_instancemethod(_Vrml.Vrml_Cube_Depth, None, Vrml_Cube)
Vrml_Cube.Height = new_instancemethod(_Vrml.Vrml_Cube_Height, None, Vrml_Cube)
Vrml_Cube.PrintToString = new_instancemethod(_Vrml.Vrml_Cube_PrintToString, None, Vrml_Cube)
Vrml_Cube.SetDepth = new_instancemethod(_Vrml.Vrml_Cube_SetDepth, None, Vrml_Cube)
Vrml_Cube.SetHeight = new_instancemethod(_Vrml.Vrml_Cube_SetHeight, None, Vrml_Cube)
Vrml_Cube.SetWidth = new_instancemethod(_Vrml.Vrml_Cube_SetWidth, None, Vrml_Cube)
Vrml_Cube.Width = new_instancemethod(_Vrml.Vrml_Cube_Width, None, Vrml_Cube)
Vrml_Cube_swigregister = _Vrml.Vrml_Cube_swigregister
Vrml_Cube_swigregister(Vrml_Cube)

class Vrml_Cylinder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Height(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_Cylinder_Height(self, *args)


    def Parts(self, *args) -> "Vrml_CylinderParts":
        """:rtype: Vrml_CylinderParts"""
        return _Vrml.Vrml_Cylinder_Parts(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Cylinder self) -> std::string"""
        return _Vrml.Vrml_Cylinder_PrintToString(self)


    def Radius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_Cylinder_Radius(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        :param aHeight:
        	:type aHeight: float
        	:rtype: None
        """
        return _Vrml.Vrml_Cylinder_SetHeight(self, *args)


    def SetParts(self, *args) -> "void":
        """
        :param aParts:
        	:type aParts: Vrml_CylinderParts
        	:rtype: None
        """
        return _Vrml.Vrml_Cylinder_SetParts(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        :param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _Vrml.Vrml_Cylinder_SetRadius(self, *args)


    def __init__(self, *args):
        """
        :param aParts: default value is Vrml_CylinderALL
        	:type aParts: Vrml_CylinderParts
        	:param aRadius: default value is 1
        	:type aRadius: float
        	:param aHeight: default value is 2
        	:type aHeight: float
        	:rtype: None
        """
        _Vrml.Vrml_Cylinder_swiginit(self, _Vrml.new_Vrml_Cylinder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Cylinder
Vrml_Cylinder.Height = new_instancemethod(_Vrml.Vrml_Cylinder_Height, None, Vrml_Cylinder)
Vrml_Cylinder.Parts = new_instancemethod(_Vrml.Vrml_Cylinder_Parts, None, Vrml_Cylinder)
Vrml_Cylinder.PrintToString = new_instancemethod(_Vrml.Vrml_Cylinder_PrintToString, None, Vrml_Cylinder)
Vrml_Cylinder.Radius = new_instancemethod(_Vrml.Vrml_Cylinder_Radius, None, Vrml_Cylinder)
Vrml_Cylinder.SetHeight = new_instancemethod(_Vrml.Vrml_Cylinder_SetHeight, None, Vrml_Cylinder)
Vrml_Cylinder.SetParts = new_instancemethod(_Vrml.Vrml_Cylinder_SetParts, None, Vrml_Cylinder)
Vrml_Cylinder.SetRadius = new_instancemethod(_Vrml.Vrml_Cylinder_SetRadius, None, Vrml_Cylinder)
Vrml_Cylinder_swigregister = _Vrml.Vrml_Cylinder_swigregister
Vrml_Cylinder_swigregister(Vrml_Cylinder)

class Vrml_DirectionalLight(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Color(self, *args) -> "Quantity_Color":
        """:rtype: Quantity_Color"""
        return _Vrml.Vrml_DirectionalLight_Color(self, *args)


    def Direction(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_DirectionalLight_Direction(self, *args)


    def Intensity(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_DirectionalLight_Intensity(self, *args)


    def OnOff(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _Vrml.Vrml_DirectionalLight_OnOff(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_DirectionalLight self) -> std::string"""
        return _Vrml.Vrml_DirectionalLight_PrintToString(self)


    def SetColor(self, *args) -> "void":
        """
        :param aColor:
        	:type aColor: Quantity_Color
        	:rtype: None
        """
        return _Vrml.Vrml_DirectionalLight_SetColor(self, *args)


    def SetDirection(self, *args) -> "void":
        """
        :param aDirection:
        	:type aDirection: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_DirectionalLight_SetDirection(self, *args)


    def SetIntensity(self, *args) -> "void":
        """
        :param aIntensity:
        	:type aIntensity: float
        	:rtype: None
        """
        return _Vrml.Vrml_DirectionalLight_SetIntensity(self, *args)


    def SetOnOff(self, *args) -> "void":
        """
        :param aOnOff:
        	:type aOnOff: bool
        	:rtype: None
        """
        return _Vrml.Vrml_DirectionalLight_SetOnOff(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aOnOff:
        	:type aOnOff: bool
        	:param aIntensity:
        	:type aIntensity: float
        	:param aColor:
        	:type aColor: Quantity_Color
        	:param aDirection:
        	:type aDirection: gp_Vec
        	:rtype: None
        """
        _Vrml.Vrml_DirectionalLight_swiginit(self, _Vrml.new_Vrml_DirectionalLight(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_DirectionalLight
Vrml_DirectionalLight.Color = new_instancemethod(_Vrml.Vrml_DirectionalLight_Color, None, Vrml_DirectionalLight)
Vrml_DirectionalLight.Direction = new_instancemethod(_Vrml.Vrml_DirectionalLight_Direction, None, Vrml_DirectionalLight)
Vrml_DirectionalLight.Intensity = new_instancemethod(_Vrml.Vrml_DirectionalLight_Intensity, None, Vrml_DirectionalLight)
Vrml_DirectionalLight.OnOff = new_instancemethod(_Vrml.Vrml_DirectionalLight_OnOff, None, Vrml_DirectionalLight)
Vrml_DirectionalLight.PrintToString = new_instancemethod(_Vrml.Vrml_DirectionalLight_PrintToString, None, Vrml_DirectionalLight)
Vrml_DirectionalLight.SetColor = new_instancemethod(_Vrml.Vrml_DirectionalLight_SetColor, None, Vrml_DirectionalLight)
Vrml_DirectionalLight.SetDirection = new_instancemethod(_Vrml.Vrml_DirectionalLight_SetDirection, None, Vrml_DirectionalLight)
Vrml_DirectionalLight.SetIntensity = new_instancemethod(_Vrml.Vrml_DirectionalLight_SetIntensity, None, Vrml_DirectionalLight)
Vrml_DirectionalLight.SetOnOff = new_instancemethod(_Vrml.Vrml_DirectionalLight_SetOnOff, None, Vrml_DirectionalLight)
Vrml_DirectionalLight_swigregister = _Vrml.Vrml_DirectionalLight_swigregister
Vrml_DirectionalLight_swigregister(Vrml_DirectionalLight)

class Vrml_FontStyle(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Family(self, *args) -> "Vrml_FontStyleFamily":
        """:rtype: Vrml_FontStyleFamily"""
        return _Vrml.Vrml_FontStyle_Family(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_FontStyle self) -> std::string"""
        return _Vrml.Vrml_FontStyle_PrintToString(self)


    def SetFamily(self, *args) -> "void":
        """
        :param aFamily:
        	:type aFamily: Vrml_FontStyleFamily
        	:rtype: None
        """
        return _Vrml.Vrml_FontStyle_SetFamily(self, *args)


    def SetSize(self, *args) -> "void":
        """
        :param aSize:
        	:type aSize: float
        	:rtype: None
        """
        return _Vrml.Vrml_FontStyle_SetSize(self, *args)


    def SetStyle(self, *args) -> "void":
        """
        :param aStyle:
        	:type aStyle: Vrml_FontStyleStyle
        	:rtype: None
        """
        return _Vrml.Vrml_FontStyle_SetStyle(self, *args)


    def Size(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_FontStyle_Size(self, *args)


    def Style(self, *args) -> "Vrml_FontStyleStyle":
        """:rtype: Vrml_FontStyleStyle"""
        return _Vrml.Vrml_FontStyle_Style(self, *args)


    def __init__(self, *args):
        """
        :param aSize: default value is 10
        	:type aSize: float
        	:param aFamily: default value is Vrml_SERIF
        	:type aFamily: Vrml_FontStyleFamily
        	:param aStyle: default value is Vrml_NONE
        	:type aStyle: Vrml_FontStyleStyle
        	:rtype: None
        """
        _Vrml.Vrml_FontStyle_swiginit(self, _Vrml.new_Vrml_FontStyle(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_FontStyle
Vrml_FontStyle.Family = new_instancemethod(_Vrml.Vrml_FontStyle_Family, None, Vrml_FontStyle)
Vrml_FontStyle.PrintToString = new_instancemethod(_Vrml.Vrml_FontStyle_PrintToString, None, Vrml_FontStyle)
Vrml_FontStyle.SetFamily = new_instancemethod(_Vrml.Vrml_FontStyle_SetFamily, None, Vrml_FontStyle)
Vrml_FontStyle.SetSize = new_instancemethod(_Vrml.Vrml_FontStyle_SetSize, None, Vrml_FontStyle)
Vrml_FontStyle.SetStyle = new_instancemethod(_Vrml.Vrml_FontStyle_SetStyle, None, Vrml_FontStyle)
Vrml_FontStyle.Size = new_instancemethod(_Vrml.Vrml_FontStyle_Size, None, Vrml_FontStyle)
Vrml_FontStyle.Style = new_instancemethod(_Vrml.Vrml_FontStyle_Style, None, Vrml_FontStyle)
Vrml_FontStyle_swigregister = _Vrml.Vrml_FontStyle_swigregister
Vrml_FontStyle_swigregister(Vrml_FontStyle)

class Vrml_Group(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Group self) -> std::string"""
        return _Vrml.Vrml_Group_PrintToString(self)


    def __init__(self, *args):
        """:rtype: None"""
        _Vrml.Vrml_Group_swiginit(self, _Vrml.new_Vrml_Group(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Group
Vrml_Group.PrintToString = new_instancemethod(_Vrml.Vrml_Group_PrintToString, None, Vrml_Group)
Vrml_Group_swigregister = _Vrml.Vrml_Group_swigregister
Vrml_Group_swigregister(Vrml_Group)

class Vrml_IndexedFaceSet(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _Vrml.Vrml_IndexedFaceSet_CoordIndex(self, *args)


    def MaterialIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _Vrml.Vrml_IndexedFaceSet_MaterialIndex(self, *args)


    def NormalIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _Vrml.Vrml_IndexedFaceSet_NormalIndex(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_IndexedFaceSet self) -> std::string"""
        return _Vrml.Vrml_IndexedFaceSet_PrintToString(self)


    def SetCoordIndex(self, *args) -> "void":
        """
        :param aCoordIndex:
        	:type aCoordIndex: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _Vrml.Vrml_IndexedFaceSet_SetCoordIndex(self, *args)


    def SetMaterialIndex(self, *args) -> "void":
        """
        :param aMaterialIndex:
        	:type aMaterialIndex: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _Vrml.Vrml_IndexedFaceSet_SetMaterialIndex(self, *args)


    def SetNormalIndex(self, *args) -> "void":
        """
        :param aNormalIndex:
        	:type aNormalIndex: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _Vrml.Vrml_IndexedFaceSet_SetNormalIndex(self, *args)


    def SetTextureCoordIndex(self, *args) -> "void":
        """
        :param aTextureCoordIndex:
        	:type aTextureCoordIndex: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _Vrml.Vrml_IndexedFaceSet_SetTextureCoordIndex(self, *args)


    def TextureCoordIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _Vrml.Vrml_IndexedFaceSet_TextureCoordIndex(self, *args)


    def __init__(self, *args):
        """
        :param aCoordIndex:
        	:type aCoordIndex: TColStd_HArray1OfInteger
        	:param aMaterialIndex:
        	:type aMaterialIndex: TColStd_HArray1OfInteger
        	:param aNormalIndex:
        	:type aNormalIndex: TColStd_HArray1OfInteger
        	:param aTextureCoordIndex:
        	:type aTextureCoordIndex: TColStd_HArray1OfInteger
        	:rtype: None
        :rtype: None
        """
        _Vrml.Vrml_IndexedFaceSet_swiginit(self, _Vrml.new_Vrml_IndexedFaceSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_Vrml_IndexedFaceSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_IndexedFaceSet
Vrml_IndexedFaceSet.CoordIndex = new_instancemethod(_Vrml.Vrml_IndexedFaceSet_CoordIndex, None, Vrml_IndexedFaceSet)
Vrml_IndexedFaceSet.MaterialIndex = new_instancemethod(_Vrml.Vrml_IndexedFaceSet_MaterialIndex, None, Vrml_IndexedFaceSet)
Vrml_IndexedFaceSet.NormalIndex = new_instancemethod(_Vrml.Vrml_IndexedFaceSet_NormalIndex, None, Vrml_IndexedFaceSet)
Vrml_IndexedFaceSet.PrintToString = new_instancemethod(_Vrml.Vrml_IndexedFaceSet_PrintToString, None, Vrml_IndexedFaceSet)
Vrml_IndexedFaceSet.SetCoordIndex = new_instancemethod(_Vrml.Vrml_IndexedFaceSet_SetCoordIndex, None, Vrml_IndexedFaceSet)
Vrml_IndexedFaceSet.SetMaterialIndex = new_instancemethod(_Vrml.Vrml_IndexedFaceSet_SetMaterialIndex, None, Vrml_IndexedFaceSet)
Vrml_IndexedFaceSet.SetNormalIndex = new_instancemethod(_Vrml.Vrml_IndexedFaceSet_SetNormalIndex, None, Vrml_IndexedFaceSet)
Vrml_IndexedFaceSet.SetTextureCoordIndex = new_instancemethod(_Vrml.Vrml_IndexedFaceSet_SetTextureCoordIndex, None, Vrml_IndexedFaceSet)
Vrml_IndexedFaceSet.TextureCoordIndex = new_instancemethod(_Vrml.Vrml_IndexedFaceSet_TextureCoordIndex, None, Vrml_IndexedFaceSet)
Vrml_IndexedFaceSet_swigregister = _Vrml.Vrml_IndexedFaceSet_swigregister
Vrml_IndexedFaceSet_swigregister(Vrml_IndexedFaceSet)

class Vrml_IndexedLineSet(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _Vrml.Vrml_IndexedLineSet_CoordIndex(self, *args)


    def MaterialIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _Vrml.Vrml_IndexedLineSet_MaterialIndex(self, *args)


    def NormalIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _Vrml.Vrml_IndexedLineSet_NormalIndex(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_IndexedLineSet self) -> std::string"""
        return _Vrml.Vrml_IndexedLineSet_PrintToString(self)


    def SetCoordIndex(self, *args) -> "void":
        """
        :param aCoordIndex:
        	:type aCoordIndex: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _Vrml.Vrml_IndexedLineSet_SetCoordIndex(self, *args)


    def SetMaterialIndex(self, *args) -> "void":
        """
        :param aMaterialIndex:
        	:type aMaterialIndex: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _Vrml.Vrml_IndexedLineSet_SetMaterialIndex(self, *args)


    def SetNormalIndex(self, *args) -> "void":
        """
        :param aNormalIndex:
        	:type aNormalIndex: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _Vrml.Vrml_IndexedLineSet_SetNormalIndex(self, *args)


    def SetTextureCoordIndex(self, *args) -> "void":
        """
        :param aTextureCoordIndex:
        	:type aTextureCoordIndex: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _Vrml.Vrml_IndexedLineSet_SetTextureCoordIndex(self, *args)


    def TextureCoordIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _Vrml.Vrml_IndexedLineSet_TextureCoordIndex(self, *args)


    def __init__(self, *args):
        """
        :param aCoordIndex:
        	:type aCoordIndex: TColStd_HArray1OfInteger
        	:param aMaterialIndex:
        	:type aMaterialIndex: TColStd_HArray1OfInteger
        	:param aNormalIndex:
        	:type aNormalIndex: TColStd_HArray1OfInteger
        	:param aTextureCoordIndex:
        	:type aTextureCoordIndex: TColStd_HArray1OfInteger
        	:rtype: None
        :rtype: None
        """
        _Vrml.Vrml_IndexedLineSet_swiginit(self, _Vrml.new_Vrml_IndexedLineSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_Vrml_IndexedLineSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_IndexedLineSet
Vrml_IndexedLineSet.CoordIndex = new_instancemethod(_Vrml.Vrml_IndexedLineSet_CoordIndex, None, Vrml_IndexedLineSet)
Vrml_IndexedLineSet.MaterialIndex = new_instancemethod(_Vrml.Vrml_IndexedLineSet_MaterialIndex, None, Vrml_IndexedLineSet)
Vrml_IndexedLineSet.NormalIndex = new_instancemethod(_Vrml.Vrml_IndexedLineSet_NormalIndex, None, Vrml_IndexedLineSet)
Vrml_IndexedLineSet.PrintToString = new_instancemethod(_Vrml.Vrml_IndexedLineSet_PrintToString, None, Vrml_IndexedLineSet)
Vrml_IndexedLineSet.SetCoordIndex = new_instancemethod(_Vrml.Vrml_IndexedLineSet_SetCoordIndex, None, Vrml_IndexedLineSet)
Vrml_IndexedLineSet.SetMaterialIndex = new_instancemethod(_Vrml.Vrml_IndexedLineSet_SetMaterialIndex, None, Vrml_IndexedLineSet)
Vrml_IndexedLineSet.SetNormalIndex = new_instancemethod(_Vrml.Vrml_IndexedLineSet_SetNormalIndex, None, Vrml_IndexedLineSet)
Vrml_IndexedLineSet.SetTextureCoordIndex = new_instancemethod(_Vrml.Vrml_IndexedLineSet_SetTextureCoordIndex, None, Vrml_IndexedLineSet)
Vrml_IndexedLineSet.TextureCoordIndex = new_instancemethod(_Vrml.Vrml_IndexedLineSet_TextureCoordIndex, None, Vrml_IndexedLineSet)
Vrml_IndexedLineSet_swigregister = _Vrml.Vrml_IndexedLineSet_swigregister
Vrml_IndexedLineSet_swigregister(Vrml_IndexedLineSet)

class Vrml_Info(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Info self) -> std::string"""
        return _Vrml.Vrml_Info_PrintToString(self)


    def SetString(self, *args) -> "void":
        """
        :param aString:
        	:type aString: TCollection_AsciiString
        	:rtype: None
        """
        return _Vrml.Vrml_Info_SetString(self, *args)


    def String(self, *args) -> "TCollection_AsciiString":
        """:rtype: TCollection_AsciiString"""
        return _Vrml.Vrml_Info_String(self, *args)


    def __init__(self, *args):
        """
        :param aString: default value is '<Undefinedinfo>'
        	:type aString: TCollection_AsciiString
        	:rtype: None
        """
        _Vrml.Vrml_Info_swiginit(self, _Vrml.new_Vrml_Info(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Info
Vrml_Info.PrintToString = new_instancemethod(_Vrml.Vrml_Info_PrintToString, None, Vrml_Info)
Vrml_Info.SetString = new_instancemethod(_Vrml.Vrml_Info_SetString, None, Vrml_Info)
Vrml_Info.String = new_instancemethod(_Vrml.Vrml_Info_String, None, Vrml_Info)
Vrml_Info_swigregister = _Vrml.Vrml_Info_swigregister
Vrml_Info_swigregister(Vrml_Info)

class Vrml_Instancing(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DEFToString(self) -> "std::string":
        """DEFToString(Vrml_Instancing self) -> std::string"""
        return _Vrml.Vrml_Instancing_DEFToString(self)


    def USEToString(self) -> "std::string":
        """USEToString(Vrml_Instancing self) -> std::string"""
        return _Vrml.Vrml_Instancing_USEToString(self)


    def __init__(self, *args):
        """
        * Adds 'DEF <myName>' in anOStream (VRML file).
        	:param aString:
        	:type aString: TCollection_AsciiString
        	:rtype: None
        """
        _Vrml.Vrml_Instancing_swiginit(self, _Vrml.new_Vrml_Instancing(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Instancing
Vrml_Instancing.DEFToString = new_instancemethod(_Vrml.Vrml_Instancing_DEFToString, None, Vrml_Instancing)
Vrml_Instancing.USEToString = new_instancemethod(_Vrml.Vrml_Instancing_USEToString, None, Vrml_Instancing)
Vrml_Instancing_swigregister = _Vrml.Vrml_Instancing_swigregister
Vrml_Instancing_swigregister(Vrml_Instancing)

class Vrml_LOD(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Center(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_LOD_Center(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_LOD self) -> std::string"""
        return _Vrml.Vrml_LOD_PrintToString(self)


    def Range(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _Vrml.Vrml_LOD_Range(self, *args)


    def SetCenter(self, *args) -> "void":
        """
        :param aCenter:
        	:type aCenter: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_LOD_SetCenter(self, *args)


    def SetRange(self, *args) -> "void":
        """
        :param aRange:
        	:type aRange: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _Vrml.Vrml_LOD_SetRange(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aRange:
        	:type aRange: TColStd_HArray1OfReal
        	:param aCenter:
        	:type aCenter: gp_Vec
        	:rtype: None
        """
        _Vrml.Vrml_LOD_swiginit(self, _Vrml.new_Vrml_LOD(*args))


    @staticmethod
    def DownCast(t):
      return Handle_Vrml_LOD_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_LOD
Vrml_LOD.Center = new_instancemethod(_Vrml.Vrml_LOD_Center, None, Vrml_LOD)
Vrml_LOD.PrintToString = new_instancemethod(_Vrml.Vrml_LOD_PrintToString, None, Vrml_LOD)
Vrml_LOD.Range = new_instancemethod(_Vrml.Vrml_LOD_Range, None, Vrml_LOD)
Vrml_LOD.SetCenter = new_instancemethod(_Vrml.Vrml_LOD_SetCenter, None, Vrml_LOD)
Vrml_LOD.SetRange = new_instancemethod(_Vrml.Vrml_LOD_SetRange, None, Vrml_LOD)
Vrml_LOD_swigregister = _Vrml.Vrml_LOD_swigregister
Vrml_LOD_swigregister(Vrml_LOD)

class Vrml_Material(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AmbientColor(self, *args) -> "opencascade::handle< Quantity_HArray1OfColor >":
        """:rtype: opencascade::handle<Quantity_HArray1OfColor>"""
        return _Vrml.Vrml_Material_AmbientColor(self, *args)


    def DiffuseColor(self, *args) -> "opencascade::handle< Quantity_HArray1OfColor >":
        """:rtype: opencascade::handle<Quantity_HArray1OfColor>"""
        return _Vrml.Vrml_Material_DiffuseColor(self, *args)


    def EmissiveColor(self, *args) -> "opencascade::handle< Quantity_HArray1OfColor >":
        """:rtype: opencascade::handle<Quantity_HArray1OfColor>"""
        return _Vrml.Vrml_Material_EmissiveColor(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Material self) -> std::string"""
        return _Vrml.Vrml_Material_PrintToString(self)


    def SetAmbientColor(self, *args) -> "void":
        """
        :param aAmbientColor:
        	:type aAmbientColor: Quantity_HArray1OfColor
        	:rtype: None
        """
        return _Vrml.Vrml_Material_SetAmbientColor(self, *args)


    def SetDiffuseColor(self, *args) -> "void":
        """
        :param aDiffuseColor:
        	:type aDiffuseColor: Quantity_HArray1OfColor
        	:rtype: None
        """
        return _Vrml.Vrml_Material_SetDiffuseColor(self, *args)


    def SetEmissiveColor(self, *args) -> "void":
        """
        :param aEmissiveColor:
        	:type aEmissiveColor: Quantity_HArray1OfColor
        	:rtype: None
        """
        return _Vrml.Vrml_Material_SetEmissiveColor(self, *args)


    def SetShininess(self, *args) -> "void":
        """
        :param aShininess:
        	:type aShininess: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _Vrml.Vrml_Material_SetShininess(self, *args)


    def SetSpecularColor(self, *args) -> "void":
        """
        :param aSpecularColor:
        	:type aSpecularColor: Quantity_HArray1OfColor
        	:rtype: None
        """
        return _Vrml.Vrml_Material_SetSpecularColor(self, *args)


    def SetTransparency(self, *args) -> "void":
        """
        :param aTransparency:
        	:type aTransparency: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _Vrml.Vrml_Material_SetTransparency(self, *args)


    def Shininess(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _Vrml.Vrml_Material_Shininess(self, *args)


    def SpecularColor(self, *args) -> "opencascade::handle< Quantity_HArray1OfColor >":
        """:rtype: opencascade::handle<Quantity_HArray1OfColor>"""
        return _Vrml.Vrml_Material_SpecularColor(self, *args)


    def Transparency(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _Vrml.Vrml_Material_Transparency(self, *args)


    def __init__(self, *args):
        """
        :param aAmbientColor:
        	:type aAmbientColor: Quantity_HArray1OfColor
        	:param aDiffuseColor:
        	:type aDiffuseColor: Quantity_HArray1OfColor
        	:param aSpecularColor:
        	:type aSpecularColor: Quantity_HArray1OfColor
        	:param aEmissiveColor:
        	:type aEmissiveColor: Quantity_HArray1OfColor
        	:param aShininess:
        	:type aShininess: TColStd_HArray1OfReal
        	:param aTransparency:
        	:type aTransparency: TColStd_HArray1OfReal
        	:rtype: None
        :rtype: None
        """
        _Vrml.Vrml_Material_swiginit(self, _Vrml.new_Vrml_Material(*args))


    @staticmethod
    def DownCast(t):
      return Handle_Vrml_Material_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Material
Vrml_Material.AmbientColor = new_instancemethod(_Vrml.Vrml_Material_AmbientColor, None, Vrml_Material)
Vrml_Material.DiffuseColor = new_instancemethod(_Vrml.Vrml_Material_DiffuseColor, None, Vrml_Material)
Vrml_Material.EmissiveColor = new_instancemethod(_Vrml.Vrml_Material_EmissiveColor, None, Vrml_Material)
Vrml_Material.PrintToString = new_instancemethod(_Vrml.Vrml_Material_PrintToString, None, Vrml_Material)
Vrml_Material.SetAmbientColor = new_instancemethod(_Vrml.Vrml_Material_SetAmbientColor, None, Vrml_Material)
Vrml_Material.SetDiffuseColor = new_instancemethod(_Vrml.Vrml_Material_SetDiffuseColor, None, Vrml_Material)
Vrml_Material.SetEmissiveColor = new_instancemethod(_Vrml.Vrml_Material_SetEmissiveColor, None, Vrml_Material)
Vrml_Material.SetShininess = new_instancemethod(_Vrml.Vrml_Material_SetShininess, None, Vrml_Material)
Vrml_Material.SetSpecularColor = new_instancemethod(_Vrml.Vrml_Material_SetSpecularColor, None, Vrml_Material)
Vrml_Material.SetTransparency = new_instancemethod(_Vrml.Vrml_Material_SetTransparency, None, Vrml_Material)
Vrml_Material.Shininess = new_instancemethod(_Vrml.Vrml_Material_Shininess, None, Vrml_Material)
Vrml_Material.SpecularColor = new_instancemethod(_Vrml.Vrml_Material_SpecularColor, None, Vrml_Material)
Vrml_Material.Transparency = new_instancemethod(_Vrml.Vrml_Material_Transparency, None, Vrml_Material)
Vrml_Material_swigregister = _Vrml.Vrml_Material_swigregister
Vrml_Material_swigregister(Vrml_Material)

class Vrml_MaterialBinding(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_MaterialBinding self) -> std::string"""
        return _Vrml.Vrml_MaterialBinding_PrintToString(self)


    def SetValue(self, *args) -> "void":
        """
        :param aValue:
        	:type aValue: Vrml_MaterialBindingAndNormalBinding
        	:rtype: None
        """
        return _Vrml.Vrml_MaterialBinding_SetValue(self, *args)


    def Value(self, *args) -> "Vrml_MaterialBindingAndNormalBinding":
        """:rtype: Vrml_MaterialBindingAndNormalBinding"""
        return _Vrml.Vrml_MaterialBinding_Value(self, *args)


    def __init__(self, *args):
        """
        :param aValue:
        	:type aValue: Vrml_MaterialBindingAndNormalBinding
        	:rtype: None
        :rtype: None
        """
        _Vrml.Vrml_MaterialBinding_swiginit(self, _Vrml.new_Vrml_MaterialBinding(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_MaterialBinding
Vrml_MaterialBinding.PrintToString = new_instancemethod(_Vrml.Vrml_MaterialBinding_PrintToString, None, Vrml_MaterialBinding)
Vrml_MaterialBinding.SetValue = new_instancemethod(_Vrml.Vrml_MaterialBinding_SetValue, None, Vrml_MaterialBinding)
Vrml_MaterialBinding.Value = new_instancemethod(_Vrml.Vrml_MaterialBinding_Value, None, Vrml_MaterialBinding)
Vrml_MaterialBinding_swigregister = _Vrml.Vrml_MaterialBinding_swigregister
Vrml_MaterialBinding_swigregister(Vrml_MaterialBinding)

class Vrml_MatrixTransform(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Matrix(self, *args) -> "gp_Trsf":
        """:rtype: gp_Trsf"""
        return _Vrml.Vrml_MatrixTransform_Matrix(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_MatrixTransform self) -> std::string"""
        return _Vrml.Vrml_MatrixTransform_PrintToString(self)


    def SetMatrix(self, *args) -> "void":
        """
        :param aMatrix:
        	:type aMatrix: gp_Trsf
        	:rtype: None
        """
        return _Vrml.Vrml_MatrixTransform_SetMatrix(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aMatrix:
        	:type aMatrix: gp_Trsf
        	:rtype: None
        """
        _Vrml.Vrml_MatrixTransform_swiginit(self, _Vrml.new_Vrml_MatrixTransform(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_MatrixTransform
Vrml_MatrixTransform.Matrix = new_instancemethod(_Vrml.Vrml_MatrixTransform_Matrix, None, Vrml_MatrixTransform)
Vrml_MatrixTransform.PrintToString = new_instancemethod(_Vrml.Vrml_MatrixTransform_PrintToString, None, Vrml_MatrixTransform)
Vrml_MatrixTransform.SetMatrix = new_instancemethod(_Vrml.Vrml_MatrixTransform_SetMatrix, None, Vrml_MatrixTransform)
Vrml_MatrixTransform_swigregister = _Vrml.Vrml_MatrixTransform_swigregister
Vrml_MatrixTransform_swigregister(Vrml_MatrixTransform)

class Vrml_Normal(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Normal self) -> std::string"""
        return _Vrml.Vrml_Normal_PrintToString(self)


    def SetVector(self, *args) -> "void":
        """
        :param aVector:
        	:type aVector: TColgp_HArray1OfVec
        	:rtype: None
        """
        return _Vrml.Vrml_Normal_SetVector(self, *args)


    def Vector(self, *args) -> "opencascade::handle< TColgp_HArray1OfVec >":
        """:rtype: opencascade::handle<TColgp_HArray1OfVec>"""
        return _Vrml.Vrml_Normal_Vector(self, *args)


    def __init__(self, *args):
        """
        :param aVector:
        	:type aVector: TColgp_HArray1OfVec
        	:rtype: None
        :rtype: None
        """
        _Vrml.Vrml_Normal_swiginit(self, _Vrml.new_Vrml_Normal(*args))


    @staticmethod
    def DownCast(t):
      return Handle_Vrml_Normal_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Normal
Vrml_Normal.PrintToString = new_instancemethod(_Vrml.Vrml_Normal_PrintToString, None, Vrml_Normal)
Vrml_Normal.SetVector = new_instancemethod(_Vrml.Vrml_Normal_SetVector, None, Vrml_Normal)
Vrml_Normal.Vector = new_instancemethod(_Vrml.Vrml_Normal_Vector, None, Vrml_Normal)
Vrml_Normal_swigregister = _Vrml.Vrml_Normal_swigregister
Vrml_Normal_swigregister(Vrml_Normal)

class Vrml_NormalBinding(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_NormalBinding self) -> std::string"""
        return _Vrml.Vrml_NormalBinding_PrintToString(self)


    def SetValue(self, *args) -> "void":
        """
        :param aValue:
        	:type aValue: Vrml_MaterialBindingAndNormalBinding
        	:rtype: None
        """
        return _Vrml.Vrml_NormalBinding_SetValue(self, *args)


    def Value(self, *args) -> "Vrml_MaterialBindingAndNormalBinding":
        """:rtype: Vrml_MaterialBindingAndNormalBinding"""
        return _Vrml.Vrml_NormalBinding_Value(self, *args)


    def __init__(self, *args):
        """
        :param aValue:
        	:type aValue: Vrml_MaterialBindingAndNormalBinding
        	:rtype: None
        :rtype: None
        """
        _Vrml.Vrml_NormalBinding_swiginit(self, _Vrml.new_Vrml_NormalBinding(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_NormalBinding
Vrml_NormalBinding.PrintToString = new_instancemethod(_Vrml.Vrml_NormalBinding_PrintToString, None, Vrml_NormalBinding)
Vrml_NormalBinding.SetValue = new_instancemethod(_Vrml.Vrml_NormalBinding_SetValue, None, Vrml_NormalBinding)
Vrml_NormalBinding.Value = new_instancemethod(_Vrml.Vrml_NormalBinding_Value, None, Vrml_NormalBinding)
Vrml_NormalBinding_swigregister = _Vrml.Vrml_NormalBinding_swigregister
Vrml_NormalBinding_swigregister(Vrml_NormalBinding)

class Vrml_OrthographicCamera(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FocalDistance(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_OrthographicCamera_FocalDistance(self, *args)


    def Height(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_OrthographicCamera_Height(self, *args)


    def Orientation(self, *args) -> "Vrml_SFRotation":
        """:rtype: Vrml_SFRotation"""
        return _Vrml.Vrml_OrthographicCamera_Orientation(self, *args)


    def Position(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_OrthographicCamera_Position(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_OrthographicCamera self) -> std::string"""
        return _Vrml.Vrml_OrthographicCamera_PrintToString(self)


    def SetFocalDistance(self, *args) -> "void":
        """
        :param aFocalDistance:
        	:type aFocalDistance: float
        	:rtype: None
        """
        return _Vrml.Vrml_OrthographicCamera_SetFocalDistance(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        :param aHeight:
        	:type aHeight: float
        	:rtype: None
        """
        return _Vrml.Vrml_OrthographicCamera_SetHeight(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        :param aOrientation:
        	:type aOrientation: Vrml_SFRotation
        	:rtype: None
        """
        return _Vrml.Vrml_OrthographicCamera_SetOrientation(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        :param aPosition:
        	:type aPosition: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_OrthographicCamera_SetPosition(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aPosition:
        	:type aPosition: gp_Vec
        	:param aOrientation:
        	:type aOrientation: Vrml_SFRotation
        	:param aFocalDistance:
        	:type aFocalDistance: float
        	:param aHeight:
        	:type aHeight: float
        	:rtype: None
        """
        _Vrml.Vrml_OrthographicCamera_swiginit(self, _Vrml.new_Vrml_OrthographicCamera(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_OrthographicCamera
Vrml_OrthographicCamera.FocalDistance = new_instancemethod(_Vrml.Vrml_OrthographicCamera_FocalDistance, None, Vrml_OrthographicCamera)
Vrml_OrthographicCamera.Height = new_instancemethod(_Vrml.Vrml_OrthographicCamera_Height, None, Vrml_OrthographicCamera)
Vrml_OrthographicCamera.Orientation = new_instancemethod(_Vrml.Vrml_OrthographicCamera_Orientation, None, Vrml_OrthographicCamera)
Vrml_OrthographicCamera.Position = new_instancemethod(_Vrml.Vrml_OrthographicCamera_Position, None, Vrml_OrthographicCamera)
Vrml_OrthographicCamera.PrintToString = new_instancemethod(_Vrml.Vrml_OrthographicCamera_PrintToString, None, Vrml_OrthographicCamera)
Vrml_OrthographicCamera.SetFocalDistance = new_instancemethod(_Vrml.Vrml_OrthographicCamera_SetFocalDistance, None, Vrml_OrthographicCamera)
Vrml_OrthographicCamera.SetHeight = new_instancemethod(_Vrml.Vrml_OrthographicCamera_SetHeight, None, Vrml_OrthographicCamera)
Vrml_OrthographicCamera.SetOrientation = new_instancemethod(_Vrml.Vrml_OrthographicCamera_SetOrientation, None, Vrml_OrthographicCamera)
Vrml_OrthographicCamera.SetPosition = new_instancemethod(_Vrml.Vrml_OrthographicCamera_SetPosition, None, Vrml_OrthographicCamera)
Vrml_OrthographicCamera_swigregister = _Vrml.Vrml_OrthographicCamera_swigregister
Vrml_OrthographicCamera_swigregister(Vrml_OrthographicCamera)

class Vrml_PerspectiveCamera(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Angle(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_PerspectiveCamera_Angle(self, *args)


    def FocalDistance(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_PerspectiveCamera_FocalDistance(self, *args)


    def Orientation(self, *args) -> "Vrml_SFRotation":
        """:rtype: Vrml_SFRotation"""
        return _Vrml.Vrml_PerspectiveCamera_Orientation(self, *args)


    def Position(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_PerspectiveCamera_Position(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_PerspectiveCamera self) -> std::string"""
        return _Vrml.Vrml_PerspectiveCamera_PrintToString(self)


    def SetAngle(self, *args) -> "void":
        """
        :param aHeightAngle:
        	:type aHeightAngle: float
        	:rtype: None
        """
        return _Vrml.Vrml_PerspectiveCamera_SetAngle(self, *args)


    def SetFocalDistance(self, *args) -> "void":
        """
        :param aFocalDistance:
        	:type aFocalDistance: float
        	:rtype: None
        """
        return _Vrml.Vrml_PerspectiveCamera_SetFocalDistance(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        :param aOrientation:
        	:type aOrientation: Vrml_SFRotation
        	:rtype: None
        """
        return _Vrml.Vrml_PerspectiveCamera_SetOrientation(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        :param aPosition:
        	:type aPosition: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_PerspectiveCamera_SetPosition(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aPosition:
        	:type aPosition: gp_Vec
        	:param aOrientation:
        	:type aOrientation: Vrml_SFRotation
        	:param aFocalDistance:
        	:type aFocalDistance: float
        	:param aHeightAngle:
        	:type aHeightAngle: float
        	:rtype: None
        """
        _Vrml.Vrml_PerspectiveCamera_swiginit(self, _Vrml.new_Vrml_PerspectiveCamera(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_PerspectiveCamera
Vrml_PerspectiveCamera.Angle = new_instancemethod(_Vrml.Vrml_PerspectiveCamera_Angle, None, Vrml_PerspectiveCamera)
Vrml_PerspectiveCamera.FocalDistance = new_instancemethod(_Vrml.Vrml_PerspectiveCamera_FocalDistance, None, Vrml_PerspectiveCamera)
Vrml_PerspectiveCamera.Orientation = new_instancemethod(_Vrml.Vrml_PerspectiveCamera_Orientation, None, Vrml_PerspectiveCamera)
Vrml_PerspectiveCamera.Position = new_instancemethod(_Vrml.Vrml_PerspectiveCamera_Position, None, Vrml_PerspectiveCamera)
Vrml_PerspectiveCamera.PrintToString = new_instancemethod(_Vrml.Vrml_PerspectiveCamera_PrintToString, None, Vrml_PerspectiveCamera)
Vrml_PerspectiveCamera.SetAngle = new_instancemethod(_Vrml.Vrml_PerspectiveCamera_SetAngle, None, Vrml_PerspectiveCamera)
Vrml_PerspectiveCamera.SetFocalDistance = new_instancemethod(_Vrml.Vrml_PerspectiveCamera_SetFocalDistance, None, Vrml_PerspectiveCamera)
Vrml_PerspectiveCamera.SetOrientation = new_instancemethod(_Vrml.Vrml_PerspectiveCamera_SetOrientation, None, Vrml_PerspectiveCamera)
Vrml_PerspectiveCamera.SetPosition = new_instancemethod(_Vrml.Vrml_PerspectiveCamera_SetPosition, None, Vrml_PerspectiveCamera)
Vrml_PerspectiveCamera_swigregister = _Vrml.Vrml_PerspectiveCamera_swigregister
Vrml_PerspectiveCamera_swigregister(Vrml_PerspectiveCamera)

class Vrml_PointLight(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Color(self, *args) -> "Quantity_Color":
        """:rtype: Quantity_Color"""
        return _Vrml.Vrml_PointLight_Color(self, *args)


    def Intensity(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_PointLight_Intensity(self, *args)


    def Location(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_PointLight_Location(self, *args)


    def OnOff(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _Vrml.Vrml_PointLight_OnOff(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_PointLight self) -> std::string"""
        return _Vrml.Vrml_PointLight_PrintToString(self)


    def SetColor(self, *args) -> "void":
        """
        :param aColor:
        	:type aColor: Quantity_Color
        	:rtype: None
        """
        return _Vrml.Vrml_PointLight_SetColor(self, *args)


    def SetIntensity(self, *args) -> "void":
        """
        :param aIntensity:
        	:type aIntensity: float
        	:rtype: None
        """
        return _Vrml.Vrml_PointLight_SetIntensity(self, *args)


    def SetLocation(self, *args) -> "void":
        """
        :param aLocation:
        	:type aLocation: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_PointLight_SetLocation(self, *args)


    def SetOnOff(self, *args) -> "void":
        """
        :param aOnOff:
        	:type aOnOff: bool
        	:rtype: None
        """
        return _Vrml.Vrml_PointLight_SetOnOff(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aOnOff:
        	:type aOnOff: bool
        	:param aIntensity:
        	:type aIntensity: float
        	:param aColor:
        	:type aColor: Quantity_Color
        	:param aLocation:
        	:type aLocation: gp_Vec
        	:rtype: None
        """
        _Vrml.Vrml_PointLight_swiginit(self, _Vrml.new_Vrml_PointLight(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_PointLight
Vrml_PointLight.Color = new_instancemethod(_Vrml.Vrml_PointLight_Color, None, Vrml_PointLight)
Vrml_PointLight.Intensity = new_instancemethod(_Vrml.Vrml_PointLight_Intensity, None, Vrml_PointLight)
Vrml_PointLight.Location = new_instancemethod(_Vrml.Vrml_PointLight_Location, None, Vrml_PointLight)
Vrml_PointLight.OnOff = new_instancemethod(_Vrml.Vrml_PointLight_OnOff, None, Vrml_PointLight)
Vrml_PointLight.PrintToString = new_instancemethod(_Vrml.Vrml_PointLight_PrintToString, None, Vrml_PointLight)
Vrml_PointLight.SetColor = new_instancemethod(_Vrml.Vrml_PointLight_SetColor, None, Vrml_PointLight)
Vrml_PointLight.SetIntensity = new_instancemethod(_Vrml.Vrml_PointLight_SetIntensity, None, Vrml_PointLight)
Vrml_PointLight.SetLocation = new_instancemethod(_Vrml.Vrml_PointLight_SetLocation, None, Vrml_PointLight)
Vrml_PointLight.SetOnOff = new_instancemethod(_Vrml.Vrml_PointLight_SetOnOff, None, Vrml_PointLight)
Vrml_PointLight_swigregister = _Vrml.Vrml_PointLight_swigregister
Vrml_PointLight_swigregister(Vrml_PointLight)

class Vrml_PointSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def NumPoints(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _Vrml.Vrml_PointSet_NumPoints(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_PointSet self) -> std::string"""
        return _Vrml.Vrml_PointSet_PrintToString(self)


    def SetNumPoints(self, *args) -> "void":
        """
        :param aNumPoints:
        	:type aNumPoints: int
        	:rtype: None
        """
        return _Vrml.Vrml_PointSet_SetNumPoints(self, *args)


    def SetStartIndex(self, *args) -> "void":
        """
        :param aStartIndex:
        	:type aStartIndex: int
        	:rtype: None
        """
        return _Vrml.Vrml_PointSet_SetStartIndex(self, *args)


    def StartIndex(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _Vrml.Vrml_PointSet_StartIndex(self, *args)


    def __init__(self, *args):
        """
        :param aStartIndex: default value is 0
        	:type aStartIndex: int
        	:param aNumPoints: default value is -1
        	:type aNumPoints: int
        	:rtype: None
        """
        _Vrml.Vrml_PointSet_swiginit(self, _Vrml.new_Vrml_PointSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_PointSet
Vrml_PointSet.NumPoints = new_instancemethod(_Vrml.Vrml_PointSet_NumPoints, None, Vrml_PointSet)
Vrml_PointSet.PrintToString = new_instancemethod(_Vrml.Vrml_PointSet_PrintToString, None, Vrml_PointSet)
Vrml_PointSet.SetNumPoints = new_instancemethod(_Vrml.Vrml_PointSet_SetNumPoints, None, Vrml_PointSet)
Vrml_PointSet.SetStartIndex = new_instancemethod(_Vrml.Vrml_PointSet_SetStartIndex, None, Vrml_PointSet)
Vrml_PointSet.StartIndex = new_instancemethod(_Vrml.Vrml_PointSet_StartIndex, None, Vrml_PointSet)
Vrml_PointSet_swigregister = _Vrml.Vrml_PointSet_swigregister
Vrml_PointSet_swigregister(Vrml_PointSet)

class Vrml_Rotation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Rotation self) -> std::string"""
        return _Vrml.Vrml_Rotation_PrintToString(self)


    def Rotation(self, *args) -> "Vrml_SFRotation":
        """:rtype: Vrml_SFRotation"""
        return _Vrml.Vrml_Rotation_Rotation(self, *args)


    def SetRotation(self, *args) -> "void":
        """
        :param aRotation:
        	:type aRotation: Vrml_SFRotation
        	:rtype: None
        """
        return _Vrml.Vrml_Rotation_SetRotation(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aRotation:
        	:type aRotation: Vrml_SFRotation
        	:rtype: None
        """
        _Vrml.Vrml_Rotation_swiginit(self, _Vrml.new_Vrml_Rotation(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Rotation
Vrml_Rotation.PrintToString = new_instancemethod(_Vrml.Vrml_Rotation_PrintToString, None, Vrml_Rotation)
Vrml_Rotation.Rotation = new_instancemethod(_Vrml.Vrml_Rotation_Rotation, None, Vrml_Rotation)
Vrml_Rotation.SetRotation = new_instancemethod(_Vrml.Vrml_Rotation_SetRotation, None, Vrml_Rotation)
Vrml_Rotation_swigregister = _Vrml.Vrml_Rotation_swigregister
Vrml_Rotation_swigregister(Vrml_Rotation)

class Vrml_SFImage(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Array(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _Vrml.Vrml_SFImage_Array(self, *args)


    def ArrayFlag(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _Vrml.Vrml_SFImage_ArrayFlag(self, *args)


    def Height(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _Vrml.Vrml_SFImage_Height(self, *args)


    def Number(self, *args) -> "Vrml_SFImageNumber":
        """:rtype: Vrml_SFImageNumber"""
        return _Vrml.Vrml_SFImage_Number(self, *args)


    def SetArray(self, *args) -> "void":
        """
        :param anArray:
        	:type anArray: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _Vrml.Vrml_SFImage_SetArray(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        :param aHeight:
        	:type aHeight: int
        	:rtype: None
        """
        return _Vrml.Vrml_SFImage_SetHeight(self, *args)


    def SetNumber(self, *args) -> "void":
        """
        :param aNumber:
        	:type aNumber: Vrml_SFImageNumber
        	:rtype: None
        """
        return _Vrml.Vrml_SFImage_SetNumber(self, *args)


    def SetWidth(self, *args) -> "void":
        """
        :param aWidth:
        	:type aWidth: int
        	:rtype: None
        """
        return _Vrml.Vrml_SFImage_SetWidth(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aWidth:
        	:type aWidth: int
        	:param aHeight:
        	:type aHeight: int
        	:param aNumber:
        	:type aNumber: Vrml_SFImageNumber
        	:param anArray:
        	:type anArray: TColStd_HArray1OfInteger
        	:rtype: None
        """
        _Vrml.Vrml_SFImage_swiginit(self, _Vrml.new_Vrml_SFImage(*args))

    def Width(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _Vrml.Vrml_SFImage_Width(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_SFImage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_SFImage
Vrml_SFImage.Array = new_instancemethod(_Vrml.Vrml_SFImage_Array, None, Vrml_SFImage)
Vrml_SFImage.ArrayFlag = new_instancemethod(_Vrml.Vrml_SFImage_ArrayFlag, None, Vrml_SFImage)
Vrml_SFImage.Height = new_instancemethod(_Vrml.Vrml_SFImage_Height, None, Vrml_SFImage)
Vrml_SFImage.Number = new_instancemethod(_Vrml.Vrml_SFImage_Number, None, Vrml_SFImage)
Vrml_SFImage.SetArray = new_instancemethod(_Vrml.Vrml_SFImage_SetArray, None, Vrml_SFImage)
Vrml_SFImage.SetHeight = new_instancemethod(_Vrml.Vrml_SFImage_SetHeight, None, Vrml_SFImage)
Vrml_SFImage.SetNumber = new_instancemethod(_Vrml.Vrml_SFImage_SetNumber, None, Vrml_SFImage)
Vrml_SFImage.SetWidth = new_instancemethod(_Vrml.Vrml_SFImage_SetWidth, None, Vrml_SFImage)
Vrml_SFImage.Width = new_instancemethod(_Vrml.Vrml_SFImage_Width, None, Vrml_SFImage)
Vrml_SFImage_swigregister = _Vrml.Vrml_SFImage_swigregister
Vrml_SFImage_swigregister(Vrml_SFImage)

class Vrml_SFRotation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Angle(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_SFRotation_Angle(self, *args)


    def RotationX(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_SFRotation_RotationX(self, *args)


    def RotationY(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_SFRotation_RotationY(self, *args)


    def RotationZ(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_SFRotation_RotationZ(self, *args)


    def SetAngle(self, *args) -> "void":
        """
        :param anAngle:
        	:type anAngle: float
        	:rtype: None
        """
        return _Vrml.Vrml_SFRotation_SetAngle(self, *args)


    def SetRotationX(self, *args) -> "void":
        """
        :param aRotationX:
        	:type aRotationX: float
        	:rtype: None
        """
        return _Vrml.Vrml_SFRotation_SetRotationX(self, *args)


    def SetRotationY(self, *args) -> "void":
        """
        :param aRotationY:
        	:type aRotationY: float
        	:rtype: None
        """
        return _Vrml.Vrml_SFRotation_SetRotationY(self, *args)


    def SetRotationZ(self, *args) -> "void":
        """
        :param aRotationZ:
        	:type aRotationZ: float
        	:rtype: None
        """
        return _Vrml.Vrml_SFRotation_SetRotationZ(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aRotationX:
        	:type aRotationX: float
        	:param aRotationY:
        	:type aRotationY: float
        	:param aRotationZ:
        	:type aRotationZ: float
        	:param anAngle:
        	:type anAngle: float
        	:rtype: None
        """
        _Vrml.Vrml_SFRotation_swiginit(self, _Vrml.new_Vrml_SFRotation(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_SFRotation
Vrml_SFRotation.Angle = new_instancemethod(_Vrml.Vrml_SFRotation_Angle, None, Vrml_SFRotation)
Vrml_SFRotation.RotationX = new_instancemethod(_Vrml.Vrml_SFRotation_RotationX, None, Vrml_SFRotation)
Vrml_SFRotation.RotationY = new_instancemethod(_Vrml.Vrml_SFRotation_RotationY, None, Vrml_SFRotation)
Vrml_SFRotation.RotationZ = new_instancemethod(_Vrml.Vrml_SFRotation_RotationZ, None, Vrml_SFRotation)
Vrml_SFRotation.SetAngle = new_instancemethod(_Vrml.Vrml_SFRotation_SetAngle, None, Vrml_SFRotation)
Vrml_SFRotation.SetRotationX = new_instancemethod(_Vrml.Vrml_SFRotation_SetRotationX, None, Vrml_SFRotation)
Vrml_SFRotation.SetRotationY = new_instancemethod(_Vrml.Vrml_SFRotation_SetRotationY, None, Vrml_SFRotation)
Vrml_SFRotation.SetRotationZ = new_instancemethod(_Vrml.Vrml_SFRotation_SetRotationZ, None, Vrml_SFRotation)
Vrml_SFRotation_swigregister = _Vrml.Vrml_SFRotation_swigregister
Vrml_SFRotation_swigregister(Vrml_SFRotation)

class Vrml_Scale(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Scale self) -> std::string"""
        return _Vrml.Vrml_Scale_PrintToString(self)


    def ScaleFactor(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_Scale_ScaleFactor(self, *args)


    def SetScaleFactor(self, *args) -> "void":
        """
        :param aScaleFactor:
        	:type aScaleFactor: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_Scale_SetScaleFactor(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aScaleFactor:
        	:type aScaleFactor: gp_Vec
        	:rtype: None
        """
        _Vrml.Vrml_Scale_swiginit(self, _Vrml.new_Vrml_Scale(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Scale
Vrml_Scale.PrintToString = new_instancemethod(_Vrml.Vrml_Scale_PrintToString, None, Vrml_Scale)
Vrml_Scale.ScaleFactor = new_instancemethod(_Vrml.Vrml_Scale_ScaleFactor, None, Vrml_Scale)
Vrml_Scale.SetScaleFactor = new_instancemethod(_Vrml.Vrml_Scale_SetScaleFactor, None, Vrml_Scale)
Vrml_Scale_swigregister = _Vrml.Vrml_Scale_swigregister
Vrml_Scale_swigregister(Vrml_Scale)

class Vrml_Separator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Separator self) -> std::string"""
        return _Vrml.Vrml_Separator_PrintToString(self)


    def RenderCulling(self, *args) -> "Vrml_SeparatorRenderCulling":
        """:rtype: Vrml_SeparatorRenderCulling"""
        return _Vrml.Vrml_Separator_RenderCulling(self, *args)


    def SetRenderCulling(self, *args) -> "void":
        """
        :param aRenderCulling:
        	:type aRenderCulling: Vrml_SeparatorRenderCulling
        	:rtype: None
        """
        return _Vrml.Vrml_Separator_SetRenderCulling(self, *args)


    def __init__(self, *args):
        """
        :param aRenderCulling:
        	:type aRenderCulling: Vrml_SeparatorRenderCulling
        	:rtype: None
        :rtype: None
        """
        _Vrml.Vrml_Separator_swiginit(self, _Vrml.new_Vrml_Separator(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Separator
Vrml_Separator.PrintToString = new_instancemethod(_Vrml.Vrml_Separator_PrintToString, None, Vrml_Separator)
Vrml_Separator.RenderCulling = new_instancemethod(_Vrml.Vrml_Separator_RenderCulling, None, Vrml_Separator)
Vrml_Separator.SetRenderCulling = new_instancemethod(_Vrml.Vrml_Separator_SetRenderCulling, None, Vrml_Separator)
Vrml_Separator_swigregister = _Vrml.Vrml_Separator_swigregister
Vrml_Separator_swigregister(Vrml_Separator)

class Vrml_ShapeHints(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Angle(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_ShapeHints_Angle(self, *args)


    def FaceType(self, *args) -> "Vrml_FaceType":
        """:rtype: Vrml_FaceType"""
        return _Vrml.Vrml_ShapeHints_FaceType(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_ShapeHints self) -> std::string"""
        return _Vrml.Vrml_ShapeHints_PrintToString(self)


    def SetAngle(self, *args) -> "void":
        """
        :param aAngle:
        	:type aAngle: float
        	:rtype: None
        """
        return _Vrml.Vrml_ShapeHints_SetAngle(self, *args)


    def SetFaceType(self, *args) -> "void":
        """
        :param aFaceType:
        	:type aFaceType: Vrml_FaceType
        	:rtype: None
        """
        return _Vrml.Vrml_ShapeHints_SetFaceType(self, *args)


    def SetShapeType(self, *args) -> "void":
        """
        :param aShapeType:
        	:type aShapeType: Vrml_ShapeType
        	:rtype: None
        """
        return _Vrml.Vrml_ShapeHints_SetShapeType(self, *args)


    def SetVertexOrdering(self, *args) -> "void":
        """
        :param aVertexOrdering:
        	:type aVertexOrdering: Vrml_VertexOrdering
        	:rtype: None
        """
        return _Vrml.Vrml_ShapeHints_SetVertexOrdering(self, *args)


    def ShapeType(self, *args) -> "Vrml_ShapeType":
        """:rtype: Vrml_ShapeType"""
        return _Vrml.Vrml_ShapeHints_ShapeType(self, *args)


    def VertexOrdering(self, *args) -> "Vrml_VertexOrdering":
        """:rtype: Vrml_VertexOrdering"""
        return _Vrml.Vrml_ShapeHints_VertexOrdering(self, *args)


    def __init__(self, *args):
        """
        :param aVertexOrdering: default value is Vrml_UNKNOWN_ORDERING
        	:type aVertexOrdering: Vrml_VertexOrdering
        	:param aShapeType: default value is Vrml_UNKNOWN_SHAPE_TYPE
        	:type aShapeType: Vrml_ShapeType
        	:param aFaceType: default value is Vrml_CONVEX
        	:type aFaceType: Vrml_FaceType
        	:param aAngle: default value is 0.5
        	:type aAngle: float
        	:rtype: None
        """
        _Vrml.Vrml_ShapeHints_swiginit(self, _Vrml.new_Vrml_ShapeHints(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_ShapeHints
Vrml_ShapeHints.Angle = new_instancemethod(_Vrml.Vrml_ShapeHints_Angle, None, Vrml_ShapeHints)
Vrml_ShapeHints.FaceType = new_instancemethod(_Vrml.Vrml_ShapeHints_FaceType, None, Vrml_ShapeHints)
Vrml_ShapeHints.PrintToString = new_instancemethod(_Vrml.Vrml_ShapeHints_PrintToString, None, Vrml_ShapeHints)
Vrml_ShapeHints.SetAngle = new_instancemethod(_Vrml.Vrml_ShapeHints_SetAngle, None, Vrml_ShapeHints)
Vrml_ShapeHints.SetFaceType = new_instancemethod(_Vrml.Vrml_ShapeHints_SetFaceType, None, Vrml_ShapeHints)
Vrml_ShapeHints.SetShapeType = new_instancemethod(_Vrml.Vrml_ShapeHints_SetShapeType, None, Vrml_ShapeHints)
Vrml_ShapeHints.SetVertexOrdering = new_instancemethod(_Vrml.Vrml_ShapeHints_SetVertexOrdering, None, Vrml_ShapeHints)
Vrml_ShapeHints.ShapeType = new_instancemethod(_Vrml.Vrml_ShapeHints_ShapeType, None, Vrml_ShapeHints)
Vrml_ShapeHints.VertexOrdering = new_instancemethod(_Vrml.Vrml_ShapeHints_VertexOrdering, None, Vrml_ShapeHints)
Vrml_ShapeHints_swigregister = _Vrml.Vrml_ShapeHints_swigregister
Vrml_ShapeHints_swigregister(Vrml_ShapeHints)

class Vrml_Sphere(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Sphere self) -> std::string"""
        return _Vrml.Vrml_Sphere_PrintToString(self)


    def Radius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_Sphere_Radius(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        :param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _Vrml.Vrml_Sphere_SetRadius(self, *args)


    def __init__(self, *args):
        """
        :param aRadius: default value is 1
        	:type aRadius: float
        	:rtype: None
        """
        _Vrml.Vrml_Sphere_swiginit(self, _Vrml.new_Vrml_Sphere(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Sphere
Vrml_Sphere.PrintToString = new_instancemethod(_Vrml.Vrml_Sphere_PrintToString, None, Vrml_Sphere)
Vrml_Sphere.Radius = new_instancemethod(_Vrml.Vrml_Sphere_Radius, None, Vrml_Sphere)
Vrml_Sphere.SetRadius = new_instancemethod(_Vrml.Vrml_Sphere_SetRadius, None, Vrml_Sphere)
Vrml_Sphere_swigregister = _Vrml.Vrml_Sphere_swigregister
Vrml_Sphere_swigregister(Vrml_Sphere)

class Vrml_SpotLight(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Color(self, *args) -> "Quantity_Color":
        """:rtype: Quantity_Color"""
        return _Vrml.Vrml_SpotLight_Color(self, *args)


    def CutOffAngle(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_SpotLight_CutOffAngle(self, *args)


    def Direction(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_SpotLight_Direction(self, *args)


    def DropOffRate(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_SpotLight_DropOffRate(self, *args)


    def Intensity(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_SpotLight_Intensity(self, *args)


    def Location(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_SpotLight_Location(self, *args)


    def OnOff(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _Vrml.Vrml_SpotLight_OnOff(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_SpotLight self) -> std::string"""
        return _Vrml.Vrml_SpotLight_PrintToString(self)


    def SetColor(self, *args) -> "void":
        """
        :param aColor:
        	:type aColor: Quantity_Color
        	:rtype: None
        """
        return _Vrml.Vrml_SpotLight_SetColor(self, *args)


    def SetCutOffAngle(self, *args) -> "void":
        """
        :param aCutOffAngle:
        	:type aCutOffAngle: float
        	:rtype: None
        """
        return _Vrml.Vrml_SpotLight_SetCutOffAngle(self, *args)


    def SetDirection(self, *args) -> "void":
        """
        :param aDirection:
        	:type aDirection: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_SpotLight_SetDirection(self, *args)


    def SetDropOffRate(self, *args) -> "void":
        """
        :param aDropOffRate:
        	:type aDropOffRate: float
        	:rtype: None
        """
        return _Vrml.Vrml_SpotLight_SetDropOffRate(self, *args)


    def SetIntensity(self, *args) -> "void":
        """
        :param aIntensity:
        	:type aIntensity: float
        	:rtype: None
        """
        return _Vrml.Vrml_SpotLight_SetIntensity(self, *args)


    def SetLocation(self, *args) -> "void":
        """
        :param aLocation:
        	:type aLocation: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_SpotLight_SetLocation(self, *args)


    def SetOnOff(self, *args) -> "void":
        """
        :param anOnOff:
        	:type anOnOff: bool
        	:rtype: None
        """
        return _Vrml.Vrml_SpotLight_SetOnOff(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aOnOff:
        	:type aOnOff: bool
        	:param aIntensity:
        	:type aIntensity: float
        	:param aColor:
        	:type aColor: Quantity_Color
        	:param aLocation:
        	:type aLocation: gp_Vec
        	:param aDirection:
        	:type aDirection: gp_Vec
        	:param aDropOffRate:
        	:type aDropOffRate: float
        	:param aCutOffAngle:
        	:type aCutOffAngle: float
        	:rtype: None
        """
        _Vrml.Vrml_SpotLight_swiginit(self, _Vrml.new_Vrml_SpotLight(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_SpotLight
Vrml_SpotLight.Color = new_instancemethod(_Vrml.Vrml_SpotLight_Color, None, Vrml_SpotLight)
Vrml_SpotLight.CutOffAngle = new_instancemethod(_Vrml.Vrml_SpotLight_CutOffAngle, None, Vrml_SpotLight)
Vrml_SpotLight.Direction = new_instancemethod(_Vrml.Vrml_SpotLight_Direction, None, Vrml_SpotLight)
Vrml_SpotLight.DropOffRate = new_instancemethod(_Vrml.Vrml_SpotLight_DropOffRate, None, Vrml_SpotLight)
Vrml_SpotLight.Intensity = new_instancemethod(_Vrml.Vrml_SpotLight_Intensity, None, Vrml_SpotLight)
Vrml_SpotLight.Location = new_instancemethod(_Vrml.Vrml_SpotLight_Location, None, Vrml_SpotLight)
Vrml_SpotLight.OnOff = new_instancemethod(_Vrml.Vrml_SpotLight_OnOff, None, Vrml_SpotLight)
Vrml_SpotLight.PrintToString = new_instancemethod(_Vrml.Vrml_SpotLight_PrintToString, None, Vrml_SpotLight)
Vrml_SpotLight.SetColor = new_instancemethod(_Vrml.Vrml_SpotLight_SetColor, None, Vrml_SpotLight)
Vrml_SpotLight.SetCutOffAngle = new_instancemethod(_Vrml.Vrml_SpotLight_SetCutOffAngle, None, Vrml_SpotLight)
Vrml_SpotLight.SetDirection = new_instancemethod(_Vrml.Vrml_SpotLight_SetDirection, None, Vrml_SpotLight)
Vrml_SpotLight.SetDropOffRate = new_instancemethod(_Vrml.Vrml_SpotLight_SetDropOffRate, None, Vrml_SpotLight)
Vrml_SpotLight.SetIntensity = new_instancemethod(_Vrml.Vrml_SpotLight_SetIntensity, None, Vrml_SpotLight)
Vrml_SpotLight.SetLocation = new_instancemethod(_Vrml.Vrml_SpotLight_SetLocation, None, Vrml_SpotLight)
Vrml_SpotLight.SetOnOff = new_instancemethod(_Vrml.Vrml_SpotLight_SetOnOff, None, Vrml_SpotLight)
Vrml_SpotLight_swigregister = _Vrml.Vrml_SpotLight_swigregister
Vrml_SpotLight_swigregister(Vrml_SpotLight)

class Vrml_Switch(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Switch self) -> std::string"""
        return _Vrml.Vrml_Switch_PrintToString(self)


    def SetWhichChild(self, *args) -> "void":
        """
        :param aWhichChild:
        	:type aWhichChild: int
        	:rtype: None
        """
        return _Vrml.Vrml_Switch_SetWhichChild(self, *args)


    def __init__(self, *args):
        """
        :param aWhichChild: default value is -1
        	:type aWhichChild: int
        	:rtype: None
        """
        _Vrml.Vrml_Switch_swiginit(self, _Vrml.new_Vrml_Switch(*args))

    def WhichChild(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _Vrml.Vrml_Switch_WhichChild(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Switch
Vrml_Switch.PrintToString = new_instancemethod(_Vrml.Vrml_Switch_PrintToString, None, Vrml_Switch)
Vrml_Switch.SetWhichChild = new_instancemethod(_Vrml.Vrml_Switch_SetWhichChild, None, Vrml_Switch)
Vrml_Switch.WhichChild = new_instancemethod(_Vrml.Vrml_Switch_WhichChild, None, Vrml_Switch)
Vrml_Switch_swigregister = _Vrml.Vrml_Switch_swigregister
Vrml_Switch_swigregister(Vrml_Switch)

class Vrml_Texture2(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Filename(self, *args) -> "TCollection_AsciiString":
        """:rtype: TCollection_AsciiString"""
        return _Vrml.Vrml_Texture2_Filename(self, *args)


    def Image(self, *args) -> "opencascade::handle< Vrml_SFImage >":
        """:rtype: opencascade::handle<Vrml_SFImage>"""
        return _Vrml.Vrml_Texture2_Image(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Texture2 self) -> std::string"""
        return _Vrml.Vrml_Texture2_PrintToString(self)


    def SetFilename(self, *args) -> "void":
        """
        :param aFilename:
        	:type aFilename: TCollection_AsciiString
        	:rtype: None
        """
        return _Vrml.Vrml_Texture2_SetFilename(self, *args)


    def SetImage(self, *args) -> "void":
        """
        :param aImage:
        	:type aImage: Vrml_SFImage
        	:rtype: None
        """
        return _Vrml.Vrml_Texture2_SetImage(self, *args)


    def SetWrapS(self, *args) -> "void":
        """
        :param aWrapS:
        	:type aWrapS: Vrml_Texture2Wrap
        	:rtype: None
        """
        return _Vrml.Vrml_Texture2_SetWrapS(self, *args)


    def SetWrapT(self, *args) -> "void":
        """
        :param aWrapT:
        	:type aWrapT: Vrml_Texture2Wrap
        	:rtype: None
        """
        return _Vrml.Vrml_Texture2_SetWrapT(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aFilename:
        	:type aFilename: TCollection_AsciiString
        	:param aImage:
        	:type aImage: Vrml_SFImage
        	:param aWrapS:
        	:type aWrapS: Vrml_Texture2Wrap
        	:param aWrapT:
        	:type aWrapT: Vrml_Texture2Wrap
        	:rtype: None
        """
        _Vrml.Vrml_Texture2_swiginit(self, _Vrml.new_Vrml_Texture2(*args))

    def WrapS(self, *args) -> "Vrml_Texture2Wrap":
        """:rtype: Vrml_Texture2Wrap"""
        return _Vrml.Vrml_Texture2_WrapS(self, *args)


    def WrapT(self, *args) -> "Vrml_Texture2Wrap":
        """:rtype: Vrml_Texture2Wrap"""
        return _Vrml.Vrml_Texture2_WrapT(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Texture2
Vrml_Texture2.Filename = new_instancemethod(_Vrml.Vrml_Texture2_Filename, None, Vrml_Texture2)
Vrml_Texture2.Image = new_instancemethod(_Vrml.Vrml_Texture2_Image, None, Vrml_Texture2)
Vrml_Texture2.PrintToString = new_instancemethod(_Vrml.Vrml_Texture2_PrintToString, None, Vrml_Texture2)
Vrml_Texture2.SetFilename = new_instancemethod(_Vrml.Vrml_Texture2_SetFilename, None, Vrml_Texture2)
Vrml_Texture2.SetImage = new_instancemethod(_Vrml.Vrml_Texture2_SetImage, None, Vrml_Texture2)
Vrml_Texture2.SetWrapS = new_instancemethod(_Vrml.Vrml_Texture2_SetWrapS, None, Vrml_Texture2)
Vrml_Texture2.SetWrapT = new_instancemethod(_Vrml.Vrml_Texture2_SetWrapT, None, Vrml_Texture2)
Vrml_Texture2.WrapS = new_instancemethod(_Vrml.Vrml_Texture2_WrapS, None, Vrml_Texture2)
Vrml_Texture2.WrapT = new_instancemethod(_Vrml.Vrml_Texture2_WrapT, None, Vrml_Texture2)
Vrml_Texture2_swigregister = _Vrml.Vrml_Texture2_swigregister
Vrml_Texture2_swigregister(Vrml_Texture2)

class Vrml_Texture2Transform(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Center(self, *args) -> "gp_Vec2d":
        """:rtype: gp_Vec2d"""
        return _Vrml.Vrml_Texture2Transform_Center(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Texture2Transform self) -> std::string"""
        return _Vrml.Vrml_Texture2Transform_PrintToString(self)


    def Rotation(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _Vrml.Vrml_Texture2Transform_Rotation(self, *args)


    def ScaleFactor(self, *args) -> "gp_Vec2d":
        """:rtype: gp_Vec2d"""
        return _Vrml.Vrml_Texture2Transform_ScaleFactor(self, *args)


    def SetCenter(self, *args) -> "void":
        """
        :param aCenter:
        	:type aCenter: gp_Vec2d
        	:rtype: None
        """
        return _Vrml.Vrml_Texture2Transform_SetCenter(self, *args)


    def SetRotation(self, *args) -> "void":
        """
        :param aRotation:
        	:type aRotation: float
        	:rtype: None
        """
        return _Vrml.Vrml_Texture2Transform_SetRotation(self, *args)


    def SetScaleFactor(self, *args) -> "void":
        """
        :param aScaleFactor:
        	:type aScaleFactor: gp_Vec2d
        	:rtype: None
        """
        return _Vrml.Vrml_Texture2Transform_SetScaleFactor(self, *args)


    def SetTranslation(self, *args) -> "void":
        """
        :param aTranslation:
        	:type aTranslation: gp_Vec2d
        	:rtype: None
        """
        return _Vrml.Vrml_Texture2Transform_SetTranslation(self, *args)


    def Translation(self, *args) -> "gp_Vec2d":
        """:rtype: gp_Vec2d"""
        return _Vrml.Vrml_Texture2Transform_Translation(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aTranslation:
        	:type aTranslation: gp_Vec2d
        	:param aRotation:
        	:type aRotation: float
        	:param aScaleFactor:
        	:type aScaleFactor: gp_Vec2d
        	:param aCenter:
        	:type aCenter: gp_Vec2d
        	:rtype: None
        """
        _Vrml.Vrml_Texture2Transform_swiginit(self, _Vrml.new_Vrml_Texture2Transform(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Texture2Transform
Vrml_Texture2Transform.Center = new_instancemethod(_Vrml.Vrml_Texture2Transform_Center, None, Vrml_Texture2Transform)
Vrml_Texture2Transform.PrintToString = new_instancemethod(_Vrml.Vrml_Texture2Transform_PrintToString, None, Vrml_Texture2Transform)
Vrml_Texture2Transform.Rotation = new_instancemethod(_Vrml.Vrml_Texture2Transform_Rotation, None, Vrml_Texture2Transform)
Vrml_Texture2Transform.ScaleFactor = new_instancemethod(_Vrml.Vrml_Texture2Transform_ScaleFactor, None, Vrml_Texture2Transform)
Vrml_Texture2Transform.SetCenter = new_instancemethod(_Vrml.Vrml_Texture2Transform_SetCenter, None, Vrml_Texture2Transform)
Vrml_Texture2Transform.SetRotation = new_instancemethod(_Vrml.Vrml_Texture2Transform_SetRotation, None, Vrml_Texture2Transform)
Vrml_Texture2Transform.SetScaleFactor = new_instancemethod(_Vrml.Vrml_Texture2Transform_SetScaleFactor, None, Vrml_Texture2Transform)
Vrml_Texture2Transform.SetTranslation = new_instancemethod(_Vrml.Vrml_Texture2Transform_SetTranslation, None, Vrml_Texture2Transform)
Vrml_Texture2Transform.Translation = new_instancemethod(_Vrml.Vrml_Texture2Transform_Translation, None, Vrml_Texture2Transform)
Vrml_Texture2Transform_swigregister = _Vrml.Vrml_Texture2Transform_swigregister
Vrml_Texture2Transform_swigregister(Vrml_Texture2Transform)

class Vrml_TextureCoordinate2(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Point(self, *args) -> "opencascade::handle< TColgp_HArray1OfVec2d >":
        """:rtype: opencascade::handle<TColgp_HArray1OfVec2d>"""
        return _Vrml.Vrml_TextureCoordinate2_Point(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_TextureCoordinate2 self) -> std::string"""
        return _Vrml.Vrml_TextureCoordinate2_PrintToString(self)


    def SetPoint(self, *args) -> "void":
        """
        :param aPoint:
        	:type aPoint: TColgp_HArray1OfVec2d
        	:rtype: None
        """
        return _Vrml.Vrml_TextureCoordinate2_SetPoint(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aPoint:
        	:type aPoint: TColgp_HArray1OfVec2d
        	:rtype: None
        """
        _Vrml.Vrml_TextureCoordinate2_swiginit(self, _Vrml.new_Vrml_TextureCoordinate2(*args))


    @staticmethod
    def DownCast(t):
      return Handle_Vrml_TextureCoordinate2_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_TextureCoordinate2
Vrml_TextureCoordinate2.Point = new_instancemethod(_Vrml.Vrml_TextureCoordinate2_Point, None, Vrml_TextureCoordinate2)
Vrml_TextureCoordinate2.PrintToString = new_instancemethod(_Vrml.Vrml_TextureCoordinate2_PrintToString, None, Vrml_TextureCoordinate2)
Vrml_TextureCoordinate2.SetPoint = new_instancemethod(_Vrml.Vrml_TextureCoordinate2_SetPoint, None, Vrml_TextureCoordinate2)
Vrml_TextureCoordinate2_swigregister = _Vrml.Vrml_TextureCoordinate2_swigregister
Vrml_TextureCoordinate2_swigregister(Vrml_TextureCoordinate2)

class Vrml_Transform(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Center(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_Transform_Center(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Transform self) -> std::string"""
        return _Vrml.Vrml_Transform_PrintToString(self)


    def Rotation(self, *args) -> "Vrml_SFRotation":
        """:rtype: Vrml_SFRotation"""
        return _Vrml.Vrml_Transform_Rotation(self, *args)


    def ScaleFactor(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_Transform_ScaleFactor(self, *args)


    def ScaleOrientation(self, *args) -> "Vrml_SFRotation":
        """:rtype: Vrml_SFRotation"""
        return _Vrml.Vrml_Transform_ScaleOrientation(self, *args)


    def SetCenter(self, *args) -> "void":
        """
        :param aCenter:
        	:type aCenter: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_Transform_SetCenter(self, *args)


    def SetRotation(self, *args) -> "void":
        """
        :param aRotation:
        	:type aRotation: Vrml_SFRotation
        	:rtype: None
        """
        return _Vrml.Vrml_Transform_SetRotation(self, *args)


    def SetScaleFactor(self, *args) -> "void":
        """
        :param aScaleFactor:
        	:type aScaleFactor: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_Transform_SetScaleFactor(self, *args)


    def SetScaleOrientation(self, *args) -> "void":
        """
        :param aScaleOrientation:
        	:type aScaleOrientation: Vrml_SFRotation
        	:rtype: None
        """
        return _Vrml.Vrml_Transform_SetScaleOrientation(self, *args)


    def SetTranslation(self, *args) -> "void":
        """
        :param aTranslation:
        	:type aTranslation: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_Transform_SetTranslation(self, *args)


    def Translation(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_Transform_Translation(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aTranslation:
        	:type aTranslation: gp_Vec
        	:param aRotation:
        	:type aRotation: Vrml_SFRotation
        	:param aScaleFactor:
        	:type aScaleFactor: gp_Vec
        	:param aScaleOrientation:
        	:type aScaleOrientation: Vrml_SFRotation
        	:param aCenter:
        	:type aCenter: gp_Vec
        	:rtype: None
        """
        _Vrml.Vrml_Transform_swiginit(self, _Vrml.new_Vrml_Transform(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Transform
Vrml_Transform.Center = new_instancemethod(_Vrml.Vrml_Transform_Center, None, Vrml_Transform)
Vrml_Transform.PrintToString = new_instancemethod(_Vrml.Vrml_Transform_PrintToString, None, Vrml_Transform)
Vrml_Transform.Rotation = new_instancemethod(_Vrml.Vrml_Transform_Rotation, None, Vrml_Transform)
Vrml_Transform.ScaleFactor = new_instancemethod(_Vrml.Vrml_Transform_ScaleFactor, None, Vrml_Transform)
Vrml_Transform.ScaleOrientation = new_instancemethod(_Vrml.Vrml_Transform_ScaleOrientation, None, Vrml_Transform)
Vrml_Transform.SetCenter = new_instancemethod(_Vrml.Vrml_Transform_SetCenter, None, Vrml_Transform)
Vrml_Transform.SetRotation = new_instancemethod(_Vrml.Vrml_Transform_SetRotation, None, Vrml_Transform)
Vrml_Transform.SetScaleFactor = new_instancemethod(_Vrml.Vrml_Transform_SetScaleFactor, None, Vrml_Transform)
Vrml_Transform.SetScaleOrientation = new_instancemethod(_Vrml.Vrml_Transform_SetScaleOrientation, None, Vrml_Transform)
Vrml_Transform.SetTranslation = new_instancemethod(_Vrml.Vrml_Transform_SetTranslation, None, Vrml_Transform)
Vrml_Transform.Translation = new_instancemethod(_Vrml.Vrml_Transform_Translation, None, Vrml_Transform)
Vrml_Transform_swigregister = _Vrml.Vrml_Transform_swigregister
Vrml_Transform_swigregister(Vrml_Transform)

class Vrml_TransformSeparator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_TransformSeparator self) -> std::string"""
        return _Vrml.Vrml_TransformSeparator_PrintToString(self)


    def __init__(self, *args):
        """:rtype: None"""
        _Vrml.Vrml_TransformSeparator_swiginit(self, _Vrml.new_Vrml_TransformSeparator(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_TransformSeparator
Vrml_TransformSeparator.PrintToString = new_instancemethod(_Vrml.Vrml_TransformSeparator_PrintToString, None, Vrml_TransformSeparator)
Vrml_TransformSeparator_swigregister = _Vrml.Vrml_TransformSeparator_swigregister
Vrml_TransformSeparator_swigregister(Vrml_TransformSeparator)

class Vrml_Translation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Translation self) -> std::string"""
        return _Vrml.Vrml_Translation_PrintToString(self)


    def SetTranslation(self, *args) -> "void":
        """
        :param aTranslation:
        	:type aTranslation: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_Translation_SetTranslation(self, *args)


    def Translation(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_Translation_Translation(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aTranslation:
        	:type aTranslation: gp_Vec
        	:rtype: None
        """
        _Vrml.Vrml_Translation_swiginit(self, _Vrml.new_Vrml_Translation(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Translation
Vrml_Translation.PrintToString = new_instancemethod(_Vrml.Vrml_Translation_PrintToString, None, Vrml_Translation)
Vrml_Translation.SetTranslation = new_instancemethod(_Vrml.Vrml_Translation_SetTranslation, None, Vrml_Translation)
Vrml_Translation.Translation = new_instancemethod(_Vrml.Vrml_Translation_Translation, None, Vrml_Translation)
Vrml_Translation_swigregister = _Vrml.Vrml_Translation_swigregister
Vrml_Translation_swigregister(Vrml_Translation)

class Vrml_WWWAnchor(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "TCollection_AsciiString":
        """:rtype: TCollection_AsciiString"""
        return _Vrml.Vrml_WWWAnchor_Description(self, *args)


    def Map(self, *args) -> "Vrml_WWWAnchorMap":
        """:rtype: Vrml_WWWAnchorMap"""
        return _Vrml.Vrml_WWWAnchor_Map(self, *args)


    def Name(self, *args) -> "TCollection_AsciiString":
        """:rtype: TCollection_AsciiString"""
        return _Vrml.Vrml_WWWAnchor_Name(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_WWWAnchor self) -> std::string"""
        return _Vrml.Vrml_WWWAnchor_PrintToString(self)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_AsciiString
        	:rtype: None
        """
        return _Vrml.Vrml_WWWAnchor_SetDescription(self, *args)


    def SetMap(self, *args) -> "void":
        """
        :param aMap:
        	:type aMap: Vrml_WWWAnchorMap
        	:rtype: None
        """
        return _Vrml.Vrml_WWWAnchor_SetMap(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_AsciiString
        	:rtype: None
        """
        return _Vrml.Vrml_WWWAnchor_SetName(self, *args)


    def __init__(self, *args):
        """
        :param aName: default value is 
        	:type aName: TCollection_AsciiString
        	:param aDescription: default value is 
        	:type aDescription: TCollection_AsciiString
        	:param aMap: default value is Vrml_MAP_NONE
        	:type aMap: Vrml_WWWAnchorMap
        	:rtype: None
        """
        _Vrml.Vrml_WWWAnchor_swiginit(self, _Vrml.new_Vrml_WWWAnchor(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_WWWAnchor
Vrml_WWWAnchor.Description = new_instancemethod(_Vrml.Vrml_WWWAnchor_Description, None, Vrml_WWWAnchor)
Vrml_WWWAnchor.Map = new_instancemethod(_Vrml.Vrml_WWWAnchor_Map, None, Vrml_WWWAnchor)
Vrml_WWWAnchor.Name = new_instancemethod(_Vrml.Vrml_WWWAnchor_Name, None, Vrml_WWWAnchor)
Vrml_WWWAnchor.PrintToString = new_instancemethod(_Vrml.Vrml_WWWAnchor_PrintToString, None, Vrml_WWWAnchor)
Vrml_WWWAnchor.SetDescription = new_instancemethod(_Vrml.Vrml_WWWAnchor_SetDescription, None, Vrml_WWWAnchor)
Vrml_WWWAnchor.SetMap = new_instancemethod(_Vrml.Vrml_WWWAnchor_SetMap, None, Vrml_WWWAnchor)
Vrml_WWWAnchor.SetName = new_instancemethod(_Vrml.Vrml_WWWAnchor_SetName, None, Vrml_WWWAnchor)
Vrml_WWWAnchor_swigregister = _Vrml.Vrml_WWWAnchor_swigregister
Vrml_WWWAnchor_swigregister(Vrml_WWWAnchor)

class Vrml_WWWInline(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BboxCenter(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_WWWInline_BboxCenter(self, *args)


    def BboxSize(self, *args) -> "gp_Vec":
        """:rtype: gp_Vec"""
        return _Vrml.Vrml_WWWInline_BboxSize(self, *args)


    def Name(self, *args) -> "TCollection_AsciiString":
        """:rtype: TCollection_AsciiString"""
        return _Vrml.Vrml_WWWInline_Name(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_WWWInline self) -> std::string"""
        return _Vrml.Vrml_WWWInline_PrintToString(self)


    def SetBboxCenter(self, *args) -> "void":
        """
        :param aBboxCenter:
        	:type aBboxCenter: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_WWWInline_SetBboxCenter(self, *args)


    def SetBboxSize(self, *args) -> "void":
        """
        :param aBboxSize:
        	:type aBboxSize: gp_Vec
        	:rtype: None
        """
        return _Vrml.Vrml_WWWInline_SetBboxSize(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_AsciiString
        	:rtype: None
        """
        return _Vrml.Vrml_WWWInline_SetName(self, *args)


    def __init__(self, *args):
        """
        :rtype: None
        :param aName:
        	:type aName: TCollection_AsciiString
        	:param aBboxSize:
        	:type aBboxSize: gp_Vec
        	:param aBboxCenter:
        	:type aBboxCenter: gp_Vec
        	:rtype: None
        """
        _Vrml.Vrml_WWWInline_swiginit(self, _Vrml.new_Vrml_WWWInline(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_WWWInline
Vrml_WWWInline.BboxCenter = new_instancemethod(_Vrml.Vrml_WWWInline_BboxCenter, None, Vrml_WWWInline)
Vrml_WWWInline.BboxSize = new_instancemethod(_Vrml.Vrml_WWWInline_BboxSize, None, Vrml_WWWInline)
Vrml_WWWInline.Name = new_instancemethod(_Vrml.Vrml_WWWInline_Name, None, Vrml_WWWInline)
Vrml_WWWInline.PrintToString = new_instancemethod(_Vrml.Vrml_WWWInline_PrintToString, None, Vrml_WWWInline)
Vrml_WWWInline.SetBboxCenter = new_instancemethod(_Vrml.Vrml_WWWInline_SetBboxCenter, None, Vrml_WWWInline)
Vrml_WWWInline.SetBboxSize = new_instancemethod(_Vrml.Vrml_WWWInline_SetBboxSize, None, Vrml_WWWInline)
Vrml_WWWInline.SetName = new_instancemethod(_Vrml.Vrml_WWWInline_SetName, None, Vrml_WWWInline)
Vrml_WWWInline_swigregister = _Vrml.Vrml_WWWInline_swigregister
Vrml_WWWInline_swigregister(Vrml_WWWInline)



