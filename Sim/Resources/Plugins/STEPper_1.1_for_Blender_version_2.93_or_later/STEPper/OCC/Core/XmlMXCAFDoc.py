# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
XmlMXCAFDoc module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_xmlmxcafdoc.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _XmlMXCAFDoc.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_XmlMXCAFDoc')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_XmlMXCAFDoc')
    _XmlMXCAFDoc = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_XmlMXCAFDoc', [dirname(__file__)])
        except ImportError:
            import _XmlMXCAFDoc
            return _XmlMXCAFDoc
        try:
            _mod = imp.load_module('_XmlMXCAFDoc', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _XmlMXCAFDoc = swig_import_helper()
    del swig_import_helper
else:
    import _XmlMXCAFDoc
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _XmlMXCAFDoc.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_XmlMXCAFDoc.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _XmlMXCAFDoc.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _XmlMXCAFDoc.process_exception(error, method_name, class_name)
process_exception = _XmlMXCAFDoc.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.XmlMDF
import OCC.Core.Message
import OCC.Core.TDF
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.XmlObjMgt
import OCC.Core.LDOM
import OCC.Core.gp
import OCC.Core.Storage
import OCC.Core.TopTools
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc

def Handle_XmlMXCAFDoc_AreaDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_AreaDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AreaDriver_Create()
Handle_XmlMXCAFDoc_AreaDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AreaDriver_Create

def Handle_XmlMXCAFDoc_AreaDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_AreaDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AreaDriver_DownCast(t)
Handle_XmlMXCAFDoc_AreaDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AreaDriver_DownCast

def Handle_XmlMXCAFDoc_AreaDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_AreaDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AreaDriver_IsNull(t)
Handle_XmlMXCAFDoc_AreaDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AreaDriver_IsNull

def Handle_XmlMXCAFDoc_AssemblyItemRefDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_AssemblyItemRefDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_Create()
Handle_XmlMXCAFDoc_AssemblyItemRefDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_Create

def Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_AssemblyItemRefDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast(t)
Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast

def Handle_XmlMXCAFDoc_AssemblyItemRefDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_AssemblyItemRefDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_IsNull(t)
Handle_XmlMXCAFDoc_AssemblyItemRefDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_IsNull

def Handle_XmlMXCAFDoc_CentroidDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_CentroidDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_Create()
Handle_XmlMXCAFDoc_CentroidDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_Create

def Handle_XmlMXCAFDoc_CentroidDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_CentroidDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_DownCast(t)
Handle_XmlMXCAFDoc_CentroidDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_DownCast

def Handle_XmlMXCAFDoc_CentroidDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_CentroidDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_IsNull(t)
Handle_XmlMXCAFDoc_CentroidDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_IsNull

def Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_ClippingPlaneToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_Create()
Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_Create

def Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_ClippingPlaneToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_DownCast

def Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_ClippingPlaneToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_IsNull

def Handle_XmlMXCAFDoc_ColorDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_ColorDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_Create()
Handle_XmlMXCAFDoc_ColorDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_Create

def Handle_XmlMXCAFDoc_ColorDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_ColorDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_DownCast(t)
Handle_XmlMXCAFDoc_ColorDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_DownCast

def Handle_XmlMXCAFDoc_ColorDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_ColorDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_IsNull(t)
Handle_XmlMXCAFDoc_ColorDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_IsNull

def Handle_XmlMXCAFDoc_ColorToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_ColorToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorToolDriver_Create()
Handle_XmlMXCAFDoc_ColorToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorToolDriver_Create

def Handle_XmlMXCAFDoc_ColorToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_ColorToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_ColorToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorToolDriver_DownCast

def Handle_XmlMXCAFDoc_ColorToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_ColorToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_ColorToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorToolDriver_IsNull

def Handle_XmlMXCAFDoc_DatumDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_DatumDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_Create()
Handle_XmlMXCAFDoc_DatumDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_Create

def Handle_XmlMXCAFDoc_DatumDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_DatumDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_DownCast(t)
Handle_XmlMXCAFDoc_DatumDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_DownCast

def Handle_XmlMXCAFDoc_DatumDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_DatumDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_IsNull(t)
Handle_XmlMXCAFDoc_DatumDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_IsNull

def Handle_XmlMXCAFDoc_DimTolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_DimTolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_Create()
Handle_XmlMXCAFDoc_DimTolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_Create

def Handle_XmlMXCAFDoc_DimTolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_DimTolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_DownCast(t)
Handle_XmlMXCAFDoc_DimTolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_DownCast

def Handle_XmlMXCAFDoc_DimTolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_DimTolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_IsNull(t)
Handle_XmlMXCAFDoc_DimTolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_IsNull

def Handle_XmlMXCAFDoc_DimTolToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_DimTolToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolToolDriver_Create()
Handle_XmlMXCAFDoc_DimTolToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolToolDriver_Create

def Handle_XmlMXCAFDoc_DimTolToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_DimTolToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_DimTolToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolToolDriver_DownCast

def Handle_XmlMXCAFDoc_DimTolToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_DimTolToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_DimTolToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolToolDriver_IsNull

def Handle_XmlMXCAFDoc_DocumentToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_DocumentToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DocumentToolDriver_Create()
Handle_XmlMXCAFDoc_DocumentToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DocumentToolDriver_Create

def Handle_XmlMXCAFDoc_DocumentToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_DocumentToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DocumentToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_DocumentToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DocumentToolDriver_DownCast

def Handle_XmlMXCAFDoc_DocumentToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_DocumentToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DocumentToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_DocumentToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DocumentToolDriver_IsNull

def Handle_XmlMXCAFDoc_GraphNodeDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_GraphNodeDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_Create()
Handle_XmlMXCAFDoc_GraphNodeDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_Create

def Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_GraphNodeDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast(t)
Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast

def Handle_XmlMXCAFDoc_GraphNodeDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_GraphNodeDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_IsNull(t)
Handle_XmlMXCAFDoc_GraphNodeDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_IsNull

def Handle_XmlMXCAFDoc_LayerToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_LayerToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LayerToolDriver_Create()
Handle_XmlMXCAFDoc_LayerToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LayerToolDriver_Create

def Handle_XmlMXCAFDoc_LayerToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_LayerToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LayerToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_LayerToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LayerToolDriver_DownCast

def Handle_XmlMXCAFDoc_LayerToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_LayerToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LayerToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_LayerToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LayerToolDriver_IsNull

def Handle_XmlMXCAFDoc_LocationDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_LocationDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_Create()
Handle_XmlMXCAFDoc_LocationDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_Create

def Handle_XmlMXCAFDoc_LocationDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_LocationDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_DownCast(t)
Handle_XmlMXCAFDoc_LocationDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_DownCast

def Handle_XmlMXCAFDoc_LocationDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_LocationDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_IsNull(t)
Handle_XmlMXCAFDoc_LocationDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_IsNull

def Handle_XmlMXCAFDoc_MaterialDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_MaterialDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_Create()
Handle_XmlMXCAFDoc_MaterialDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_Create

def Handle_XmlMXCAFDoc_MaterialDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_MaterialDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_DownCast(t)
Handle_XmlMXCAFDoc_MaterialDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_DownCast

def Handle_XmlMXCAFDoc_MaterialDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_MaterialDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_IsNull(t)
Handle_XmlMXCAFDoc_MaterialDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_IsNull

def Handle_XmlMXCAFDoc_MaterialToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_MaterialToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialToolDriver_Create()
Handle_XmlMXCAFDoc_MaterialToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialToolDriver_Create

def Handle_XmlMXCAFDoc_MaterialToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_MaterialToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_MaterialToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialToolDriver_DownCast

def Handle_XmlMXCAFDoc_MaterialToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_MaterialToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_MaterialToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialToolDriver_IsNull

def Handle_XmlMXCAFDoc_NoteDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_NoteDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_Create()
Handle_XmlMXCAFDoc_NoteDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_Create

def Handle_XmlMXCAFDoc_NoteDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_NoteDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_DownCast(t)
Handle_XmlMXCAFDoc_NoteDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_DownCast

def Handle_XmlMXCAFDoc_NoteDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_NoteDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_IsNull(t)
Handle_XmlMXCAFDoc_NoteDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_IsNull

def Handle_XmlMXCAFDoc_NotesToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_NotesToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NotesToolDriver_Create()
Handle_XmlMXCAFDoc_NotesToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NotesToolDriver_Create

def Handle_XmlMXCAFDoc_NotesToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_NotesToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NotesToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_NotesToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NotesToolDriver_DownCast

def Handle_XmlMXCAFDoc_NotesToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_NotesToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NotesToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_NotesToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NotesToolDriver_IsNull

def Handle_XmlMXCAFDoc_ShapeToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_ShapeToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ShapeToolDriver_Create()
Handle_XmlMXCAFDoc_ShapeToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ShapeToolDriver_Create

def Handle_XmlMXCAFDoc_ShapeToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_ShapeToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ShapeToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_ShapeToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ShapeToolDriver_DownCast

def Handle_XmlMXCAFDoc_ShapeToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_ShapeToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ShapeToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_ShapeToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ShapeToolDriver_IsNull

def Handle_XmlMXCAFDoc_ViewToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_ViewToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ViewToolDriver_Create()
Handle_XmlMXCAFDoc_ViewToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ViewToolDriver_Create

def Handle_XmlMXCAFDoc_ViewToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_ViewToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ViewToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_ViewToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ViewToolDriver_DownCast

def Handle_XmlMXCAFDoc_ViewToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_ViewToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ViewToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_ViewToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ViewToolDriver_IsNull

def Handle_XmlMXCAFDoc_VolumeDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_VolumeDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VolumeDriver_Create()
Handle_XmlMXCAFDoc_VolumeDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VolumeDriver_Create

def Handle_XmlMXCAFDoc_VolumeDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_VolumeDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VolumeDriver_DownCast(t)
Handle_XmlMXCAFDoc_VolumeDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VolumeDriver_DownCast

def Handle_XmlMXCAFDoc_VolumeDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_VolumeDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VolumeDriver_IsNull(t)
Handle_XmlMXCAFDoc_VolumeDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VolumeDriver_IsNull

def Handle_XmlMXCAFDoc_NoteBinDataDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_NoteBinDataDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_Create()
Handle_XmlMXCAFDoc_NoteBinDataDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_Create

def Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_NoteBinDataDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast(t)
Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast

def Handle_XmlMXCAFDoc_NoteBinDataDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_NoteBinDataDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_IsNull(t)
Handle_XmlMXCAFDoc_NoteBinDataDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_IsNull

def Handle_XmlMXCAFDoc_NoteCommentDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_NoteCommentDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_Create()
Handle_XmlMXCAFDoc_NoteCommentDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_Create

def Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_NoteCommentDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast(t)
Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast

def Handle_XmlMXCAFDoc_NoteCommentDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_NoteCommentDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_IsNull(t)
Handle_XmlMXCAFDoc_NoteCommentDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_IsNull

def Handle_XmlMXCAFDoc_NoteBalloonDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_NoteBalloonDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBalloonDriver_Create()
Handle_XmlMXCAFDoc_NoteBalloonDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBalloonDriver_Create

def Handle_XmlMXCAFDoc_NoteBalloonDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_NoteBalloonDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBalloonDriver_DownCast(t)
Handle_XmlMXCAFDoc_NoteBalloonDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBalloonDriver_DownCast

def Handle_XmlMXCAFDoc_NoteBalloonDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_NoteBalloonDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBalloonDriver_IsNull(t)
Handle_XmlMXCAFDoc_NoteBalloonDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBalloonDriver_IsNull
class xmlmxcafdoc(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddDrivers(*args) -> "void":
        """
        * Adds the attribute drivers to <aDriverTable>.
        	:param aDriverTable:
        	:type aDriverTable: XmlMDF_ADriverTable
        	:param anMsgDrv:
        	:type anMsgDrv: Message_Messenger
        	:rtype: void
        """
        return _XmlMXCAFDoc.xmlmxcafdoc_AddDrivers(*args)

    AddDrivers = staticmethod(AddDrivers)

    __repr__ = _dumps_object


    def __init__(self):
        _XmlMXCAFDoc.xmlmxcafdoc_swiginit(self, _XmlMXCAFDoc.new_xmlmxcafdoc())
    __swig_destroy__ = _XmlMXCAFDoc.delete_xmlmxcafdoc
xmlmxcafdoc_swigregister = _XmlMXCAFDoc.xmlmxcafdoc_swigregister
xmlmxcafdoc_swigregister(xmlmxcafdoc)

def xmlmxcafdoc_AddDrivers(*args) -> "void":
    """
    * Adds the attribute drivers to <aDriverTable>.
    	:param aDriverTable:
    	:type aDriverTable: XmlMDF_ADriverTable
    	:param anMsgDrv:
    	:type anMsgDrv: Message_Messenger
    	:rtype: void
    """
    return _XmlMXCAFDoc.xmlmxcafdoc_AddDrivers(*args)

class XmlMXCAFDoc_AreaDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: XmlObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: XmlObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_AreaDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_AreaDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_AreaDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_AreaDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_AreaDriver
XmlMXCAFDoc_AreaDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_AreaDriver_Paste, None, XmlMXCAFDoc_AreaDriver)
XmlMXCAFDoc_AreaDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_AreaDriver_swigregister
XmlMXCAFDoc_AreaDriver_swigregister(XmlMXCAFDoc_AreaDriver)

class XmlMXCAFDoc_AssemblyItemRefDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_AssemblyItemRefDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_AssemblyItemRefDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_AssemblyItemRefDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_AssemblyItemRefDriver
XmlMXCAFDoc_AssemblyItemRefDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_AssemblyItemRefDriver_Paste, None, XmlMXCAFDoc_AssemblyItemRefDriver)
XmlMXCAFDoc_AssemblyItemRefDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_AssemblyItemRefDriver_swigregister
XmlMXCAFDoc_AssemblyItemRefDriver_swigregister(XmlMXCAFDoc_AssemblyItemRefDriver)

class XmlMXCAFDoc_CentroidDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: XmlObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: XmlObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_CentroidDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_CentroidDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_CentroidDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_CentroidDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_CentroidDriver
XmlMXCAFDoc_CentroidDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_CentroidDriver_Paste, None, XmlMXCAFDoc_CentroidDriver)
XmlMXCAFDoc_CentroidDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_CentroidDriver_swigregister
XmlMXCAFDoc_CentroidDriver_swigregister(XmlMXCAFDoc_CentroidDriver)

class XmlMXCAFDoc_ClippingPlaneToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: void
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_ClippingPlaneToolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_ClippingPlaneToolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_ClippingPlaneToolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_ClippingPlaneToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_ClippingPlaneToolDriver
XmlMXCAFDoc_ClippingPlaneToolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_ClippingPlaneToolDriver_Paste, None, XmlMXCAFDoc_ClippingPlaneToolDriver)
XmlMXCAFDoc_ClippingPlaneToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_ClippingPlaneToolDriver_swigregister
XmlMXCAFDoc_ClippingPlaneToolDriver_swigregister(XmlMXCAFDoc_ClippingPlaneToolDriver)

class XmlMXCAFDoc_ColorDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: XmlObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: XmlObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_ColorDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_ColorDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_ColorDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_ColorDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_ColorDriver
XmlMXCAFDoc_ColorDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_ColorDriver_Paste, None, XmlMXCAFDoc_ColorDriver)
XmlMXCAFDoc_ColorDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_ColorDriver_swigregister
XmlMXCAFDoc_ColorDriver_swigregister(XmlMXCAFDoc_ColorDriver)

class XmlMXCAFDoc_ColorToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: void
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_ColorToolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_ColorToolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_ColorToolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_ColorToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_ColorToolDriver
XmlMXCAFDoc_ColorToolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_ColorToolDriver_Paste, None, XmlMXCAFDoc_ColorToolDriver)
XmlMXCAFDoc_ColorToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_ColorToolDriver_swigregister
XmlMXCAFDoc_ColorToolDriver_swigregister(XmlMXCAFDoc_ColorToolDriver)

class XmlMXCAFDoc_DatumDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: XmlObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: XmlObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_DatumDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_DatumDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_DatumDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_DatumDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_DatumDriver
XmlMXCAFDoc_DatumDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_DatumDriver_Paste, None, XmlMXCAFDoc_DatumDriver)
XmlMXCAFDoc_DatumDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_DatumDriver_swigregister
XmlMXCAFDoc_DatumDriver_swigregister(XmlMXCAFDoc_DatumDriver)

class XmlMXCAFDoc_DimTolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: XmlObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: XmlObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_DimTolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_DimTolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_DimTolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_DimTolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_DimTolDriver
XmlMXCAFDoc_DimTolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_DimTolDriver_Paste, None, XmlMXCAFDoc_DimTolDriver)
XmlMXCAFDoc_DimTolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_DimTolDriver_swigregister
XmlMXCAFDoc_DimTolDriver_swigregister(XmlMXCAFDoc_DimTolDriver)

class XmlMXCAFDoc_DimTolToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: void
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_DimTolToolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_DimTolToolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_DimTolToolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_DimTolToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_DimTolToolDriver
XmlMXCAFDoc_DimTolToolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_DimTolToolDriver_Paste, None, XmlMXCAFDoc_DimTolToolDriver)
XmlMXCAFDoc_DimTolToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_DimTolToolDriver_swigregister
XmlMXCAFDoc_DimTolToolDriver_swigregister(XmlMXCAFDoc_DimTolToolDriver)

class XmlMXCAFDoc_DocumentToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: void
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_DocumentToolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_DocumentToolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_DocumentToolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_DocumentToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_DocumentToolDriver
XmlMXCAFDoc_DocumentToolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_DocumentToolDriver_Paste, None, XmlMXCAFDoc_DocumentToolDriver)
XmlMXCAFDoc_DocumentToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_DocumentToolDriver_swigregister
XmlMXCAFDoc_DocumentToolDriver_swigregister(XmlMXCAFDoc_DocumentToolDriver)

class XmlMXCAFDoc_GraphNodeDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: XmlObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: XmlObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_GraphNodeDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_GraphNodeDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_GraphNodeDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_GraphNodeDriver
XmlMXCAFDoc_GraphNodeDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_GraphNodeDriver_Paste, None, XmlMXCAFDoc_GraphNodeDriver)
XmlMXCAFDoc_GraphNodeDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_GraphNodeDriver_swigregister
XmlMXCAFDoc_GraphNodeDriver_swigregister(XmlMXCAFDoc_GraphNodeDriver)

class XmlMXCAFDoc_LayerToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: void
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_LayerToolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_LayerToolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_LayerToolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_LayerToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_LayerToolDriver
XmlMXCAFDoc_LayerToolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_LayerToolDriver_Paste, None, XmlMXCAFDoc_LayerToolDriver)
XmlMXCAFDoc_LayerToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_LayerToolDriver_swigregister
XmlMXCAFDoc_LayerToolDriver_swigregister(XmlMXCAFDoc_LayerToolDriver)

class XmlMXCAFDoc_LocationDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: XmlObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: XmlObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_Paste(self, *args)


    def SetSharedLocations(self, *args) -> "void":
        """
        :param theLocations:
        	:type theLocations: TopTools_LocationSetPtr
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_SetSharedLocations(self, *args)


    def Translate(self, *args) -> "Standard_Boolean":
        """
        * Translate a non storable Location to a storable Location.
        	:param theLoc:
        	:type theLoc: TopLoc_Location
        	:param theParent:
        	:type theParent: XmlObjMgt_Element
        	:param theMap:
        	:type theMap: XmlObjMgt_SRelocationTable
        	:rtype: None
        * Translate a storable Location to a non storable Location.
        	:param theParent:
        	:type theParent: XmlObjMgt_Element
        	:param theLoc:
        	:type theLoc: TopLoc_Location
        	:param theMap:
        	:type theMap: XmlObjMgt_RRelocationTable
        	:rtype: bool
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_Translate(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_LocationDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_LocationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_LocationDriver
XmlMXCAFDoc_LocationDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_Paste, None, XmlMXCAFDoc_LocationDriver)
XmlMXCAFDoc_LocationDriver.SetSharedLocations = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_SetSharedLocations, None, XmlMXCAFDoc_LocationDriver)
XmlMXCAFDoc_LocationDriver.Translate = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_Translate, None, XmlMXCAFDoc_LocationDriver)
XmlMXCAFDoc_LocationDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_swigregister
XmlMXCAFDoc_LocationDriver_swigregister(XmlMXCAFDoc_LocationDriver)

class XmlMXCAFDoc_MaterialDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: XmlObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: XmlObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_MaterialDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_MaterialDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_MaterialDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_MaterialDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_MaterialDriver
XmlMXCAFDoc_MaterialDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_MaterialDriver_Paste, None, XmlMXCAFDoc_MaterialDriver)
XmlMXCAFDoc_MaterialDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_MaterialDriver_swigregister
XmlMXCAFDoc_MaterialDriver_swigregister(XmlMXCAFDoc_MaterialDriver)

class XmlMXCAFDoc_MaterialToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: void
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_MaterialToolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_MaterialToolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_MaterialToolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_MaterialToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_MaterialToolDriver
XmlMXCAFDoc_MaterialToolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_MaterialToolDriver_Paste, None, XmlMXCAFDoc_MaterialToolDriver)
XmlMXCAFDoc_MaterialToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_MaterialToolDriver_swigregister
XmlMXCAFDoc_MaterialToolDriver_swigregister(XmlMXCAFDoc_MaterialToolDriver)

class XmlMXCAFDoc_NoteDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_NoteDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_NoteDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_NoteDriver
XmlMXCAFDoc_NoteDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_NoteDriver_Paste, None, XmlMXCAFDoc_NoteDriver)
XmlMXCAFDoc_NoteDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_NoteDriver_swigregister
XmlMXCAFDoc_NoteDriver_swigregister(XmlMXCAFDoc_NoteDriver)

class XmlMXCAFDoc_NotesToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_NotesToolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_NotesToolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_NotesToolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_NotesToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_NotesToolDriver
XmlMXCAFDoc_NotesToolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_NotesToolDriver_Paste, None, XmlMXCAFDoc_NotesToolDriver)
XmlMXCAFDoc_NotesToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_NotesToolDriver_swigregister
XmlMXCAFDoc_NotesToolDriver_swigregister(XmlMXCAFDoc_NotesToolDriver)

class XmlMXCAFDoc_ShapeToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: void
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_ShapeToolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_ShapeToolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_ShapeToolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_ShapeToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_ShapeToolDriver
XmlMXCAFDoc_ShapeToolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_ShapeToolDriver_Paste, None, XmlMXCAFDoc_ShapeToolDriver)
XmlMXCAFDoc_ShapeToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_ShapeToolDriver_swigregister
XmlMXCAFDoc_ShapeToolDriver_swigregister(XmlMXCAFDoc_ShapeToolDriver)

class XmlMXCAFDoc_ViewToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: void
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_ViewToolDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMsgDriver:
        	:type theMsgDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_ViewToolDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_ViewToolDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_ViewToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_ViewToolDriver
XmlMXCAFDoc_ViewToolDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_ViewToolDriver_Paste, None, XmlMXCAFDoc_ViewToolDriver)
XmlMXCAFDoc_ViewToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_ViewToolDriver_swigregister
XmlMXCAFDoc_ViewToolDriver_swigregister(XmlMXCAFDoc_ViewToolDriver)

class XmlMXCAFDoc_VolumeDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: XmlObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: XmlObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_VolumeDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_VolumeDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_VolumeDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_VolumeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_VolumeDriver
XmlMXCAFDoc_VolumeDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_VolumeDriver_Paste, None, XmlMXCAFDoc_VolumeDriver)
XmlMXCAFDoc_VolumeDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_VolumeDriver_swigregister
XmlMXCAFDoc_VolumeDriver_swigregister(XmlMXCAFDoc_VolumeDriver)

class XmlMXCAFDoc_NoteBinDataDriver(XmlMXCAFDoc_NoteDriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_NoteBinDataDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_NoteBinDataDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_NoteBinDataDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_NoteBinDataDriver
XmlMXCAFDoc_NoteBinDataDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_NoteBinDataDriver_Paste, None, XmlMXCAFDoc_NoteBinDataDriver)
XmlMXCAFDoc_NoteBinDataDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_NoteBinDataDriver_swigregister
XmlMXCAFDoc_NoteBinDataDriver_swigregister(XmlMXCAFDoc_NoteBinDataDriver)

class XmlMXCAFDoc_NoteCommentDriver(XmlMXCAFDoc_NoteDriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        :param theSource:
        	:type theSource: XmlObjMgt_Persistent
        	:param theTarget:
        	:type theTarget: TDF_Attribute
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_RRelocationTable
        	:rtype: bool
        :param theSource:
        	:type theSource: TDF_Attribute
        	:param theTarget:
        	:type theTarget: XmlObjMgt_Persistent
        	:param theRelocTable:
        	:type theRelocTable: XmlObjMgt_SRelocationTable
        	:rtype: None
        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_NoteCommentDriver_Paste(self, *args)


    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_NoteCommentDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_NoteCommentDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_NoteCommentDriver
XmlMXCAFDoc_NoteCommentDriver.Paste = new_instancemethod(_XmlMXCAFDoc.XmlMXCAFDoc_NoteCommentDriver_Paste, None, XmlMXCAFDoc_NoteCommentDriver)
XmlMXCAFDoc_NoteCommentDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_NoteCommentDriver_swigregister
XmlMXCAFDoc_NoteCommentDriver_swigregister(XmlMXCAFDoc_NoteCommentDriver)

class XmlMXCAFDoc_NoteBalloonDriver(XmlMXCAFDoc_NoteCommentDriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMXCAFDoc.XmlMXCAFDoc_NoteBalloonDriver_swiginit(self, _XmlMXCAFDoc.new_XmlMXCAFDoc_NoteBalloonDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_NoteBalloonDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_NoteBalloonDriver
XmlMXCAFDoc_NoteBalloonDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_NoteBalloonDriver_swigregister
XmlMXCAFDoc_NoteBalloonDriver_swigregister(XmlMXCAFDoc_NoteBalloonDriver)



