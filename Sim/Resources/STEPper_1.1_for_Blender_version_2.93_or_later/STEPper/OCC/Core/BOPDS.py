# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
BOPDS module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_bopds.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _BOPDS.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_BOPDS')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_BOPDS')
    _BOPDS = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_BOPDS', [dirname(__file__)])
        except ImportError:
            import _BOPDS
            return _BOPDS
        try:
            _mod = imp.load_module('_BOPDS', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _BOPDS = swig_import_helper()
    del swig_import_helper
else:
    import _BOPDS
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _BOPDS.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_BOPDS.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_BOPDS.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_BOPDS.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_BOPDS.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_BOPDS.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_BOPDS.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_BOPDS.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_BOPDS.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_BOPDS.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_BOPDS.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_BOPDS.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_BOPDS.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_BOPDS.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_BOPDS.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_BOPDS.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_BOPDS.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _BOPDS.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _BOPDS.process_exception(error, method_name, class_name)
process_exception = _BOPDS.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.Bnd
import OCC.Core.gp
import OCC.Core.TColgp
import OCC.Core.BVH
import OCC.Core.IntTools
import OCC.Core.BRepAdaptor
import OCC.Core.Adaptor3d
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TopAbs
import OCC.Core.Adaptor2d
import OCC.Core.Geom2d
import OCC.Core.math
import OCC.Core.Message
import OCC.Core.TopoDS
import OCC.Core.TopLoc
import OCC.Core.GeomAdaptor
import OCC.Core.Geom2dAdaptor
import OCC.Core.Geom2dHatch
import OCC.Core.IntRes2d
import OCC.Core.HatchGen
import OCC.Core.Geom2dInt
import OCC.Core.IntCurve
import OCC.Core.Extrema
import OCC.Core.Intf
import OCC.Core.GeomAPI
import OCC.Core.Approx
import OCC.Core.AppCont
import OCC.Core.AppParCurves
import OCC.Core.BRepClass3d
import OCC.Core.IntCurveSurface
import OCC.Core.IntSurf
import OCC.Core.TopTools
import OCC.Core.IntCurvesFace
import OCC.Core.IntPatch
import OCC.Core.IntAna
import OCC.Core.GeomInt
import OCC.Core.IntImp
import OCC.Core.ApproxInt

def Handle_BOPDS_CommonBlock_Create() -> "opencascade::handle< BOPDS_CommonBlock >":
    return _BOPDS.Handle_BOPDS_CommonBlock_Create()
Handle_BOPDS_CommonBlock_Create = _BOPDS.Handle_BOPDS_CommonBlock_Create

def Handle_BOPDS_CommonBlock_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BOPDS_CommonBlock >":
    return _BOPDS.Handle_BOPDS_CommonBlock_DownCast(t)
Handle_BOPDS_CommonBlock_DownCast = _BOPDS.Handle_BOPDS_CommonBlock_DownCast

def Handle_BOPDS_CommonBlock_IsNull(t: 'opencascade::handle< BOPDS_CommonBlock > const &') -> "bool":
    return _BOPDS.Handle_BOPDS_CommonBlock_IsNull(t)
Handle_BOPDS_CommonBlock_IsNull = _BOPDS.Handle_BOPDS_CommonBlock_IsNull

def Handle_BOPDS_PaveBlock_Create() -> "opencascade::handle< BOPDS_PaveBlock >":
    return _BOPDS.Handle_BOPDS_PaveBlock_Create()
Handle_BOPDS_PaveBlock_Create = _BOPDS.Handle_BOPDS_PaveBlock_Create

def Handle_BOPDS_PaveBlock_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BOPDS_PaveBlock >":
    return _BOPDS.Handle_BOPDS_PaveBlock_DownCast(t)
Handle_BOPDS_PaveBlock_DownCast = _BOPDS.Handle_BOPDS_PaveBlock_DownCast

def Handle_BOPDS_PaveBlock_IsNull(t: 'opencascade::handle< BOPDS_PaveBlock > const &') -> "bool":
    return _BOPDS.Handle_BOPDS_PaveBlock_IsNull(t)
Handle_BOPDS_PaveBlock_IsNull = _BOPDS.Handle_BOPDS_PaveBlock_IsNull
class BOPDS_VectorOfInterfZZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfZZ_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfZZ(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfZZ
BOPDS_VectorOfInterfZZ.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_begin, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_end, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_cbegin, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_cend, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Length, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Size, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Lower, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Upper, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_IsEmpty, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Assign, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Set, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Append, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Appended, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Value, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_First, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_ChangeFirst, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_Last, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_ChangeLast, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ___call__, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_ChangeValue, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfZZ_SetValue, None, BOPDS_VectorOfInterfZZ)
BOPDS_VectorOfInterfZZ_swigregister = _BOPDS.BOPDS_VectorOfInterfZZ_swigregister
BOPDS_VectorOfInterfZZ_swigregister(BOPDS_VectorOfInterfZZ)

class BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_swiginit(self, _BOPDS.new_BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.begin = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_begin, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.end = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_end, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.cbegin = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_cbegin, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.cend = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_cend, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Exchange = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Exchange, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Assign = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Assign, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Set = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Set, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.ReSize = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_ReSize, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Add = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Add, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Contains = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Contains, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Substitute = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Substitute, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Swap = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Swap, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.RemoveLast = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_RemoveLast, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.RemoveFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_RemoveFromIndex, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.RemoveKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_RemoveKey, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.FindKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_FindKey, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.FindFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_FindFromIndex, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.ChangeFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_ChangeFromIndex, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.__call__ = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks___call__, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.FindIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_FindIndex, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.ChangeFromKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_ChangeFromKey, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Seek = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Seek, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.ChangeSeek = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_ChangeSeek, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.FindFromKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_FindFromKey, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Clear = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Clear, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks.Size = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_Size, None, BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_swigregister = _BOPDS.BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_swigregister
BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks_swigregister(BOPDS_IndexedDataMapOfShapeCoupleOfPaveBlocks)

class BOPDS_VectorOfInterfVV(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfVV_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfVV(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfVV
BOPDS_VectorOfInterfVV.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_begin, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_end, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_cbegin, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_cend, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Length, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Size, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Lower, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Upper, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_IsEmpty, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Assign, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Set, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Append, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Appended, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Value, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_First, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_ChangeFirst, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_Last, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_ChangeLast, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV___call__, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_ChangeValue, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVV_SetValue, None, BOPDS_VectorOfInterfVV)
BOPDS_VectorOfInterfVV_swigregister = _BOPDS.BOPDS_VectorOfInterfVV_swigregister
BOPDS_VectorOfInterfVV_swigregister(BOPDS_VectorOfInterfVV)

class BOPDS_VectorOfIndexRange(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfIndexRange_swiginit(self, _BOPDS.new_BOPDS_VectorOfIndexRange(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfIndexRange
BOPDS_VectorOfIndexRange.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_begin, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.end = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_end, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_cbegin, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_cend, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Length, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Size, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Lower, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Upper, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_IsEmpty, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Assign, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Set, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Append, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Appended, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Value, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.First = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_First, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_ChangeFirst, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_Last, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_ChangeLast, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange___call__, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_ChangeValue, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfIndexRange_SetValue, None, BOPDS_VectorOfIndexRange)
BOPDS_VectorOfIndexRange_swigregister = _BOPDS.BOPDS_VectorOfIndexRange_swigregister
BOPDS_VectorOfIndexRange_swigregister(BOPDS_VectorOfIndexRange)

class BOPDS_VectorOfFaceInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfFaceInfo_swiginit(self, _BOPDS.new_BOPDS_VectorOfFaceInfo(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfFaceInfo
BOPDS_VectorOfFaceInfo.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_begin, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.end = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_end, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_cbegin, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_cend, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Length, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Size, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Lower, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Upper, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_IsEmpty, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Assign, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Set, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Append, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Appended, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Value, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.First = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_First, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_ChangeFirst, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_Last, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_ChangeLast, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo___call__, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_ChangeValue, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfFaceInfo_SetValue, None, BOPDS_VectorOfFaceInfo)
BOPDS_VectorOfFaceInfo_swigregister = _BOPDS.BOPDS_VectorOfFaceInfo_swigregister
BOPDS_VectorOfFaceInfo_swigregister(BOPDS_VectorOfFaceInfo)

class BOPDS_VectorOfCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfCurve_swiginit(self, _BOPDS.new_BOPDS_VectorOfCurve(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfCurve
BOPDS_VectorOfCurve.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_begin, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.end = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_end, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_cbegin, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_cend, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Length, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Size, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Lower, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Upper, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_IsEmpty, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Assign, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Set, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Append, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Appended, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Value, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.First = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_First, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_ChangeFirst, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_Last, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_ChangeLast, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve___call__, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_ChangeValue, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfCurve_SetValue, None, BOPDS_VectorOfCurve)
BOPDS_VectorOfCurve_swigregister = _BOPDS.BOPDS_VectorOfCurve_swigregister
BOPDS_VectorOfCurve_swigregister(BOPDS_VectorOfCurve)

class BOPDS_IndexedMapOfPaveBlock(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_IndexedMapOfPaveBlock_swiginit(self, _BOPDS.new_BOPDS_IndexedMapOfPaveBlock(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_IndexedMapOfPaveBlock
BOPDS_IndexedMapOfPaveBlock.cbegin = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_cbegin, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.cend = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_cend, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.Exchange = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_Exchange, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.Assign = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_Assign, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.Set = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_Set, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.ReSize = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_ReSize, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.Add = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_Add, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.Contains = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_Contains, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.Substitute = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_Substitute, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.Swap = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_Swap, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.RemoveLast = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_RemoveLast, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.RemoveFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_RemoveFromIndex, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.RemoveKey = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_RemoveKey, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.FindKey = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_FindKey, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.__call__ = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock___call__, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.FindIndex = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_FindIndex, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.Clear = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_Clear, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock.Size = new_instancemethod(_BOPDS.BOPDS_IndexedMapOfPaveBlock_Size, None, BOPDS_IndexedMapOfPaveBlock)
BOPDS_IndexedMapOfPaveBlock_swigregister = _BOPDS.BOPDS_IndexedMapOfPaveBlock_swigregister
BOPDS_IndexedMapOfPaveBlock_swigregister(BOPDS_IndexedMapOfPaveBlock)

class BOPDS_VectorOfInterfVF(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfVF_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfVF(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfVF
BOPDS_VectorOfInterfVF.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_begin, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_end, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_cbegin, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_cend, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Length, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Size, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Lower, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Upper, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_IsEmpty, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Assign, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Set, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Append, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Appended, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Value, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_First, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_ChangeFirst, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_Last, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_ChangeLast, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF___call__, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_ChangeValue, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVF_SetValue, None, BOPDS_VectorOfInterfVF)
BOPDS_VectorOfInterfVF_swigregister = _BOPDS.BOPDS_VectorOfInterfVF_swigregister
BOPDS_VectorOfInterfVF_swigregister(BOPDS_VectorOfInterfVF)

class BOPDS_MapOfPave(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_MapOfPave_swiginit(self, _BOPDS.new_BOPDS_MapOfPave(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_MapOfPave
BOPDS_MapOfPave.cbegin = new_instancemethod(_BOPDS.BOPDS_MapOfPave_cbegin, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.cend = new_instancemethod(_BOPDS.BOPDS_MapOfPave_cend, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Exchange = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Exchange, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Assign = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Assign, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Set = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Set, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.ReSize = new_instancemethod(_BOPDS.BOPDS_MapOfPave_ReSize, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Add = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Add, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Added = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Added, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Remove = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Remove, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Clear = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Clear, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Size = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Size, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.IsEqual = new_instancemethod(_BOPDS.BOPDS_MapOfPave_IsEqual, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Contains = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Contains, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Union = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Union, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Unite = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Unite, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.HasIntersection = new_instancemethod(_BOPDS.BOPDS_MapOfPave_HasIntersection, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Intersection = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Intersection, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Intersect = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Intersect, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Subtraction = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Subtraction, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Subtract = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Subtract, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Difference = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Difference, None, BOPDS_MapOfPave)
BOPDS_MapOfPave.Differ = new_instancemethod(_BOPDS.BOPDS_MapOfPave_Differ, None, BOPDS_MapOfPave)
BOPDS_MapOfPave_swigregister = _BOPDS.BOPDS_MapOfPave_swigregister
BOPDS_MapOfPave_swigregister(BOPDS_MapOfPave)

class BOPDS_VectorOfInterfFZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfFZ_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfFZ(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfFZ
BOPDS_VectorOfInterfFZ.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_begin, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_end, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_cbegin, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_cend, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Length, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Size, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Lower, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Upper, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_IsEmpty, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Assign, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Set, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Append, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Appended, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Value, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_First, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_ChangeFirst, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_Last, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_ChangeLast, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ___call__, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_ChangeValue, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFZ_SetValue, None, BOPDS_VectorOfInterfFZ)
BOPDS_VectorOfInterfFZ_swigregister = _BOPDS.BOPDS_VectorOfInterfFZ_swigregister
BOPDS_VectorOfInterfFZ_swigregister(BOPDS_VectorOfInterfFZ)

class BOPDS_IndexedDataMapOfPaveBlockListOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_swiginit(self, _BOPDS.new_BOPDS_IndexedDataMapOfPaveBlockListOfInteger(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_IndexedDataMapOfPaveBlockListOfInteger
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.begin = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_begin, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.end = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_end, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.cbegin = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_cbegin, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.cend = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_cend, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Exchange = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Exchange, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Assign = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Assign, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Set = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Set, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.ReSize = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_ReSize, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Add = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Add, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Contains = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Contains, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Substitute = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Substitute, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Swap = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Swap, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.RemoveLast = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_RemoveLast, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.RemoveFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_RemoveFromIndex, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.RemoveKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_RemoveKey, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.FindKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_FindKey, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.FindFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_FindFromIndex, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.ChangeFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_ChangeFromIndex, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.__call__ = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger___call__, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.FindIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_FindIndex, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.ChangeFromKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_ChangeFromKey, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Seek = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Seek, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.ChangeSeek = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_ChangeSeek, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.FindFromKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_FindFromKey, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Clear = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Clear, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger.Size = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_Size, None, BOPDS_IndexedDataMapOfPaveBlockListOfInteger)
BOPDS_IndexedDataMapOfPaveBlockListOfInteger_swigregister = _BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfInteger_swigregister
BOPDS_IndexedDataMapOfPaveBlockListOfInteger_swigregister(BOPDS_IndexedDataMapOfPaveBlockListOfInteger)

class BOPDS_VectorOfPoint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfPoint_swiginit(self, _BOPDS.new_BOPDS_VectorOfPoint(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfPoint
BOPDS_VectorOfPoint.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_begin, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.end = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_end, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_cbegin, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_cend, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Length, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Size, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Lower, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Upper, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_IsEmpty, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Assign, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Set, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Append, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Appended, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Value, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.First = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_First, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_ChangeFirst, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_Last, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_ChangeLast, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint___call__, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_ChangeValue, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfPoint_SetValue, None, BOPDS_VectorOfPoint)
BOPDS_VectorOfPoint_swigregister = _BOPDS.BOPDS_VectorOfPoint_swigregister
BOPDS_VectorOfPoint_swigregister(BOPDS_VectorOfPoint)

class BOPDS_VectorOfPave(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfPave_swiginit(self, _BOPDS.new_BOPDS_VectorOfPave(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfPave

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

BOPDS_VectorOfPave.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_begin, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.end = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_end, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_cbegin, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_cend, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Init = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Init, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Size, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Length, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_IsEmpty, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Lower, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Upper, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.IsDeletable = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_IsDeletable, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.IsAllocated = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_IsAllocated, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Assign, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Move = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Move, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Set, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.First = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_First, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_ChangeFirst, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Last, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_ChangeLast, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Value, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_ChangeValue, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfPave___call__, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_SetValue, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave.Resize = new_instancemethod(_BOPDS.BOPDS_VectorOfPave_Resize, None, BOPDS_VectorOfPave)
BOPDS_VectorOfPave_swigregister = _BOPDS.BOPDS_VectorOfPave_swigregister
BOPDS_VectorOfPave_swigregister(BOPDS_VectorOfPave)

class BOPDS_VectorOfInterfEZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfEZ_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfEZ(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfEZ
BOPDS_VectorOfInterfEZ.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_begin, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_end, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_cbegin, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_cend, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Length, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Size, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Lower, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Upper, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_IsEmpty, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Assign, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Set, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Append, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Appended, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Value, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_First, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_ChangeFirst, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_Last, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_ChangeLast, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ___call__, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_ChangeValue, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEZ_SetValue, None, BOPDS_VectorOfInterfEZ)
BOPDS_VectorOfInterfEZ_swigregister = _BOPDS.BOPDS_VectorOfInterfEZ_swigregister
BOPDS_VectorOfInterfEZ_swigregister(BOPDS_VectorOfInterfEZ)

class BOPDS_DataMapOfPaveBlockListOfPaveBlock(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_swiginit(self, _BOPDS.new_BOPDS_DataMapOfPaveBlockListOfPaveBlock(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_DataMapOfPaveBlockListOfPaveBlock
BOPDS_DataMapOfPaveBlockListOfPaveBlock.begin = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_begin, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.end = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_end, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.cbegin = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_cbegin, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.cend = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_cend, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.Exchange = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_Exchange, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.Assign = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_Assign, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.Set = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_Set, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.ReSize = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_ReSize, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.Bind = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_Bind, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.Bound = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_Bound, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.IsBound = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_IsBound, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.UnBind = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_UnBind, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.Seek = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_Seek, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.Find = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_Find, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.ChangeSeek = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_ChangeSeek, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.ChangeFind = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_ChangeFind, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.__call__ = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock___call__, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.Clear = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_Clear, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock.Size = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_Size, None, BOPDS_DataMapOfPaveBlockListOfPaveBlock)
BOPDS_DataMapOfPaveBlockListOfPaveBlock_swigregister = _BOPDS.BOPDS_DataMapOfPaveBlockListOfPaveBlock_swigregister
BOPDS_DataMapOfPaveBlockListOfPaveBlock_swigregister(BOPDS_DataMapOfPaveBlockListOfPaveBlock)

class BOPDS_MapOfCommonBlock(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_MapOfCommonBlock_swiginit(self, _BOPDS.new_BOPDS_MapOfCommonBlock(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_MapOfCommonBlock
BOPDS_MapOfCommonBlock.cbegin = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_cbegin, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.cend = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_cend, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Exchange = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Exchange, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Assign = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Assign, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Set = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Set, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.ReSize = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_ReSize, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Add = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Add, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Added = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Added, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Remove = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Remove, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Clear = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Clear, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Size = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Size, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.IsEqual = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_IsEqual, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Contains = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Contains, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Union = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Union, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Unite = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Unite, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.HasIntersection = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_HasIntersection, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Intersection = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Intersection, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Intersect = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Intersect, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Subtraction = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Subtraction, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Subtract = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Subtract, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Difference = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Difference, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock.Differ = new_instancemethod(_BOPDS.BOPDS_MapOfCommonBlock_Differ, None, BOPDS_MapOfCommonBlock)
BOPDS_MapOfCommonBlock_swigregister = _BOPDS.BOPDS_MapOfCommonBlock_swigregister
BOPDS_MapOfCommonBlock_swigregister(BOPDS_MapOfCommonBlock)

class BOPDS_VectorOfInterfFF(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfFF_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfFF(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfFF
BOPDS_VectorOfInterfFF.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_begin, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_end, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_cbegin, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_cend, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Length, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Size, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Lower, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Upper, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_IsEmpty, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Assign, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Set, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Append, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Appended, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Value, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_First, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_ChangeFirst, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_Last, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_ChangeLast, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF___call__, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_ChangeValue, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfFF_SetValue, None, BOPDS_VectorOfInterfFF)
BOPDS_VectorOfInterfFF_swigregister = _BOPDS.BOPDS_VectorOfInterfFF_swigregister
BOPDS_VectorOfInterfFF_swigregister(BOPDS_VectorOfInterfFF)

class BOPDS_ListOfPave(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_ListOfPave_swiginit(self, _BOPDS.new_BOPDS_ListOfPave(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_ListOfPave
BOPDS_ListOfPave.begin = new_instancemethod(_BOPDS.BOPDS_ListOfPave_begin, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.end = new_instancemethod(_BOPDS.BOPDS_ListOfPave_end, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.cbegin = new_instancemethod(_BOPDS.BOPDS_ListOfPave_cbegin, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.cend = new_instancemethod(_BOPDS.BOPDS_ListOfPave_cend, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.Size = new_instancemethod(_BOPDS.BOPDS_ListOfPave_Size, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.Assign = new_instancemethod(_BOPDS.BOPDS_ListOfPave_Assign, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.Set = new_instancemethod(_BOPDS.BOPDS_ListOfPave_Set, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.Clear = new_instancemethod(_BOPDS.BOPDS_ListOfPave_Clear, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.First = new_instancemethod(_BOPDS.BOPDS_ListOfPave_First, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.Last = new_instancemethod(_BOPDS.BOPDS_ListOfPave_Last, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.Append = new_instancemethod(_BOPDS.BOPDS_ListOfPave_Append, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.Prepend = new_instancemethod(_BOPDS.BOPDS_ListOfPave_Prepend, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.RemoveFirst = new_instancemethod(_BOPDS.BOPDS_ListOfPave_RemoveFirst, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.Remove = new_instancemethod(_BOPDS.BOPDS_ListOfPave_Remove, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.InsertBefore = new_instancemethod(_BOPDS.BOPDS_ListOfPave_InsertBefore, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.InsertAfter = new_instancemethod(_BOPDS.BOPDS_ListOfPave_InsertAfter, None, BOPDS_ListOfPave)
BOPDS_ListOfPave.Reverse = new_instancemethod(_BOPDS.BOPDS_ListOfPave_Reverse, None, BOPDS_ListOfPave)
BOPDS_ListOfPave_swigregister = _BOPDS.BOPDS_ListOfPave_swigregister
BOPDS_ListOfPave_swigregister(BOPDS_ListOfPave)

class BOPDS_DataMapOfPaveBlockListOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_swiginit(self, _BOPDS.new_BOPDS_DataMapOfPaveBlockListOfInteger(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_DataMapOfPaveBlockListOfInteger
BOPDS_DataMapOfPaveBlockListOfInteger.begin = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_begin, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.end = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_end, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.cbegin = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_cbegin, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.cend = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_cend, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.Exchange = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_Exchange, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.Assign = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_Assign, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.Set = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_Set, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.ReSize = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_ReSize, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.Bind = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_Bind, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.Bound = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_Bound, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.IsBound = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_IsBound, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.UnBind = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_UnBind, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.Seek = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_Seek, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.Find = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_Find, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.ChangeSeek = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_ChangeSeek, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.ChangeFind = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_ChangeFind, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.__call__ = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger___call__, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.Clear = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_Clear, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger.Size = new_instancemethod(_BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_Size, None, BOPDS_DataMapOfPaveBlockListOfInteger)
BOPDS_DataMapOfPaveBlockListOfInteger_swigregister = _BOPDS.BOPDS_DataMapOfPaveBlockListOfInteger_swigregister
BOPDS_DataMapOfPaveBlockListOfInteger_swigregister(BOPDS_DataMapOfPaveBlockListOfInteger)

class BOPDS_DataMapOfShapeCoupleOfPaveBlocks(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_swiginit(self, _BOPDS.new_BOPDS_DataMapOfShapeCoupleOfPaveBlocks(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_DataMapOfShapeCoupleOfPaveBlocks
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.begin = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_begin, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.end = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_end, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.cbegin = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_cbegin, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.cend = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_cend, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.Exchange = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_Exchange, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.Assign = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_Assign, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.Set = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_Set, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.ReSize = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_ReSize, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.Bind = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_Bind, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.Bound = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_Bound, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.IsBound = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_IsBound, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.UnBind = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_UnBind, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.Seek = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_Seek, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.Find = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_Find, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.ChangeSeek = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_ChangeSeek, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.ChangeFind = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_ChangeFind, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.__call__ = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks___call__, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.Clear = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_Clear, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks.Size = new_instancemethod(_BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_Size, None, BOPDS_DataMapOfShapeCoupleOfPaveBlocks)
BOPDS_DataMapOfShapeCoupleOfPaveBlocks_swigregister = _BOPDS.BOPDS_DataMapOfShapeCoupleOfPaveBlocks_swigregister
BOPDS_DataMapOfShapeCoupleOfPaveBlocks_swigregister(BOPDS_DataMapOfShapeCoupleOfPaveBlocks)

class BOPDS_VectorOfVectorOfPair(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfVectorOfPair_swiginit(self, _BOPDS.new_BOPDS_VectorOfVectorOfPair(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfVectorOfPair
BOPDS_VectorOfVectorOfPair.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_begin, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.end = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_end, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_cbegin, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_cend, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Length, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Size, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Lower, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Upper, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_IsEmpty, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Assign, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Set, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Append, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Appended, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Value, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.First = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_First, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_ChangeFirst, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_Last, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_ChangeLast, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair___call__, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_ChangeValue, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfVectorOfPair_SetValue, None, BOPDS_VectorOfVectorOfPair)
BOPDS_VectorOfVectorOfPair_swigregister = _BOPDS.BOPDS_VectorOfVectorOfPair_swigregister
BOPDS_VectorOfVectorOfPair_swigregister(BOPDS_VectorOfVectorOfPair)

class BOPDS_VectorOfListOfPaveBlock(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfListOfPaveBlock_swiginit(self, _BOPDS.new_BOPDS_VectorOfListOfPaveBlock(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfListOfPaveBlock
BOPDS_VectorOfListOfPaveBlock.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_begin, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.end = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_end, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_cbegin, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_cend, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Length, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Size, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Lower, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Upper, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_IsEmpty, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Assign, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Set, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Append, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Appended, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Value, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.First = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_First, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_ChangeFirst, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_Last, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_ChangeLast, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock___call__, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_ChangeValue, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfListOfPaveBlock_SetValue, None, BOPDS_VectorOfListOfPaveBlock)
BOPDS_VectorOfListOfPaveBlock_swigregister = _BOPDS.BOPDS_VectorOfListOfPaveBlock_swigregister
BOPDS_VectorOfListOfPaveBlock_swigregister(BOPDS_VectorOfListOfPaveBlock)

class BOPDS_VectorOfInterfEE(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfEE_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfEE(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfEE
BOPDS_VectorOfInterfEE.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_begin, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_end, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_cbegin, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_cend, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Length, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Size, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Lower, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Upper, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_IsEmpty, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Assign, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Set, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Append, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Appended, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Value, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_First, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_ChangeFirst, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_Last, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_ChangeLast, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE___call__, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_ChangeValue, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEE_SetValue, None, BOPDS_VectorOfInterfEE)
BOPDS_VectorOfInterfEE_swigregister = _BOPDS.BOPDS_VectorOfInterfEE_swigregister
BOPDS_VectorOfInterfEE_swigregister(BOPDS_VectorOfInterfEE)

class BOPDS_VectorOfShapeInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfShapeInfo_swiginit(self, _BOPDS.new_BOPDS_VectorOfShapeInfo(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfShapeInfo
BOPDS_VectorOfShapeInfo.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_begin, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.end = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_end, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_cbegin, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_cend, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Length, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Size, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Lower, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Upper, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_IsEmpty, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Assign, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Set, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Append, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Appended, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Value, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.First = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_First, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_ChangeFirst, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_Last, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_ChangeLast, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo___call__, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_ChangeValue, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfShapeInfo_SetValue, None, BOPDS_VectorOfShapeInfo)
BOPDS_VectorOfShapeInfo_swigregister = _BOPDS.BOPDS_VectorOfShapeInfo_swigregister
BOPDS_VectorOfShapeInfo_swigregister(BOPDS_VectorOfShapeInfo)

class BOPDS_VectorOfInterfVZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfVZ_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfVZ(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfVZ
BOPDS_VectorOfInterfVZ.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_begin, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_end, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_cbegin, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_cend, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Length, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Size, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Lower, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Upper, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_IsEmpty, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Assign, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Set, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Append, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Appended, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Value, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_First, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_ChangeFirst, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_Last, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_ChangeLast, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ___call__, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_ChangeValue, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVZ_SetValue, None, BOPDS_VectorOfInterfVZ)
BOPDS_VectorOfInterfVZ_swigregister = _BOPDS.BOPDS_VectorOfInterfVZ_swigregister
BOPDS_VectorOfInterfVZ_swigregister(BOPDS_VectorOfInterfVZ)

class BOPDS_VectorOfPair(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfPair_swiginit(self, _BOPDS.new_BOPDS_VectorOfPair(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfPair
BOPDS_VectorOfPair.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_begin, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.end = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_end, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_cbegin, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_cend, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Length, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Size, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Lower, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Upper, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_IsEmpty, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Assign, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Set, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Append, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Appended, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Value, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.First = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_First, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_ChangeFirst, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_Last, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_ChangeLast, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfPair___call__, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_ChangeValue, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfPair_SetValue, None, BOPDS_VectorOfPair)
BOPDS_VectorOfPair_swigregister = _BOPDS.BOPDS_VectorOfPair_swigregister
BOPDS_VectorOfPair_swigregister(BOPDS_VectorOfPair)

class BOPDS_VectorOfInterfEF(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfEF_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfEF(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfEF
BOPDS_VectorOfInterfEF.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_begin, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_end, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_cbegin, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_cend, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Length, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Size, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Lower, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Upper, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_IsEmpty, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Assign, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Set, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Append, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Appended, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Value, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_First, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_ChangeFirst, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_Last, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_ChangeLast, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF___call__, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_ChangeValue, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfEF_SetValue, None, BOPDS_VectorOfInterfEF)
BOPDS_VectorOfInterfEF_swigregister = _BOPDS.BOPDS_VectorOfInterfEF_swigregister
BOPDS_VectorOfInterfEF_swigregister(BOPDS_VectorOfInterfEF)

class BOPDS_VectorOfInterfVE(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_VectorOfInterfVE_swiginit(self, _BOPDS.new_BOPDS_VectorOfInterfVE(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_VectorOfInterfVE
BOPDS_VectorOfInterfVE.begin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_begin, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.end = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_end, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.cbegin = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_cbegin, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.cend = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_cend, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Length = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Length, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Size = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Size, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Lower = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Lower, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Upper = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Upper, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.IsEmpty = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_IsEmpty, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Assign = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Assign, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Set = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Set, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Append = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Append, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Appended = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Appended, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Value = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Value, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.First = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_First, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.ChangeFirst = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_ChangeFirst, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.Last = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_Last, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.ChangeLast = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_ChangeLast, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.__call__ = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE___call__, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.ChangeValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_ChangeValue, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE.SetValue = new_instancemethod(_BOPDS.BOPDS_VectorOfInterfVE_SetValue, None, BOPDS_VectorOfInterfVE)
BOPDS_VectorOfInterfVE_swigregister = _BOPDS.BOPDS_VectorOfInterfVE_swigregister
BOPDS_VectorOfInterfVE_swigregister(BOPDS_VectorOfInterfVE)

class BOPDS_DataMapOfIntegerListOfPaveBlock(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_swiginit(self, _BOPDS.new_BOPDS_DataMapOfIntegerListOfPaveBlock(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_DataMapOfIntegerListOfPaveBlock
BOPDS_DataMapOfIntegerListOfPaveBlock.begin = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_begin, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.end = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_end, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.cbegin = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_cbegin, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.cend = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_cend, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Exchange = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Exchange, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Assign = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Assign, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Set = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Set, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.ReSize = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_ReSize, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Bind = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Bind, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Bound = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Bound, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.IsBound = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_IsBound, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.UnBind = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_UnBind, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Seek = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Seek, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Find = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Find, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.ChangeSeek = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_ChangeSeek, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.ChangeFind = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_ChangeFind, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.__call__ = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock___call__, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Clear = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Clear, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Size = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Size, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock.Keys = new_instancemethod(_BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_Keys, None, BOPDS_DataMapOfIntegerListOfPaveBlock)
BOPDS_DataMapOfIntegerListOfPaveBlock_swigregister = _BOPDS.BOPDS_DataMapOfIntegerListOfPaveBlock_swigregister
BOPDS_DataMapOfIntegerListOfPaveBlock_swigregister(BOPDS_DataMapOfIntegerListOfPaveBlock)

class BOPDS_MapOfPair(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_MapOfPair_swiginit(self, _BOPDS.new_BOPDS_MapOfPair(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_MapOfPair
BOPDS_MapOfPair.cbegin = new_instancemethod(_BOPDS.BOPDS_MapOfPair_cbegin, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.cend = new_instancemethod(_BOPDS.BOPDS_MapOfPair_cend, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Exchange = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Exchange, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Assign = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Assign, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Set = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Set, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.ReSize = new_instancemethod(_BOPDS.BOPDS_MapOfPair_ReSize, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Add = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Add, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Added = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Added, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Remove = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Remove, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Clear = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Clear, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Size = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Size, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.IsEqual = new_instancemethod(_BOPDS.BOPDS_MapOfPair_IsEqual, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Contains = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Contains, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Union = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Union, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Unite = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Unite, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.HasIntersection = new_instancemethod(_BOPDS.BOPDS_MapOfPair_HasIntersection, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Intersection = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Intersection, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Intersect = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Intersect, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Subtraction = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Subtraction, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Subtract = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Subtract, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Difference = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Difference, None, BOPDS_MapOfPair)
BOPDS_MapOfPair.Differ = new_instancemethod(_BOPDS.BOPDS_MapOfPair_Differ, None, BOPDS_MapOfPair)
BOPDS_MapOfPair_swigregister = _BOPDS.BOPDS_MapOfPair_swigregister
BOPDS_MapOfPair_swigregister(BOPDS_MapOfPair)

class BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_swiginit(self, _BOPDS.new_BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.begin = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_begin, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.end = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_end, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.cbegin = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_cbegin, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.cend = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_cend, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Exchange = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Exchange, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Assign = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Assign, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Set = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Set, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.ReSize = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_ReSize, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Add = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Add, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Contains = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Contains, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Substitute = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Substitute, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Swap = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Swap, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.RemoveLast = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_RemoveLast, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.RemoveFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_RemoveFromIndex, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.RemoveKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_RemoveKey, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.FindKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_FindKey, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.FindFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_FindFromIndex, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.ChangeFromIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_ChangeFromIndex, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.__call__ = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock___call__, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.FindIndex = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_FindIndex, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.ChangeFromKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_ChangeFromKey, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Seek = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Seek, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.ChangeSeek = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_ChangeSeek, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.FindFromKey = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_FindFromKey, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Clear = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Clear, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock.Size = new_instancemethod(_BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_Size, None, BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_swigregister = _BOPDS.BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_swigregister
BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock_swigregister(BOPDS_IndexedDataMapOfPaveBlockListOfPaveBlock)

class BOPDS_ListOfPaveBlock(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_ListOfPaveBlock_swiginit(self, _BOPDS.new_BOPDS_ListOfPaveBlock(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_ListOfPaveBlock
BOPDS_ListOfPaveBlock.begin = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_begin, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.end = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_end, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.cbegin = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_cbegin, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.cend = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_cend, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.Size = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_Size, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.Assign = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_Assign, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.Set = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_Set, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.Clear = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_Clear, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.First = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_First, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.Last = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_Last, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.Append = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_Append, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.Prepend = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_Prepend, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.RemoveFirst = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_RemoveFirst, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.Remove = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_Remove, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.InsertBefore = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_InsertBefore, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.InsertAfter = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_InsertAfter, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock.Reverse = new_instancemethod(_BOPDS.BOPDS_ListOfPaveBlock_Reverse, None, BOPDS_ListOfPaveBlock)
BOPDS_ListOfPaveBlock_swigregister = _BOPDS.BOPDS_ListOfPaveBlock_swigregister
BOPDS_ListOfPaveBlock_swigregister(BOPDS_ListOfPaveBlock)

class BOPDS_MapOfPaveBlock(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _BOPDS.BOPDS_MapOfPaveBlock_swiginit(self, _BOPDS.new_BOPDS_MapOfPaveBlock(*args))
    __swig_destroy__ = _BOPDS.delete_BOPDS_MapOfPaveBlock
BOPDS_MapOfPaveBlock.cbegin = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_cbegin, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.cend = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_cend, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Exchange = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Exchange, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Assign = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Assign, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Set = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Set, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.ReSize = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_ReSize, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Add = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Add, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Added = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Added, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Remove = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Remove, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Clear = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Clear, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Size = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Size, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.IsEqual = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_IsEqual, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Contains = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Contains, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Union = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Union, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Unite = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Unite, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.HasIntersection = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_HasIntersection, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Intersection = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Intersection, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Intersect = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Intersect, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Subtraction = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Subtraction, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Subtract = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Subtract, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Difference = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Difference, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock.Differ = new_instancemethod(_BOPDS.BOPDS_MapOfPaveBlock_Differ, None, BOPDS_MapOfPaveBlock)
BOPDS_MapOfPaveBlock_swigregister = _BOPDS.BOPDS_MapOfPaveBlock_swigregister
BOPDS_MapOfPaveBlock_swigregister(BOPDS_MapOfPaveBlock)

class BOPDS_CommonBlock(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddFace(self, *args) -> "void":
        """
        * Modifier Adds the index of the face <aF> to the list of indices of faces of the common block
        	:param aF:
        	:type aF: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_CommonBlock_AddFace(self, *args)


    def AddPaveBlock(self, *args) -> "void":
        """
        * Modifier Adds the pave block <aPB> to the list of pave blocks of the common block
        	:param aPB:
        	:type aPB: BOPDS_PaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_CommonBlock_AddPaveBlock(self, *args)


    def AppendFaces(self, *args) -> "void":
        """
        * Modifier Appends the list of indices of faces <aLF> to the list of indices of faces of the common block (the input list is emptied)
        	:param aLF:
        	:type aLF: TColStd_ListOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_CommonBlock_AppendFaces(self, *args)


    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        * Contructor <theAllocator> - the allocator to manage the memory
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_CommonBlock_swiginit(self, _BOPDS.new_BOPDS_CommonBlock(*args))

    def Contains(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the common block contains a pave block that is equal to <thePB>
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: bool
        * Query Returns true if the common block contains the face with index equal to <theF>
        	:param theF:
        	:type theF: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_CommonBlock_Contains(self, *args)


    def Dump(self, *args) -> "void":
        """:rtype: None"""
        return _BOPDS.BOPDS_CommonBlock_Dump(self, *args)


    def Edge(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the index of the edge of all pave blocks of the common block
        	:rtype: int
        """
        return _BOPDS.BOPDS_CommonBlock_Edge(self, *args)


    def Faces(self, *args) -> "TColStd_ListOfInteger const &":
        """
        * Selector Returns the list of indices of faces of the common block
        	:rtype: TColStd_ListOfInteger
        """
        return _BOPDS.BOPDS_CommonBlock_Faces(self, *args)


    def IsPaveBlockOnEdge(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the common block contains a pave block that belongs to the edge with index <theIx>
        	:param theIndex:
        	:type theIndex: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_CommonBlock_IsPaveBlockOnEdge(self, *args)


    def IsPaveBlockOnFace(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the common block contains a pave block that belongs to the face with index <theIx>
        	:param theIndex:
        	:type theIndex: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_CommonBlock_IsPaveBlockOnFace(self, *args)


    def PaveBlock1(self, *args) -> "opencascade::handle< BOPDS_PaveBlock > const &":
        """
        * Selector Returns the first pave block of the common block
        	:rtype: opencascade::handle<BOPDS_PaveBlock>
        """
        return _BOPDS.BOPDS_CommonBlock_PaveBlock1(self, *args)


    def PaveBlockOnEdge(self, *args) -> "opencascade::handle< BOPDS_PaveBlock > &":
        """
        * Selector Returns the pave block that belongs to the edge with index <theIx>
        	:param theIndex:
        	:type theIndex: int
        	:rtype: opencascade::handle<BOPDS_PaveBlock>
        """
        return _BOPDS.BOPDS_CommonBlock_PaveBlockOnEdge(self, *args)


    def PaveBlocks(self, *args) -> "BOPDS_ListOfPaveBlock const &":
        """
        * Selector Returns the list of pave blocks of the common block
        	:rtype: BOPDS_ListOfPaveBlock
        """
        return _BOPDS.BOPDS_CommonBlock_PaveBlocks(self, *args)


    def SetEdge(self, *args) -> "void":
        """
        * Modifier Assign the index <theEdge> as the edge index to all pave blocks of the common block
        	:param theEdge:
        	:type theEdge: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_CommonBlock_SetEdge(self, *args)


    def SetFaces(self, *args) -> "void":
        """
        * Modifier Sets the list of indices of faces <aLF> of the common block
        	:param aLF:
        	:type aLF: TColStd_ListOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_CommonBlock_SetFaces(self, *args)


    def SetPaveBlocks(self, *args) -> "void":
        """
        * Modifier Sets the list of pave blocks for the common block
        	:param aLPB:
        	:type aLPB: BOPDS_ListOfPaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_CommonBlock_SetPaveBlocks(self, *args)


    def SetRealPaveBlock(self, *args) -> "void":
        """
        * Moves the pave blocks in the list to make the given pave block to be the first. It will be representative for the whole group.
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_CommonBlock_SetRealPaveBlock(self, *args)


    def SetTolerance(self, *args) -> "void":
        """
        * Sets the tolerance for the common block
        	:param theTol:
        	:type theTol: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_CommonBlock_SetTolerance(self, *args)


    def Tolerance(self, *args) -> "Standard_Real":
        """
        * Return the tolerance of common block
        	:rtype: float
        """
        return _BOPDS.BOPDS_CommonBlock_Tolerance(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BOPDS_CommonBlock_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_CommonBlock
BOPDS_CommonBlock.AddFace = new_instancemethod(_BOPDS.BOPDS_CommonBlock_AddFace, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.AddPaveBlock = new_instancemethod(_BOPDS.BOPDS_CommonBlock_AddPaveBlock, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.AppendFaces = new_instancemethod(_BOPDS.BOPDS_CommonBlock_AppendFaces, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.Contains = new_instancemethod(_BOPDS.BOPDS_CommonBlock_Contains, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.Dump = new_instancemethod(_BOPDS.BOPDS_CommonBlock_Dump, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.Edge = new_instancemethod(_BOPDS.BOPDS_CommonBlock_Edge, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.Faces = new_instancemethod(_BOPDS.BOPDS_CommonBlock_Faces, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.IsPaveBlockOnEdge = new_instancemethod(_BOPDS.BOPDS_CommonBlock_IsPaveBlockOnEdge, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.IsPaveBlockOnFace = new_instancemethod(_BOPDS.BOPDS_CommonBlock_IsPaveBlockOnFace, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.PaveBlock1 = new_instancemethod(_BOPDS.BOPDS_CommonBlock_PaveBlock1, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.PaveBlockOnEdge = new_instancemethod(_BOPDS.BOPDS_CommonBlock_PaveBlockOnEdge, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.PaveBlocks = new_instancemethod(_BOPDS.BOPDS_CommonBlock_PaveBlocks, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.SetEdge = new_instancemethod(_BOPDS.BOPDS_CommonBlock_SetEdge, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.SetFaces = new_instancemethod(_BOPDS.BOPDS_CommonBlock_SetFaces, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.SetPaveBlocks = new_instancemethod(_BOPDS.BOPDS_CommonBlock_SetPaveBlocks, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.SetRealPaveBlock = new_instancemethod(_BOPDS.BOPDS_CommonBlock_SetRealPaveBlock, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.SetTolerance = new_instancemethod(_BOPDS.BOPDS_CommonBlock_SetTolerance, None, BOPDS_CommonBlock)
BOPDS_CommonBlock.Tolerance = new_instancemethod(_BOPDS.BOPDS_CommonBlock_Tolerance, None, BOPDS_CommonBlock)
BOPDS_CommonBlock_swigregister = _BOPDS.BOPDS_CommonBlock_swigregister
BOPDS_CommonBlock_swigregister(BOPDS_CommonBlock)

class BOPDS_CoupleOfPaveBlocks(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param thePB1 * first pave block * @param thePB2 * secondt pave block */
        	:param thePB1:
        	:type thePB1: BOPDS_PaveBlock
        	:param thePB2:
        	:type thePB2: BOPDS_PaveBlock
        	:rtype: None
        """
        _BOPDS.BOPDS_CoupleOfPaveBlocks_swiginit(self, _BOPDS.new_BOPDS_CoupleOfPaveBlocks(*args))

    def Index(self, *args) -> "Standard_Integer":
        """
        * /** * Returns the index * returns * index */
        	:rtype: int
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_Index(self, *args)


    def IndexInterf(self, *args) -> "Standard_Integer":
        """
        * /** * Returns the index of an interference * returns * index of an interference */
        	:rtype: int
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_IndexInterf(self, *args)


    def PaveBlock1(self, *args) -> "opencascade::handle< BOPDS_PaveBlock > const &":
        """
        * /** * Returns the first pave block * returns * the first pave block */
        	:rtype: opencascade::handle<BOPDS_PaveBlock>
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_PaveBlock1(self, *args)


    def PaveBlock2(self, *args) -> "opencascade::handle< BOPDS_PaveBlock > const &":
        """
        * /** * Returns the second pave block * returns * the second pave block */
        	:rtype: opencascade::handle<BOPDS_PaveBlock>
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_PaveBlock2(self, *args)


    def PaveBlocks(self, *args) -> "void":
        """
        * /** * Returns pave blocks * @param thePB1 * the first pave block * @param thePB2 * the second pave block */
        	:param thePB1:
        	:type thePB1: BOPDS_PaveBlock
        	:param thePB2:
        	:type thePB2: BOPDS_PaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_PaveBlocks(self, *args)


    def SetIndex(self, *args) -> "void":
        """
        * /** * Sets an index * @param theIndex * index */
        	:param theIndex:
        	:type theIndex: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_SetIndex(self, *args)


    def SetIndexInterf(self, *args) -> "void":
        """
        * /** * Sets an index of an interference * @param theIndex * index of an interference */
        	:param theIndex:
        	:type theIndex: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_SetIndexInterf(self, *args)


    def SetPaveBlock1(self, *args) -> "void":
        """
        * /** * Sets the first pave block * @param thePB * the first pave block */
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_SetPaveBlock1(self, *args)


    def SetPaveBlock2(self, *args) -> "void":
        """
        * /** * Sets the second pave block * @param thePB * the second pave block */
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_SetPaveBlock2(self, *args)


    def SetPaveBlocks(self, *args) -> "void":
        """
        * /** * Sets pave blocks * @param thePB1 * first pave block * @param thePB2 * secondt pave block */
        	:param thePB1:
        	:type thePB1: BOPDS_PaveBlock
        	:param thePB2:
        	:type thePB2: BOPDS_PaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_SetPaveBlocks(self, *args)


    def SetTolerance(self, *args) -> "void":
        """
        * /** * Sets the tolerance associated with this couple */
        	:param theTol:
        	:type theTol: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_SetTolerance(self, *args)


    def Tolerance(self, *args) -> "Standard_Real":
        """
        * /** * Returns the tolerance associated with this couple */
        	:rtype: float
        """
        return _BOPDS.BOPDS_CoupleOfPaveBlocks_Tolerance(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_CoupleOfPaveBlocks
BOPDS_CoupleOfPaveBlocks.Index = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_Index, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.IndexInterf = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_IndexInterf, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.PaveBlock1 = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_PaveBlock1, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.PaveBlock2 = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_PaveBlock2, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.PaveBlocks = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_PaveBlocks, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.SetIndex = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_SetIndex, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.SetIndexInterf = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_SetIndexInterf, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.SetPaveBlock1 = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_SetPaveBlock1, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.SetPaveBlock2 = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_SetPaveBlock2, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.SetPaveBlocks = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_SetPaveBlocks, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.SetTolerance = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_SetTolerance, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks.Tolerance = new_instancemethod(_BOPDS.BOPDS_CoupleOfPaveBlocks_Tolerance, None, BOPDS_CoupleOfPaveBlocks)
BOPDS_CoupleOfPaveBlocks_swigregister = _BOPDS.BOPDS_CoupleOfPaveBlocks_swigregister
BOPDS_CoupleOfPaveBlocks_swigregister(BOPDS_CoupleOfPaveBlocks)

class BOPDS_Curve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        * Contructor <theAllocator> - the allocator to manage the memory
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_Curve_swiginit(self, _BOPDS.new_BOPDS_Curve(*args))

    def Box(self, *args) -> "Bnd_Box const &":
        """
        * Selector Returns the bounding box of the curve
        	:rtype: Bnd_Box
        """
        return _BOPDS.BOPDS_Curve_Box(self, *args)


    def ChangeBox(self, *args) -> "Bnd_Box &":
        """
        * Selector/Modifier Returns the bounding box of the curve
        	:rtype: Bnd_Box
        """
        return _BOPDS.BOPDS_Curve_ChangeBox(self, *args)


    def ChangePaveBlock1(self, *args) -> "opencascade::handle< BOPDS_PaveBlock > &":
        """
        * Selector/Modifier Returns initial pave block of the curve
        	:rtype: opencascade::handle<BOPDS_PaveBlock>
        """
        return _BOPDS.BOPDS_Curve_ChangePaveBlock1(self, *args)


    def ChangePaveBlocks(self, *args) -> "BOPDS_ListOfPaveBlock &":
        """
        * Selector/Modifier Returns the list of pave blocks of the curve
        	:rtype: BOPDS_ListOfPaveBlock
        """
        return _BOPDS.BOPDS_Curve_ChangePaveBlocks(self, *args)


    def ChangeTechnoVertices(self, *args) -> "TColStd_ListOfInteger &":
        """
        * Selector/Modifier Returns list of indices of technologic vertices of the curve
        	:rtype: TColStd_ListOfInteger
        """
        return _BOPDS.BOPDS_Curve_ChangeTechnoVertices(self, *args)


    def Curve(self, *args) -> "IntTools_Curve const &":
        """
        * Selector Returns the curve
        	:rtype: IntTools_Curve
        """
        return _BOPDS.BOPDS_Curve_Curve(self, *args)


    def HasEdge(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if at least one pave block of the curve has edge
        	:rtype: bool
        """
        return _BOPDS.BOPDS_Curve_HasEdge(self, *args)


    def InitPaveBlock1(self, *args) -> "void":
        """
        * Creates initial pave block of the curve
        	:rtype: None
        """
        return _BOPDS.BOPDS_Curve_InitPaveBlock1(self, *args)


    def PaveBlocks(self, *args) -> "BOPDS_ListOfPaveBlock const &":
        """
        * Selector Returns the list of pave blocks of the curve
        	:rtype: BOPDS_ListOfPaveBlock
        """
        return _BOPDS.BOPDS_Curve_PaveBlocks(self, *args)


    def SetBox(self, *args) -> "void":
        """
        * Modifier Sets the bounding box <theBox> of the curve
        	:param theBox:
        	:type theBox: Bnd_Box
        	:rtype: None
        """
        return _BOPDS.BOPDS_Curve_SetBox(self, *args)


    def SetCurve(self, *args) -> "void":
        """
        * Modifier Sets the curve <theC>
        	:param theC:
        	:type theC: IntTools_Curve
        	:rtype: None
        """
        return _BOPDS.BOPDS_Curve_SetCurve(self, *args)


    def SetPaveBlocks(self, *args) -> "void":
        """
        :param theLPB:
        	:type theLPB: BOPDS_ListOfPaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_Curve_SetPaveBlocks(self, *args)


    def SetTolerance(self, *args) -> "void":
        """
        * Sets the tolerance for the curve.
        	:param theTol:
        	:type theTol: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_Curve_SetTolerance(self, *args)


    def TangentialTolerance(self, *args) -> "Standard_Real":
        """
        * Returns the tangential tolerance of the curve
        	:rtype: float
        """
        return _BOPDS.BOPDS_Curve_TangentialTolerance(self, *args)


    def TechnoVertices(self, *args) -> "TColStd_ListOfInteger const &":
        """
        * Selector Returns list of indices of technologic vertices of the curve
        	:rtype: TColStd_ListOfInteger
        """
        return _BOPDS.BOPDS_Curve_TechnoVertices(self, *args)


    def Tolerance(self, *args) -> "Standard_Real":
        """
        * Returns the tolerance of the curve
        	:rtype: float
        """
        return _BOPDS.BOPDS_Curve_Tolerance(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_Curve
BOPDS_Curve.Box = new_instancemethod(_BOPDS.BOPDS_Curve_Box, None, BOPDS_Curve)
BOPDS_Curve.ChangeBox = new_instancemethod(_BOPDS.BOPDS_Curve_ChangeBox, None, BOPDS_Curve)
BOPDS_Curve.ChangePaveBlock1 = new_instancemethod(_BOPDS.BOPDS_Curve_ChangePaveBlock1, None, BOPDS_Curve)
BOPDS_Curve.ChangePaveBlocks = new_instancemethod(_BOPDS.BOPDS_Curve_ChangePaveBlocks, None, BOPDS_Curve)
BOPDS_Curve.ChangeTechnoVertices = new_instancemethod(_BOPDS.BOPDS_Curve_ChangeTechnoVertices, None, BOPDS_Curve)
BOPDS_Curve.Curve = new_instancemethod(_BOPDS.BOPDS_Curve_Curve, None, BOPDS_Curve)
BOPDS_Curve.HasEdge = new_instancemethod(_BOPDS.BOPDS_Curve_HasEdge, None, BOPDS_Curve)
BOPDS_Curve.InitPaveBlock1 = new_instancemethod(_BOPDS.BOPDS_Curve_InitPaveBlock1, None, BOPDS_Curve)
BOPDS_Curve.PaveBlocks = new_instancemethod(_BOPDS.BOPDS_Curve_PaveBlocks, None, BOPDS_Curve)
BOPDS_Curve.SetBox = new_instancemethod(_BOPDS.BOPDS_Curve_SetBox, None, BOPDS_Curve)
BOPDS_Curve.SetCurve = new_instancemethod(_BOPDS.BOPDS_Curve_SetCurve, None, BOPDS_Curve)
BOPDS_Curve.SetPaveBlocks = new_instancemethod(_BOPDS.BOPDS_Curve_SetPaveBlocks, None, BOPDS_Curve)
BOPDS_Curve.SetTolerance = new_instancemethod(_BOPDS.BOPDS_Curve_SetTolerance, None, BOPDS_Curve)
BOPDS_Curve.TangentialTolerance = new_instancemethod(_BOPDS.BOPDS_Curve_TangentialTolerance, None, BOPDS_Curve)
BOPDS_Curve.TechnoVertices = new_instancemethod(_BOPDS.BOPDS_Curve_TechnoVertices, None, BOPDS_Curve)
BOPDS_Curve.Tolerance = new_instancemethod(_BOPDS.BOPDS_Curve_Tolerance, None, BOPDS_Curve)
BOPDS_Curve_swigregister = _BOPDS.BOPDS_Curve_swigregister
BOPDS_Curve_swigregister(BOPDS_Curve)

class BOPDS_DS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddInterf(self, *args) -> "Standard_Boolean":
        """
        * Modifier Adds the information about an interference between shapes with indices theI1, theI2 to the summary table of interferences
        	:param theI1:
        	:type theI1: int
        	:param theI2:
        	:type theI2: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_AddInterf(self, *args)


    def AddShapeSD(self, *args) -> "void":
        """
        * Modifier Adds the information about same domain shapes with indices theIndex, theIndexSD
        	:param theIndex:
        	:type theIndex: int
        	:param theIndexSD:
        	:type theIndexSD: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_AddShapeSD(self, *args)


    def Allocator(self, *args) -> "opencascade::handle< NCollection_BaseAllocator > const &":
        """
        * Selector
        	:rtype: opencascade::handle<NCollection_BaseAllocator>
        """
        return _BOPDS.BOPDS_DS_Allocator(self, *args)


    def AloneVertices(self, *args) -> "void":
        """
        * Selector Returns the indices of alone vertices for the face with index theIndex
        	:param theF:
        	:type theF: int
        	:param theLI:
        	:type theLI: TColStd_ListOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_AloneVertices(self, *args)


    def Append(self, *args) -> "Standard_Integer":
        """
        * Modifier Appends the information about the shape [theSI] to the data structure Returns the index of theSI in the data structure
        	:param theSI:
        	:type theSI: BOPDS_ShapeInfo
        	:rtype: int
        * Modifier Appends the default information about the shape [theS] to the data structure Returns the index of theS in the data structure
        	:param theS:
        	:type theS: TopoDS_Shape
        	:rtype: int
        """
        return _BOPDS.BOPDS_DS_Append(self, *args)


    def Arguments(self, *args) -> "TopTools_ListOfShape const &":
        """
        * Selector Returns the arguments of an operation
        	:rtype: TopTools_ListOfShape
        """
        return _BOPDS.BOPDS_DS_Arguments(self, *args)


    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        * Contructor theAllocator - the allocator to manage the memory
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_DS_swiginit(self, _BOPDS.new_BOPDS_DS(*args))

    def BuildBndBoxSolid(self, *args) -> "void":
        """
        * Computes bounding box <theBox> for the solid with DS-index <theIndex>. The flag <theCheckInverted> enables/disables the check of the solid for inverted status. By default the solids will be checked.
        	:param theIndex:
        	:type theIndex: int
        	:param theBox:
        	:type theBox: Bnd_Box
        	:param theCheckInverted: default value is Standard_True
        	:type theCheckInverted: bool
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_BuildBndBoxSolid(self, *args)


    def ChangeFaceInfo(self, *args) -> "BOPDS_FaceInfo &":
        """
        * Selector/Modifier Returns the state of face with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:rtype: BOPDS_FaceInfo
        """
        return _BOPDS.BOPDS_DS_ChangeFaceInfo(self, *args)


    def ChangePaveBlocks(self, *args) -> "BOPDS_ListOfPaveBlock &":
        """
        * Selector/Modifier Returns the pave blocks for the shape with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:rtype: BOPDS_ListOfPaveBlock
        """
        return _BOPDS.BOPDS_DS_ChangePaveBlocks(self, *args)


    def ChangePaveBlocksPool(self, *args) -> "BOPDS_VectorOfListOfPaveBlock &":
        """
        * Selector/Modifier Returns the information about pave blocks on source edges
        	:rtype: BOPDS_VectorOfListOfPaveBlock
        """
        return _BOPDS.BOPDS_DS_ChangePaveBlocksPool(self, *args)


    def ChangeShapeInfo(self, *args) -> "BOPDS_ShapeInfo &":
        """
        * Selector/Modifier Returns the information about the shape with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:rtype: BOPDS_ShapeInfo
        """
        return _BOPDS.BOPDS_DS_ChangeShapeInfo(self, *args)


    def Clear(self, *args) -> "void":
        """
        * Clears the contents
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_Clear(self, *args)


    def CommonBlock(self, *args) -> "opencascade::handle< BOPDS_CommonBlock >":
        """
        * Selector Returns the common block
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: opencascade::handle<BOPDS_CommonBlock>
        """
        return _BOPDS.BOPDS_DS_CommonBlock(self, *args)


    def Dump(self, *args) -> "void":
        """:rtype: None"""
        return _BOPDS.BOPDS_DS_Dump(self, *args)


    def FaceInfo(self, *args) -> "BOPDS_FaceInfo const &":
        """
        * Selector Returns the state of face with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:rtype: BOPDS_FaceInfo
        """
        return _BOPDS.BOPDS_DS_FaceInfo(self, *args)


    def FaceInfoIn(self, *args) -> "void":
        """
        * Selector Returns the state In [theMPB,theMVP] of face with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:param theMPB:
        	:type theMPB: BOPDS_IndexedMapOfPaveBlock
        	:param theMVP:
        	:type theMVP: TColStd_MapOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_FaceInfoIn(self, *args)


    def FaceInfoOn(self, *args) -> "void":
        """
        * Selector Returns the state On [theMPB,theMVP] of face with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:param theMPB:
        	:type theMPB: BOPDS_IndexedMapOfPaveBlock
        	:param theMVP:
        	:type theMVP: TColStd_MapOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_FaceInfoOn(self, *args)


    def FaceInfoPool(self, *args) -> "BOPDS_VectorOfFaceInfo const &":
        """
        * Selector Returns the information about state of faces
        	:rtype: BOPDS_VectorOfFaceInfo
        """
        return _BOPDS.BOPDS_DS_FaceInfoPool(self, *args)


    def HasFaceInfo(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the shape with index theIndex has the information about state of face
        	:param theIndex:
        	:type theIndex: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_HasFaceInfo(self, *args)


    def HasInterf(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the shape with index theI is interferred
        	:param theI:
        	:type theI: int
        	:rtype: bool
        * Query Returns true if the shapes with indices theI1, theI2 are interferred
        	:param theI1:
        	:type theI1: int
        	:param theI2:
        	:type theI2: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_HasInterf(self, *args)


    def HasInterfShapeSubShapes(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the shape with index theI1 is interfered with any sub-shape of the shape with index theI2 (theFlag=true) all sub-shapes of the shape with index theI2 (theFlag=false)
        	:param theI1:
        	:type theI1: int
        	:param theI2:
        	:type theI2: int
        	:param theFlag: default value is Standard_True
        	:type theFlag: bool
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_HasInterfShapeSubShapes(self, *args)


    def HasInterfSubShapes(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the shapes with indices theI1, theI2 have interferred sub-shapes
        	:param theI1:
        	:type theI1: int
        	:param theI2:
        	:type theI2: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_HasInterfSubShapes(self, *args)


    def HasPaveBlocks(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the shape with index theIndex has the information about pave blocks
        	:param theIndex:
        	:type theIndex: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_HasPaveBlocks(self, *args)


    def HasShapeSD(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the shape with index theIndex has the same domain shape. In this case theIndexSD will contain the index of same domain shape found //! interferences
        	:param theIndex:
        	:type theIndex: int
        	:param theIndexSD:
        	:type theIndexSD: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_HasShapeSD(self, *args)


    def Index(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the index of the shape theS
        	:param theS:
        	:type theS: TopoDS_Shape
        	:rtype: int
        """
        return _BOPDS.BOPDS_DS_Index(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initializes the data structure for the arguments
        	:param theFuzz: default value is Precision::Confusion()
        	:type theFuzz: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_Init(self, *args)


    def InitPaveBlocksForVertex(self, *args) -> "void":
        """
        :param theNV:
        	:type theNV: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_InitPaveBlocksForVertex(self, *args)


    def InterfEE(self, *args) -> "BOPDS_VectorOfInterfEE &":
        """
        * Selector/Modifier Returns the collection of interferences Edge/Edge
        	:rtype: BOPDS_VectorOfInterfEE
        """
        return _BOPDS.BOPDS_DS_InterfEE(self, *args)


    def InterfEF(self, *args) -> "BOPDS_VectorOfInterfEF &":
        """
        * Selector/Modifier Returns the collection of interferences Edge/Face
        	:rtype: BOPDS_VectorOfInterfEF
        """
        return _BOPDS.BOPDS_DS_InterfEF(self, *args)


    def InterfEZ(self, *args) -> "BOPDS_VectorOfInterfEZ &":
        """
        * Selector/Modifier Returns the collection of interferences Edge/Solid
        	:rtype: BOPDS_VectorOfInterfEZ
        """
        return _BOPDS.BOPDS_DS_InterfEZ(self, *args)


    def InterfFF(self, *args) -> "BOPDS_VectorOfInterfFF &":
        """
        * Selector/Modifier Returns the collection of interferences Face/Face
        	:rtype: BOPDS_VectorOfInterfFF
        """
        return _BOPDS.BOPDS_DS_InterfFF(self, *args)


    def InterfFZ(self, *args) -> "BOPDS_VectorOfInterfFZ &":
        """
        * Selector/Modifier Returns the collection of interferences Face/Solid
        	:rtype: BOPDS_VectorOfInterfFZ
        """
        return _BOPDS.BOPDS_DS_InterfFZ(self, *args)


    def InterfVE(self, *args) -> "BOPDS_VectorOfInterfVE &":
        """
        * Selector/Modifier Returns the collection of interferences Vertex/Edge
        	:rtype: BOPDS_VectorOfInterfVE
        """
        return _BOPDS.BOPDS_DS_InterfVE(self, *args)


    def InterfVF(self, *args) -> "BOPDS_VectorOfInterfVF &":
        """
        * Selector/Modifier Returns the collection of interferences Vertex/Face
        	:rtype: BOPDS_VectorOfInterfVF
        """
        return _BOPDS.BOPDS_DS_InterfVF(self, *args)


    def InterfVV(self, *args) -> "BOPDS_VectorOfInterfVV &":
        """
        * Selector/Modifier Returns the collection of interferences Vertex/Vertex
        	:rtype: BOPDS_VectorOfInterfVV
        """
        return _BOPDS.BOPDS_DS_InterfVV(self, *args)


    def InterfVZ(self, *args) -> "BOPDS_VectorOfInterfVZ &":
        """
        * Selector/Modifier Returns the collection of interferences Vertex/Solid
        	:rtype: BOPDS_VectorOfInterfVZ
        """
        return _BOPDS.BOPDS_DS_InterfVZ(self, *args)


    def InterfZZ(self, *args) -> "BOPDS_VectorOfInterfZZ &":
        """
        * Selector/Modifier Returns the collection of interferences Solid/Solid
        	:rtype: BOPDS_VectorOfInterfZZ
        """
        return _BOPDS.BOPDS_DS_InterfZZ(self, *args)


    def Interferences(self, *args) -> "BOPDS_MapOfPair const &":
        """
        * Selector Returns the table of interferences //! debug
        	:rtype: BOPDS_MapOfPair
        """
        return _BOPDS.BOPDS_DS_Interferences(self, *args)


    def IsCommonBlock(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the pave block is common block
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_IsCommonBlock(self, *args)


    def IsCommonBlockOnEdge(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if common block contains more then one pave block
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_IsCommonBlockOnEdge(self, *args)


    def IsNewShape(self, *args) -> "Standard_Boolean":
        """
        * Returns true if the shape of index 'i' is not the source shape/sub-shape
        	:param theIndex:
        	:type theIndex: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_IsNewShape(self, *args)


    def IsSubShape(self, *args) -> "Standard_Boolean":
        """
        :param theI1:
        	:type theI1: int
        	:param theI2:
        	:type theI2: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_IsSubShape(self, *args)


    def IsValidShrunkData(self, *args) -> "Standard_Boolean":
        """
        * Checks if the existing shrunk data of the pave block is still valid. The shrunk data may become invalid if e.g. the vertices of the pave block have been replaced with the new one with bigger tolerances, or the tolerances of the existing vertices have been increased.
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: bool
        """
        return _BOPDS.BOPDS_DS_IsValidShrunkData(self, *args)


    def NbInterfTypes(*args) -> "Standard_Integer":
        """
        * Returns the number of types of the interferences
        	:rtype: int
        """
        return _BOPDS.BOPDS_DS_NbInterfTypes(*args)

    NbInterfTypes = staticmethod(NbInterfTypes)

    def NbRanges(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the number of index ranges
        	:rtype: int
        """
        return _BOPDS.BOPDS_DS_NbRanges(self, *args)


    def NbShapes(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the total number of shapes stored
        	:rtype: int
        """
        return _BOPDS.BOPDS_DS_NbShapes(self, *args)


    def NbSourceShapes(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the total number of source shapes stored
        	:rtype: int
        """
        return _BOPDS.BOPDS_DS_NbSourceShapes(self, *args)


    def PaveBlocks(self, *args) -> "BOPDS_ListOfPaveBlock const &":
        """
        * Selector Returns the pave blocks for the shape with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:rtype: BOPDS_ListOfPaveBlock
        """
        return _BOPDS.BOPDS_DS_PaveBlocks(self, *args)


    def PaveBlocksPool(self, *args) -> "BOPDS_VectorOfListOfPaveBlock const &":
        """
        * Selector Returns the information about pave blocks on source edges
        	:rtype: BOPDS_VectorOfListOfPaveBlock
        """
        return _BOPDS.BOPDS_DS_PaveBlocksPool(self, *args)


    def Paves(self, *args) -> "void":
        """
        * Fills theLP with sorted paves of the shape with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:param theLP:
        	:type theLP: BOPDS_ListOfPave
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_Paves(self, *args)


    def Range(self, *args) -> "BOPDS_IndexRange const &":
        """
        * Selector Returns the index range 'i'
        	:param theIndex:
        	:type theIndex: int
        	:rtype: BOPDS_IndexRange
        """
        return _BOPDS.BOPDS_DS_Range(self, *args)


    def Rank(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the rank of the shape of index 'i'
        	:param theIndex:
        	:type theIndex: int
        	:rtype: int
        """
        return _BOPDS.BOPDS_DS_Rank(self, *args)


    def RealPaveBlock(self, *args) -> "opencascade::handle< BOPDS_PaveBlock >":
        """
        * Selector Returns the real first pave block
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: opencascade::handle<BOPDS_PaveBlock>
        """
        return _BOPDS.BOPDS_DS_RealPaveBlock(self, *args)


    def RefineFaceInfoIn(self, *args) -> "void":
        """
        * Removes any pave block from list of having IN state if it has also the state ON.
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_RefineFaceInfoIn(self, *args)


    def RefineFaceInfoOn(self, *args) -> "void":
        """
        * Refine the state On for the all faces having state information //! ++
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_RefineFaceInfoOn(self, *args)


    def ReleasePaveBlocks(self, *args) -> "void":
        """
        * Clears information about PaveBlocks for the untouched edges
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_ReleasePaveBlocks(self, *args)


    def SetArguments(self, *args) -> "void":
        """
        * Modifier Sets the arguments [theLS] of an operation
        	:param theLS:
        	:type theLS: TopTools_ListOfShape
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_SetArguments(self, *args)


    def SetCommonBlock(self, *args) -> "void":
        """
        * Modifier Sets the common block <theCB>
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:param theCB:
        	:type theCB: BOPDS_CommonBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_SetCommonBlock(self, *args)


    def Shape(self, *args) -> "TopoDS_Shape const":
        """
        * Selector Returns the shape with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:rtype: TopoDS_Shape
        """
        return _BOPDS.BOPDS_DS_Shape(self, *args)


    def ShapeInfo(self, *args) -> "BOPDS_ShapeInfo const &":
        """
        * Selector Returns the information about the shape with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:rtype: BOPDS_ShapeInfo
        """
        return _BOPDS.BOPDS_DS_ShapeInfo(self, *args)


    def ShapesSD(self, *args) -> "TColStd_DataMapOfIntegerInteger &":
        """
        * Selector Returns the collection same domain shapes
        	:rtype: TColStd_DataMapOfIntegerInteger
        """
        return _BOPDS.BOPDS_DS_ShapesSD(self, *args)


    def SharedEdges(self, *args) -> "void":
        """
        * Returns the indices of edges that are shared for the faces with indices theF1, theF2 //! same domain shapes
        	:param theF1:
        	:type theF1: int
        	:param theF2:
        	:type theF2: int
        	:param theLI:
        	:type theLI: TColStd_ListOfInteger
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_SharedEdges(self, *args)


    def SubShapesOnIn(self, *args) -> "void":
        """
        * Returns information about ON/IN sub-shapes of the given faces. @param theMVOnIn the indices of ON/IN vertices from both faces @param theMVCommon the indices of common vertices for both faces @param thePBOnIn all On/In pave blocks from both faces @param theCommonPB the common pave blocks (that are shared by both faces).
        	:param theNF1:
        	:type theNF1: int
        	:param theNF2:
        	:type theNF2: int
        	:param theMVOnIn:
        	:type theMVOnIn: TColStd_MapOfInteger
        	:param theMVCommon:
        	:type theMVCommon: TColStd_MapOfInteger
        	:param thePBOnIn:
        	:type thePBOnIn: BOPDS_IndexedMapOfPaveBlock
        	:param theCommonPB:
        	:type theCommonPB: BOPDS_MapOfPaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_SubShapesOnIn(self, *args)


    def UpdateCommonBlock(self, *args) -> "void":
        """
        * Update the common block theCB
        	:param theCB:
        	:type theCB: BOPDS_CommonBlock
        	:param theFuzz:
        	:type theFuzz: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_UpdateCommonBlock(self, *args)


    def UpdateCommonBlockWithSDVertices(self, *args) -> "void":
        """
        * Update the pave block of the common block for all shapes in data structure
        	:param theCB:
        	:type theCB: BOPDS_CommonBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_UpdateCommonBlockWithSDVertices(self, *args)


    def UpdateFaceInfoIn(self, *args) -> "void":
        """
        * Update the state In of face with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:rtype: None
        * Update the state IN for all faces in the given map
        	:param theFaces:
        	:type theFaces: TColStd_MapOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_UpdateFaceInfoIn(self, *args)


    def UpdateFaceInfoOn(self, *args) -> "void":
        """
        * Update the state On of face with index theIndex
        	:param theIndex:
        	:type theIndex: int
        	:rtype: None
        * Update the state ON for all faces in the given map
        	:param theFaces:
        	:type theFaces: TColStd_MapOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_UpdateFaceInfoOn(self, *args)


    def UpdatePaveBlock(self, *args) -> "void":
        """
        * Update the pave block thePB
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_UpdatePaveBlock(self, *args)


    def UpdatePaveBlockWithSDVertices(self, *args) -> "void":
        """
        * Update the pave block for all shapes in data structure
        	:param thePB:
        	:type thePB: BOPDS_PaveBlock
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_UpdatePaveBlockWithSDVertices(self, *args)


    def UpdatePaveBlocks(self, *args) -> "void":
        """
        * Update the pave blocks for the all shapes in data structure
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_UpdatePaveBlocks(self, *args)


    def UpdatePaveBlocksWithSDVertices(self, *args) -> "void":
        """
        * Update the pave blocks for all shapes in data structure
        	:rtype: None
        """
        return _BOPDS.BOPDS_DS_UpdatePaveBlocksWithSDVertices(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_DS
BOPDS_DS.AddInterf = new_instancemethod(_BOPDS.BOPDS_DS_AddInterf, None, BOPDS_DS)
BOPDS_DS.AddShapeSD = new_instancemethod(_BOPDS.BOPDS_DS_AddShapeSD, None, BOPDS_DS)
BOPDS_DS.Allocator = new_instancemethod(_BOPDS.BOPDS_DS_Allocator, None, BOPDS_DS)
BOPDS_DS.AloneVertices = new_instancemethod(_BOPDS.BOPDS_DS_AloneVertices, None, BOPDS_DS)
BOPDS_DS.Append = new_instancemethod(_BOPDS.BOPDS_DS_Append, None, BOPDS_DS)
BOPDS_DS.Arguments = new_instancemethod(_BOPDS.BOPDS_DS_Arguments, None, BOPDS_DS)
BOPDS_DS.BuildBndBoxSolid = new_instancemethod(_BOPDS.BOPDS_DS_BuildBndBoxSolid, None, BOPDS_DS)
BOPDS_DS.ChangeFaceInfo = new_instancemethod(_BOPDS.BOPDS_DS_ChangeFaceInfo, None, BOPDS_DS)
BOPDS_DS.ChangePaveBlocks = new_instancemethod(_BOPDS.BOPDS_DS_ChangePaveBlocks, None, BOPDS_DS)
BOPDS_DS.ChangePaveBlocksPool = new_instancemethod(_BOPDS.BOPDS_DS_ChangePaveBlocksPool, None, BOPDS_DS)
BOPDS_DS.ChangeShapeInfo = new_instancemethod(_BOPDS.BOPDS_DS_ChangeShapeInfo, None, BOPDS_DS)
BOPDS_DS.Clear = new_instancemethod(_BOPDS.BOPDS_DS_Clear, None, BOPDS_DS)
BOPDS_DS.CommonBlock = new_instancemethod(_BOPDS.BOPDS_DS_CommonBlock, None, BOPDS_DS)
BOPDS_DS.Dump = new_instancemethod(_BOPDS.BOPDS_DS_Dump, None, BOPDS_DS)
BOPDS_DS.FaceInfo = new_instancemethod(_BOPDS.BOPDS_DS_FaceInfo, None, BOPDS_DS)
BOPDS_DS.FaceInfoIn = new_instancemethod(_BOPDS.BOPDS_DS_FaceInfoIn, None, BOPDS_DS)
BOPDS_DS.FaceInfoOn = new_instancemethod(_BOPDS.BOPDS_DS_FaceInfoOn, None, BOPDS_DS)
BOPDS_DS.FaceInfoPool = new_instancemethod(_BOPDS.BOPDS_DS_FaceInfoPool, None, BOPDS_DS)
BOPDS_DS.HasFaceInfo = new_instancemethod(_BOPDS.BOPDS_DS_HasFaceInfo, None, BOPDS_DS)
BOPDS_DS.HasInterf = new_instancemethod(_BOPDS.BOPDS_DS_HasInterf, None, BOPDS_DS)
BOPDS_DS.HasInterfShapeSubShapes = new_instancemethod(_BOPDS.BOPDS_DS_HasInterfShapeSubShapes, None, BOPDS_DS)
BOPDS_DS.HasInterfSubShapes = new_instancemethod(_BOPDS.BOPDS_DS_HasInterfSubShapes, None, BOPDS_DS)
BOPDS_DS.HasPaveBlocks = new_instancemethod(_BOPDS.BOPDS_DS_HasPaveBlocks, None, BOPDS_DS)
BOPDS_DS.HasShapeSD = new_instancemethod(_BOPDS.BOPDS_DS_HasShapeSD, None, BOPDS_DS)
BOPDS_DS.Index = new_instancemethod(_BOPDS.BOPDS_DS_Index, None, BOPDS_DS)
BOPDS_DS.Init = new_instancemethod(_BOPDS.BOPDS_DS_Init, None, BOPDS_DS)
BOPDS_DS.InitPaveBlocksForVertex = new_instancemethod(_BOPDS.BOPDS_DS_InitPaveBlocksForVertex, None, BOPDS_DS)
BOPDS_DS.InterfEE = new_instancemethod(_BOPDS.BOPDS_DS_InterfEE, None, BOPDS_DS)
BOPDS_DS.InterfEF = new_instancemethod(_BOPDS.BOPDS_DS_InterfEF, None, BOPDS_DS)
BOPDS_DS.InterfEZ = new_instancemethod(_BOPDS.BOPDS_DS_InterfEZ, None, BOPDS_DS)
BOPDS_DS.InterfFF = new_instancemethod(_BOPDS.BOPDS_DS_InterfFF, None, BOPDS_DS)
BOPDS_DS.InterfFZ = new_instancemethod(_BOPDS.BOPDS_DS_InterfFZ, None, BOPDS_DS)
BOPDS_DS.InterfVE = new_instancemethod(_BOPDS.BOPDS_DS_InterfVE, None, BOPDS_DS)
BOPDS_DS.InterfVF = new_instancemethod(_BOPDS.BOPDS_DS_InterfVF, None, BOPDS_DS)
BOPDS_DS.InterfVV = new_instancemethod(_BOPDS.BOPDS_DS_InterfVV, None, BOPDS_DS)
BOPDS_DS.InterfVZ = new_instancemethod(_BOPDS.BOPDS_DS_InterfVZ, None, BOPDS_DS)
BOPDS_DS.InterfZZ = new_instancemethod(_BOPDS.BOPDS_DS_InterfZZ, None, BOPDS_DS)
BOPDS_DS.Interferences = new_instancemethod(_BOPDS.BOPDS_DS_Interferences, None, BOPDS_DS)
BOPDS_DS.IsCommonBlock = new_instancemethod(_BOPDS.BOPDS_DS_IsCommonBlock, None, BOPDS_DS)
BOPDS_DS.IsCommonBlockOnEdge = new_instancemethod(_BOPDS.BOPDS_DS_IsCommonBlockOnEdge, None, BOPDS_DS)
BOPDS_DS.IsNewShape = new_instancemethod(_BOPDS.BOPDS_DS_IsNewShape, None, BOPDS_DS)
BOPDS_DS.IsSubShape = new_instancemethod(_BOPDS.BOPDS_DS_IsSubShape, None, BOPDS_DS)
BOPDS_DS.IsValidShrunkData = new_instancemethod(_BOPDS.BOPDS_DS_IsValidShrunkData, None, BOPDS_DS)
BOPDS_DS.NbRanges = new_instancemethod(_BOPDS.BOPDS_DS_NbRanges, None, BOPDS_DS)
BOPDS_DS.NbShapes = new_instancemethod(_BOPDS.BOPDS_DS_NbShapes, None, BOPDS_DS)
BOPDS_DS.NbSourceShapes = new_instancemethod(_BOPDS.BOPDS_DS_NbSourceShapes, None, BOPDS_DS)
BOPDS_DS.PaveBlocks = new_instancemethod(_BOPDS.BOPDS_DS_PaveBlocks, None, BOPDS_DS)
BOPDS_DS.PaveBlocksPool = new_instancemethod(_BOPDS.BOPDS_DS_PaveBlocksPool, None, BOPDS_DS)
BOPDS_DS.Paves = new_instancemethod(_BOPDS.BOPDS_DS_Paves, None, BOPDS_DS)
BOPDS_DS.Range = new_instancemethod(_BOPDS.BOPDS_DS_Range, None, BOPDS_DS)
BOPDS_DS.Rank = new_instancemethod(_BOPDS.BOPDS_DS_Rank, None, BOPDS_DS)
BOPDS_DS.RealPaveBlock = new_instancemethod(_BOPDS.BOPDS_DS_RealPaveBlock, None, BOPDS_DS)
BOPDS_DS.RefineFaceInfoIn = new_instancemethod(_BOPDS.BOPDS_DS_RefineFaceInfoIn, None, BOPDS_DS)
BOPDS_DS.RefineFaceInfoOn = new_instancemethod(_BOPDS.BOPDS_DS_RefineFaceInfoOn, None, BOPDS_DS)
BOPDS_DS.ReleasePaveBlocks = new_instancemethod(_BOPDS.BOPDS_DS_ReleasePaveBlocks, None, BOPDS_DS)
BOPDS_DS.SetArguments = new_instancemethod(_BOPDS.BOPDS_DS_SetArguments, None, BOPDS_DS)
BOPDS_DS.SetCommonBlock = new_instancemethod(_BOPDS.BOPDS_DS_SetCommonBlock, None, BOPDS_DS)
BOPDS_DS.Shape = new_instancemethod(_BOPDS.BOPDS_DS_Shape, None, BOPDS_DS)
BOPDS_DS.ShapeInfo = new_instancemethod(_BOPDS.BOPDS_DS_ShapeInfo, None, BOPDS_DS)
BOPDS_DS.ShapesSD = new_instancemethod(_BOPDS.BOPDS_DS_ShapesSD, None, BOPDS_DS)
BOPDS_DS.SharedEdges = new_instancemethod(_BOPDS.BOPDS_DS_SharedEdges, None, BOPDS_DS)
BOPDS_DS.SubShapesOnIn = new_instancemethod(_BOPDS.BOPDS_DS_SubShapesOnIn, None, BOPDS_DS)
BOPDS_DS.UpdateCommonBlock = new_instancemethod(_BOPDS.BOPDS_DS_UpdateCommonBlock, None, BOPDS_DS)
BOPDS_DS.UpdateCommonBlockWithSDVertices = new_instancemethod(_BOPDS.BOPDS_DS_UpdateCommonBlockWithSDVertices, None, BOPDS_DS)
BOPDS_DS.UpdateFaceInfoIn = new_instancemethod(_BOPDS.BOPDS_DS_UpdateFaceInfoIn, None, BOPDS_DS)
BOPDS_DS.UpdateFaceInfoOn = new_instancemethod(_BOPDS.BOPDS_DS_UpdateFaceInfoOn, None, BOPDS_DS)
BOPDS_DS.UpdatePaveBlock = new_instancemethod(_BOPDS.BOPDS_DS_UpdatePaveBlock, None, BOPDS_DS)
BOPDS_DS.UpdatePaveBlockWithSDVertices = new_instancemethod(_BOPDS.BOPDS_DS_UpdatePaveBlockWithSDVertices, None, BOPDS_DS)
BOPDS_DS.UpdatePaveBlocks = new_instancemethod(_BOPDS.BOPDS_DS_UpdatePaveBlocks, None, BOPDS_DS)
BOPDS_DS.UpdatePaveBlocksWithSDVertices = new_instancemethod(_BOPDS.BOPDS_DS_UpdatePaveBlocksWithSDVertices, None, BOPDS_DS)
BOPDS_DS_swigregister = _BOPDS.BOPDS_DS_swigregister
BOPDS_DS_swigregister(BOPDS_DS)

def BOPDS_DS_NbInterfTypes(*args) -> "Standard_Integer":
    """
    * Returns the number of types of the interferences
    	:rtype: int
    """
    return _BOPDS.BOPDS_DS_NbInterfTypes(*args)

class BOPDS_FaceInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        * Contructor theAllocator - the allocator to manage the memory
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_FaceInfo_swiginit(self, _BOPDS.new_BOPDS_FaceInfo(*args))

    def ChangePaveBlocksIn(self, *args) -> "BOPDS_IndexedMapOfPaveBlock &":
        """
        * Selector/Modifier Returns the pave blocks of the face that have state In
        	:rtype: BOPDS_IndexedMapOfPaveBlock
        """
        return _BOPDS.BOPDS_FaceInfo_ChangePaveBlocksIn(self, *args)


    def ChangePaveBlocksOn(self, *args) -> "BOPDS_IndexedMapOfPaveBlock &":
        """
        * Selector/Modifier Returns the pave blocks of the face that have state On
        	:rtype: BOPDS_IndexedMapOfPaveBlock
        """
        return _BOPDS.BOPDS_FaceInfo_ChangePaveBlocksOn(self, *args)


    def ChangePaveBlocksSc(self, *args) -> "BOPDS_IndexedMapOfPaveBlock &":
        """:rtype: BOPDS_IndexedMapOfPaveBlock"""
        return _BOPDS.BOPDS_FaceInfo_ChangePaveBlocksSc(self, *args)


    def ChangeVerticesIn(self, *args) -> "TColStd_MapOfInteger &":
        """
        * Selector/Modifier Returns the list of indices for vertices of the face that have state In //! On
        	:rtype: TColStd_MapOfInteger
        """
        return _BOPDS.BOPDS_FaceInfo_ChangeVerticesIn(self, *args)


    def ChangeVerticesOn(self, *args) -> "TColStd_MapOfInteger &":
        """
        * Selector/Modifier Returns the list of indices for vertices of the face that have state On //! Sections
        	:rtype: TColStd_MapOfInteger
        """
        return _BOPDS.BOPDS_FaceInfo_ChangeVerticesOn(self, *args)


    def ChangeVerticesSc(self, *args) -> "TColStd_MapOfInteger &":
        """
        * Selector/Modifier Returns the list of indices for section vertices of the face //! Others
        	:rtype: TColStd_MapOfInteger
        """
        return _BOPDS.BOPDS_FaceInfo_ChangeVerticesSc(self, *args)


    def Clear(self, *args) -> "void":
        """
        * Clears the contents
        	:rtype: None
        """
        return _BOPDS.BOPDS_FaceInfo_Clear(self, *args)


    def Index(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the index of the face //! In
        	:rtype: int
        """
        return _BOPDS.BOPDS_FaceInfo_Index(self, *args)


    def PaveBlocksIn(self, *args) -> "BOPDS_IndexedMapOfPaveBlock const &":
        """
        * Selector Returns the pave blocks of the face that have state In
        	:rtype: BOPDS_IndexedMapOfPaveBlock
        """
        return _BOPDS.BOPDS_FaceInfo_PaveBlocksIn(self, *args)


    def PaveBlocksOn(self, *args) -> "BOPDS_IndexedMapOfPaveBlock const &":
        """
        * Selector Returns the pave blocks of the face that have state On
        	:rtype: BOPDS_IndexedMapOfPaveBlock
        """
        return _BOPDS.BOPDS_FaceInfo_PaveBlocksOn(self, *args)


    def PaveBlocksSc(self, *args) -> "BOPDS_IndexedMapOfPaveBlock const &":
        """
        * Selector Returns the pave blocks of the face that are pave blocks of section edges
        	:rtype: BOPDS_IndexedMapOfPaveBlock
        """
        return _BOPDS.BOPDS_FaceInfo_PaveBlocksSc(self, *args)


    def SetIndex(self, *args) -> "void":
        """
        * Modifier Sets the index of the face <theI>
        	:param theI:
        	:type theI: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_FaceInfo_SetIndex(self, *args)


    def VerticesIn(self, *args) -> "TColStd_MapOfInteger const &":
        """
        * Selector Returns the list of indices for vertices of the face that have state In
        	:rtype: TColStd_MapOfInteger
        """
        return _BOPDS.BOPDS_FaceInfo_VerticesIn(self, *args)


    def VerticesOn(self, *args) -> "TColStd_MapOfInteger const &":
        """
        * Selector Returns the list of indices for vertices of the face that have state On
        	:rtype: TColStd_MapOfInteger
        """
        return _BOPDS.BOPDS_FaceInfo_VerticesOn(self, *args)


    def VerticesSc(self, *args) -> "TColStd_MapOfInteger const &":
        """
        * Selector Returns the list of indices for section vertices of the face
        	:rtype: TColStd_MapOfInteger
        """
        return _BOPDS.BOPDS_FaceInfo_VerticesSc(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_FaceInfo
BOPDS_FaceInfo.ChangePaveBlocksIn = new_instancemethod(_BOPDS.BOPDS_FaceInfo_ChangePaveBlocksIn, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.ChangePaveBlocksOn = new_instancemethod(_BOPDS.BOPDS_FaceInfo_ChangePaveBlocksOn, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.ChangePaveBlocksSc = new_instancemethod(_BOPDS.BOPDS_FaceInfo_ChangePaveBlocksSc, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.ChangeVerticesIn = new_instancemethod(_BOPDS.BOPDS_FaceInfo_ChangeVerticesIn, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.ChangeVerticesOn = new_instancemethod(_BOPDS.BOPDS_FaceInfo_ChangeVerticesOn, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.ChangeVerticesSc = new_instancemethod(_BOPDS.BOPDS_FaceInfo_ChangeVerticesSc, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.Clear = new_instancemethod(_BOPDS.BOPDS_FaceInfo_Clear, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.Index = new_instancemethod(_BOPDS.BOPDS_FaceInfo_Index, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.PaveBlocksIn = new_instancemethod(_BOPDS.BOPDS_FaceInfo_PaveBlocksIn, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.PaveBlocksOn = new_instancemethod(_BOPDS.BOPDS_FaceInfo_PaveBlocksOn, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.PaveBlocksSc = new_instancemethod(_BOPDS.BOPDS_FaceInfo_PaveBlocksSc, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.SetIndex = new_instancemethod(_BOPDS.BOPDS_FaceInfo_SetIndex, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.VerticesIn = new_instancemethod(_BOPDS.BOPDS_FaceInfo_VerticesIn, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.VerticesOn = new_instancemethod(_BOPDS.BOPDS_FaceInfo_VerticesOn, None, BOPDS_FaceInfo)
BOPDS_FaceInfo.VerticesSc = new_instancemethod(_BOPDS.BOPDS_FaceInfo_VerticesSc, None, BOPDS_FaceInfo)
BOPDS_FaceInfo_swigregister = _BOPDS.BOPDS_FaceInfo_swigregister
BOPDS_FaceInfo_swigregister(BOPDS_FaceInfo)

class BOPDS_IndexRange(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        """
        _BOPDS.BOPDS_IndexRange_swiginit(self, _BOPDS.new_BOPDS_IndexRange(*args))

    def Contains(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the range contains <theIndex>
        	:param theIndex:
        	:type theIndex: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_IndexRange_Contains(self, *args)


    def Dump(self, *args) -> "void":
        """:rtype: None"""
        return _BOPDS.BOPDS_IndexRange_Dump(self, *args)


    def First(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the first index of the range
        	:rtype: int
        """
        return _BOPDS.BOPDS_IndexRange_First(self, *args)


    def Indices(self, *args) -> "void":
        """
        * Selector Returns the first index of the range <theI1> Returns the second index of the range <theI2>
        	:param theI1:
        	:type theI1: int
        	:param theI2:
        	:type theI2: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_IndexRange_Indices(self, *args)


    def Last(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the second index of the range
        	:rtype: int
        """
        return _BOPDS.BOPDS_IndexRange_Last(self, *args)


    def SetFirst(self, *args) -> "void":
        """
        * Modifier Sets the first index <theI1> of the range
        	:param theI1:
        	:type theI1: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_IndexRange_SetFirst(self, *args)


    def SetIndices(self, *args) -> "void":
        """
        * Modifier Sets the first index of the range <theI1> Sets the second index of the range <theI2>
        	:param theI1:
        	:type theI1: int
        	:param theI2:
        	:type theI2: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_IndexRange_SetIndices(self, *args)


    def SetLast(self, *args) -> "void":
        """
        * Modifier Sets the second index <theI2> of the range
        	:param theI2:
        	:type theI2: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_IndexRange_SetLast(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_IndexRange
BOPDS_IndexRange.Contains = new_instancemethod(_BOPDS.BOPDS_IndexRange_Contains, None, BOPDS_IndexRange)
BOPDS_IndexRange.Dump = new_instancemethod(_BOPDS.BOPDS_IndexRange_Dump, None, BOPDS_IndexRange)
BOPDS_IndexRange.First = new_instancemethod(_BOPDS.BOPDS_IndexRange_First, None, BOPDS_IndexRange)
BOPDS_IndexRange.Indices = new_instancemethod(_BOPDS.BOPDS_IndexRange_Indices, None, BOPDS_IndexRange)
BOPDS_IndexRange.Last = new_instancemethod(_BOPDS.BOPDS_IndexRange_Last, None, BOPDS_IndexRange)
BOPDS_IndexRange.SetFirst = new_instancemethod(_BOPDS.BOPDS_IndexRange_SetFirst, None, BOPDS_IndexRange)
BOPDS_IndexRange.SetIndices = new_instancemethod(_BOPDS.BOPDS_IndexRange_SetIndices, None, BOPDS_IndexRange)
BOPDS_IndexRange.SetLast = new_instancemethod(_BOPDS.BOPDS_IndexRange_SetLast, None, BOPDS_IndexRange)
BOPDS_IndexRange_swigregister = _BOPDS.BOPDS_IndexRange_swigregister
BOPDS_IndexRange_swigregister(BOPDS_IndexRange)

class BOPDS_Iterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        * Contructor theAllocator - the allocator to manage the memory
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_Iterator_swiginit(self, _BOPDS.new_BOPDS_Iterator(*args))

    def BlockLength(self, *args) -> "Standard_Integer":
        """
        * Returns the block length
        	:rtype: int
        """
        return _BOPDS.BOPDS_Iterator_BlockLength(self, *args)


    def DS(self, *args) -> "BOPDS_DS const &":
        """
        * Selector Returns the data structure
        	:rtype: BOPDS_DS
        """
        return _BOPDS.BOPDS_Iterator_DS(self, *args)


    def ExpectedLength(self, *args) -> "Standard_Integer":
        """
        * Returns the number of intersections founded
        	:rtype: int
        """
        return _BOPDS.BOPDS_Iterator_ExpectedLength(self, *args)


    def Initialize(self, *args) -> "void":
        """
        * Initializes the iterator theType1 - the first type of shape theType2 - the second type of shape
        	:param theType1:
        	:type theType1: TopAbs_ShapeEnum
        	:param theType2:
        	:type theType2: TopAbs_ShapeEnum
        	:rtype: None
        """
        return _BOPDS.BOPDS_Iterator_Initialize(self, *args)


    def IntersectExt(self, *args) -> "void":
        """
        * Updates the tree of Bounding Boxes with increased boxes and intersects such elements with the tree.
        	:param theIndicies:
        	:type theIndicies: TColStd_MapOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_Iterator_IntersectExt(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """
        * Returns true if still there are pairs of intersected shapes
        	:rtype: bool
        """
        return _BOPDS.BOPDS_Iterator_More(self, *args)


    def NbExtInterfs(*args) -> "Standard_Integer":
        """
        * @name Number of extra interfering types
        	:rtype: int
        """
        return _BOPDS.BOPDS_Iterator_NbExtInterfs(*args)

    NbExtInterfs = staticmethod(NbExtInterfs)

    def Next(self, *args) -> "void":
        """
        * Moves iterations ahead
        	:rtype: None
        """
        return _BOPDS.BOPDS_Iterator_Next(self, *args)


    def Prepare(self, *args) -> "void":
        """
        * Perform the intersection algorithm and prepare the results to be used
        	:param theCtx: default value is opencascade::handle<IntTools_Context>()
        	:type theCtx: IntTools_Context
        	:param theCheckOBB: default value is Standard_False
        	:type theCheckOBB: bool
        	:param theFuzzyValue: default value is Precision::Confusion()
        	:type theFuzzyValue: float
        	:rtype: void
        """
        return _BOPDS.BOPDS_Iterator_Prepare(self, *args)


    def RunParallel(self, *args) -> "Standard_Boolean":
        """
        * Returns the flag of parallel processing
        	:rtype: bool
        """
        return _BOPDS.BOPDS_Iterator_RunParallel(self, *args)


    def SetDS(self, *args) -> "void":
        """
        * Modifier Sets the data structure <pDS> to process
        	:param pDS:
        	:type pDS: BOPDS_PDS
        	:rtype: None
        """
        return _BOPDS.BOPDS_Iterator_SetDS(self, *args)


    def SetRunParallel(self, *args) -> "void":
        """
        * Set the flag of parallel processing if <theFlag> is true the parallel processing is switched on if <theFlag> is false the parallel processing is switched off
        	:param theFlag:
        	:type theFlag: bool
        	:rtype: None
        """
        return _BOPDS.BOPDS_Iterator_SetRunParallel(self, *args)


    def Value(self, *args) -> "void":
        """
        * Returns indices (DS) of intersected shapes theIndex1 - the index of the first shape theIndex2 - the index of the second shape
        	:param theIndex1:
        	:type theIndex1: int
        	:param theIndex2:
        	:type theIndex2: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_Iterator_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_Iterator
BOPDS_Iterator.BlockLength = new_instancemethod(_BOPDS.BOPDS_Iterator_BlockLength, None, BOPDS_Iterator)
BOPDS_Iterator.DS = new_instancemethod(_BOPDS.BOPDS_Iterator_DS, None, BOPDS_Iterator)
BOPDS_Iterator.ExpectedLength = new_instancemethod(_BOPDS.BOPDS_Iterator_ExpectedLength, None, BOPDS_Iterator)
BOPDS_Iterator.Initialize = new_instancemethod(_BOPDS.BOPDS_Iterator_Initialize, None, BOPDS_Iterator)
BOPDS_Iterator.IntersectExt = new_instancemethod(_BOPDS.BOPDS_Iterator_IntersectExt, None, BOPDS_Iterator)
BOPDS_Iterator.More = new_instancemethod(_BOPDS.BOPDS_Iterator_More, None, BOPDS_Iterator)
BOPDS_Iterator.Next = new_instancemethod(_BOPDS.BOPDS_Iterator_Next, None, BOPDS_Iterator)
BOPDS_Iterator.Prepare = new_instancemethod(_BOPDS.BOPDS_Iterator_Prepare, None, BOPDS_Iterator)
BOPDS_Iterator.RunParallel = new_instancemethod(_BOPDS.BOPDS_Iterator_RunParallel, None, BOPDS_Iterator)
BOPDS_Iterator.SetDS = new_instancemethod(_BOPDS.BOPDS_Iterator_SetDS, None, BOPDS_Iterator)
BOPDS_Iterator.SetRunParallel = new_instancemethod(_BOPDS.BOPDS_Iterator_SetRunParallel, None, BOPDS_Iterator)
BOPDS_Iterator.Value = new_instancemethod(_BOPDS.BOPDS_Iterator_Value, None, BOPDS_Iterator)
BOPDS_Iterator_swigregister = _BOPDS.BOPDS_Iterator_swigregister
BOPDS_Iterator_swigregister(BOPDS_Iterator)

def BOPDS_Iterator_NbExtInterfs(*args) -> "Standard_Integer":
    """
    * @name Number of extra interfering types
    	:rtype: int
    """
    return _BOPDS.BOPDS_Iterator_NbExtInterfs(*args)

class BOPDS_Pair(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None
        :param theIndex1:
        	:type theIndex1: int
        	:param theIndex2:
        	:type theIndex2: int
        	:rtype: None
        """
        _BOPDS.BOPDS_Pair_swiginit(self, _BOPDS.new_BOPDS_Pair(*args))

    def HashCode(self, *args) -> "Standard_Integer":
        """
        * Computes a hash code for this pair, in the range [1, theUpperBound] @param theUpperBound the upper bound of the range a computing hash code must be within returns a computed hash code, in the range [1, theUpperBound]
        	:param theUpperBound:
        	:type theUpperBound: int
        	:rtype: int
        """
        return _BOPDS.BOPDS_Pair_HashCode(self, *args)


    def Indices(self, *args) -> "void":
        """
        * Gets the indices
        	:param theIndex1:
        	:type theIndex1: int
        	:param theIndex2:
        	:type theIndex2: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_Pair_Indices(self, *args)


    def IsEqual(self, *args) -> "Standard_Boolean":
        """
        * Returns true if the Pair is equal to <the theOther>
        	:param theOther:
        	:type theOther: BOPDS_Pair
        	:rtype: bool
        """
        return _BOPDS.BOPDS_Pair_IsEqual(self, *args)


    def SetIndices(self, *args) -> "void":
        """
        * Sets the indices
        	:param theIndex1:
        	:type theIndex1: int
        	:param theIndex2:
        	:type theIndex2: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_Pair_SetIndices(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_Pair
BOPDS_Pair.HashCode = new_instancemethod(_BOPDS.BOPDS_Pair_HashCode, None, BOPDS_Pair)
BOPDS_Pair.__hash__ = new_instancemethod(_BOPDS.BOPDS_Pair___hash__, None, BOPDS_Pair)
BOPDS_Pair.Indices = new_instancemethod(_BOPDS.BOPDS_Pair_Indices, None, BOPDS_Pair)
BOPDS_Pair.IsEqual = new_instancemethod(_BOPDS.BOPDS_Pair_IsEqual, None, BOPDS_Pair)
BOPDS_Pair.SetIndices = new_instancemethod(_BOPDS.BOPDS_Pair_SetIndices, None, BOPDS_Pair)
BOPDS_Pair_swigregister = _BOPDS.BOPDS_Pair_swigregister
BOPDS_Pair_swigregister(BOPDS_Pair)

class BOPDS_PairMapHasher(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def HashCode(*args) -> "Standard_Integer":
        """
        * Computes a hash code for the given pair, in the range [1, theUpperBound] @param thePair the pair which hash code is to be computed @param theUpperBound the upper bound of the range a computing hash code must be within returns a computed hash code, in the range [1, theUpperBound]
        	:param thePair:
        	:type thePair: BOPDS_Pair
        	:param theUpperBound:
        	:type theUpperBound: int
        	:rtype: int
        """
        return _BOPDS.BOPDS_PairMapHasher_HashCode(*args)

    HashCode = staticmethod(HashCode)

    def IsEqual(*args) -> "Standard_Boolean":
        """
        :param thePair1:
        	:type thePair1: BOPDS_Pair
        	:param thePair2:
        	:type thePair2: BOPDS_Pair
        	:rtype: bool
        """
        return _BOPDS.BOPDS_PairMapHasher_IsEqual(*args)

    IsEqual = staticmethod(IsEqual)

    __repr__ = _dumps_object


    def __init__(self):
        _BOPDS.BOPDS_PairMapHasher_swiginit(self, _BOPDS.new_BOPDS_PairMapHasher())
    __swig_destroy__ = _BOPDS.delete_BOPDS_PairMapHasher
BOPDS_PairMapHasher_swigregister = _BOPDS.BOPDS_PairMapHasher_swigregister
BOPDS_PairMapHasher_swigregister(BOPDS_PairMapHasher)

def BOPDS_PairMapHasher_HashCode(*args) -> "Standard_Integer":
    """
    * Computes a hash code for the given pair, in the range [1, theUpperBound] @param thePair the pair which hash code is to be computed @param theUpperBound the upper bound of the range a computing hash code must be within returns a computed hash code, in the range [1, theUpperBound]
    	:param thePair:
    	:type thePair: BOPDS_Pair
    	:param theUpperBound:
    	:type theUpperBound: int
    	:rtype: int
    """
    return _BOPDS.BOPDS_PairMapHasher_HashCode(*args)

def BOPDS_PairMapHasher_IsEqual(*args) -> "Standard_Boolean":
    """
    :param thePair1:
    	:type thePair1: BOPDS_Pair
    	:param thePair2:
    	:type thePair2: BOPDS_Pair
    	:rtype: bool
    """
    return _BOPDS.BOPDS_PairMapHasher_IsEqual(*args)

class BOPDS_Pave(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        """
        _BOPDS.BOPDS_Pave_swiginit(self, _BOPDS.new_BOPDS_Pave(*args))

    def Contents(self, *args) -> "void":
        """
        * Selector Returns the index of vertex <theIndex> Returns the parameter of vertex <theParameter>
        	:param theIndex:
        	:type theIndex: int
        	:param theParameter:
        	:type theParameter: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_Pave_Contents(self, *args)


    def Dump(self, *args) -> "void":
        """:rtype: None"""
        return _BOPDS.BOPDS_Pave_Dump(self, *args)


    def Index(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the index of vertex
        	:rtype: int
        """
        return _BOPDS.BOPDS_Pave_Index(self, *args)


    def IsEqual(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if thr parameter od this is equal to the parameter of <theOther>
        	:param theOther:
        	:type theOther: BOPDS_Pave
        	:rtype: bool
        """
        return _BOPDS.BOPDS_Pave_IsEqual(self, *args)


    def IsLess(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if thr parameter od this is less than the parameter of <theOther>
        	:param theOther:
        	:type theOther: BOPDS_Pave
        	:rtype: bool
        """
        return _BOPDS.BOPDS_Pave_IsLess(self, *args)


    def Parameter(self, *args) -> "Standard_Real":
        """
        * Selector Returns the parameter of vertex
        	:rtype: float
        """
        return _BOPDS.BOPDS_Pave_Parameter(self, *args)


    def SetIndex(self, *args) -> "void":
        """
        * Modifier Sets the index of vertex <theIndex>
        	:param theIndex:
        	:type theIndex: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_Pave_SetIndex(self, *args)


    def SetParameter(self, *args) -> "void":
        """
        * Modifier Sets the parameter of vertex <theParameter>
        	:param theParameter:
        	:type theParameter: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_Pave_SetParameter(self, *args)


    def __eq__(self, right):
        try:
            return self.__eq_wrapper__(right)
        except:
            return False


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_Pave
BOPDS_Pave.Contents = new_instancemethod(_BOPDS.BOPDS_Pave_Contents, None, BOPDS_Pave)
BOPDS_Pave.Dump = new_instancemethod(_BOPDS.BOPDS_Pave_Dump, None, BOPDS_Pave)
BOPDS_Pave.Index = new_instancemethod(_BOPDS.BOPDS_Pave_Index, None, BOPDS_Pave)
BOPDS_Pave.IsEqual = new_instancemethod(_BOPDS.BOPDS_Pave_IsEqual, None, BOPDS_Pave)
BOPDS_Pave.IsLess = new_instancemethod(_BOPDS.BOPDS_Pave_IsLess, None, BOPDS_Pave)
BOPDS_Pave.Parameter = new_instancemethod(_BOPDS.BOPDS_Pave_Parameter, None, BOPDS_Pave)
BOPDS_Pave.SetIndex = new_instancemethod(_BOPDS.BOPDS_Pave_SetIndex, None, BOPDS_Pave)
BOPDS_Pave.SetParameter = new_instancemethod(_BOPDS.BOPDS_Pave_SetParameter, None, BOPDS_Pave)
BOPDS_Pave.__eq_wrapper__ = new_instancemethod(_BOPDS.BOPDS_Pave___eq_wrapper__, None, BOPDS_Pave)
BOPDS_Pave_swigregister = _BOPDS.BOPDS_Pave_swigregister
BOPDS_Pave_swigregister(BOPDS_Pave)

class BOPDS_PaveBlock(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AppendExtPave(self, *args) -> "void":
        """
        * Modifier Appends extra paves <thePave>
        	:param thePave:
        	:type thePave: BOPDS_Pave
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_AppendExtPave(self, *args)


    def AppendExtPave1(self, *args) -> "void":
        """
        * Modifier Appends extra pave <thePave>
        	:param thePave:
        	:type thePave: BOPDS_Pave
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_AppendExtPave1(self, *args)


    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        * Contructor <theAllocator> - the allocator to manage the memory
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_PaveBlock_swiginit(self, _BOPDS.new_BOPDS_PaveBlock(*args))

    def ChangeExtPaves(self, *args) -> "BOPDS_ListOfPave &":
        """
        * Selector / Modifier Returns the extra paves
        	:rtype: BOPDS_ListOfPave
        """
        return _BOPDS.BOPDS_PaveBlock_ChangeExtPaves(self, *args)


    def ContainsParameter(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the extra paves contain the pave with given value of the parameter <thePrm> <theTol> - the value of the tolerance to compare <theInd> - index of the found pave
        	:param thePrm:
        	:type thePrm: float
        	:param theTol:
        	:type theTol: float
        	:param theInd:
        	:type theInd: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_PaveBlock_ContainsParameter(self, *args)


    def Dump(self, *args) -> "void":
        """:rtype: None"""
        return _BOPDS.BOPDS_PaveBlock_Dump(self, *args)


    def Edge(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the index of edge of pave block
        	:rtype: int
        """
        return _BOPDS.BOPDS_PaveBlock_Edge(self, *args)


    def ExtPaves(self, *args) -> "BOPDS_ListOfPave const &":
        """
        * Selector Returns the extra paves
        	:rtype: BOPDS_ListOfPave
        """
        return _BOPDS.BOPDS_PaveBlock_ExtPaves(self, *args)


    def HasEdge(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the pave block has edge
        	:rtype: bool
        * Query Returns true if the pave block has edge Returns the index of edge <theEdge>
        	:param theEdge:
        	:type theEdge: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_PaveBlock_HasEdge(self, *args)


    def HasSameBounds(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the pave block has pave indices that equal to the pave indices of the pave block <theOther>
        	:param theOther:
        	:type theOther: BOPDS_PaveBlock
        	:rtype: bool
        """
        return _BOPDS.BOPDS_PaveBlock_HasSameBounds(self, *args)


    def HasShrunkData(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the pave block contains the shrunk data
        	:rtype: bool
        """
        return _BOPDS.BOPDS_PaveBlock_HasShrunkData(self, *args)


    def Indices(self, *args) -> "void":
        """
        * Selector Returns the pave indices <theIndex1,theIndex2> of the pave block
        	:param theIndex1:
        	:type theIndex1: int
        	:param theIndex2:
        	:type theIndex2: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_Indices(self, *args)


    def IsSplitEdge(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the edge is equal to the original edge of the pave block
        	:rtype: bool
        """
        return _BOPDS.BOPDS_PaveBlock_IsSplitEdge(self, *args)


    def IsSplittable(self, *args) -> "Standard_Boolean":
        """
        * Query Returns False if the pave block has a too short shrunk range and cannot be split, otherwise returns True
        	:rtype: bool
        """
        return _BOPDS.BOPDS_PaveBlock_IsSplittable(self, *args)


    def IsToUpdate(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the pave block contains extra paves
        	:rtype: bool
        """
        return _BOPDS.BOPDS_PaveBlock_IsToUpdate(self, *args)


    def OriginalEdge(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the index of original edge of pave block
        	:rtype: int
        """
        return _BOPDS.BOPDS_PaveBlock_OriginalEdge(self, *args)


    def Pave1(self, *args) -> "BOPDS_Pave const &":
        """
        * Selector Returns the first pave
        	:rtype: BOPDS_Pave
        """
        return _BOPDS.BOPDS_PaveBlock_Pave1(self, *args)


    def Pave2(self, *args) -> "BOPDS_Pave const &":
        """
        * Selector Returns the second pave
        	:rtype: BOPDS_Pave
        """
        return _BOPDS.BOPDS_PaveBlock_Pave2(self, *args)


    def Range(self, *args) -> "void":
        """
        * Selector Returns the parametric range <theT1,theT2> of the pave block
        	:param theT1:
        	:type theT1: float
        	:param theT2:
        	:type theT2: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_Range(self, *args)


    def RemoveExtPave(self, *args) -> "void":
        """
        * Modifier Removes a pave with the given vertex number from extra paves
        	:param theVertNum:
        	:type theVertNum: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_RemoveExtPave(self, *args)


    def SetEdge(self, *args) -> "void":
        """
        * Modifier Sets the index of edge of pave block <theEdge>
        	:param theEdge:
        	:type theEdge: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_SetEdge(self, *args)


    def SetOriginalEdge(self, *args) -> "void":
        """
        * Modifier Sets the index of original edge of the pave block <theEdge>
        	:param theEdge:
        	:type theEdge: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_SetOriginalEdge(self, *args)


    def SetPave1(self, *args) -> "void":
        """
        * Modifier Sets the first pave <thePave>
        	:param thePave:
        	:type thePave: BOPDS_Pave
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_SetPave1(self, *args)


    def SetPave2(self, *args) -> "void":
        """
        * Modifier Sets the second pave <thePave>
        	:param thePave:
        	:type thePave: BOPDS_Pave
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_SetPave2(self, *args)


    def SetShrunkData(self, *args) -> "void":
        """
        * Modifier Sets the shrunk data for the pave block <theTS1>, <theTS2> - shrunk range <theBox> - the bounding box <theIsSplittable> - defines whether the edge can be split
        	:param theTS1:
        	:type theTS1: float
        	:param theTS2:
        	:type theTS2: float
        	:param theBox:
        	:type theBox: Bnd_Box
        	:param theIsSplittable:
        	:type theIsSplittable: bool
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_SetShrunkData(self, *args)


    def ShrunkData(self, *args) -> "void":
        """
        * Selector Returns the shrunk data for the pave block <theTS1>, <theTS2> - shrunk range <theBox> - the bounding box <theIsSplittable> - defines whether the edge can be split
        	:param theTS1:
        	:type theTS1: float
        	:param theTS2:
        	:type theTS2: float
        	:param theBox:
        	:type theBox: Bnd_Box
        	:param theIsSplittable:
        	:type theIsSplittable: bool
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_ShrunkData(self, *args)


    def Update(self, *args) -> "void":
        """
        * Modifier Updates the pave block. The extra paves are used to create new pave blocks <theLPB>. <theFlag> - if true, the first pave and the second pave are used to produce new pave blocks.
        	:param theLPB:
        	:type theLPB: BOPDS_ListOfPaveBlock
        	:param theFlag: default value is Standard_True
        	:type theFlag: bool
        	:rtype: None
        """
        return _BOPDS.BOPDS_PaveBlock_Update(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BOPDS_PaveBlock_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_PaveBlock
BOPDS_PaveBlock.AppendExtPave = new_instancemethod(_BOPDS.BOPDS_PaveBlock_AppendExtPave, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.AppendExtPave1 = new_instancemethod(_BOPDS.BOPDS_PaveBlock_AppendExtPave1, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.ChangeExtPaves = new_instancemethod(_BOPDS.BOPDS_PaveBlock_ChangeExtPaves, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.ContainsParameter = new_instancemethod(_BOPDS.BOPDS_PaveBlock_ContainsParameter, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.Dump = new_instancemethod(_BOPDS.BOPDS_PaveBlock_Dump, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.Edge = new_instancemethod(_BOPDS.BOPDS_PaveBlock_Edge, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.ExtPaves = new_instancemethod(_BOPDS.BOPDS_PaveBlock_ExtPaves, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.HasEdge = new_instancemethod(_BOPDS.BOPDS_PaveBlock_HasEdge, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.HasSameBounds = new_instancemethod(_BOPDS.BOPDS_PaveBlock_HasSameBounds, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.HasShrunkData = new_instancemethod(_BOPDS.BOPDS_PaveBlock_HasShrunkData, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.Indices = new_instancemethod(_BOPDS.BOPDS_PaveBlock_Indices, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.IsSplitEdge = new_instancemethod(_BOPDS.BOPDS_PaveBlock_IsSplitEdge, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.IsSplittable = new_instancemethod(_BOPDS.BOPDS_PaveBlock_IsSplittable, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.IsToUpdate = new_instancemethod(_BOPDS.BOPDS_PaveBlock_IsToUpdate, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.OriginalEdge = new_instancemethod(_BOPDS.BOPDS_PaveBlock_OriginalEdge, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.Pave1 = new_instancemethod(_BOPDS.BOPDS_PaveBlock_Pave1, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.Pave2 = new_instancemethod(_BOPDS.BOPDS_PaveBlock_Pave2, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.Range = new_instancemethod(_BOPDS.BOPDS_PaveBlock_Range, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.RemoveExtPave = new_instancemethod(_BOPDS.BOPDS_PaveBlock_RemoveExtPave, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.SetEdge = new_instancemethod(_BOPDS.BOPDS_PaveBlock_SetEdge, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.SetOriginalEdge = new_instancemethod(_BOPDS.BOPDS_PaveBlock_SetOriginalEdge, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.SetPave1 = new_instancemethod(_BOPDS.BOPDS_PaveBlock_SetPave1, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.SetPave2 = new_instancemethod(_BOPDS.BOPDS_PaveBlock_SetPave2, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.SetShrunkData = new_instancemethod(_BOPDS.BOPDS_PaveBlock_SetShrunkData, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.ShrunkData = new_instancemethod(_BOPDS.BOPDS_PaveBlock_ShrunkData, None, BOPDS_PaveBlock)
BOPDS_PaveBlock.Update = new_instancemethod(_BOPDS.BOPDS_PaveBlock_Update, None, BOPDS_PaveBlock)
BOPDS_PaveBlock_swigregister = _BOPDS.BOPDS_PaveBlock_swigregister
BOPDS_PaveBlock_swigregister(BOPDS_PaveBlock)

class BOPDS_PaveMapHasher(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def HashCode(*args) -> "Standard_Integer":
        """
        * Computes a hash code for the given pave, in the range [1, theUpperBound] @param thePave the pave which hash code is to be computed @param theUpperBound the upper bound of the range a computing hash code must be within returns a computed hash code, in the range [1, theUpperBound]
        	:param thePave:
        	:type thePave: BOPDS_Pave
        	:param theUpperBound:
        	:type theUpperBound: int
        	:rtype: int
        """
        return _BOPDS.BOPDS_PaveMapHasher_HashCode(*args)

    HashCode = staticmethod(HashCode)

    def IsEqual(*args) -> "Standard_Boolean":
        """
        :param aPave1:
        	:type aPave1: BOPDS_Pave
        	:param aPave2:
        	:type aPave2: BOPDS_Pave
        	:rtype: bool
        """
        return _BOPDS.BOPDS_PaveMapHasher_IsEqual(*args)

    IsEqual = staticmethod(IsEqual)

    __repr__ = _dumps_object


    def __init__(self):
        _BOPDS.BOPDS_PaveMapHasher_swiginit(self, _BOPDS.new_BOPDS_PaveMapHasher())
    __swig_destroy__ = _BOPDS.delete_BOPDS_PaveMapHasher
BOPDS_PaveMapHasher_swigregister = _BOPDS.BOPDS_PaveMapHasher_swigregister
BOPDS_PaveMapHasher_swigregister(BOPDS_PaveMapHasher)

def BOPDS_PaveMapHasher_HashCode(*args) -> "Standard_Integer":
    """
    * Computes a hash code for the given pave, in the range [1, theUpperBound] @param thePave the pave which hash code is to be computed @param theUpperBound the upper bound of the range a computing hash code must be within returns a computed hash code, in the range [1, theUpperBound]
    	:param thePave:
    	:type thePave: BOPDS_Pave
    	:param theUpperBound:
    	:type theUpperBound: int
    	:rtype: int
    """
    return _BOPDS.BOPDS_PaveMapHasher_HashCode(*args)

def BOPDS_PaveMapHasher_IsEqual(*args) -> "Standard_Boolean":
    """
    :param aPave1:
    	:type aPave1: BOPDS_Pave
    	:param aPave2:
    	:type aPave2: BOPDS_Pave
    	:rtype: bool
    """
    return _BOPDS.BOPDS_PaveMapHasher_IsEqual(*args)

class BOPDS_Point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        """
        _BOPDS.BOPDS_Point_swiginit(self, _BOPDS.new_BOPDS_Point(*args))

    def Index(self, *args) -> "Standard_Integer":
        """
        * Selector Returns index of the vertex
        	:rtype: int
        """
        return _BOPDS.BOPDS_Point_Index(self, *args)


    def Pnt(self, *args) -> "gp_Pnt const":
        """
        * Selector Returns 3D point
        	:rtype: gp_Pnt
        """
        return _BOPDS.BOPDS_Point_Pnt(self, *args)


    def Pnt2D1(self, *args) -> "gp_Pnt2d const":
        """
        * Selector Returns 2D point on the first face <thePnt>
        	:rtype: gp_Pnt2d
        """
        return _BOPDS.BOPDS_Point_Pnt2D1(self, *args)


    def Pnt2D2(self, *args) -> "gp_Pnt2d const":
        """
        * Selector Returns 2D point on the second face <thePnt>
        	:rtype: gp_Pnt2d
        """
        return _BOPDS.BOPDS_Point_Pnt2D2(self, *args)


    def SetIndex(self, *args) -> "void":
        """
        * Modifier Sets the index of the vertex <theIndex>
        	:param theIndex:
        	:type theIndex: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_Point_SetIndex(self, *args)


    def SetPnt(self, *args) -> "void":
        """
        * Modifier Sets 3D point <thePnt>
        	:param thePnt:
        	:type thePnt: gp_Pnt
        	:rtype: None
        """
        return _BOPDS.BOPDS_Point_SetPnt(self, *args)


    def SetPnt2D1(self, *args) -> "void":
        """
        * Modifier Sets 2D point on the first face <thePnt>
        	:param thePnt:
        	:type thePnt: gp_Pnt2d
        	:rtype: None
        """
        return _BOPDS.BOPDS_Point_SetPnt2D1(self, *args)


    def SetPnt2D2(self, *args) -> "void":
        """
        * Modifier Sets 2D point on the second face <thePnt>
        	:param thePnt:
        	:type thePnt: gp_Pnt2d
        	:rtype: None
        """
        return _BOPDS.BOPDS_Point_SetPnt2D2(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_Point
BOPDS_Point.Index = new_instancemethod(_BOPDS.BOPDS_Point_Index, None, BOPDS_Point)
BOPDS_Point.Pnt = new_instancemethod(_BOPDS.BOPDS_Point_Pnt, None, BOPDS_Point)
BOPDS_Point.Pnt2D1 = new_instancemethod(_BOPDS.BOPDS_Point_Pnt2D1, None, BOPDS_Point)
BOPDS_Point.Pnt2D2 = new_instancemethod(_BOPDS.BOPDS_Point_Pnt2D2, None, BOPDS_Point)
BOPDS_Point.SetIndex = new_instancemethod(_BOPDS.BOPDS_Point_SetIndex, None, BOPDS_Point)
BOPDS_Point.SetPnt = new_instancemethod(_BOPDS.BOPDS_Point_SetPnt, None, BOPDS_Point)
BOPDS_Point.SetPnt2D1 = new_instancemethod(_BOPDS.BOPDS_Point_SetPnt2D1, None, BOPDS_Point)
BOPDS_Point.SetPnt2D2 = new_instancemethod(_BOPDS.BOPDS_Point_SetPnt2D2, None, BOPDS_Point)
BOPDS_Point_swigregister = _BOPDS.BOPDS_Point_swigregister
BOPDS_Point_swigregister(BOPDS_Point)

class BOPDS_ShapeInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        * Contructor theAllocator - the allocator to manage the memory
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_ShapeInfo_swiginit(self, _BOPDS.new_BOPDS_ShapeInfo(*args))

    def Box(self, *args) -> "Bnd_Box const &":
        """
        * Selector Returns the boundung box of the shape
        	:rtype: Bnd_Box
        """
        return _BOPDS.BOPDS_ShapeInfo_Box(self, *args)


    def ChangeBox(self, *args) -> "Bnd_Box &":
        """
        * Selector/Modifier Returns the boundung box of the shape
        	:rtype: Bnd_Box
        """
        return _BOPDS.BOPDS_ShapeInfo_ChangeBox(self, *args)


    def ChangeSubShapes(self, *args) -> "TColStd_ListOfInteger &":
        """
        * Selector/ Modifier Returns the list of indices of sub-shapes
        	:rtype: TColStd_ListOfInteger
        """
        return _BOPDS.BOPDS_ShapeInfo_ChangeSubShapes(self, *args)


    def Dump(self, *args) -> "void":
        """:rtype: None"""
        return _BOPDS.BOPDS_ShapeInfo_Dump(self, *args)


    def Flag(self, *args) -> "Standard_Integer":
        """
        * Returns the flag
        	:rtype: int
        """
        return _BOPDS.BOPDS_ShapeInfo_Flag(self, *args)


    def HasBRep(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the shape has boundary representation
        	:rtype: bool
        """
        return _BOPDS.BOPDS_ShapeInfo_HasBRep(self, *args)


    def HasFlag(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if there is flag.
        	:rtype: bool
        * Query Returns true if there is flag. Returns the the flag theFlag
        	:param theFlag:
        	:type theFlag: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_ShapeInfo_HasFlag(self, *args)


    def HasReference(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _BOPDS.BOPDS_ShapeInfo_HasReference(self, *args)


    def HasSubShape(self, *args) -> "Standard_Boolean":
        """
        * Query Returns true if the shape has sub-shape with index theI
        	:param theI:
        	:type theI: int
        	:rtype: bool
        """
        return _BOPDS.BOPDS_ShapeInfo_HasSubShape(self, *args)


    def IsInterfering(self, *args) -> "Standard_Boolean":
        """
        * Returns true if the shape can be participant of an interference //! Flag
        	:rtype: bool
        """
        return _BOPDS.BOPDS_ShapeInfo_IsInterfering(self, *args)


    def Reference(self, *args) -> "Standard_Integer":
        """
        * Selector Returns the index of a reference information
        	:rtype: int
        """
        return _BOPDS.BOPDS_ShapeInfo_Reference(self, *args)


    def SetBox(self, *args) -> "void":
        """
        * Modifier Sets the boundung box of the shape theBox
        	:param theBox:
        	:type theBox: Bnd_Box
        	:rtype: None
        """
        return _BOPDS.BOPDS_ShapeInfo_SetBox(self, *args)


    def SetFlag(self, *args) -> "void":
        """
        * Modifier Sets the flag
        	:param theI:
        	:type theI: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_ShapeInfo_SetFlag(self, *args)


    def SetReference(self, *args) -> "void":
        """
        * Modifier Sets the index of a reference information
        	:param theI:
        	:type theI: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_ShapeInfo_SetReference(self, *args)


    def SetShape(self, *args) -> "void":
        """
        * Modifier Sets the shape <theS>
        	:param theS:
        	:type theS: TopoDS_Shape
        	:rtype: None
        """
        return _BOPDS.BOPDS_ShapeInfo_SetShape(self, *args)


    def SetShapeType(self, *args) -> "void":
        """
        * Modifier Sets the type of shape theType
        	:param theType:
        	:type theType: TopAbs_ShapeEnum
        	:rtype: None
        """
        return _BOPDS.BOPDS_ShapeInfo_SetShapeType(self, *args)


    def Shape(self, *args) -> "TopoDS_Shape const":
        """
        * Selector Returns the shape
        	:rtype: TopoDS_Shape
        """
        return _BOPDS.BOPDS_ShapeInfo_Shape(self, *args)


    def ShapeType(self, *args) -> "TopAbs_ShapeEnum":
        """
        * Selector Returns the type of shape
        	:rtype: TopAbs_ShapeEnum
        """
        return _BOPDS.BOPDS_ShapeInfo_ShapeType(self, *args)


    def SubShapes(self, *args) -> "TColStd_ListOfInteger const &":
        """
        * Selector Returns the list of indices of sub-shapes
        	:rtype: TColStd_ListOfInteger
        """
        return _BOPDS.BOPDS_ShapeInfo_SubShapes(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_ShapeInfo
BOPDS_ShapeInfo.Box = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_Box, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.ChangeBox = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_ChangeBox, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.ChangeSubShapes = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_ChangeSubShapes, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.Dump = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_Dump, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.Flag = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_Flag, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.HasBRep = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_HasBRep, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.HasFlag = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_HasFlag, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.HasReference = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_HasReference, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.HasSubShape = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_HasSubShape, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.IsInterfering = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_IsInterfering, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.Reference = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_Reference, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.SetBox = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_SetBox, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.SetFlag = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_SetFlag, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.SetReference = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_SetReference, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.SetShape = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_SetShape, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.SetShapeType = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_SetShapeType, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.Shape = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_Shape, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.ShapeType = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_ShapeType, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo.SubShapes = new_instancemethod(_BOPDS.BOPDS_ShapeInfo_SubShapes, None, BOPDS_ShapeInfo)
BOPDS_ShapeInfo_swigregister = _BOPDS.BOPDS_ShapeInfo_swigregister
BOPDS_ShapeInfo_swigregister(BOPDS_ShapeInfo)

class BOPDS_SubIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        * Constructor theAllocator - the allocator to manage the memory
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_SubIterator_swiginit(self, _BOPDS.new_BOPDS_SubIterator(*args))

    def DS(self, *args) -> "BOPDS_DS const &":
        """
        * Returns the data structure
        	:rtype: BOPDS_DS
        """
        return _BOPDS.BOPDS_SubIterator_DS(self, *args)


    def ExpectedLength(self, *args) -> "Standard_Integer":
        """
        * Returns the number of interfering pairs
        	:rtype: int
        """
        return _BOPDS.BOPDS_SubIterator_ExpectedLength(self, *args)


    def Initialize(self, *args) -> "void":
        """
        * Initializes the iterator
        	:rtype: None
        """
        return _BOPDS.BOPDS_SubIterator_Initialize(self, *args)


    def More(self, *args) -> "Standard_Boolean":
        """
        * Returns true if there are more pairs of intersected shapes
        	:rtype: bool
        """
        return _BOPDS.BOPDS_SubIterator_More(self, *args)


    def Next(self, *args) -> "void":
        """
        * Moves iterations ahead
        	:rtype: None
        """
        return _BOPDS.BOPDS_SubIterator_Next(self, *args)


    def Prepare(self, *args) -> "void":
        """
        * Perform the intersection algorithm and prepare the results to be used
        	:rtype: void
        """
        return _BOPDS.BOPDS_SubIterator_Prepare(self, *args)


    def SetDS(self, *args) -> "void":
        """
        * Sets the data structure <pDS> to process. It is used to access the shapes and their bounding boxes.
        	:param pDS:
        	:type pDS: BOPDS_PDS
        	:rtype: None
        """
        return _BOPDS.BOPDS_SubIterator_SetDS(self, *args)


    def SetSubSet1(self, *args) -> "void":
        """
        * Sets the first set of indices <theLI> to process
        	:param theLI:
        	:type theLI: TColStd_ListOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_SubIterator_SetSubSet1(self, *args)


    def SetSubSet2(self, *args) -> "void":
        """
        * Sets the second set of indices <theLI> to process
        	:param theLI:
        	:type theLI: TColStd_ListOfInteger
        	:rtype: None
        """
        return _BOPDS.BOPDS_SubIterator_SetSubSet2(self, *args)


    def SubSet1(self, *args) -> "TColStd_ListOfInteger const &":
        """
        * Returns the first set of indices to process
        	:rtype: TColStd_ListOfInteger
        """
        return _BOPDS.BOPDS_SubIterator_SubSet1(self, *args)


    def SubSet2(self, *args) -> "TColStd_ListOfInteger const &":
        """
        * Returns the second set of indices to process
        	:rtype: TColStd_ListOfInteger
        """
        return _BOPDS.BOPDS_SubIterator_SubSet2(self, *args)


    def Value(self, *args) -> "void":
        """
        * Returns indices (DS) of intersected shapes theIndex1 - the index of the first shape theIndex2 - the index of the second shape
        	:param theIndex1:
        	:type theIndex1: int
        	:param theIndex2:
        	:type theIndex2: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_SubIterator_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_SubIterator
BOPDS_SubIterator.DS = new_instancemethod(_BOPDS.BOPDS_SubIterator_DS, None, BOPDS_SubIterator)
BOPDS_SubIterator.ExpectedLength = new_instancemethod(_BOPDS.BOPDS_SubIterator_ExpectedLength, None, BOPDS_SubIterator)
BOPDS_SubIterator.Initialize = new_instancemethod(_BOPDS.BOPDS_SubIterator_Initialize, None, BOPDS_SubIterator)
BOPDS_SubIterator.More = new_instancemethod(_BOPDS.BOPDS_SubIterator_More, None, BOPDS_SubIterator)
BOPDS_SubIterator.Next = new_instancemethod(_BOPDS.BOPDS_SubIterator_Next, None, BOPDS_SubIterator)
BOPDS_SubIterator.Prepare = new_instancemethod(_BOPDS.BOPDS_SubIterator_Prepare, None, BOPDS_SubIterator)
BOPDS_SubIterator.SetDS = new_instancemethod(_BOPDS.BOPDS_SubIterator_SetDS, None, BOPDS_SubIterator)
BOPDS_SubIterator.SetSubSet1 = new_instancemethod(_BOPDS.BOPDS_SubIterator_SetSubSet1, None, BOPDS_SubIterator)
BOPDS_SubIterator.SetSubSet2 = new_instancemethod(_BOPDS.BOPDS_SubIterator_SetSubSet2, None, BOPDS_SubIterator)
BOPDS_SubIterator.SubSet1 = new_instancemethod(_BOPDS.BOPDS_SubIterator_SubSet1, None, BOPDS_SubIterator)
BOPDS_SubIterator.SubSet2 = new_instancemethod(_BOPDS.BOPDS_SubIterator_SubSet2, None, BOPDS_SubIterator)
BOPDS_SubIterator.Value = new_instancemethod(_BOPDS.BOPDS_SubIterator_Value, None, BOPDS_SubIterator)
BOPDS_SubIterator_swigregister = _BOPDS.BOPDS_SubIterator_swigregister
BOPDS_SubIterator_swigregister(BOPDS_SubIterator)

class BOPDS_Tools(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def HasBRep(*args) -> "Standard_Boolean":
        """
        * Returns true if the type <theT> correspond to a shape having boundary representation
        	:param theT:
        	:type theT: TopAbs_ShapeEnum
        	:rtype: bool
        """
        return _BOPDS.BOPDS_Tools_HasBRep(*args)

    HasBRep = staticmethod(HasBRep)

    def IsInterfering(*args) -> "Standard_Boolean":
        """
        * Returns true if the type <theT> can be participant of an interference
        	:param theT:
        	:type theT: TopAbs_ShapeEnum
        	:rtype: bool
        """
        return _BOPDS.BOPDS_Tools_IsInterfering(*args)

    IsInterfering = staticmethod(IsInterfering)

    def TypeToInteger(*args) -> "Standard_Integer":
        """
        * Converts the conmbination of two types of shape <theT1>,<theT2> to the one integer value, that is returned
        	:param theT1:
        	:type theT1: TopAbs_ShapeEnum
        	:param theT2:
        	:type theT2: TopAbs_ShapeEnum
        	:rtype: int
        * Converts the type of shape <theT>, to integer value, that is returned
        	:param theT:
        	:type theT: TopAbs_ShapeEnum
        	:rtype: int
        """
        return _BOPDS.BOPDS_Tools_TypeToInteger(*args)

    TypeToInteger = staticmethod(TypeToInteger)

    __repr__ = _dumps_object


    def __init__(self):
        _BOPDS.BOPDS_Tools_swiginit(self, _BOPDS.new_BOPDS_Tools())
    __swig_destroy__ = _BOPDS.delete_BOPDS_Tools
BOPDS_Tools_swigregister = _BOPDS.BOPDS_Tools_swigregister
BOPDS_Tools_swigregister(BOPDS_Tools)

def BOPDS_Tools_HasBRep(*args) -> "Standard_Boolean":
    """
    * Returns true if the type <theT> correspond to a shape having boundary representation
    	:param theT:
    	:type theT: TopAbs_ShapeEnum
    	:rtype: bool
    """
    return _BOPDS.BOPDS_Tools_HasBRep(*args)

def BOPDS_Tools_IsInterfering(*args) -> "Standard_Boolean":
    """
    * Returns true if the type <theT> can be participant of an interference
    	:param theT:
    	:type theT: TopAbs_ShapeEnum
    	:rtype: bool
    """
    return _BOPDS.BOPDS_Tools_IsInterfering(*args)

def BOPDS_Tools_TypeToInteger(*args) -> "Standard_Integer":
    """
    * Converts the conmbination of two types of shape <theT1>,<theT2> to the one integer value, that is returned
    	:param theT1:
    	:type theT1: TopAbs_ShapeEnum
    	:param theT2:
    	:type theT2: TopAbs_ShapeEnum
    	:rtype: int
    * Converts the type of shape <theT>, to integer value, that is returned
    	:param theT:
    	:type theT: TopAbs_ShapeEnum
    	:rtype: int
    """
    return _BOPDS.BOPDS_Tools_TypeToInteger(*args)

class BOPDS_InterfEE(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param theAllocator * allocator to manage the memory */
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfEE_swiginit(self, _BOPDS.new_BOPDS_InterfEE(*args))

    def CommonPart(self, *args) -> "IntTools_CommonPrt const &":
        """
        * /** * Selector * Returns the info of common part * returns * common part */
        	:rtype: IntTools_CommonPrt
        """
        return _BOPDS.BOPDS_InterfEE_CommonPart(self, *args)


    def SetCommonPart(self, *args) -> "void":
        """
        * /** * Modifier * Sets the info of common part * @param theCP * common part */
        	:param theCP:
        	:type theCP: IntTools_CommonPrt
        	:rtype: None
        """
        return _BOPDS.BOPDS_InterfEE_SetCommonPart(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfEE
BOPDS_InterfEE.CommonPart = new_instancemethod(_BOPDS.BOPDS_InterfEE_CommonPart, None, BOPDS_InterfEE)
BOPDS_InterfEE.SetCommonPart = new_instancemethod(_BOPDS.BOPDS_InterfEE_SetCommonPart, None, BOPDS_InterfEE)
BOPDS_InterfEE_swigregister = _BOPDS.BOPDS_InterfEE_swigregister
BOPDS_InterfEE_swigregister(BOPDS_InterfEE)

class BOPDS_InterfEF(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param theAllocator * allocator to manage the memory *//** * Constructor * @param theAllocator * allocator to manage the memory */
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfEF_swiginit(self, _BOPDS.new_BOPDS_InterfEF(*args))

    def CommonPart(self, *args) -> "IntTools_CommonPrt const &":
        """
        * /** * Selector * Returns the info of common part * returns * common part */
        	:rtype: IntTools_CommonPrt
        """
        return _BOPDS.BOPDS_InterfEF_CommonPart(self, *args)


    def SetCommonPart(self, *args) -> "void":
        """
        * /** * Modifier * Sets the info of common part * @param theCP * common part */
        	:param theCP:
        	:type theCP: IntTools_CommonPrt
        	:rtype: None
        """
        return _BOPDS.BOPDS_InterfEF_SetCommonPart(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfEF
BOPDS_InterfEF.CommonPart = new_instancemethod(_BOPDS.BOPDS_InterfEF_CommonPart, None, BOPDS_InterfEF)
BOPDS_InterfEF.SetCommonPart = new_instancemethod(_BOPDS.BOPDS_InterfEF_SetCommonPart, None, BOPDS_InterfEF)
BOPDS_InterfEF_swigregister = _BOPDS.BOPDS_InterfEF_swigregister
BOPDS_InterfEF_swigregister(BOPDS_InterfEF)

class BOPDS_InterfEZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param theAllocator * allocator to manage the memory */
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfEZ_swiginit(self, _BOPDS.new_BOPDS_InterfEZ(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfEZ
BOPDS_InterfEZ_swigregister = _BOPDS.BOPDS_InterfEZ_swigregister
BOPDS_InterfEZ_swigregister(BOPDS_InterfEZ)

class BOPDS_InterfFF(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfFF_swiginit(self, _BOPDS.new_BOPDS_InterfFF(*args))

    def ChangeCurves(self, *args) -> "BOPDS_VectorOfCurve &":
        """
        * /** * Selector/Modifier * Returns the intersection curves * returns * intersection curves */
        	:rtype: BOPDS_VectorOfCurve
        """
        return _BOPDS.BOPDS_InterfFF_ChangeCurves(self, *args)


    def ChangePoints(self, *args) -> "BOPDS_VectorOfPoint &":
        """
        * /** * Selector/Modifier * Returns the intersection points * returns * intersection points */
        	:rtype: BOPDS_VectorOfPoint
        """
        return _BOPDS.BOPDS_InterfFF_ChangePoints(self, *args)


    def Curves(self, *args) -> "BOPDS_VectorOfCurve const &":
        """
        * /** * Selector * Returns the intersection curves * returns * intersection curves */
        	:rtype: BOPDS_VectorOfCurve
        """
        return _BOPDS.BOPDS_InterfFF_Curves(self, *args)


    def Init(self, *args) -> "void":
        """
        * /** * Initializer * @param theNbCurves * number of intersection curves * @param theNbPoints * number of intersection points */
        	:param theNbCurves:
        	:type theNbCurves: int
        	:param theNbPoints:
        	:type theNbPoints: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_InterfFF_Init(self, *args)


    def Points(self, *args) -> "BOPDS_VectorOfPoint const &":
        """
        * /** * Selector * Returns the intersection points * returns * intersection points */
        	:rtype: BOPDS_VectorOfPoint
        """
        return _BOPDS.BOPDS_InterfFF_Points(self, *args)


    def SetTangentFaces(self, *args) -> "void":
        """
        * /** * Modifier * Sets the flag of whether the faces are tangent * @param theFlag * the flag */
        	:param theFlag:
        	:type theFlag: bool
        	:rtype: None
        """
        return _BOPDS.BOPDS_InterfFF_SetTangentFaces(self, *args)


    def TangentFaces(self, *args) -> "Standard_Boolean":
        """
        * /** * Selector * Returns the flag whether the faces are tangent * returns * the flag */
        	:rtype: bool
        """
        return _BOPDS.BOPDS_InterfFF_TangentFaces(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfFF
BOPDS_InterfFF.ChangeCurves = new_instancemethod(_BOPDS.BOPDS_InterfFF_ChangeCurves, None, BOPDS_InterfFF)
BOPDS_InterfFF.ChangePoints = new_instancemethod(_BOPDS.BOPDS_InterfFF_ChangePoints, None, BOPDS_InterfFF)
BOPDS_InterfFF.Curves = new_instancemethod(_BOPDS.BOPDS_InterfFF_Curves, None, BOPDS_InterfFF)
BOPDS_InterfFF.Init = new_instancemethod(_BOPDS.BOPDS_InterfFF_Init, None, BOPDS_InterfFF)
BOPDS_InterfFF.Points = new_instancemethod(_BOPDS.BOPDS_InterfFF_Points, None, BOPDS_InterfFF)
BOPDS_InterfFF.SetTangentFaces = new_instancemethod(_BOPDS.BOPDS_InterfFF_SetTangentFaces, None, BOPDS_InterfFF)
BOPDS_InterfFF.TangentFaces = new_instancemethod(_BOPDS.BOPDS_InterfFF_TangentFaces, None, BOPDS_InterfFF)
BOPDS_InterfFF_swigregister = _BOPDS.BOPDS_InterfFF_swigregister
BOPDS_InterfFF_swigregister(BOPDS_InterfFF)

class BOPDS_InterfFZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param theAllocator * allocator to manage the memory */
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfFZ_swiginit(self, _BOPDS.new_BOPDS_InterfFZ(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfFZ
BOPDS_InterfFZ_swigregister = _BOPDS.BOPDS_InterfFZ_swigregister
BOPDS_InterfFZ_swigregister(BOPDS_InterfFZ)

class BOPDS_InterfVE(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param theAllocator * allocator to manage the memory */
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfVE_swiginit(self, _BOPDS.new_BOPDS_InterfVE(*args))

    def Parameter(self, *args) -> "Standard_Real":
        """
        * /** * Selector * Returrns the value of parameter * of the point of the vertex * on the curve of the edge * returns * value of parameter */
        	:rtype: float
        """
        return _BOPDS.BOPDS_InterfVE_Parameter(self, *args)


    def SetParameter(self, *args) -> "void":
        """
        * /** * Modifier * Sets the value of parameter * of the point of the vertex * on the curve of the edge * @param theT * value of parameter */
        	:param theT:
        	:type theT: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_InterfVE_SetParameter(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfVE
BOPDS_InterfVE.Parameter = new_instancemethod(_BOPDS.BOPDS_InterfVE_Parameter, None, BOPDS_InterfVE)
BOPDS_InterfVE.SetParameter = new_instancemethod(_BOPDS.BOPDS_InterfVE_SetParameter, None, BOPDS_InterfVE)
BOPDS_InterfVE_swigregister = _BOPDS.BOPDS_InterfVE_swigregister
BOPDS_InterfVE_swigregister(BOPDS_InterfVE)

class BOPDS_InterfVF(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param theAllocator * allocator to manage the memory */
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfVF_swiginit(self, _BOPDS.new_BOPDS_InterfVF(*args))

    def SetUV(self, *args) -> "void":
        """
        * /** * Modifier * Sets the value of parameters * of the point of the vertex * on the surface of of the face * @param theU * value of U parameter * @param theV * value of U parameter */
        	:param theU:
        	:type theU: float
        	:param theV:
        	:type theV: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_InterfVF_SetUV(self, *args)


    def UV(self, *args) -> "void":
        """
        * /** * Selector * Returns the value of parameters * of the point of the vertex * on the surface of of the face * @param theU * value of U parameter * @param theV * value of U parameter */
        	:param theU:
        	:type theU: float
        	:param theV:
        	:type theV: float
        	:rtype: None
        """
        return _BOPDS.BOPDS_InterfVF_UV(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfVF
BOPDS_InterfVF.SetUV = new_instancemethod(_BOPDS.BOPDS_InterfVF_SetUV, None, BOPDS_InterfVF)
BOPDS_InterfVF.UV = new_instancemethod(_BOPDS.BOPDS_InterfVF_UV, None, BOPDS_InterfVF)
BOPDS_InterfVF_swigregister = _BOPDS.BOPDS_InterfVF_swigregister
BOPDS_InterfVF_swigregister(BOPDS_InterfVF)

class BOPDS_InterfVV(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param theAllocator * allocator to manage the memory */
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfVV_swiginit(self, _BOPDS.new_BOPDS_InterfVV(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfVV
BOPDS_InterfVV_swigregister = _BOPDS.BOPDS_InterfVV_swigregister
BOPDS_InterfVV_swigregister(BOPDS_InterfVV)

class BOPDS_InterfVZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param theAllocator * allocator to manage the memory */
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfVZ_swiginit(self, _BOPDS.new_BOPDS_InterfVZ(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfVZ
BOPDS_InterfVZ_swigregister = _BOPDS.BOPDS_InterfVZ_swigregister
BOPDS_InterfVZ_swigregister(BOPDS_InterfVZ)

class BOPDS_InterfZZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * /** * Constructor */
        	:rtype: None
        * /** * Constructor * @param theAllocator * allocator to manage the memory */
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_InterfZZ_swiginit(self, _BOPDS.new_BOPDS_InterfZZ(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_InterfZZ
BOPDS_InterfZZ_swigregister = _BOPDS.BOPDS_InterfZZ_swigregister
BOPDS_InterfZZ_swigregister(BOPDS_InterfZZ)

class BOPDS_IteratorSI(BOPDS_Iterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty contructor
        	:rtype: None
        * Contructor theAllocator - the allocator to manage the memory
        	:param theAllocator:
        	:type theAllocator: NCollection_BaseAllocator
        	:rtype: None
        """
        _BOPDS.BOPDS_IteratorSI_swiginit(self, _BOPDS.new_BOPDS_IteratorSI(*args))

    def UpdateByLevelOfCheck(self, *args) -> "void":
        """
        * Updates the lists of possible intersections according to the value of <theLevel>. It defines which interferferences will be checked: 0 - only V/V; 1 - V/V and V/E; 2 - V/V, V/E and E/E; 3 - V/V, V/E, E/E and V/F; 4 - V/V, V/E, E/E, V/F and E/F; other - all interferences.
        	:param theLevel:
        	:type theLevel: int
        	:rtype: None
        """
        return _BOPDS.BOPDS_IteratorSI_UpdateByLevelOfCheck(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _BOPDS.delete_BOPDS_IteratorSI
BOPDS_IteratorSI.UpdateByLevelOfCheck = new_instancemethod(_BOPDS.BOPDS_IteratorSI_UpdateByLevelOfCheck, None, BOPDS_IteratorSI)
BOPDS_IteratorSI_swigregister = _BOPDS.BOPDS_IteratorSI_swigregister
BOPDS_IteratorSI_swigregister(BOPDS_IteratorSI)



