# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
BinMDataStd module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_binmdatastd.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _BinMDataStd.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_BinMDataStd')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_BinMDataStd')
    _BinMDataStd = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_BinMDataStd', [dirname(__file__)])
        except ImportError:
            import _BinMDataStd
            return _BinMDataStd
        try:
            _mod = imp.load_module('_BinMDataStd', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _BinMDataStd = swig_import_helper()
    del swig_import_helper
else:
    import _BinMDataStd
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _BinMDataStd.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_BinMDataStd.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_BinMDataStd.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_BinMDataStd.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_BinMDataStd.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_BinMDataStd.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_BinMDataStd.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_BinMDataStd.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_BinMDataStd.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_BinMDataStd.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_BinMDataStd.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_BinMDataStd.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_BinMDataStd.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_BinMDataStd.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_BinMDataStd.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_BinMDataStd.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_BinMDataStd.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _BinMDataStd.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _BinMDataStd.process_exception(error, method_name, class_name)
process_exception = _BinMDataStd.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.BinMDF
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.TDF
import OCC.Core.BinObjMgt
import OCC.Core.Storage

def Handle_BinMDataStd_AsciiStringDriver_Create() -> "opencascade::handle< BinMDataStd_AsciiStringDriver >":
    return _BinMDataStd.Handle_BinMDataStd_AsciiStringDriver_Create()
Handle_BinMDataStd_AsciiStringDriver_Create = _BinMDataStd.Handle_BinMDataStd_AsciiStringDriver_Create

def Handle_BinMDataStd_AsciiStringDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_AsciiStringDriver >":
    return _BinMDataStd.Handle_BinMDataStd_AsciiStringDriver_DownCast(t)
Handle_BinMDataStd_AsciiStringDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_AsciiStringDriver_DownCast

def Handle_BinMDataStd_AsciiStringDriver_IsNull(t: 'opencascade::handle< BinMDataStd_AsciiStringDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_AsciiStringDriver_IsNull(t)
Handle_BinMDataStd_AsciiStringDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_AsciiStringDriver_IsNull

def Handle_BinMDataStd_BooleanArrayDriver_Create() -> "opencascade::handle< BinMDataStd_BooleanArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_BooleanArrayDriver_Create()
Handle_BinMDataStd_BooleanArrayDriver_Create = _BinMDataStd.Handle_BinMDataStd_BooleanArrayDriver_Create

def Handle_BinMDataStd_BooleanArrayDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_BooleanArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_BooleanArrayDriver_DownCast(t)
Handle_BinMDataStd_BooleanArrayDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_BooleanArrayDriver_DownCast

def Handle_BinMDataStd_BooleanArrayDriver_IsNull(t: 'opencascade::handle< BinMDataStd_BooleanArrayDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_BooleanArrayDriver_IsNull(t)
Handle_BinMDataStd_BooleanArrayDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_BooleanArrayDriver_IsNull

def Handle_BinMDataStd_BooleanListDriver_Create() -> "opencascade::handle< BinMDataStd_BooleanListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_BooleanListDriver_Create()
Handle_BinMDataStd_BooleanListDriver_Create = _BinMDataStd.Handle_BinMDataStd_BooleanListDriver_Create

def Handle_BinMDataStd_BooleanListDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_BooleanListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_BooleanListDriver_DownCast(t)
Handle_BinMDataStd_BooleanListDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_BooleanListDriver_DownCast

def Handle_BinMDataStd_BooleanListDriver_IsNull(t: 'opencascade::handle< BinMDataStd_BooleanListDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_BooleanListDriver_IsNull(t)
Handle_BinMDataStd_BooleanListDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_BooleanListDriver_IsNull

def Handle_BinMDataStd_ByteArrayDriver_Create() -> "opencascade::handle< BinMDataStd_ByteArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ByteArrayDriver_Create()
Handle_BinMDataStd_ByteArrayDriver_Create = _BinMDataStd.Handle_BinMDataStd_ByteArrayDriver_Create

def Handle_BinMDataStd_ByteArrayDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_ByteArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ByteArrayDriver_DownCast(t)
Handle_BinMDataStd_ByteArrayDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_ByteArrayDriver_DownCast

def Handle_BinMDataStd_ByteArrayDriver_IsNull(t: 'opencascade::handle< BinMDataStd_ByteArrayDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_ByteArrayDriver_IsNull(t)
Handle_BinMDataStd_ByteArrayDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_ByteArrayDriver_IsNull

def Handle_BinMDataStd_CommentDriver_Create() -> "opencascade::handle< BinMDataStd_CommentDriver >":
    return _BinMDataStd.Handle_BinMDataStd_CommentDriver_Create()
Handle_BinMDataStd_CommentDriver_Create = _BinMDataStd.Handle_BinMDataStd_CommentDriver_Create

def Handle_BinMDataStd_CommentDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_CommentDriver >":
    return _BinMDataStd.Handle_BinMDataStd_CommentDriver_DownCast(t)
Handle_BinMDataStd_CommentDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_CommentDriver_DownCast

def Handle_BinMDataStd_CommentDriver_IsNull(t: 'opencascade::handle< BinMDataStd_CommentDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_CommentDriver_IsNull(t)
Handle_BinMDataStd_CommentDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_CommentDriver_IsNull

def Handle_BinMDataStd_DirectoryDriver_Create() -> "opencascade::handle< BinMDataStd_DirectoryDriver >":
    return _BinMDataStd.Handle_BinMDataStd_DirectoryDriver_Create()
Handle_BinMDataStd_DirectoryDriver_Create = _BinMDataStd.Handle_BinMDataStd_DirectoryDriver_Create

def Handle_BinMDataStd_DirectoryDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_DirectoryDriver >":
    return _BinMDataStd.Handle_BinMDataStd_DirectoryDriver_DownCast(t)
Handle_BinMDataStd_DirectoryDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_DirectoryDriver_DownCast

def Handle_BinMDataStd_DirectoryDriver_IsNull(t: 'opencascade::handle< BinMDataStd_DirectoryDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_DirectoryDriver_IsNull(t)
Handle_BinMDataStd_DirectoryDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_DirectoryDriver_IsNull

def Handle_BinMDataStd_ExpressionDriver_Create() -> "opencascade::handle< BinMDataStd_ExpressionDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ExpressionDriver_Create()
Handle_BinMDataStd_ExpressionDriver_Create = _BinMDataStd.Handle_BinMDataStd_ExpressionDriver_Create

def Handle_BinMDataStd_ExpressionDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_ExpressionDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ExpressionDriver_DownCast(t)
Handle_BinMDataStd_ExpressionDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_ExpressionDriver_DownCast

def Handle_BinMDataStd_ExpressionDriver_IsNull(t: 'opencascade::handle< BinMDataStd_ExpressionDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_ExpressionDriver_IsNull(t)
Handle_BinMDataStd_ExpressionDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_ExpressionDriver_IsNull

def Handle_BinMDataStd_ExtStringArrayDriver_Create() -> "opencascade::handle< BinMDataStd_ExtStringArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ExtStringArrayDriver_Create()
Handle_BinMDataStd_ExtStringArrayDriver_Create = _BinMDataStd.Handle_BinMDataStd_ExtStringArrayDriver_Create

def Handle_BinMDataStd_ExtStringArrayDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_ExtStringArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ExtStringArrayDriver_DownCast(t)
Handle_BinMDataStd_ExtStringArrayDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_ExtStringArrayDriver_DownCast

def Handle_BinMDataStd_ExtStringArrayDriver_IsNull(t: 'opencascade::handle< BinMDataStd_ExtStringArrayDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_ExtStringArrayDriver_IsNull(t)
Handle_BinMDataStd_ExtStringArrayDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_ExtStringArrayDriver_IsNull

def Handle_BinMDataStd_ExtStringListDriver_Create() -> "opencascade::handle< BinMDataStd_ExtStringListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ExtStringListDriver_Create()
Handle_BinMDataStd_ExtStringListDriver_Create = _BinMDataStd.Handle_BinMDataStd_ExtStringListDriver_Create

def Handle_BinMDataStd_ExtStringListDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_ExtStringListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ExtStringListDriver_DownCast(t)
Handle_BinMDataStd_ExtStringListDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_ExtStringListDriver_DownCast

def Handle_BinMDataStd_ExtStringListDriver_IsNull(t: 'opencascade::handle< BinMDataStd_ExtStringListDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_ExtStringListDriver_IsNull(t)
Handle_BinMDataStd_ExtStringListDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_ExtStringListDriver_IsNull

def Handle_BinMDataStd_IntPackedMapDriver_Create() -> "opencascade::handle< BinMDataStd_IntPackedMapDriver >":
    return _BinMDataStd.Handle_BinMDataStd_IntPackedMapDriver_Create()
Handle_BinMDataStd_IntPackedMapDriver_Create = _BinMDataStd.Handle_BinMDataStd_IntPackedMapDriver_Create

def Handle_BinMDataStd_IntPackedMapDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_IntPackedMapDriver >":
    return _BinMDataStd.Handle_BinMDataStd_IntPackedMapDriver_DownCast(t)
Handle_BinMDataStd_IntPackedMapDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_IntPackedMapDriver_DownCast

def Handle_BinMDataStd_IntPackedMapDriver_IsNull(t: 'opencascade::handle< BinMDataStd_IntPackedMapDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_IntPackedMapDriver_IsNull(t)
Handle_BinMDataStd_IntPackedMapDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_IntPackedMapDriver_IsNull

def Handle_BinMDataStd_IntegerArrayDriver_Create() -> "opencascade::handle< BinMDataStd_IntegerArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_IntegerArrayDriver_Create()
Handle_BinMDataStd_IntegerArrayDriver_Create = _BinMDataStd.Handle_BinMDataStd_IntegerArrayDriver_Create

def Handle_BinMDataStd_IntegerArrayDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_IntegerArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_IntegerArrayDriver_DownCast(t)
Handle_BinMDataStd_IntegerArrayDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_IntegerArrayDriver_DownCast

def Handle_BinMDataStd_IntegerArrayDriver_IsNull(t: 'opencascade::handle< BinMDataStd_IntegerArrayDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_IntegerArrayDriver_IsNull(t)
Handle_BinMDataStd_IntegerArrayDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_IntegerArrayDriver_IsNull

def Handle_BinMDataStd_IntegerDriver_Create() -> "opencascade::handle< BinMDataStd_IntegerDriver >":
    return _BinMDataStd.Handle_BinMDataStd_IntegerDriver_Create()
Handle_BinMDataStd_IntegerDriver_Create = _BinMDataStd.Handle_BinMDataStd_IntegerDriver_Create

def Handle_BinMDataStd_IntegerDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_IntegerDriver >":
    return _BinMDataStd.Handle_BinMDataStd_IntegerDriver_DownCast(t)
Handle_BinMDataStd_IntegerDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_IntegerDriver_DownCast

def Handle_BinMDataStd_IntegerDriver_IsNull(t: 'opencascade::handle< BinMDataStd_IntegerDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_IntegerDriver_IsNull(t)
Handle_BinMDataStd_IntegerDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_IntegerDriver_IsNull

def Handle_BinMDataStd_IntegerListDriver_Create() -> "opencascade::handle< BinMDataStd_IntegerListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_IntegerListDriver_Create()
Handle_BinMDataStd_IntegerListDriver_Create = _BinMDataStd.Handle_BinMDataStd_IntegerListDriver_Create

def Handle_BinMDataStd_IntegerListDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_IntegerListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_IntegerListDriver_DownCast(t)
Handle_BinMDataStd_IntegerListDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_IntegerListDriver_DownCast

def Handle_BinMDataStd_IntegerListDriver_IsNull(t: 'opencascade::handle< BinMDataStd_IntegerListDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_IntegerListDriver_IsNull(t)
Handle_BinMDataStd_IntegerListDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_IntegerListDriver_IsNull

def Handle_BinMDataStd_NameDriver_Create() -> "opencascade::handle< BinMDataStd_NameDriver >":
    return _BinMDataStd.Handle_BinMDataStd_NameDriver_Create()
Handle_BinMDataStd_NameDriver_Create = _BinMDataStd.Handle_BinMDataStd_NameDriver_Create

def Handle_BinMDataStd_NameDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_NameDriver >":
    return _BinMDataStd.Handle_BinMDataStd_NameDriver_DownCast(t)
Handle_BinMDataStd_NameDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_NameDriver_DownCast

def Handle_BinMDataStd_NameDriver_IsNull(t: 'opencascade::handle< BinMDataStd_NameDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_NameDriver_IsNull(t)
Handle_BinMDataStd_NameDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_NameDriver_IsNull

def Handle_BinMDataStd_NamedDataDriver_Create() -> "opencascade::handle< BinMDataStd_NamedDataDriver >":
    return _BinMDataStd.Handle_BinMDataStd_NamedDataDriver_Create()
Handle_BinMDataStd_NamedDataDriver_Create = _BinMDataStd.Handle_BinMDataStd_NamedDataDriver_Create

def Handle_BinMDataStd_NamedDataDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_NamedDataDriver >":
    return _BinMDataStd.Handle_BinMDataStd_NamedDataDriver_DownCast(t)
Handle_BinMDataStd_NamedDataDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_NamedDataDriver_DownCast

def Handle_BinMDataStd_NamedDataDriver_IsNull(t: 'opencascade::handle< BinMDataStd_NamedDataDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_NamedDataDriver_IsNull(t)
Handle_BinMDataStd_NamedDataDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_NamedDataDriver_IsNull

def Handle_BinMDataStd_NoteBookDriver_Create() -> "opencascade::handle< BinMDataStd_NoteBookDriver >":
    return _BinMDataStd.Handle_BinMDataStd_NoteBookDriver_Create()
Handle_BinMDataStd_NoteBookDriver_Create = _BinMDataStd.Handle_BinMDataStd_NoteBookDriver_Create

def Handle_BinMDataStd_NoteBookDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_NoteBookDriver >":
    return _BinMDataStd.Handle_BinMDataStd_NoteBookDriver_DownCast(t)
Handle_BinMDataStd_NoteBookDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_NoteBookDriver_DownCast

def Handle_BinMDataStd_NoteBookDriver_IsNull(t: 'opencascade::handle< BinMDataStd_NoteBookDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_NoteBookDriver_IsNull(t)
Handle_BinMDataStd_NoteBookDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_NoteBookDriver_IsNull

def Handle_BinMDataStd_RealArrayDriver_Create() -> "opencascade::handle< BinMDataStd_RealArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_RealArrayDriver_Create()
Handle_BinMDataStd_RealArrayDriver_Create = _BinMDataStd.Handle_BinMDataStd_RealArrayDriver_Create

def Handle_BinMDataStd_RealArrayDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_RealArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_RealArrayDriver_DownCast(t)
Handle_BinMDataStd_RealArrayDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_RealArrayDriver_DownCast

def Handle_BinMDataStd_RealArrayDriver_IsNull(t: 'opencascade::handle< BinMDataStd_RealArrayDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_RealArrayDriver_IsNull(t)
Handle_BinMDataStd_RealArrayDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_RealArrayDriver_IsNull

def Handle_BinMDataStd_RealDriver_Create() -> "opencascade::handle< BinMDataStd_RealDriver >":
    return _BinMDataStd.Handle_BinMDataStd_RealDriver_Create()
Handle_BinMDataStd_RealDriver_Create = _BinMDataStd.Handle_BinMDataStd_RealDriver_Create

def Handle_BinMDataStd_RealDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_RealDriver >":
    return _BinMDataStd.Handle_BinMDataStd_RealDriver_DownCast(t)
Handle_BinMDataStd_RealDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_RealDriver_DownCast

def Handle_BinMDataStd_RealDriver_IsNull(t: 'opencascade::handle< BinMDataStd_RealDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_RealDriver_IsNull(t)
Handle_BinMDataStd_RealDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_RealDriver_IsNull

def Handle_BinMDataStd_RealListDriver_Create() -> "opencascade::handle< BinMDataStd_RealListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_RealListDriver_Create()
Handle_BinMDataStd_RealListDriver_Create = _BinMDataStd.Handle_BinMDataStd_RealListDriver_Create

def Handle_BinMDataStd_RealListDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_RealListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_RealListDriver_DownCast(t)
Handle_BinMDataStd_RealListDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_RealListDriver_DownCast

def Handle_BinMDataStd_RealListDriver_IsNull(t: 'opencascade::handle< BinMDataStd_RealListDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_RealListDriver_IsNull(t)
Handle_BinMDataStd_RealListDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_RealListDriver_IsNull

def Handle_BinMDataStd_ReferenceArrayDriver_Create() -> "opencascade::handle< BinMDataStd_ReferenceArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ReferenceArrayDriver_Create()
Handle_BinMDataStd_ReferenceArrayDriver_Create = _BinMDataStd.Handle_BinMDataStd_ReferenceArrayDriver_Create

def Handle_BinMDataStd_ReferenceArrayDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_ReferenceArrayDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ReferenceArrayDriver_DownCast(t)
Handle_BinMDataStd_ReferenceArrayDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_ReferenceArrayDriver_DownCast

def Handle_BinMDataStd_ReferenceArrayDriver_IsNull(t: 'opencascade::handle< BinMDataStd_ReferenceArrayDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_ReferenceArrayDriver_IsNull(t)
Handle_BinMDataStd_ReferenceArrayDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_ReferenceArrayDriver_IsNull

def Handle_BinMDataStd_ReferenceListDriver_Create() -> "opencascade::handle< BinMDataStd_ReferenceListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ReferenceListDriver_Create()
Handle_BinMDataStd_ReferenceListDriver_Create = _BinMDataStd.Handle_BinMDataStd_ReferenceListDriver_Create

def Handle_BinMDataStd_ReferenceListDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_ReferenceListDriver >":
    return _BinMDataStd.Handle_BinMDataStd_ReferenceListDriver_DownCast(t)
Handle_BinMDataStd_ReferenceListDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_ReferenceListDriver_DownCast

def Handle_BinMDataStd_ReferenceListDriver_IsNull(t: 'opencascade::handle< BinMDataStd_ReferenceListDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_ReferenceListDriver_IsNull(t)
Handle_BinMDataStd_ReferenceListDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_ReferenceListDriver_IsNull

def Handle_BinMDataStd_RelationDriver_Create() -> "opencascade::handle< BinMDataStd_RelationDriver >":
    return _BinMDataStd.Handle_BinMDataStd_RelationDriver_Create()
Handle_BinMDataStd_RelationDriver_Create = _BinMDataStd.Handle_BinMDataStd_RelationDriver_Create

def Handle_BinMDataStd_RelationDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_RelationDriver >":
    return _BinMDataStd.Handle_BinMDataStd_RelationDriver_DownCast(t)
Handle_BinMDataStd_RelationDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_RelationDriver_DownCast

def Handle_BinMDataStd_RelationDriver_IsNull(t: 'opencascade::handle< BinMDataStd_RelationDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_RelationDriver_IsNull(t)
Handle_BinMDataStd_RelationDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_RelationDriver_IsNull

def Handle_BinMDataStd_TickDriver_Create() -> "opencascade::handle< BinMDataStd_TickDriver >":
    return _BinMDataStd.Handle_BinMDataStd_TickDriver_Create()
Handle_BinMDataStd_TickDriver_Create = _BinMDataStd.Handle_BinMDataStd_TickDriver_Create

def Handle_BinMDataStd_TickDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_TickDriver >":
    return _BinMDataStd.Handle_BinMDataStd_TickDriver_DownCast(t)
Handle_BinMDataStd_TickDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_TickDriver_DownCast

def Handle_BinMDataStd_TickDriver_IsNull(t: 'opencascade::handle< BinMDataStd_TickDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_TickDriver_IsNull(t)
Handle_BinMDataStd_TickDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_TickDriver_IsNull

def Handle_BinMDataStd_TreeNodeDriver_Create() -> "opencascade::handle< BinMDataStd_TreeNodeDriver >":
    return _BinMDataStd.Handle_BinMDataStd_TreeNodeDriver_Create()
Handle_BinMDataStd_TreeNodeDriver_Create = _BinMDataStd.Handle_BinMDataStd_TreeNodeDriver_Create

def Handle_BinMDataStd_TreeNodeDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_TreeNodeDriver >":
    return _BinMDataStd.Handle_BinMDataStd_TreeNodeDriver_DownCast(t)
Handle_BinMDataStd_TreeNodeDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_TreeNodeDriver_DownCast

def Handle_BinMDataStd_TreeNodeDriver_IsNull(t: 'opencascade::handle< BinMDataStd_TreeNodeDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_TreeNodeDriver_IsNull(t)
Handle_BinMDataStd_TreeNodeDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_TreeNodeDriver_IsNull

def Handle_BinMDataStd_UAttributeDriver_Create() -> "opencascade::handle< BinMDataStd_UAttributeDriver >":
    return _BinMDataStd.Handle_BinMDataStd_UAttributeDriver_Create()
Handle_BinMDataStd_UAttributeDriver_Create = _BinMDataStd.Handle_BinMDataStd_UAttributeDriver_Create

def Handle_BinMDataStd_UAttributeDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_UAttributeDriver >":
    return _BinMDataStd.Handle_BinMDataStd_UAttributeDriver_DownCast(t)
Handle_BinMDataStd_UAttributeDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_UAttributeDriver_DownCast

def Handle_BinMDataStd_UAttributeDriver_IsNull(t: 'opencascade::handle< BinMDataStd_UAttributeDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_UAttributeDriver_IsNull(t)
Handle_BinMDataStd_UAttributeDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_UAttributeDriver_IsNull

def Handle_BinMDataStd_VariableDriver_Create() -> "opencascade::handle< BinMDataStd_VariableDriver >":
    return _BinMDataStd.Handle_BinMDataStd_VariableDriver_Create()
Handle_BinMDataStd_VariableDriver_Create = _BinMDataStd.Handle_BinMDataStd_VariableDriver_Create

def Handle_BinMDataStd_VariableDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMDataStd_VariableDriver >":
    return _BinMDataStd.Handle_BinMDataStd_VariableDriver_DownCast(t)
Handle_BinMDataStd_VariableDriver_DownCast = _BinMDataStd.Handle_BinMDataStd_VariableDriver_DownCast

def Handle_BinMDataStd_VariableDriver_IsNull(t: 'opencascade::handle< BinMDataStd_VariableDriver > const &') -> "bool":
    return _BinMDataStd.Handle_BinMDataStd_VariableDriver_IsNull(t)
Handle_BinMDataStd_VariableDriver_IsNull = _BinMDataStd.Handle_BinMDataStd_VariableDriver_IsNull
class binmdatastd(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AddDrivers(*args) -> "void":
        """
        * Adds the attribute drivers to <theDriverTable>.
        	:param theDriverTable:
        	:type theDriverTable: BinMDF_ADriverTable
        	:param aMsgDrv:
        	:type aMsgDrv: Message_Messenger
        	:rtype: void
        """
        return _BinMDataStd.binmdatastd_AddDrivers(*args)

    AddDrivers = staticmethod(AddDrivers)

    __repr__ = _dumps_object


    def __init__(self):
        _BinMDataStd.binmdatastd_swiginit(self, _BinMDataStd.new_binmdatastd())
    __swig_destroy__ = _BinMDataStd.delete_binmdatastd
binmdatastd_swigregister = _BinMDataStd.binmdatastd_swigregister
binmdatastd_swigregister(binmdatastd)

def binmdatastd_AddDrivers(*args) -> "void":
    """
    * Adds the attribute drivers to <theDriverTable>.
    	:param theDriverTable:
    	:type theDriverTable: BinMDF_ADriverTable
    	:param aMsgDrv:
    	:type aMsgDrv: Message_Messenger
    	:rtype: void
    """
    return _BinMDataStd.binmdatastd_AddDrivers(*args)

class BinMDataStd_AsciiStringDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_AsciiStringDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_AsciiStringDriver(*args))

    def Paste(self, *args) -> "void":
        """
        * persistent -> transient (retrieve)
        	:param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        * transient -> persistent (store)
        	:param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMDataStd.BinMDataStd_AsciiStringDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_AsciiStringDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_AsciiStringDriver
BinMDataStd_AsciiStringDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_AsciiStringDriver_Paste, None, BinMDataStd_AsciiStringDriver)
BinMDataStd_AsciiStringDriver_swigregister = _BinMDataStd.BinMDataStd_AsciiStringDriver_swigregister
BinMDataStd_AsciiStringDriver_swigregister(BinMDataStd_AsciiStringDriver)

class BinMDataStd_BooleanArrayDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_BooleanArrayDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_BooleanArrayDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_BooleanArrayDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_BooleanArrayDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_BooleanArrayDriver
BinMDataStd_BooleanArrayDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_BooleanArrayDriver_Paste, None, BinMDataStd_BooleanArrayDriver)
BinMDataStd_BooleanArrayDriver_swigregister = _BinMDataStd.BinMDataStd_BooleanArrayDriver_swigregister
BinMDataStd_BooleanArrayDriver_swigregister(BinMDataStd_BooleanArrayDriver)

class BinMDataStd_BooleanListDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_BooleanListDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_BooleanListDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_BooleanListDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_BooleanListDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_BooleanListDriver
BinMDataStd_BooleanListDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_BooleanListDriver_Paste, None, BinMDataStd_BooleanListDriver)
BinMDataStd_BooleanListDriver_swigregister = _BinMDataStd.BinMDataStd_BooleanListDriver_swigregister
BinMDataStd_BooleanListDriver_swigregister(BinMDataStd_BooleanListDriver)

class BinMDataStd_ByteArrayDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_ByteArrayDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_ByteArrayDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_ByteArrayDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_ByteArrayDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_ByteArrayDriver
BinMDataStd_ByteArrayDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_ByteArrayDriver_Paste, None, BinMDataStd_ByteArrayDriver)
BinMDataStd_ByteArrayDriver_swigregister = _BinMDataStd.BinMDataStd_ByteArrayDriver_swigregister
BinMDataStd_ByteArrayDriver_swigregister(BinMDataStd_ByteArrayDriver)

class BinMDataStd_CommentDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_CommentDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_CommentDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMDataStd.BinMDataStd_CommentDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_CommentDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_CommentDriver
BinMDataStd_CommentDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_CommentDriver_Paste, None, BinMDataStd_CommentDriver)
BinMDataStd_CommentDriver_swigregister = _BinMDataStd.BinMDataStd_CommentDriver_swigregister
BinMDataStd_CommentDriver_swigregister(BinMDataStd_CommentDriver)

class BinMDataStd_DirectoryDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_DirectoryDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_DirectoryDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_DirectoryDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_DirectoryDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_DirectoryDriver
BinMDataStd_DirectoryDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_DirectoryDriver_Paste, None, BinMDataStd_DirectoryDriver)
BinMDataStd_DirectoryDriver_swigregister = _BinMDataStd.BinMDataStd_DirectoryDriver_swigregister
BinMDataStd_DirectoryDriver_swigregister(BinMDataStd_DirectoryDriver)

class BinMDataStd_ExpressionDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_ExpressionDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_ExpressionDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMDataStd.BinMDataStd_ExpressionDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_ExpressionDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_ExpressionDriver
BinMDataStd_ExpressionDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_ExpressionDriver_Paste, None, BinMDataStd_ExpressionDriver)
BinMDataStd_ExpressionDriver_swigregister = _BinMDataStd.BinMDataStd_ExpressionDriver_swigregister
BinMDataStd_ExpressionDriver_swigregister(BinMDataStd_ExpressionDriver)

class BinMDataStd_ExtStringArrayDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_ExtStringArrayDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_ExtStringArrayDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_ExtStringArrayDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_ExtStringArrayDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_ExtStringArrayDriver
BinMDataStd_ExtStringArrayDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_ExtStringArrayDriver_Paste, None, BinMDataStd_ExtStringArrayDriver)
BinMDataStd_ExtStringArrayDriver_swigregister = _BinMDataStd.BinMDataStd_ExtStringArrayDriver_swigregister
BinMDataStd_ExtStringArrayDriver_swigregister(BinMDataStd_ExtStringArrayDriver)

class BinMDataStd_ExtStringListDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_ExtStringListDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_ExtStringListDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_ExtStringListDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_ExtStringListDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_ExtStringListDriver
BinMDataStd_ExtStringListDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_ExtStringListDriver_Paste, None, BinMDataStd_ExtStringListDriver)
BinMDataStd_ExtStringListDriver_swigregister = _BinMDataStd.BinMDataStd_ExtStringListDriver_swigregister
BinMDataStd_ExtStringListDriver_swigregister(BinMDataStd_ExtStringListDriver)

class BinMDataStd_IntPackedMapDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_IntPackedMapDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_IntPackedMapDriver(*args))

    def Paste(self, *args) -> "void":
        """
        * persistent -> transient (retrieve)
        	:param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        * transient -> persistent (store)
        	:param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMDataStd.BinMDataStd_IntPackedMapDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_IntPackedMapDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_IntPackedMapDriver
BinMDataStd_IntPackedMapDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_IntPackedMapDriver_Paste, None, BinMDataStd_IntPackedMapDriver)
BinMDataStd_IntPackedMapDriver_swigregister = _BinMDataStd.BinMDataStd_IntPackedMapDriver_swigregister
BinMDataStd_IntPackedMapDriver_swigregister(BinMDataStd_IntPackedMapDriver)

class BinMDataStd_IntegerArrayDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_IntegerArrayDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_IntegerArrayDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_IntegerArrayDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_IntegerArrayDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_IntegerArrayDriver
BinMDataStd_IntegerArrayDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_IntegerArrayDriver_Paste, None, BinMDataStd_IntegerArrayDriver)
BinMDataStd_IntegerArrayDriver_swigregister = _BinMDataStd.BinMDataStd_IntegerArrayDriver_swigregister
BinMDataStd_IntegerArrayDriver_swigregister(BinMDataStd_IntegerArrayDriver)

class BinMDataStd_IntegerDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_IntegerDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_IntegerDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_IntegerDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_IntegerDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_IntegerDriver
BinMDataStd_IntegerDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_IntegerDriver_Paste, None, BinMDataStd_IntegerDriver)
BinMDataStd_IntegerDriver_swigregister = _BinMDataStd.BinMDataStd_IntegerDriver_swigregister
BinMDataStd_IntegerDriver_swigregister(BinMDataStd_IntegerDriver)

class BinMDataStd_IntegerListDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_IntegerListDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_IntegerListDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_IntegerListDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_IntegerListDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_IntegerListDriver
BinMDataStd_IntegerListDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_IntegerListDriver_Paste, None, BinMDataStd_IntegerListDriver)
BinMDataStd_IntegerListDriver_swigregister = _BinMDataStd.BinMDataStd_IntegerListDriver_swigregister
BinMDataStd_IntegerListDriver_swigregister(BinMDataStd_IntegerListDriver)

class BinMDataStd_NameDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_NameDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_NameDriver(*args))

    def Paste(self, *args) -> "void":
        """
        * persistent -> transient (retrieve)
        	:param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        * transient -> persistent (store)
        	:param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMDataStd.BinMDataStd_NameDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_NameDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_NameDriver
BinMDataStd_NameDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_NameDriver_Paste, None, BinMDataStd_NameDriver)
BinMDataStd_NameDriver_swigregister = _BinMDataStd.BinMDataStd_NameDriver_swigregister
BinMDataStd_NameDriver_swigregister(BinMDataStd_NameDriver)

class BinMDataStd_NamedDataDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_NamedDataDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_NamedDataDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_NamedDataDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_NamedDataDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_NamedDataDriver
BinMDataStd_NamedDataDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_NamedDataDriver_Paste, None, BinMDataStd_NamedDataDriver)
BinMDataStd_NamedDataDriver_swigregister = _BinMDataStd.BinMDataStd_NamedDataDriver_swigregister
BinMDataStd_NamedDataDriver_swigregister(BinMDataStd_NamedDataDriver)

class BinMDataStd_NoteBookDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_NoteBookDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_NoteBookDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_NoteBookDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_NoteBookDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_NoteBookDriver
BinMDataStd_NoteBookDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_NoteBookDriver_Paste, None, BinMDataStd_NoteBookDriver)
BinMDataStd_NoteBookDriver_swigregister = _BinMDataStd.BinMDataStd_NoteBookDriver_swigregister
BinMDataStd_NoteBookDriver_swigregister(BinMDataStd_NoteBookDriver)

class BinMDataStd_RealArrayDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_RealArrayDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_RealArrayDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_RealArrayDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_RealArrayDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_RealArrayDriver
BinMDataStd_RealArrayDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_RealArrayDriver_Paste, None, BinMDataStd_RealArrayDriver)
BinMDataStd_RealArrayDriver_swigregister = _BinMDataStd.BinMDataStd_RealArrayDriver_swigregister
BinMDataStd_RealArrayDriver_swigregister(BinMDataStd_RealArrayDriver)

class BinMDataStd_RealDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_RealDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_RealDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_RealDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_RealDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_RealDriver
BinMDataStd_RealDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_RealDriver_Paste, None, BinMDataStd_RealDriver)
BinMDataStd_RealDriver_swigregister = _BinMDataStd.BinMDataStd_RealDriver_swigregister
BinMDataStd_RealDriver_swigregister(BinMDataStd_RealDriver)

class BinMDataStd_RealListDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_RealListDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_RealListDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_RealListDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_RealListDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_RealListDriver
BinMDataStd_RealListDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_RealListDriver_Paste, None, BinMDataStd_RealListDriver)
BinMDataStd_RealListDriver_swigregister = _BinMDataStd.BinMDataStd_RealListDriver_swigregister
BinMDataStd_RealListDriver_swigregister(BinMDataStd_RealListDriver)

class BinMDataStd_ReferenceArrayDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_ReferenceArrayDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_ReferenceArrayDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_ReferenceArrayDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_ReferenceArrayDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_ReferenceArrayDriver
BinMDataStd_ReferenceArrayDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_ReferenceArrayDriver_Paste, None, BinMDataStd_ReferenceArrayDriver)
BinMDataStd_ReferenceArrayDriver_swigregister = _BinMDataStd.BinMDataStd_ReferenceArrayDriver_swigregister
BinMDataStd_ReferenceArrayDriver_swigregister(BinMDataStd_ReferenceArrayDriver)

class BinMDataStd_ReferenceListDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_ReferenceListDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_ReferenceListDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_ReferenceListDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_ReferenceListDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_ReferenceListDriver
BinMDataStd_ReferenceListDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_ReferenceListDriver_Paste, None, BinMDataStd_ReferenceListDriver)
BinMDataStd_ReferenceListDriver_swigregister = _BinMDataStd.BinMDataStd_ReferenceListDriver_swigregister
BinMDataStd_ReferenceListDriver_swigregister(BinMDataStd_ReferenceListDriver)

class BinMDataStd_RelationDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_RelationDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_RelationDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMDataStd.BinMDataStd_RelationDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_RelationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_RelationDriver
BinMDataStd_RelationDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_RelationDriver_Paste, None, BinMDataStd_RelationDriver)
BinMDataStd_RelationDriver_swigregister = _BinMDataStd.BinMDataStd_RelationDriver_swigregister
BinMDataStd_RelationDriver_swigregister(BinMDataStd_RelationDriver)

class BinMDataStd_TickDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_TickDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_TickDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: void
        """
        return _BinMDataStd.BinMDataStd_TickDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_TickDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_TickDriver
BinMDataStd_TickDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_TickDriver_Paste, None, BinMDataStd_TickDriver)
BinMDataStd_TickDriver_swigregister = _BinMDataStd.BinMDataStd_TickDriver_swigregister
BinMDataStd_TickDriver_swigregister(BinMDataStd_TickDriver)

class BinMDataStd_TreeNodeDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_TreeNodeDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_TreeNodeDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMDataStd.BinMDataStd_TreeNodeDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_TreeNodeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_TreeNodeDriver
BinMDataStd_TreeNodeDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_TreeNodeDriver_Paste, None, BinMDataStd_TreeNodeDriver)
BinMDataStd_TreeNodeDriver_swigregister = _BinMDataStd.BinMDataStd_TreeNodeDriver_swigregister
BinMDataStd_TreeNodeDriver_swigregister(BinMDataStd_TreeNodeDriver)

class BinMDataStd_UAttributeDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_UAttributeDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_UAttributeDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMDataStd.BinMDataStd_UAttributeDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_UAttributeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_UAttributeDriver
BinMDataStd_UAttributeDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_UAttributeDriver_Paste, None, BinMDataStd_UAttributeDriver)
BinMDataStd_UAttributeDriver_swigregister = _BinMDataStd.BinMDataStd_UAttributeDriver_swigregister
BinMDataStd_UAttributeDriver_swigregister(BinMDataStd_UAttributeDriver)

class BinMDataStd_VariableDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataStd.BinMDataStd_VariableDriver_swiginit(self, _BinMDataStd.new_BinMDataStd_VariableDriver(*args))

    def Paste(self, *args) -> "void":
        """
        :param Source:
        	:type Source: BinObjMgt_Persistent
        	:param Target:
        	:type Target: TDF_Attribute
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_RRelocationTable
        	:rtype: bool
        :param Source:
        	:type Source: TDF_Attribute
        	:param Target:
        	:type Target: BinObjMgt_Persistent
        	:param RelocTable:
        	:type RelocTable: BinObjMgt_SRelocationTable
        	:rtype: None
        """
        return _BinMDataStd.BinMDataStd_VariableDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMDataStd_VariableDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataStd.delete_BinMDataStd_VariableDriver
BinMDataStd_VariableDriver.Paste = new_instancemethod(_BinMDataStd.BinMDataStd_VariableDriver_Paste, None, BinMDataStd_VariableDriver)
BinMDataStd_VariableDriver_swigregister = _BinMDataStd.BinMDataStd_VariableDriver_swigregister
BinMDataStd_VariableDriver_swigregister(BinMDataStd_VariableDriver)



