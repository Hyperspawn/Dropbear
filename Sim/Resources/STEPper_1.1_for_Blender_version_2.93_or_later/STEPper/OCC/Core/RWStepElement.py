# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
RWStepElement module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_rwstepelement.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _RWStepElement.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepElement')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepElement')
    _RWStepElement = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepElement', [dirname(__file__)])
        except ImportError:
            import _RWStepElement
            return _RWStepElement
        try:
            _mod = imp.load_module('_RWStepElement', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepElement = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepElement
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepElement.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_RWStepElement.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_RWStepElement.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_RWStepElement.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_RWStepElement.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_RWStepElement.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_RWStepElement.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_RWStepElement.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_RWStepElement.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_RWStepElement.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_RWStepElement.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_RWStepElement.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_RWStepElement.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_RWStepElement.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_RWStepElement.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_RWStepElement.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_RWStepElement.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _RWStepElement.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _RWStepElement.process_exception(error, method_name, class_name)
process_exception = _RWStepElement.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepElement
import OCC.Core.StepRepr
import OCC.Core.StepBasic
class RWStepElement_RWAnalysisItemWithinRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_swiginit(self, _RWStepElement.new_RWStepElement_RWAnalysisItemWithinRepresentation(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads AnalysisItemWithinRepresentation
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_AnalysisItemWithinRepresentation
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_AnalysisItemWithinRepresentation
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes AnalysisItemWithinRepresentation
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_AnalysisItemWithinRepresentation
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWAnalysisItemWithinRepresentation
RWStepElement_RWAnalysisItemWithinRepresentation.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_ReadStep, None, RWStepElement_RWAnalysisItemWithinRepresentation)
RWStepElement_RWAnalysisItemWithinRepresentation.Share = new_instancemethod(_RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_Share, None, RWStepElement_RWAnalysisItemWithinRepresentation)
RWStepElement_RWAnalysisItemWithinRepresentation.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_WriteStep, None, RWStepElement_RWAnalysisItemWithinRepresentation)
RWStepElement_RWAnalysisItemWithinRepresentation_swigregister = _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_swigregister
RWStepElement_RWAnalysisItemWithinRepresentation_swigregister(RWStepElement_RWAnalysisItemWithinRepresentation)

class RWStepElement_RWCurve3dElementDescriptor(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_swiginit(self, _RWStepElement.new_RWStepElement_RWCurve3dElementDescriptor(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Curve3dElementDescriptor
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_Curve3dElementDescriptor
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_Curve3dElementDescriptor
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Curve3dElementDescriptor
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_Curve3dElementDescriptor
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurve3dElementDescriptor
RWStepElement_RWCurve3dElementDescriptor.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWCurve3dElementDescriptor_ReadStep, None, RWStepElement_RWCurve3dElementDescriptor)
RWStepElement_RWCurve3dElementDescriptor.Share = new_instancemethod(_RWStepElement.RWStepElement_RWCurve3dElementDescriptor_Share, None, RWStepElement_RWCurve3dElementDescriptor)
RWStepElement_RWCurve3dElementDescriptor.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWCurve3dElementDescriptor_WriteStep, None, RWStepElement_RWCurve3dElementDescriptor)
RWStepElement_RWCurve3dElementDescriptor_swigregister = _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_swigregister
RWStepElement_RWCurve3dElementDescriptor_swigregister(RWStepElement_RWCurve3dElementDescriptor)

class RWStepElement_RWCurveElementEndReleasePacket(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_swiginit(self, _RWStepElement.new_RWStepElement_RWCurveElementEndReleasePacket(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveElementEndReleasePacket
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_CurveElementEndReleasePacket
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_CurveElementEndReleasePacket
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveElementEndReleasePacket
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_CurveElementEndReleasePacket
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurveElementEndReleasePacket
RWStepElement_RWCurveElementEndReleasePacket.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_ReadStep, None, RWStepElement_RWCurveElementEndReleasePacket)
RWStepElement_RWCurveElementEndReleasePacket.Share = new_instancemethod(_RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_Share, None, RWStepElement_RWCurveElementEndReleasePacket)
RWStepElement_RWCurveElementEndReleasePacket.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_WriteStep, None, RWStepElement_RWCurveElementEndReleasePacket)
RWStepElement_RWCurveElementEndReleasePacket_swigregister = _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_swigregister
RWStepElement_RWCurveElementEndReleasePacket_swigregister(RWStepElement_RWCurveElementEndReleasePacket)

class RWStepElement_RWCurveElementSectionDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_swiginit(self, _RWStepElement.new_RWStepElement_RWCurveElementSectionDefinition(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveElementSectionDefinition
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_CurveElementSectionDefinition
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_CurveElementSectionDefinition
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveElementSectionDefinition
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_CurveElementSectionDefinition
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurveElementSectionDefinition
RWStepElement_RWCurveElementSectionDefinition.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWCurveElementSectionDefinition_ReadStep, None, RWStepElement_RWCurveElementSectionDefinition)
RWStepElement_RWCurveElementSectionDefinition.Share = new_instancemethod(_RWStepElement.RWStepElement_RWCurveElementSectionDefinition_Share, None, RWStepElement_RWCurveElementSectionDefinition)
RWStepElement_RWCurveElementSectionDefinition.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWCurveElementSectionDefinition_WriteStep, None, RWStepElement_RWCurveElementSectionDefinition)
RWStepElement_RWCurveElementSectionDefinition_swigregister = _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_swigregister
RWStepElement_RWCurveElementSectionDefinition_swigregister(RWStepElement_RWCurveElementSectionDefinition)

class RWStepElement_RWCurveElementSectionDerivedDefinitions(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_swiginit(self, _RWStepElement.new_RWStepElement_RWCurveElementSectionDerivedDefinitions(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads CurveElementSectionDerivedDefinitions
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_CurveElementSectionDerivedDefinitions
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_CurveElementSectionDerivedDefinitions
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes CurveElementSectionDerivedDefinitions
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_CurveElementSectionDerivedDefinitions
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurveElementSectionDerivedDefinitions
RWStepElement_RWCurveElementSectionDerivedDefinitions.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_ReadStep, None, RWStepElement_RWCurveElementSectionDerivedDefinitions)
RWStepElement_RWCurveElementSectionDerivedDefinitions.Share = new_instancemethod(_RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_Share, None, RWStepElement_RWCurveElementSectionDerivedDefinitions)
RWStepElement_RWCurveElementSectionDerivedDefinitions.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_WriteStep, None, RWStepElement_RWCurveElementSectionDerivedDefinitions)
RWStepElement_RWCurveElementSectionDerivedDefinitions_swigregister = _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_swigregister
RWStepElement_RWCurveElementSectionDerivedDefinitions_swigregister(RWStepElement_RWCurveElementSectionDerivedDefinitions)

class RWStepElement_RWElementDescriptor(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWElementDescriptor_swiginit(self, _RWStepElement.new_RWStepElement_RWElementDescriptor(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ElementDescriptor
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_ElementDescriptor
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWElementDescriptor_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_ElementDescriptor
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWElementDescriptor_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ElementDescriptor
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_ElementDescriptor
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWElementDescriptor_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWElementDescriptor
RWStepElement_RWElementDescriptor.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWElementDescriptor_ReadStep, None, RWStepElement_RWElementDescriptor)
RWStepElement_RWElementDescriptor.Share = new_instancemethod(_RWStepElement.RWStepElement_RWElementDescriptor_Share, None, RWStepElement_RWElementDescriptor)
RWStepElement_RWElementDescriptor.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWElementDescriptor_WriteStep, None, RWStepElement_RWElementDescriptor)
RWStepElement_RWElementDescriptor_swigregister = _RWStepElement.RWStepElement_RWElementDescriptor_swigregister
RWStepElement_RWElementDescriptor_swigregister(RWStepElement_RWElementDescriptor)

class RWStepElement_RWElementMaterial(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWElementMaterial_swiginit(self, _RWStepElement.new_RWStepElement_RWElementMaterial(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads ElementMaterial
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_ElementMaterial
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWElementMaterial_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_ElementMaterial
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWElementMaterial_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes ElementMaterial
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_ElementMaterial
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWElementMaterial_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWElementMaterial
RWStepElement_RWElementMaterial.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWElementMaterial_ReadStep, None, RWStepElement_RWElementMaterial)
RWStepElement_RWElementMaterial.Share = new_instancemethod(_RWStepElement.RWStepElement_RWElementMaterial_Share, None, RWStepElement_RWElementMaterial)
RWStepElement_RWElementMaterial.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWElementMaterial_WriteStep, None, RWStepElement_RWElementMaterial)
RWStepElement_RWElementMaterial_swigregister = _RWStepElement.RWStepElement_RWElementMaterial_swigregister
RWStepElement_RWElementMaterial_swigregister(RWStepElement_RWElementMaterial)

class RWStepElement_RWSurface3dElementDescriptor(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_swiginit(self, _RWStepElement.new_RWStepElement_RWSurface3dElementDescriptor(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Surface3dElementDescriptor
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_Surface3dElementDescriptor
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_Surface3dElementDescriptor
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Surface3dElementDescriptor
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_Surface3dElementDescriptor
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurface3dElementDescriptor
RWStepElement_RWSurface3dElementDescriptor.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurface3dElementDescriptor_ReadStep, None, RWStepElement_RWSurface3dElementDescriptor)
RWStepElement_RWSurface3dElementDescriptor.Share = new_instancemethod(_RWStepElement.RWStepElement_RWSurface3dElementDescriptor_Share, None, RWStepElement_RWSurface3dElementDescriptor)
RWStepElement_RWSurface3dElementDescriptor.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurface3dElementDescriptor_WriteStep, None, RWStepElement_RWSurface3dElementDescriptor)
RWStepElement_RWSurface3dElementDescriptor_swigregister = _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_swigregister
RWStepElement_RWSurface3dElementDescriptor_swigregister(RWStepElement_RWSurface3dElementDescriptor)

class RWStepElement_RWSurfaceElementProperty(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWSurfaceElementProperty_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceElementProperty(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads SurfaceElementProperty
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_SurfaceElementProperty
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceElementProperty_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_SurfaceElementProperty
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceElementProperty_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes SurfaceElementProperty
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_SurfaceElementProperty
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceElementProperty_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceElementProperty
RWStepElement_RWSurfaceElementProperty.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceElementProperty_ReadStep, None, RWStepElement_RWSurfaceElementProperty)
RWStepElement_RWSurfaceElementProperty.Share = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceElementProperty_Share, None, RWStepElement_RWSurfaceElementProperty)
RWStepElement_RWSurfaceElementProperty.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceElementProperty_WriteStep, None, RWStepElement_RWSurfaceElementProperty)
RWStepElement_RWSurfaceElementProperty_swigregister = _RWStepElement.RWStepElement_RWSurfaceElementProperty_swigregister
RWStepElement_RWSurfaceElementProperty_swigregister(RWStepElement_RWSurfaceElementProperty)

class RWStepElement_RWSurfaceSection(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWSurfaceSection_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceSection(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads SurfaceSection
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_SurfaceSection
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSection_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_SurfaceSection
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSection_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes SurfaceSection
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_SurfaceSection
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSection_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSection
RWStepElement_RWSurfaceSection.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSection_ReadStep, None, RWStepElement_RWSurfaceSection)
RWStepElement_RWSurfaceSection.Share = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSection_Share, None, RWStepElement_RWSurfaceSection)
RWStepElement_RWSurfaceSection.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSection_WriteStep, None, RWStepElement_RWSurfaceSection)
RWStepElement_RWSurfaceSection_swigregister = _RWStepElement.RWStepElement_RWSurfaceSection_swigregister
RWStepElement_RWSurfaceSection_swigregister(RWStepElement_RWSurfaceSection)

class RWStepElement_RWSurfaceSectionField(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWSurfaceSectionField_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceSectionField(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads SurfaceSectionField
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_SurfaceSectionField
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionField_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_SurfaceSectionField
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionField_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes SurfaceSectionField
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_SurfaceSectionField
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionField_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSectionField
RWStepElement_RWSurfaceSectionField.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSectionField_ReadStep, None, RWStepElement_RWSurfaceSectionField)
RWStepElement_RWSurfaceSectionField.Share = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSectionField_Share, None, RWStepElement_RWSurfaceSectionField)
RWStepElement_RWSurfaceSectionField.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSectionField_WriteStep, None, RWStepElement_RWSurfaceSectionField)
RWStepElement_RWSurfaceSectionField_swigregister = _RWStepElement.RWStepElement_RWSurfaceSectionField_swigregister
RWStepElement_RWSurfaceSectionField_swigregister(RWStepElement_RWSurfaceSectionField)

class RWStepElement_RWSurfaceSectionFieldConstant(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceSectionFieldConstant(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads SurfaceSectionFieldConstant
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_SurfaceSectionFieldConstant
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_SurfaceSectionFieldConstant
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes SurfaceSectionFieldConstant
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_SurfaceSectionFieldConstant
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSectionFieldConstant
RWStepElement_RWSurfaceSectionFieldConstant.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_ReadStep, None, RWStepElement_RWSurfaceSectionFieldConstant)
RWStepElement_RWSurfaceSectionFieldConstant.Share = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_Share, None, RWStepElement_RWSurfaceSectionFieldConstant)
RWStepElement_RWSurfaceSectionFieldConstant.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_WriteStep, None, RWStepElement_RWSurfaceSectionFieldConstant)
RWStepElement_RWSurfaceSectionFieldConstant_swigregister = _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_swigregister
RWStepElement_RWSurfaceSectionFieldConstant_swigregister(RWStepElement_RWSurfaceSectionFieldConstant)

class RWStepElement_RWSurfaceSectionFieldVarying(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceSectionFieldVarying(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads SurfaceSectionFieldVarying
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_SurfaceSectionFieldVarying
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_SurfaceSectionFieldVarying
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes SurfaceSectionFieldVarying
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_SurfaceSectionFieldVarying
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSectionFieldVarying
RWStepElement_RWSurfaceSectionFieldVarying.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_ReadStep, None, RWStepElement_RWSurfaceSectionFieldVarying)
RWStepElement_RWSurfaceSectionFieldVarying.Share = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_Share, None, RWStepElement_RWSurfaceSectionFieldVarying)
RWStepElement_RWSurfaceSectionFieldVarying.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_WriteStep, None, RWStepElement_RWSurfaceSectionFieldVarying)
RWStepElement_RWSurfaceSectionFieldVarying_swigregister = _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_swigregister
RWStepElement_RWSurfaceSectionFieldVarying_swigregister(RWStepElement_RWSurfaceSectionFieldVarying)

class RWStepElement_RWUniformSurfaceSection(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWUniformSurfaceSection_swiginit(self, _RWStepElement.new_RWStepElement_RWUniformSurfaceSection(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads UniformSurfaceSection
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_UniformSurfaceSection
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWUniformSurfaceSection_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_UniformSurfaceSection
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWUniformSurfaceSection_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes UniformSurfaceSection
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_UniformSurfaceSection
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWUniformSurfaceSection_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWUniformSurfaceSection
RWStepElement_RWUniformSurfaceSection.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWUniformSurfaceSection_ReadStep, None, RWStepElement_RWUniformSurfaceSection)
RWStepElement_RWUniformSurfaceSection.Share = new_instancemethod(_RWStepElement.RWStepElement_RWUniformSurfaceSection_Share, None, RWStepElement_RWUniformSurfaceSection)
RWStepElement_RWUniformSurfaceSection.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWUniformSurfaceSection_WriteStep, None, RWStepElement_RWUniformSurfaceSection)
RWStepElement_RWUniformSurfaceSection_swigregister = _RWStepElement.RWStepElement_RWUniformSurfaceSection_swigregister
RWStepElement_RWUniformSurfaceSection_swigregister(RWStepElement_RWUniformSurfaceSection)

class RWStepElement_RWVolume3dElementDescriptor(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_swiginit(self, _RWStepElement.new_RWStepElement_RWVolume3dElementDescriptor(*args))

    def ReadStep(self, *args) -> "void":
        """
        * Reads Volume3dElementDescriptor
        	:param data:
        	:type data: StepData_StepReaderData
        	:param num:
        	:type num: int
        	:param ach:
        	:type ach: Interface_Check
        	:param ent:
        	:type ent: StepElement_Volume3dElementDescriptor
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        * Fills data for graph (shared items)
        	:param ent:
        	:type ent: StepElement_Volume3dElementDescriptor
        	:param iter:
        	:type iter: Interface_EntityIterator
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        * Writes Volume3dElementDescriptor
        	:param SW:
        	:type SW: StepData_StepWriter
        	:param ent:
        	:type ent: StepElement_Volume3dElementDescriptor
        	:rtype: None
        """
        return _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWVolume3dElementDescriptor
RWStepElement_RWVolume3dElementDescriptor.ReadStep = new_instancemethod(_RWStepElement.RWStepElement_RWVolume3dElementDescriptor_ReadStep, None, RWStepElement_RWVolume3dElementDescriptor)
RWStepElement_RWVolume3dElementDescriptor.Share = new_instancemethod(_RWStepElement.RWStepElement_RWVolume3dElementDescriptor_Share, None, RWStepElement_RWVolume3dElementDescriptor)
RWStepElement_RWVolume3dElementDescriptor.WriteStep = new_instancemethod(_RWStepElement.RWStepElement_RWVolume3dElementDescriptor_WriteStep, None, RWStepElement_RWVolume3dElementDescriptor)
RWStepElement_RWVolume3dElementDescriptor_swigregister = _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_swigregister
RWStepElement_RWVolume3dElementDescriptor_swigregister(RWStepElement_RWVolume3dElementDescriptor)



