# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepDimTol module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepdimtol.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StepDimTol.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StepDimTol')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StepDimTol')
    _StepDimTol = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepDimTol', [dirname(__file__)])
        except ImportError:
            import _StepDimTol
            return _StepDimTol
        try:
            _mod = imp.load_module('_StepDimTol', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _StepDimTol = swig_import_helper()
    del swig_import_helper
else:
    import _StepDimTol
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepDimTol.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_StepDimTol.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_StepDimTol.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_StepDimTol.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_StepDimTol.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_StepDimTol.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_StepDimTol.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_StepDimTol.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_StepDimTol.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_StepDimTol.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_StepDimTol.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_StepDimTol.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_StepDimTol.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_StepDimTol.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_StepDimTol.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_StepDimTol.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_StepDimTol.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _StepDimTol.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _StepDimTol.process_exception(error, method_name, class_name)
process_exception = _StepDimTol.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepRepr
import OCC.Core.TCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepBasic
import OCC.Core.StepShape
import OCC.Core.StepGeom
StepDimTol_MaximumMaterialCondition = _StepDimTol.StepDimTol_MaximumMaterialCondition
StepDimTol_LeastMaterialCondition = _StepDimTol.StepDimTol_LeastMaterialCondition
StepDimTol_RegardlessOfFeatureSize = _StepDimTol.StepDimTol_RegardlessOfFeatureSize
StepDimTol_GTTAngularityTolerance = _StepDimTol.StepDimTol_GTTAngularityTolerance
StepDimTol_GTTCircularRunoutTolerance = _StepDimTol.StepDimTol_GTTCircularRunoutTolerance
StepDimTol_GTTCoaxialityTolerance = _StepDimTol.StepDimTol_GTTCoaxialityTolerance
StepDimTol_GTTConcentricityTolerance = _StepDimTol.StepDimTol_GTTConcentricityTolerance
StepDimTol_GTTCylindricityTolerance = _StepDimTol.StepDimTol_GTTCylindricityTolerance
StepDimTol_GTTFlatnessTolerance = _StepDimTol.StepDimTol_GTTFlatnessTolerance
StepDimTol_GTTLineProfileTolerance = _StepDimTol.StepDimTol_GTTLineProfileTolerance
StepDimTol_GTTParallelismTolerance = _StepDimTol.StepDimTol_GTTParallelismTolerance
StepDimTol_GTTPerpendicularityTolerance = _StepDimTol.StepDimTol_GTTPerpendicularityTolerance
StepDimTol_GTTPositionTolerance = _StepDimTol.StepDimTol_GTTPositionTolerance
StepDimTol_GTTRoundnessTolerance = _StepDimTol.StepDimTol_GTTRoundnessTolerance
StepDimTol_GTTStraightnessTolerance = _StepDimTol.StepDimTol_GTTStraightnessTolerance
StepDimTol_GTTSurfaceProfileTolerance = _StepDimTol.StepDimTol_GTTSurfaceProfileTolerance
StepDimTol_GTTSymmetryTolerance = _StepDimTol.StepDimTol_GTTSymmetryTolerance
StepDimTol_GTTTotalRunoutTolerance = _StepDimTol.StepDimTol_GTTTotalRunoutTolerance
StepDimTol_CircularOrCylindrical = _StepDimTol.StepDimTol_CircularOrCylindrical
StepDimTol_Distance = _StepDimTol.StepDimTol_Distance
StepDimTol_Projected = _StepDimTol.StepDimTol_Projected
StepDimTol_Spherical = _StepDimTol.StepDimTol_Spherical
StepDimTol_SDRMAnyCrossSection = _StepDimTol.StepDimTol_SDRMAnyCrossSection
StepDimTol_SDRMAnyLongitudinalSection = _StepDimTol.StepDimTol_SDRMAnyLongitudinalSection
StepDimTol_SDRMBasic = _StepDimTol.StepDimTol_SDRMBasic
StepDimTol_SDRMContactingFeature = _StepDimTol.StepDimTol_SDRMContactingFeature
StepDimTol_SDRMDegreeOfFreedomConstraintU = _StepDimTol.StepDimTol_SDRMDegreeOfFreedomConstraintU
StepDimTol_SDRMDegreeOfFreedomConstraintV = _StepDimTol.StepDimTol_SDRMDegreeOfFreedomConstraintV
StepDimTol_SDRMDegreeOfFreedomConstraintW = _StepDimTol.StepDimTol_SDRMDegreeOfFreedomConstraintW
StepDimTol_SDRMDegreeOfFreedomConstraintX = _StepDimTol.StepDimTol_SDRMDegreeOfFreedomConstraintX
StepDimTol_SDRMDegreeOfFreedomConstraintY = _StepDimTol.StepDimTol_SDRMDegreeOfFreedomConstraintY
StepDimTol_SDRMDegreeOfFreedomConstraintZ = _StepDimTol.StepDimTol_SDRMDegreeOfFreedomConstraintZ
StepDimTol_SDRMDistanceVariable = _StepDimTol.StepDimTol_SDRMDistanceVariable
StepDimTol_SDRMFreeState = _StepDimTol.StepDimTol_SDRMFreeState
StepDimTol_SDRMLeastMaterialRequirement = _StepDimTol.StepDimTol_SDRMLeastMaterialRequirement
StepDimTol_SDRMLine = _StepDimTol.StepDimTol_SDRMLine
StepDimTol_SDRMMajorDiameter = _StepDimTol.StepDimTol_SDRMMajorDiameter
StepDimTol_SDRMMaximumMaterialRequirement = _StepDimTol.StepDimTol_SDRMMaximumMaterialRequirement
StepDimTol_SDRMMinorDiameter = _StepDimTol.StepDimTol_SDRMMinorDiameter
StepDimTol_SDRMOrientation = _StepDimTol.StepDimTol_SDRMOrientation
StepDimTol_SDRMPitchDiameter = _StepDimTol.StepDimTol_SDRMPitchDiameter
StepDimTol_SDRMPlane = _StepDimTol.StepDimTol_SDRMPlane
StepDimTol_SDRMPoint = _StepDimTol.StepDimTol_SDRMPoint
StepDimTol_SDRMTranslation = _StepDimTol.StepDimTol_SDRMTranslation
StepDimTol_Circular = _StepDimTol.StepDimTol_Circular
StepDimTol_Rectangular = _StepDimTol.StepDimTol_Rectangular
StepDimTol_Square = _StepDimTol.StepDimTol_Square
StepDimTol_GTMAnyCrossSection = _StepDimTol.StepDimTol_GTMAnyCrossSection
StepDimTol_GTMCommonZone = _StepDimTol.StepDimTol_GTMCommonZone
StepDimTol_GTMEachRadialElement = _StepDimTol.StepDimTol_GTMEachRadialElement
StepDimTol_GTMFreeState = _StepDimTol.StepDimTol_GTMFreeState
StepDimTol_GTMLeastMaterialRequirement = _StepDimTol.StepDimTol_GTMLeastMaterialRequirement
StepDimTol_GTMLineElement = _StepDimTol.StepDimTol_GTMLineElement
StepDimTol_GTMMajorDiameter = _StepDimTol.StepDimTol_GTMMajorDiameter
StepDimTol_GTMMaximumMaterialRequirement = _StepDimTol.StepDimTol_GTMMaximumMaterialRequirement
StepDimTol_GTMMinorDiameter = _StepDimTol.StepDimTol_GTMMinorDiameter
StepDimTol_GTMNotConvex = _StepDimTol.StepDimTol_GTMNotConvex
StepDimTol_GTMPitchDiameter = _StepDimTol.StepDimTol_GTMPitchDiameter
StepDimTol_GTMReciprocityRequirement = _StepDimTol.StepDimTol_GTMReciprocityRequirement
StepDimTol_GTMSeparateRequirement = _StepDimTol.StepDimTol_GTMSeparateRequirement
StepDimTol_GTMStatisticalTolerance = _StepDimTol.StepDimTol_GTMStatisticalTolerance
StepDimTol_GTMTangentPlane = _StepDimTol.StepDimTol_GTMTangentPlane

def Handle_StepDimTol_CommonDatum_Create() -> "opencascade::handle< StepDimTol_CommonDatum >":
    return _StepDimTol.Handle_StepDimTol_CommonDatum_Create()
Handle_StepDimTol_CommonDatum_Create = _StepDimTol.Handle_StepDimTol_CommonDatum_Create

def Handle_StepDimTol_CommonDatum_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_CommonDatum >":
    return _StepDimTol.Handle_StepDimTol_CommonDatum_DownCast(t)
Handle_StepDimTol_CommonDatum_DownCast = _StepDimTol.Handle_StepDimTol_CommonDatum_DownCast

def Handle_StepDimTol_CommonDatum_IsNull(t: 'opencascade::handle< StepDimTol_CommonDatum > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_CommonDatum_IsNull(t)
Handle_StepDimTol_CommonDatum_IsNull = _StepDimTol.Handle_StepDimTol_CommonDatum_IsNull

def Handle_StepDimTol_Datum_Create() -> "opencascade::handle< StepDimTol_Datum >":
    return _StepDimTol.Handle_StepDimTol_Datum_Create()
Handle_StepDimTol_Datum_Create = _StepDimTol.Handle_StepDimTol_Datum_Create

def Handle_StepDimTol_Datum_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_Datum >":
    return _StepDimTol.Handle_StepDimTol_Datum_DownCast(t)
Handle_StepDimTol_Datum_DownCast = _StepDimTol.Handle_StepDimTol_Datum_DownCast

def Handle_StepDimTol_Datum_IsNull(t: 'opencascade::handle< StepDimTol_Datum > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_Datum_IsNull(t)
Handle_StepDimTol_Datum_IsNull = _StepDimTol.Handle_StepDimTol_Datum_IsNull

def Handle_StepDimTol_DatumFeature_Create() -> "opencascade::handle< StepDimTol_DatumFeature >":
    return _StepDimTol.Handle_StepDimTol_DatumFeature_Create()
Handle_StepDimTol_DatumFeature_Create = _StepDimTol.Handle_StepDimTol_DatumFeature_Create

def Handle_StepDimTol_DatumFeature_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_DatumFeature >":
    return _StepDimTol.Handle_StepDimTol_DatumFeature_DownCast(t)
Handle_StepDimTol_DatumFeature_DownCast = _StepDimTol.Handle_StepDimTol_DatumFeature_DownCast

def Handle_StepDimTol_DatumFeature_IsNull(t: 'opencascade::handle< StepDimTol_DatumFeature > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_DatumFeature_IsNull(t)
Handle_StepDimTol_DatumFeature_IsNull = _StepDimTol.Handle_StepDimTol_DatumFeature_IsNull

def Handle_StepDimTol_DatumReference_Create() -> "opencascade::handle< StepDimTol_DatumReference >":
    return _StepDimTol.Handle_StepDimTol_DatumReference_Create()
Handle_StepDimTol_DatumReference_Create = _StepDimTol.Handle_StepDimTol_DatumReference_Create

def Handle_StepDimTol_DatumReference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_DatumReference >":
    return _StepDimTol.Handle_StepDimTol_DatumReference_DownCast(t)
Handle_StepDimTol_DatumReference_DownCast = _StepDimTol.Handle_StepDimTol_DatumReference_DownCast

def Handle_StepDimTol_DatumReference_IsNull(t: 'opencascade::handle< StepDimTol_DatumReference > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_DatumReference_IsNull(t)
Handle_StepDimTol_DatumReference_IsNull = _StepDimTol.Handle_StepDimTol_DatumReference_IsNull

def Handle_StepDimTol_DatumReferenceModifierWithValue_Create() -> "opencascade::handle< StepDimTol_DatumReferenceModifierWithValue >":
    return _StepDimTol.Handle_StepDimTol_DatumReferenceModifierWithValue_Create()
Handle_StepDimTol_DatumReferenceModifierWithValue_Create = _StepDimTol.Handle_StepDimTol_DatumReferenceModifierWithValue_Create

def Handle_StepDimTol_DatumReferenceModifierWithValue_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_DatumReferenceModifierWithValue >":
    return _StepDimTol.Handle_StepDimTol_DatumReferenceModifierWithValue_DownCast(t)
Handle_StepDimTol_DatumReferenceModifierWithValue_DownCast = _StepDimTol.Handle_StepDimTol_DatumReferenceModifierWithValue_DownCast

def Handle_StepDimTol_DatumReferenceModifierWithValue_IsNull(t: 'opencascade::handle< StepDimTol_DatumReferenceModifierWithValue > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_DatumReferenceModifierWithValue_IsNull(t)
Handle_StepDimTol_DatumReferenceModifierWithValue_IsNull = _StepDimTol.Handle_StepDimTol_DatumReferenceModifierWithValue_IsNull

def Handle_StepDimTol_DatumSystem_Create() -> "opencascade::handle< StepDimTol_DatumSystem >":
    return _StepDimTol.Handle_StepDimTol_DatumSystem_Create()
Handle_StepDimTol_DatumSystem_Create = _StepDimTol.Handle_StepDimTol_DatumSystem_Create

def Handle_StepDimTol_DatumSystem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_DatumSystem >":
    return _StepDimTol.Handle_StepDimTol_DatumSystem_DownCast(t)
Handle_StepDimTol_DatumSystem_DownCast = _StepDimTol.Handle_StepDimTol_DatumSystem_DownCast

def Handle_StepDimTol_DatumSystem_IsNull(t: 'opencascade::handle< StepDimTol_DatumSystem > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_DatumSystem_IsNull(t)
Handle_StepDimTol_DatumSystem_IsNull = _StepDimTol.Handle_StepDimTol_DatumSystem_IsNull

def Handle_StepDimTol_DatumTarget_Create() -> "opencascade::handle< StepDimTol_DatumTarget >":
    return _StepDimTol.Handle_StepDimTol_DatumTarget_Create()
Handle_StepDimTol_DatumTarget_Create = _StepDimTol.Handle_StepDimTol_DatumTarget_Create

def Handle_StepDimTol_DatumTarget_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_DatumTarget >":
    return _StepDimTol.Handle_StepDimTol_DatumTarget_DownCast(t)
Handle_StepDimTol_DatumTarget_DownCast = _StepDimTol.Handle_StepDimTol_DatumTarget_DownCast

def Handle_StepDimTol_DatumTarget_IsNull(t: 'opencascade::handle< StepDimTol_DatumTarget > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_DatumTarget_IsNull(t)
Handle_StepDimTol_DatumTarget_IsNull = _StepDimTol.Handle_StepDimTol_DatumTarget_IsNull

def Handle_StepDimTol_GeneralDatumReference_Create() -> "opencascade::handle< StepDimTol_GeneralDatumReference >":
    return _StepDimTol.Handle_StepDimTol_GeneralDatumReference_Create()
Handle_StepDimTol_GeneralDatumReference_Create = _StepDimTol.Handle_StepDimTol_GeneralDatumReference_Create

def Handle_StepDimTol_GeneralDatumReference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeneralDatumReference >":
    return _StepDimTol.Handle_StepDimTol_GeneralDatumReference_DownCast(t)
Handle_StepDimTol_GeneralDatumReference_DownCast = _StepDimTol.Handle_StepDimTol_GeneralDatumReference_DownCast

def Handle_StepDimTol_GeneralDatumReference_IsNull(t: 'opencascade::handle< StepDimTol_GeneralDatumReference > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeneralDatumReference_IsNull(t)
Handle_StepDimTol_GeneralDatumReference_IsNull = _StepDimTol.Handle_StepDimTol_GeneralDatumReference_IsNull

def Handle_StepDimTol_GeometricTolerance_Create() -> "opencascade::handle< StepDimTol_GeometricTolerance >":
    return _StepDimTol.Handle_StepDimTol_GeometricTolerance_Create()
Handle_StepDimTol_GeometricTolerance_Create = _StepDimTol.Handle_StepDimTol_GeometricTolerance_Create

def Handle_StepDimTol_GeometricTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeometricTolerance >":
    return _StepDimTol.Handle_StepDimTol_GeometricTolerance_DownCast(t)
Handle_StepDimTol_GeometricTolerance_DownCast = _StepDimTol.Handle_StepDimTol_GeometricTolerance_DownCast

def Handle_StepDimTol_GeometricTolerance_IsNull(t: 'opencascade::handle< StepDimTol_GeometricTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeometricTolerance_IsNull(t)
Handle_StepDimTol_GeometricTolerance_IsNull = _StepDimTol.Handle_StepDimTol_GeometricTolerance_IsNull

def Handle_StepDimTol_GeometricToleranceRelationship_Create() -> "opencascade::handle< StepDimTol_GeometricToleranceRelationship >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceRelationship_Create()
Handle_StepDimTol_GeometricToleranceRelationship_Create = _StepDimTol.Handle_StepDimTol_GeometricToleranceRelationship_Create

def Handle_StepDimTol_GeometricToleranceRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeometricToleranceRelationship >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceRelationship_DownCast(t)
Handle_StepDimTol_GeometricToleranceRelationship_DownCast = _StepDimTol.Handle_StepDimTol_GeometricToleranceRelationship_DownCast

def Handle_StepDimTol_GeometricToleranceRelationship_IsNull(t: 'opencascade::handle< StepDimTol_GeometricToleranceRelationship > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceRelationship_IsNull(t)
Handle_StepDimTol_GeometricToleranceRelationship_IsNull = _StepDimTol.Handle_StepDimTol_GeometricToleranceRelationship_IsNull

def Handle_StepDimTol_RunoutZoneOrientation_Create() -> "opencascade::handle< StepDimTol_RunoutZoneOrientation >":
    return _StepDimTol.Handle_StepDimTol_RunoutZoneOrientation_Create()
Handle_StepDimTol_RunoutZoneOrientation_Create = _StepDimTol.Handle_StepDimTol_RunoutZoneOrientation_Create

def Handle_StepDimTol_RunoutZoneOrientation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_RunoutZoneOrientation >":
    return _StepDimTol.Handle_StepDimTol_RunoutZoneOrientation_DownCast(t)
Handle_StepDimTol_RunoutZoneOrientation_DownCast = _StepDimTol.Handle_StepDimTol_RunoutZoneOrientation_DownCast

def Handle_StepDimTol_RunoutZoneOrientation_IsNull(t: 'opencascade::handle< StepDimTol_RunoutZoneOrientation > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_RunoutZoneOrientation_IsNull(t)
Handle_StepDimTol_RunoutZoneOrientation_IsNull = _StepDimTol.Handle_StepDimTol_RunoutZoneOrientation_IsNull

def Handle_StepDimTol_SimpleDatumReferenceModifierMember_Create() -> "opencascade::handle< StepDimTol_SimpleDatumReferenceModifierMember >":
    return _StepDimTol.Handle_StepDimTol_SimpleDatumReferenceModifierMember_Create()
Handle_StepDimTol_SimpleDatumReferenceModifierMember_Create = _StepDimTol.Handle_StepDimTol_SimpleDatumReferenceModifierMember_Create

def Handle_StepDimTol_SimpleDatumReferenceModifierMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_SimpleDatumReferenceModifierMember >":
    return _StepDimTol.Handle_StepDimTol_SimpleDatumReferenceModifierMember_DownCast(t)
Handle_StepDimTol_SimpleDatumReferenceModifierMember_DownCast = _StepDimTol.Handle_StepDimTol_SimpleDatumReferenceModifierMember_DownCast

def Handle_StepDimTol_SimpleDatumReferenceModifierMember_IsNull(t: 'opencascade::handle< StepDimTol_SimpleDatumReferenceModifierMember > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_SimpleDatumReferenceModifierMember_IsNull(t)
Handle_StepDimTol_SimpleDatumReferenceModifierMember_IsNull = _StepDimTol.Handle_StepDimTol_SimpleDatumReferenceModifierMember_IsNull

def Handle_StepDimTol_ToleranceZone_Create() -> "opencascade::handle< StepDimTol_ToleranceZone >":
    return _StepDimTol.Handle_StepDimTol_ToleranceZone_Create()
Handle_StepDimTol_ToleranceZone_Create = _StepDimTol.Handle_StepDimTol_ToleranceZone_Create

def Handle_StepDimTol_ToleranceZone_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_ToleranceZone >":
    return _StepDimTol.Handle_StepDimTol_ToleranceZone_DownCast(t)
Handle_StepDimTol_ToleranceZone_DownCast = _StepDimTol.Handle_StepDimTol_ToleranceZone_DownCast

def Handle_StepDimTol_ToleranceZone_IsNull(t: 'opencascade::handle< StepDimTol_ToleranceZone > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_ToleranceZone_IsNull(t)
Handle_StepDimTol_ToleranceZone_IsNull = _StepDimTol.Handle_StepDimTol_ToleranceZone_IsNull

def Handle_StepDimTol_ToleranceZoneDefinition_Create() -> "opencascade::handle< StepDimTol_ToleranceZoneDefinition >":
    return _StepDimTol.Handle_StepDimTol_ToleranceZoneDefinition_Create()
Handle_StepDimTol_ToleranceZoneDefinition_Create = _StepDimTol.Handle_StepDimTol_ToleranceZoneDefinition_Create

def Handle_StepDimTol_ToleranceZoneDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_ToleranceZoneDefinition >":
    return _StepDimTol.Handle_StepDimTol_ToleranceZoneDefinition_DownCast(t)
Handle_StepDimTol_ToleranceZoneDefinition_DownCast = _StepDimTol.Handle_StepDimTol_ToleranceZoneDefinition_DownCast

def Handle_StepDimTol_ToleranceZoneDefinition_IsNull(t: 'opencascade::handle< StepDimTol_ToleranceZoneDefinition > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_ToleranceZoneDefinition_IsNull(t)
Handle_StepDimTol_ToleranceZoneDefinition_IsNull = _StepDimTol.Handle_StepDimTol_ToleranceZoneDefinition_IsNull

def Handle_StepDimTol_ToleranceZoneForm_Create() -> "opencascade::handle< StepDimTol_ToleranceZoneForm >":
    return _StepDimTol.Handle_StepDimTol_ToleranceZoneForm_Create()
Handle_StepDimTol_ToleranceZoneForm_Create = _StepDimTol.Handle_StepDimTol_ToleranceZoneForm_Create

def Handle_StepDimTol_ToleranceZoneForm_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_ToleranceZoneForm >":
    return _StepDimTol.Handle_StepDimTol_ToleranceZoneForm_DownCast(t)
Handle_StepDimTol_ToleranceZoneForm_DownCast = _StepDimTol.Handle_StepDimTol_ToleranceZoneForm_DownCast

def Handle_StepDimTol_ToleranceZoneForm_IsNull(t: 'opencascade::handle< StepDimTol_ToleranceZoneForm > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_ToleranceZoneForm_IsNull(t)
Handle_StepDimTol_ToleranceZoneForm_IsNull = _StepDimTol.Handle_StepDimTol_ToleranceZoneForm_IsNull

def Handle_StepDimTol_CylindricityTolerance_Create() -> "opencascade::handle< StepDimTol_CylindricityTolerance >":
    return _StepDimTol.Handle_StepDimTol_CylindricityTolerance_Create()
Handle_StepDimTol_CylindricityTolerance_Create = _StepDimTol.Handle_StepDimTol_CylindricityTolerance_Create

def Handle_StepDimTol_CylindricityTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_CylindricityTolerance >":
    return _StepDimTol.Handle_StepDimTol_CylindricityTolerance_DownCast(t)
Handle_StepDimTol_CylindricityTolerance_DownCast = _StepDimTol.Handle_StepDimTol_CylindricityTolerance_DownCast

def Handle_StepDimTol_CylindricityTolerance_IsNull(t: 'opencascade::handle< StepDimTol_CylindricityTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_CylindricityTolerance_IsNull(t)
Handle_StepDimTol_CylindricityTolerance_IsNull = _StepDimTol.Handle_StepDimTol_CylindricityTolerance_IsNull

def Handle_StepDimTol_DatumReferenceCompartment_Create() -> "opencascade::handle< StepDimTol_DatumReferenceCompartment >":
    return _StepDimTol.Handle_StepDimTol_DatumReferenceCompartment_Create()
Handle_StepDimTol_DatumReferenceCompartment_Create = _StepDimTol.Handle_StepDimTol_DatumReferenceCompartment_Create

def Handle_StepDimTol_DatumReferenceCompartment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_DatumReferenceCompartment >":
    return _StepDimTol.Handle_StepDimTol_DatumReferenceCompartment_DownCast(t)
Handle_StepDimTol_DatumReferenceCompartment_DownCast = _StepDimTol.Handle_StepDimTol_DatumReferenceCompartment_DownCast

def Handle_StepDimTol_DatumReferenceCompartment_IsNull(t: 'opencascade::handle< StepDimTol_DatumReferenceCompartment > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_DatumReferenceCompartment_IsNull(t)
Handle_StepDimTol_DatumReferenceCompartment_IsNull = _StepDimTol.Handle_StepDimTol_DatumReferenceCompartment_IsNull

def Handle_StepDimTol_DatumReferenceElement_Create() -> "opencascade::handle< StepDimTol_DatumReferenceElement >":
    return _StepDimTol.Handle_StepDimTol_DatumReferenceElement_Create()
Handle_StepDimTol_DatumReferenceElement_Create = _StepDimTol.Handle_StepDimTol_DatumReferenceElement_Create

def Handle_StepDimTol_DatumReferenceElement_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_DatumReferenceElement >":
    return _StepDimTol.Handle_StepDimTol_DatumReferenceElement_DownCast(t)
Handle_StepDimTol_DatumReferenceElement_DownCast = _StepDimTol.Handle_StepDimTol_DatumReferenceElement_DownCast

def Handle_StepDimTol_DatumReferenceElement_IsNull(t: 'opencascade::handle< StepDimTol_DatumReferenceElement > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_DatumReferenceElement_IsNull(t)
Handle_StepDimTol_DatumReferenceElement_IsNull = _StepDimTol.Handle_StepDimTol_DatumReferenceElement_IsNull

def Handle_StepDimTol_FlatnessTolerance_Create() -> "opencascade::handle< StepDimTol_FlatnessTolerance >":
    return _StepDimTol.Handle_StepDimTol_FlatnessTolerance_Create()
Handle_StepDimTol_FlatnessTolerance_Create = _StepDimTol.Handle_StepDimTol_FlatnessTolerance_Create

def Handle_StepDimTol_FlatnessTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_FlatnessTolerance >":
    return _StepDimTol.Handle_StepDimTol_FlatnessTolerance_DownCast(t)
Handle_StepDimTol_FlatnessTolerance_DownCast = _StepDimTol.Handle_StepDimTol_FlatnessTolerance_DownCast

def Handle_StepDimTol_FlatnessTolerance_IsNull(t: 'opencascade::handle< StepDimTol_FlatnessTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_FlatnessTolerance_IsNull(t)
Handle_StepDimTol_FlatnessTolerance_IsNull = _StepDimTol.Handle_StepDimTol_FlatnessTolerance_IsNull

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_Create() -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRef >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_Create()
Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_Create = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_Create

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRef >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_DownCast(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_DownCast = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_DownCast

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_IsNull(t: 'opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRef > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_IsNull(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_IsNull = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_IsNull

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_Create() -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_Create()
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_Create = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_Create

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_DownCast(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_DownCast = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_DownCast

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_IsNull(t: 'opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_IsNull(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_IsNull = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_IsNull

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_Create() -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_Create()
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_Create = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_Create

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_DownCast(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_DownCast = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_DownCast

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_IsNull(t: 'opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_IsNull(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_IsNull = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_IsNull

def Handle_StepDimTol_GeoTolAndGeoTolWthMod_Create() -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthMod >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMod_Create()
Handle_StepDimTol_GeoTolAndGeoTolWthMod_Create = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMod_Create

def Handle_StepDimTol_GeoTolAndGeoTolWthMod_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthMod >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMod_DownCast(t)
Handle_StepDimTol_GeoTolAndGeoTolWthMod_DownCast = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMod_DownCast

def Handle_StepDimTol_GeoTolAndGeoTolWthMod_IsNull(t: 'opencascade::handle< StepDimTol_GeoTolAndGeoTolWthMod > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMod_IsNull(t)
Handle_StepDimTol_GeoTolAndGeoTolWthMod_IsNull = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMod_IsNull

def Handle_StepDimTol_GeometricToleranceWithDatumReference_Create() -> "opencascade::handle< StepDimTol_GeometricToleranceWithDatumReference >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDatumReference_Create()
Handle_StepDimTol_GeometricToleranceWithDatumReference_Create = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDatumReference_Create

def Handle_StepDimTol_GeometricToleranceWithDatumReference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeometricToleranceWithDatumReference >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDatumReference_DownCast(t)
Handle_StepDimTol_GeometricToleranceWithDatumReference_DownCast = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDatumReference_DownCast

def Handle_StepDimTol_GeometricToleranceWithDatumReference_IsNull(t: 'opencascade::handle< StepDimTol_GeometricToleranceWithDatumReference > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDatumReference_IsNull(t)
Handle_StepDimTol_GeometricToleranceWithDatumReference_IsNull = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDatumReference_IsNull

def Handle_StepDimTol_GeometricToleranceWithDefinedUnit_Create() -> "opencascade::handle< StepDimTol_GeometricToleranceWithDefinedUnit >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedUnit_Create()
Handle_StepDimTol_GeometricToleranceWithDefinedUnit_Create = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedUnit_Create

def Handle_StepDimTol_GeometricToleranceWithDefinedUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeometricToleranceWithDefinedUnit >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedUnit_DownCast(t)
Handle_StepDimTol_GeometricToleranceWithDefinedUnit_DownCast = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedUnit_DownCast

def Handle_StepDimTol_GeometricToleranceWithDefinedUnit_IsNull(t: 'opencascade::handle< StepDimTol_GeometricToleranceWithDefinedUnit > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedUnit_IsNull(t)
Handle_StepDimTol_GeometricToleranceWithDefinedUnit_IsNull = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedUnit_IsNull

def Handle_StepDimTol_GeometricToleranceWithModifiers_Create() -> "opencascade::handle< StepDimTol_GeometricToleranceWithModifiers >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithModifiers_Create()
Handle_StepDimTol_GeometricToleranceWithModifiers_Create = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithModifiers_Create

def Handle_StepDimTol_GeometricToleranceWithModifiers_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeometricToleranceWithModifiers >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithModifiers_DownCast(t)
Handle_StepDimTol_GeometricToleranceWithModifiers_DownCast = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithModifiers_DownCast

def Handle_StepDimTol_GeometricToleranceWithModifiers_IsNull(t: 'opencascade::handle< StepDimTol_GeometricToleranceWithModifiers > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithModifiers_IsNull(t)
Handle_StepDimTol_GeometricToleranceWithModifiers_IsNull = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithModifiers_IsNull

def Handle_StepDimTol_LineProfileTolerance_Create() -> "opencascade::handle< StepDimTol_LineProfileTolerance >":
    return _StepDimTol.Handle_StepDimTol_LineProfileTolerance_Create()
Handle_StepDimTol_LineProfileTolerance_Create = _StepDimTol.Handle_StepDimTol_LineProfileTolerance_Create

def Handle_StepDimTol_LineProfileTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_LineProfileTolerance >":
    return _StepDimTol.Handle_StepDimTol_LineProfileTolerance_DownCast(t)
Handle_StepDimTol_LineProfileTolerance_DownCast = _StepDimTol.Handle_StepDimTol_LineProfileTolerance_DownCast

def Handle_StepDimTol_LineProfileTolerance_IsNull(t: 'opencascade::handle< StepDimTol_LineProfileTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_LineProfileTolerance_IsNull(t)
Handle_StepDimTol_LineProfileTolerance_IsNull = _StepDimTol.Handle_StepDimTol_LineProfileTolerance_IsNull

def Handle_StepDimTol_ModifiedGeometricTolerance_Create() -> "opencascade::handle< StepDimTol_ModifiedGeometricTolerance >":
    return _StepDimTol.Handle_StepDimTol_ModifiedGeometricTolerance_Create()
Handle_StepDimTol_ModifiedGeometricTolerance_Create = _StepDimTol.Handle_StepDimTol_ModifiedGeometricTolerance_Create

def Handle_StepDimTol_ModifiedGeometricTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_ModifiedGeometricTolerance >":
    return _StepDimTol.Handle_StepDimTol_ModifiedGeometricTolerance_DownCast(t)
Handle_StepDimTol_ModifiedGeometricTolerance_DownCast = _StepDimTol.Handle_StepDimTol_ModifiedGeometricTolerance_DownCast

def Handle_StepDimTol_ModifiedGeometricTolerance_IsNull(t: 'opencascade::handle< StepDimTol_ModifiedGeometricTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_ModifiedGeometricTolerance_IsNull(t)
Handle_StepDimTol_ModifiedGeometricTolerance_IsNull = _StepDimTol.Handle_StepDimTol_ModifiedGeometricTolerance_IsNull

def Handle_StepDimTol_NonUniformZoneDefinition_Create() -> "opencascade::handle< StepDimTol_NonUniformZoneDefinition >":
    return _StepDimTol.Handle_StepDimTol_NonUniformZoneDefinition_Create()
Handle_StepDimTol_NonUniformZoneDefinition_Create = _StepDimTol.Handle_StepDimTol_NonUniformZoneDefinition_Create

def Handle_StepDimTol_NonUniformZoneDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_NonUniformZoneDefinition >":
    return _StepDimTol.Handle_StepDimTol_NonUniformZoneDefinition_DownCast(t)
Handle_StepDimTol_NonUniformZoneDefinition_DownCast = _StepDimTol.Handle_StepDimTol_NonUniformZoneDefinition_DownCast

def Handle_StepDimTol_NonUniformZoneDefinition_IsNull(t: 'opencascade::handle< StepDimTol_NonUniformZoneDefinition > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_NonUniformZoneDefinition_IsNull(t)
Handle_StepDimTol_NonUniformZoneDefinition_IsNull = _StepDimTol.Handle_StepDimTol_NonUniformZoneDefinition_IsNull

def Handle_StepDimTol_PlacedDatumTargetFeature_Create() -> "opencascade::handle< StepDimTol_PlacedDatumTargetFeature >":
    return _StepDimTol.Handle_StepDimTol_PlacedDatumTargetFeature_Create()
Handle_StepDimTol_PlacedDatumTargetFeature_Create = _StepDimTol.Handle_StepDimTol_PlacedDatumTargetFeature_Create

def Handle_StepDimTol_PlacedDatumTargetFeature_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_PlacedDatumTargetFeature >":
    return _StepDimTol.Handle_StepDimTol_PlacedDatumTargetFeature_DownCast(t)
Handle_StepDimTol_PlacedDatumTargetFeature_DownCast = _StepDimTol.Handle_StepDimTol_PlacedDatumTargetFeature_DownCast

def Handle_StepDimTol_PlacedDatumTargetFeature_IsNull(t: 'opencascade::handle< StepDimTol_PlacedDatumTargetFeature > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_PlacedDatumTargetFeature_IsNull(t)
Handle_StepDimTol_PlacedDatumTargetFeature_IsNull = _StepDimTol.Handle_StepDimTol_PlacedDatumTargetFeature_IsNull

def Handle_StepDimTol_PositionTolerance_Create() -> "opencascade::handle< StepDimTol_PositionTolerance >":
    return _StepDimTol.Handle_StepDimTol_PositionTolerance_Create()
Handle_StepDimTol_PositionTolerance_Create = _StepDimTol.Handle_StepDimTol_PositionTolerance_Create

def Handle_StepDimTol_PositionTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_PositionTolerance >":
    return _StepDimTol.Handle_StepDimTol_PositionTolerance_DownCast(t)
Handle_StepDimTol_PositionTolerance_DownCast = _StepDimTol.Handle_StepDimTol_PositionTolerance_DownCast

def Handle_StepDimTol_PositionTolerance_IsNull(t: 'opencascade::handle< StepDimTol_PositionTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_PositionTolerance_IsNull(t)
Handle_StepDimTol_PositionTolerance_IsNull = _StepDimTol.Handle_StepDimTol_PositionTolerance_IsNull

def Handle_StepDimTol_ProjectedZoneDefinition_Create() -> "opencascade::handle< StepDimTol_ProjectedZoneDefinition >":
    return _StepDimTol.Handle_StepDimTol_ProjectedZoneDefinition_Create()
Handle_StepDimTol_ProjectedZoneDefinition_Create = _StepDimTol.Handle_StepDimTol_ProjectedZoneDefinition_Create

def Handle_StepDimTol_ProjectedZoneDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_ProjectedZoneDefinition >":
    return _StepDimTol.Handle_StepDimTol_ProjectedZoneDefinition_DownCast(t)
Handle_StepDimTol_ProjectedZoneDefinition_DownCast = _StepDimTol.Handle_StepDimTol_ProjectedZoneDefinition_DownCast

def Handle_StepDimTol_ProjectedZoneDefinition_IsNull(t: 'opencascade::handle< StepDimTol_ProjectedZoneDefinition > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_ProjectedZoneDefinition_IsNull(t)
Handle_StepDimTol_ProjectedZoneDefinition_IsNull = _StepDimTol.Handle_StepDimTol_ProjectedZoneDefinition_IsNull

def Handle_StepDimTol_RoundnessTolerance_Create() -> "opencascade::handle< StepDimTol_RoundnessTolerance >":
    return _StepDimTol.Handle_StepDimTol_RoundnessTolerance_Create()
Handle_StepDimTol_RoundnessTolerance_Create = _StepDimTol.Handle_StepDimTol_RoundnessTolerance_Create

def Handle_StepDimTol_RoundnessTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_RoundnessTolerance >":
    return _StepDimTol.Handle_StepDimTol_RoundnessTolerance_DownCast(t)
Handle_StepDimTol_RoundnessTolerance_DownCast = _StepDimTol.Handle_StepDimTol_RoundnessTolerance_DownCast

def Handle_StepDimTol_RoundnessTolerance_IsNull(t: 'opencascade::handle< StepDimTol_RoundnessTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_RoundnessTolerance_IsNull(t)
Handle_StepDimTol_RoundnessTolerance_IsNull = _StepDimTol.Handle_StepDimTol_RoundnessTolerance_IsNull

def Handle_StepDimTol_RunoutZoneDefinition_Create() -> "opencascade::handle< StepDimTol_RunoutZoneDefinition >":
    return _StepDimTol.Handle_StepDimTol_RunoutZoneDefinition_Create()
Handle_StepDimTol_RunoutZoneDefinition_Create = _StepDimTol.Handle_StepDimTol_RunoutZoneDefinition_Create

def Handle_StepDimTol_RunoutZoneDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_RunoutZoneDefinition >":
    return _StepDimTol.Handle_StepDimTol_RunoutZoneDefinition_DownCast(t)
Handle_StepDimTol_RunoutZoneDefinition_DownCast = _StepDimTol.Handle_StepDimTol_RunoutZoneDefinition_DownCast

def Handle_StepDimTol_RunoutZoneDefinition_IsNull(t: 'opencascade::handle< StepDimTol_RunoutZoneDefinition > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_RunoutZoneDefinition_IsNull(t)
Handle_StepDimTol_RunoutZoneDefinition_IsNull = _StepDimTol.Handle_StepDimTol_RunoutZoneDefinition_IsNull

def Handle_StepDimTol_StraightnessTolerance_Create() -> "opencascade::handle< StepDimTol_StraightnessTolerance >":
    return _StepDimTol.Handle_StepDimTol_StraightnessTolerance_Create()
Handle_StepDimTol_StraightnessTolerance_Create = _StepDimTol.Handle_StepDimTol_StraightnessTolerance_Create

def Handle_StepDimTol_StraightnessTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_StraightnessTolerance >":
    return _StepDimTol.Handle_StepDimTol_StraightnessTolerance_DownCast(t)
Handle_StepDimTol_StraightnessTolerance_DownCast = _StepDimTol.Handle_StepDimTol_StraightnessTolerance_DownCast

def Handle_StepDimTol_StraightnessTolerance_IsNull(t: 'opencascade::handle< StepDimTol_StraightnessTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_StraightnessTolerance_IsNull(t)
Handle_StepDimTol_StraightnessTolerance_IsNull = _StepDimTol.Handle_StepDimTol_StraightnessTolerance_IsNull

def Handle_StepDimTol_SurfaceProfileTolerance_Create() -> "opencascade::handle< StepDimTol_SurfaceProfileTolerance >":
    return _StepDimTol.Handle_StepDimTol_SurfaceProfileTolerance_Create()
Handle_StepDimTol_SurfaceProfileTolerance_Create = _StepDimTol.Handle_StepDimTol_SurfaceProfileTolerance_Create

def Handle_StepDimTol_SurfaceProfileTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_SurfaceProfileTolerance >":
    return _StepDimTol.Handle_StepDimTol_SurfaceProfileTolerance_DownCast(t)
Handle_StepDimTol_SurfaceProfileTolerance_DownCast = _StepDimTol.Handle_StepDimTol_SurfaceProfileTolerance_DownCast

def Handle_StepDimTol_SurfaceProfileTolerance_IsNull(t: 'opencascade::handle< StepDimTol_SurfaceProfileTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_SurfaceProfileTolerance_IsNull(t)
Handle_StepDimTol_SurfaceProfileTolerance_IsNull = _StepDimTol.Handle_StepDimTol_SurfaceProfileTolerance_IsNull

def Handle_StepDimTol_UnequallyDisposedGeometricTolerance_Create() -> "opencascade::handle< StepDimTol_UnequallyDisposedGeometricTolerance >":
    return _StepDimTol.Handle_StepDimTol_UnequallyDisposedGeometricTolerance_Create()
Handle_StepDimTol_UnequallyDisposedGeometricTolerance_Create = _StepDimTol.Handle_StepDimTol_UnequallyDisposedGeometricTolerance_Create

def Handle_StepDimTol_UnequallyDisposedGeometricTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_UnequallyDisposedGeometricTolerance >":
    return _StepDimTol.Handle_StepDimTol_UnequallyDisposedGeometricTolerance_DownCast(t)
Handle_StepDimTol_UnequallyDisposedGeometricTolerance_DownCast = _StepDimTol.Handle_StepDimTol_UnequallyDisposedGeometricTolerance_DownCast

def Handle_StepDimTol_UnequallyDisposedGeometricTolerance_IsNull(t: 'opencascade::handle< StepDimTol_UnequallyDisposedGeometricTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_UnequallyDisposedGeometricTolerance_IsNull(t)
Handle_StepDimTol_UnequallyDisposedGeometricTolerance_IsNull = _StepDimTol.Handle_StepDimTol_UnequallyDisposedGeometricTolerance_IsNull

def Handle_StepDimTol_AngularityTolerance_Create() -> "opencascade::handle< StepDimTol_AngularityTolerance >":
    return _StepDimTol.Handle_StepDimTol_AngularityTolerance_Create()
Handle_StepDimTol_AngularityTolerance_Create = _StepDimTol.Handle_StepDimTol_AngularityTolerance_Create

def Handle_StepDimTol_AngularityTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_AngularityTolerance >":
    return _StepDimTol.Handle_StepDimTol_AngularityTolerance_DownCast(t)
Handle_StepDimTol_AngularityTolerance_DownCast = _StepDimTol.Handle_StepDimTol_AngularityTolerance_DownCast

def Handle_StepDimTol_AngularityTolerance_IsNull(t: 'opencascade::handle< StepDimTol_AngularityTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_AngularityTolerance_IsNull(t)
Handle_StepDimTol_AngularityTolerance_IsNull = _StepDimTol.Handle_StepDimTol_AngularityTolerance_IsNull

def Handle_StepDimTol_CircularRunoutTolerance_Create() -> "opencascade::handle< StepDimTol_CircularRunoutTolerance >":
    return _StepDimTol.Handle_StepDimTol_CircularRunoutTolerance_Create()
Handle_StepDimTol_CircularRunoutTolerance_Create = _StepDimTol.Handle_StepDimTol_CircularRunoutTolerance_Create

def Handle_StepDimTol_CircularRunoutTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_CircularRunoutTolerance >":
    return _StepDimTol.Handle_StepDimTol_CircularRunoutTolerance_DownCast(t)
Handle_StepDimTol_CircularRunoutTolerance_DownCast = _StepDimTol.Handle_StepDimTol_CircularRunoutTolerance_DownCast

def Handle_StepDimTol_CircularRunoutTolerance_IsNull(t: 'opencascade::handle< StepDimTol_CircularRunoutTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_CircularRunoutTolerance_IsNull(t)
Handle_StepDimTol_CircularRunoutTolerance_IsNull = _StepDimTol.Handle_StepDimTol_CircularRunoutTolerance_IsNull

def Handle_StepDimTol_CoaxialityTolerance_Create() -> "opencascade::handle< StepDimTol_CoaxialityTolerance >":
    return _StepDimTol.Handle_StepDimTol_CoaxialityTolerance_Create()
Handle_StepDimTol_CoaxialityTolerance_Create = _StepDimTol.Handle_StepDimTol_CoaxialityTolerance_Create

def Handle_StepDimTol_CoaxialityTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_CoaxialityTolerance >":
    return _StepDimTol.Handle_StepDimTol_CoaxialityTolerance_DownCast(t)
Handle_StepDimTol_CoaxialityTolerance_DownCast = _StepDimTol.Handle_StepDimTol_CoaxialityTolerance_DownCast

def Handle_StepDimTol_CoaxialityTolerance_IsNull(t: 'opencascade::handle< StepDimTol_CoaxialityTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_CoaxialityTolerance_IsNull(t)
Handle_StepDimTol_CoaxialityTolerance_IsNull = _StepDimTol.Handle_StepDimTol_CoaxialityTolerance_IsNull

def Handle_StepDimTol_ConcentricityTolerance_Create() -> "opencascade::handle< StepDimTol_ConcentricityTolerance >":
    return _StepDimTol.Handle_StepDimTol_ConcentricityTolerance_Create()
Handle_StepDimTol_ConcentricityTolerance_Create = _StepDimTol.Handle_StepDimTol_ConcentricityTolerance_Create

def Handle_StepDimTol_ConcentricityTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_ConcentricityTolerance >":
    return _StepDimTol.Handle_StepDimTol_ConcentricityTolerance_DownCast(t)
Handle_StepDimTol_ConcentricityTolerance_DownCast = _StepDimTol.Handle_StepDimTol_ConcentricityTolerance_DownCast

def Handle_StepDimTol_ConcentricityTolerance_IsNull(t: 'opencascade::handle< StepDimTol_ConcentricityTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_ConcentricityTolerance_IsNull(t)
Handle_StepDimTol_ConcentricityTolerance_IsNull = _StepDimTol.Handle_StepDimTol_ConcentricityTolerance_IsNull

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_Create() -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_Create()
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_Create = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_Create

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_DownCast(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_DownCast = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_DownCast

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_IsNull(t: 'opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_IsNull(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_IsNull = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_IsNull

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_Create() -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_Create()
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_Create = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_Create

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_DownCast(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_DownCast = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_DownCast

def Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_IsNull(t: 'opencascade::handle< StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_IsNull(t)
Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_IsNull = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_IsNull

def Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_Create() -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthMaxTol >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_Create()
Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_Create = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_Create

def Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeoTolAndGeoTolWthMaxTol >":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_DownCast(t)
Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_DownCast = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_DownCast

def Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_IsNull(t: 'opencascade::handle< StepDimTol_GeoTolAndGeoTolWthMaxTol > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_IsNull(t)
Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_IsNull = _StepDimTol.Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_IsNull

def Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_Create() -> "opencascade::handle< StepDimTol_GeometricToleranceWithDefinedAreaUnit >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_Create()
Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_Create = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_Create

def Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeometricToleranceWithDefinedAreaUnit >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_DownCast(t)
Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_DownCast = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_DownCast

def Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_IsNull(t: 'opencascade::handle< StepDimTol_GeometricToleranceWithDefinedAreaUnit > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_IsNull(t)
Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_IsNull = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_IsNull

def Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_Create() -> "opencascade::handle< StepDimTol_GeometricToleranceWithMaximumTolerance >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_Create()
Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_Create = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_Create

def Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_GeometricToleranceWithMaximumTolerance >":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_DownCast(t)
Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_DownCast = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_DownCast

def Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_IsNull(t: 'opencascade::handle< StepDimTol_GeometricToleranceWithMaximumTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_IsNull(t)
Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_IsNull = _StepDimTol.Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_IsNull

def Handle_StepDimTol_ParallelismTolerance_Create() -> "opencascade::handle< StepDimTol_ParallelismTolerance >":
    return _StepDimTol.Handle_StepDimTol_ParallelismTolerance_Create()
Handle_StepDimTol_ParallelismTolerance_Create = _StepDimTol.Handle_StepDimTol_ParallelismTolerance_Create

def Handle_StepDimTol_ParallelismTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_ParallelismTolerance >":
    return _StepDimTol.Handle_StepDimTol_ParallelismTolerance_DownCast(t)
Handle_StepDimTol_ParallelismTolerance_DownCast = _StepDimTol.Handle_StepDimTol_ParallelismTolerance_DownCast

def Handle_StepDimTol_ParallelismTolerance_IsNull(t: 'opencascade::handle< StepDimTol_ParallelismTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_ParallelismTolerance_IsNull(t)
Handle_StepDimTol_ParallelismTolerance_IsNull = _StepDimTol.Handle_StepDimTol_ParallelismTolerance_IsNull

def Handle_StepDimTol_PerpendicularityTolerance_Create() -> "opencascade::handle< StepDimTol_PerpendicularityTolerance >":
    return _StepDimTol.Handle_StepDimTol_PerpendicularityTolerance_Create()
Handle_StepDimTol_PerpendicularityTolerance_Create = _StepDimTol.Handle_StepDimTol_PerpendicularityTolerance_Create

def Handle_StepDimTol_PerpendicularityTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_PerpendicularityTolerance >":
    return _StepDimTol.Handle_StepDimTol_PerpendicularityTolerance_DownCast(t)
Handle_StepDimTol_PerpendicularityTolerance_DownCast = _StepDimTol.Handle_StepDimTol_PerpendicularityTolerance_DownCast

def Handle_StepDimTol_PerpendicularityTolerance_IsNull(t: 'opencascade::handle< StepDimTol_PerpendicularityTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_PerpendicularityTolerance_IsNull(t)
Handle_StepDimTol_PerpendicularityTolerance_IsNull = _StepDimTol.Handle_StepDimTol_PerpendicularityTolerance_IsNull

def Handle_StepDimTol_SymmetryTolerance_Create() -> "opencascade::handle< StepDimTol_SymmetryTolerance >":
    return _StepDimTol.Handle_StepDimTol_SymmetryTolerance_Create()
Handle_StepDimTol_SymmetryTolerance_Create = _StepDimTol.Handle_StepDimTol_SymmetryTolerance_Create

def Handle_StepDimTol_SymmetryTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_SymmetryTolerance >":
    return _StepDimTol.Handle_StepDimTol_SymmetryTolerance_DownCast(t)
Handle_StepDimTol_SymmetryTolerance_DownCast = _StepDimTol.Handle_StepDimTol_SymmetryTolerance_DownCast

def Handle_StepDimTol_SymmetryTolerance_IsNull(t: 'opencascade::handle< StepDimTol_SymmetryTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_SymmetryTolerance_IsNull(t)
Handle_StepDimTol_SymmetryTolerance_IsNull = _StepDimTol.Handle_StepDimTol_SymmetryTolerance_IsNull

def Handle_StepDimTol_TotalRunoutTolerance_Create() -> "opencascade::handle< StepDimTol_TotalRunoutTolerance >":
    return _StepDimTol.Handle_StepDimTol_TotalRunoutTolerance_Create()
Handle_StepDimTol_TotalRunoutTolerance_Create = _StepDimTol.Handle_StepDimTol_TotalRunoutTolerance_Create

def Handle_StepDimTol_TotalRunoutTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_TotalRunoutTolerance >":
    return _StepDimTol.Handle_StepDimTol_TotalRunoutTolerance_DownCast(t)
Handle_StepDimTol_TotalRunoutTolerance_DownCast = _StepDimTol.Handle_StepDimTol_TotalRunoutTolerance_DownCast

def Handle_StepDimTol_TotalRunoutTolerance_IsNull(t: 'opencascade::handle< StepDimTol_TotalRunoutTolerance > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_TotalRunoutTolerance_IsNull(t)
Handle_StepDimTol_TotalRunoutTolerance_IsNull = _StepDimTol.Handle_StepDimTol_TotalRunoutTolerance_IsNull

def Handle_StepDimTol_HArray1OfToleranceZoneTarget_Create() -> "opencascade::handle< StepDimTol_HArray1OfToleranceZoneTarget >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfToleranceZoneTarget_Create()
Handle_StepDimTol_HArray1OfToleranceZoneTarget_Create = _StepDimTol.Handle_StepDimTol_HArray1OfToleranceZoneTarget_Create

def Handle_StepDimTol_HArray1OfToleranceZoneTarget_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_HArray1OfToleranceZoneTarget >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfToleranceZoneTarget_DownCast(t)
Handle_StepDimTol_HArray1OfToleranceZoneTarget_DownCast = _StepDimTol.Handle_StepDimTol_HArray1OfToleranceZoneTarget_DownCast

def Handle_StepDimTol_HArray1OfToleranceZoneTarget_IsNull(t: 'opencascade::handle< StepDimTol_HArray1OfToleranceZoneTarget > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_HArray1OfToleranceZoneTarget_IsNull(t)
Handle_StepDimTol_HArray1OfToleranceZoneTarget_IsNull = _StepDimTol.Handle_StepDimTol_HArray1OfToleranceZoneTarget_IsNull

def Handle_StepDimTol_HArray1OfDatumReference_Create() -> "opencascade::handle< StepDimTol_HArray1OfDatumReference >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReference_Create()
Handle_StepDimTol_HArray1OfDatumReference_Create = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReference_Create

def Handle_StepDimTol_HArray1OfDatumReference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_HArray1OfDatumReference >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReference_DownCast(t)
Handle_StepDimTol_HArray1OfDatumReference_DownCast = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReference_DownCast

def Handle_StepDimTol_HArray1OfDatumReference_IsNull(t: 'opencascade::handle< StepDimTol_HArray1OfDatumReference > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReference_IsNull(t)
Handle_StepDimTol_HArray1OfDatumReference_IsNull = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReference_IsNull

def Handle_StepDimTol_HArray1OfDatumReferenceElement_Create() -> "opencascade::handle< StepDimTol_HArray1OfDatumReferenceElement >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceElement_Create()
Handle_StepDimTol_HArray1OfDatumReferenceElement_Create = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceElement_Create

def Handle_StepDimTol_HArray1OfDatumReferenceElement_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_HArray1OfDatumReferenceElement >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceElement_DownCast(t)
Handle_StepDimTol_HArray1OfDatumReferenceElement_DownCast = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceElement_DownCast

def Handle_StepDimTol_HArray1OfDatumReferenceElement_IsNull(t: 'opencascade::handle< StepDimTol_HArray1OfDatumReferenceElement > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceElement_IsNull(t)
Handle_StepDimTol_HArray1OfDatumReferenceElement_IsNull = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceElement_IsNull

def Handle_StepDimTol_HArray1OfDatumSystemOrReference_Create() -> "opencascade::handle< StepDimTol_HArray1OfDatumSystemOrReference >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumSystemOrReference_Create()
Handle_StepDimTol_HArray1OfDatumSystemOrReference_Create = _StepDimTol.Handle_StepDimTol_HArray1OfDatumSystemOrReference_Create

def Handle_StepDimTol_HArray1OfDatumSystemOrReference_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_HArray1OfDatumSystemOrReference >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumSystemOrReference_DownCast(t)
Handle_StepDimTol_HArray1OfDatumSystemOrReference_DownCast = _StepDimTol.Handle_StepDimTol_HArray1OfDatumSystemOrReference_DownCast

def Handle_StepDimTol_HArray1OfDatumSystemOrReference_IsNull(t: 'opencascade::handle< StepDimTol_HArray1OfDatumSystemOrReference > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumSystemOrReference_IsNull(t)
Handle_StepDimTol_HArray1OfDatumSystemOrReference_IsNull = _StepDimTol.Handle_StepDimTol_HArray1OfDatumSystemOrReference_IsNull

def Handle_StepDimTol_HArray1OfDatumReferenceCompartment_Create() -> "opencascade::handle< StepDimTol_HArray1OfDatumReferenceCompartment >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceCompartment_Create()
Handle_StepDimTol_HArray1OfDatumReferenceCompartment_Create = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceCompartment_Create

def Handle_StepDimTol_HArray1OfDatumReferenceCompartment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_HArray1OfDatumReferenceCompartment >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceCompartment_DownCast(t)
Handle_StepDimTol_HArray1OfDatumReferenceCompartment_DownCast = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceCompartment_DownCast

def Handle_StepDimTol_HArray1OfDatumReferenceCompartment_IsNull(t: 'opencascade::handle< StepDimTol_HArray1OfDatumReferenceCompartment > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceCompartment_IsNull(t)
Handle_StepDimTol_HArray1OfDatumReferenceCompartment_IsNull = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceCompartment_IsNull

def Handle_StepDimTol_HArray1OfDatumReferenceModifier_Create() -> "opencascade::handle< StepDimTol_HArray1OfDatumReferenceModifier >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceModifier_Create()
Handle_StepDimTol_HArray1OfDatumReferenceModifier_Create = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceModifier_Create

def Handle_StepDimTol_HArray1OfDatumReferenceModifier_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_HArray1OfDatumReferenceModifier >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceModifier_DownCast(t)
Handle_StepDimTol_HArray1OfDatumReferenceModifier_DownCast = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceModifier_DownCast

def Handle_StepDimTol_HArray1OfDatumReferenceModifier_IsNull(t: 'opencascade::handle< StepDimTol_HArray1OfDatumReferenceModifier > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceModifier_IsNull(t)
Handle_StepDimTol_HArray1OfDatumReferenceModifier_IsNull = _StepDimTol.Handle_StepDimTol_HArray1OfDatumReferenceModifier_IsNull

def Handle_StepDimTol_HArray1OfGeometricToleranceModifier_Create() -> "opencascade::handle< StepDimTol_HArray1OfGeometricToleranceModifier >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfGeometricToleranceModifier_Create()
Handle_StepDimTol_HArray1OfGeometricToleranceModifier_Create = _StepDimTol.Handle_StepDimTol_HArray1OfGeometricToleranceModifier_Create

def Handle_StepDimTol_HArray1OfGeometricToleranceModifier_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepDimTol_HArray1OfGeometricToleranceModifier >":
    return _StepDimTol.Handle_StepDimTol_HArray1OfGeometricToleranceModifier_DownCast(t)
Handle_StepDimTol_HArray1OfGeometricToleranceModifier_DownCast = _StepDimTol.Handle_StepDimTol_HArray1OfGeometricToleranceModifier_DownCast

def Handle_StepDimTol_HArray1OfGeometricToleranceModifier_IsNull(t: 'opencascade::handle< StepDimTol_HArray1OfGeometricToleranceModifier > const &') -> "bool":
    return _StepDimTol.Handle_StepDimTol_HArray1OfGeometricToleranceModifier_IsNull(t)
Handle_StepDimTol_HArray1OfGeometricToleranceModifier_IsNull = _StepDimTol.Handle_StepDimTol_HArray1OfGeometricToleranceModifier_IsNull
class StepDimTol_Array1OfToleranceZoneTarget(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_swiginit(self, _StepDimTol.new_StepDimTol_Array1OfToleranceZoneTarget(*args))
    __swig_destroy__ = _StepDimTol.delete_StepDimTol_Array1OfToleranceZoneTarget

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepDimTol_Array1OfToleranceZoneTarget.begin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_begin, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.end = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_end, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.cbegin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_cbegin, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.cend = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_cend, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Init = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Init, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Size = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Size, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Length = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Length, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.IsEmpty = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_IsEmpty, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Lower = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Lower, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Upper = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Upper, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.IsDeletable = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_IsDeletable, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.IsAllocated = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_IsAllocated, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Assign = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Assign, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Move = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Move, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Set = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Set, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.First = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_First, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.ChangeFirst = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_ChangeFirst, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Last = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Last, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.ChangeLast = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_ChangeLast, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Value = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Value, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.ChangeValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_ChangeValue, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.__call__ = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget___call__, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.SetValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_SetValue, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget.Resize = new_instancemethod(_StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_Resize, None, StepDimTol_Array1OfToleranceZoneTarget)
StepDimTol_Array1OfToleranceZoneTarget_swigregister = _StepDimTol.StepDimTol_Array1OfToleranceZoneTarget_swigregister
StepDimTol_Array1OfToleranceZoneTarget_swigregister(StepDimTol_Array1OfToleranceZoneTarget)

class StepDimTol_Array1OfGeometricToleranceModifier(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_swiginit(self, _StepDimTol.new_StepDimTol_Array1OfGeometricToleranceModifier(*args))
    __swig_destroy__ = _StepDimTol.delete_StepDimTol_Array1OfGeometricToleranceModifier

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepDimTol_Array1OfGeometricToleranceModifier.begin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_begin, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.end = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_end, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.cbegin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_cbegin, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.cend = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_cend, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Init = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Init, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Size = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Size, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Length = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Length, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.IsEmpty = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_IsEmpty, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Lower = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Lower, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Upper = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Upper, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.IsDeletable = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_IsDeletable, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.IsAllocated = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_IsAllocated, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Assign = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Assign, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Move = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Move, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Set = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Set, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.First = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_First, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.ChangeFirst = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_ChangeFirst, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Last = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Last, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.ChangeLast = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_ChangeLast, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Value = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Value, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.ChangeValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_ChangeValue, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.__call__ = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier___call__, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.SetValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_SetValue, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier.Resize = new_instancemethod(_StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_Resize, None, StepDimTol_Array1OfGeometricToleranceModifier)
StepDimTol_Array1OfGeometricToleranceModifier_swigregister = _StepDimTol.StepDimTol_Array1OfGeometricToleranceModifier_swigregister
StepDimTol_Array1OfGeometricToleranceModifier_swigregister(StepDimTol_Array1OfGeometricToleranceModifier)

class StepDimTol_Array1OfDatumReferenceCompartment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_swiginit(self, _StepDimTol.new_StepDimTol_Array1OfDatumReferenceCompartment(*args))
    __swig_destroy__ = _StepDimTol.delete_StepDimTol_Array1OfDatumReferenceCompartment

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepDimTol_Array1OfDatumReferenceCompartment.begin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_begin, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.end = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_end, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.cbegin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_cbegin, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.cend = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_cend, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Init = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Init, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Size = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Size, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Length = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Length, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.IsEmpty = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_IsEmpty, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Lower = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Lower, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Upper = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Upper, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.IsDeletable = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_IsDeletable, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.IsAllocated = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_IsAllocated, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Assign = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Assign, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Move = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Move, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Set = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Set, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.First = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_First, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.ChangeFirst = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_ChangeFirst, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Last = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Last, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.ChangeLast = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_ChangeLast, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Value = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Value, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.ChangeValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_ChangeValue, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.__call__ = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment___call__, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.SetValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_SetValue, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment.Resize = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_Resize, None, StepDimTol_Array1OfDatumReferenceCompartment)
StepDimTol_Array1OfDatumReferenceCompartment_swigregister = _StepDimTol.StepDimTol_Array1OfDatumReferenceCompartment_swigregister
StepDimTol_Array1OfDatumReferenceCompartment_swigregister(StepDimTol_Array1OfDatumReferenceCompartment)

class StepDimTol_Array1OfDatumReferenceElement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_Array1OfDatumReferenceElement_swiginit(self, _StepDimTol.new_StepDimTol_Array1OfDatumReferenceElement(*args))
    __swig_destroy__ = _StepDimTol.delete_StepDimTol_Array1OfDatumReferenceElement

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepDimTol_Array1OfDatumReferenceElement.begin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_begin, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.end = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_end, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.cbegin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_cbegin, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.cend = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_cend, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Init = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Init, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Size = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Size, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Length = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Length, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.IsEmpty = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_IsEmpty, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Lower = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Lower, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Upper = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Upper, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.IsDeletable = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_IsDeletable, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.IsAllocated = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_IsAllocated, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Assign = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Assign, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Move = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Move, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Set = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Set, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.First = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_First, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.ChangeFirst = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_ChangeFirst, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Last = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Last, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.ChangeLast = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_ChangeLast, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Value = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Value, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.ChangeValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_ChangeValue, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.__call__ = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement___call__, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.SetValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_SetValue, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement.Resize = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceElement_Resize, None, StepDimTol_Array1OfDatumReferenceElement)
StepDimTol_Array1OfDatumReferenceElement_swigregister = _StepDimTol.StepDimTol_Array1OfDatumReferenceElement_swigregister
StepDimTol_Array1OfDatumReferenceElement_swigregister(StepDimTol_Array1OfDatumReferenceElement)

class StepDimTol_Array1OfDatumSystemOrReference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_swiginit(self, _StepDimTol.new_StepDimTol_Array1OfDatumSystemOrReference(*args))
    __swig_destroy__ = _StepDimTol.delete_StepDimTol_Array1OfDatumSystemOrReference

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepDimTol_Array1OfDatumSystemOrReference.begin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_begin, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.end = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_end, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.cbegin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_cbegin, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.cend = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_cend, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Init = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Init, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Size = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Size, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Length = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Length, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.IsEmpty = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_IsEmpty, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Lower = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Lower, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Upper = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Upper, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.IsDeletable = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_IsDeletable, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.IsAllocated = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_IsAllocated, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Assign = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Assign, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Move = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Move, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Set = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Set, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.First = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_First, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.ChangeFirst = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_ChangeFirst, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Last = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Last, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.ChangeLast = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_ChangeLast, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Value = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Value, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.ChangeValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_ChangeValue, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.__call__ = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference___call__, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.SetValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_SetValue, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference.Resize = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_Resize, None, StepDimTol_Array1OfDatumSystemOrReference)
StepDimTol_Array1OfDatumSystemOrReference_swigregister = _StepDimTol.StepDimTol_Array1OfDatumSystemOrReference_swigregister
StepDimTol_Array1OfDatumSystemOrReference_swigregister(StepDimTol_Array1OfDatumSystemOrReference)

class StepDimTol_Array1OfDatumReferenceModifier(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_swiginit(self, _StepDimTol.new_StepDimTol_Array1OfDatumReferenceModifier(*args))
    __swig_destroy__ = _StepDimTol.delete_StepDimTol_Array1OfDatumReferenceModifier

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepDimTol_Array1OfDatumReferenceModifier.begin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_begin, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.end = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_end, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.cbegin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_cbegin, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.cend = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_cend, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Init = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Init, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Size = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Size, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Length = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Length, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.IsEmpty = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_IsEmpty, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Lower = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Lower, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Upper = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Upper, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.IsDeletable = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_IsDeletable, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.IsAllocated = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_IsAllocated, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Assign = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Assign, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Move = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Move, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Set = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Set, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.First = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_First, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.ChangeFirst = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_ChangeFirst, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Last = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Last, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.ChangeLast = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_ChangeLast, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Value = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Value, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.ChangeValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_ChangeValue, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.__call__ = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier___call__, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.SetValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_SetValue, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier.Resize = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_Resize, None, StepDimTol_Array1OfDatumReferenceModifier)
StepDimTol_Array1OfDatumReferenceModifier_swigregister = _StepDimTol.StepDimTol_Array1OfDatumReferenceModifier_swigregister
StepDimTol_Array1OfDatumReferenceModifier_swigregister(StepDimTol_Array1OfDatumReferenceModifier)

class StepDimTol_Array1OfDatumReference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_Array1OfDatumReference_swiginit(self, _StepDimTol.new_StepDimTol_Array1OfDatumReference(*args))
    __swig_destroy__ = _StepDimTol.delete_StepDimTol_Array1OfDatumReference

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepDimTol_Array1OfDatumReference.begin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_begin, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.end = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_end, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.cbegin = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_cbegin, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.cend = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_cend, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Init = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Init, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Size = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Size, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Length = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Length, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.IsEmpty = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_IsEmpty, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Lower = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Lower, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Upper = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Upper, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.IsDeletable = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_IsDeletable, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.IsAllocated = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_IsAllocated, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Assign = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Assign, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Move = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Move, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Set = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Set, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.First = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_First, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.ChangeFirst = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_ChangeFirst, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Last = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Last, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.ChangeLast = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_ChangeLast, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Value = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Value, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.ChangeValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_ChangeValue, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.__call__ = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference___call__, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.SetValue = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_SetValue, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference.Resize = new_instancemethod(_StepDimTol.StepDimTol_Array1OfDatumReference_Resize, None, StepDimTol_Array1OfDatumReference)
StepDimTol_Array1OfDatumReference_swigregister = _StepDimTol.StepDimTol_Array1OfDatumReference_swigregister
StepDimTol_Array1OfDatumReference_swigregister(StepDimTol_Array1OfDatumReference)

class StepDimTol_CommonDatum(OCC.Core.StepRepr.StepRepr_CompositeShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Datum(self, *args) -> "opencascade::handle< StepDimTol_Datum >":
        """
        * Returns data for supertype Datum
        	:rtype: opencascade::handle<StepDimTol_Datum>
        """
        return _StepDimTol.StepDimTol_CommonDatum_Datum(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theShapeAspect_Name:
        	:type theShapeAspect_Name: TCollection_HAsciiString
        	:param theShapeAspect_Description:
        	:type theShapeAspect_Description: TCollection_HAsciiString
        	:param theShapeAspect_OfShape:
        	:type theShapeAspect_OfShape: StepRepr_ProductDefinitionShape
        	:param theShapeAspect_ProductDefinitional:
        	:type theShapeAspect_ProductDefinitional: StepData_Logical
        	:param theDatum_Name:
        	:type theDatum_Name: TCollection_HAsciiString
        	:param theDatum_Description:
        	:type theDatum_Description: TCollection_HAsciiString
        	:param theDatum_OfShape:
        	:type theDatum_OfShape: StepRepr_ProductDefinitionShape
        	:param theDatum_ProductDefinitional:
        	:type theDatum_ProductDefinitional: StepData_Logical
        	:param theDatum_Identification:
        	:type theDatum_Identification: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_CommonDatum_Init(self, *args)


    def SetDatum(self, *args) -> "void":
        """
        * Set data for supertype Datum
        	:param theDatum:
        	:type theDatum: StepDimTol_Datum
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_CommonDatum_SetDatum(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_CommonDatum_swiginit(self, _StepDimTol.new_StepDimTol_CommonDatum(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_CommonDatum_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_CommonDatum
StepDimTol_CommonDatum.Datum = new_instancemethod(_StepDimTol.StepDimTol_CommonDatum_Datum, None, StepDimTol_CommonDatum)
StepDimTol_CommonDatum.Init = new_instancemethod(_StepDimTol.StepDimTol_CommonDatum_Init, None, StepDimTol_CommonDatum)
StepDimTol_CommonDatum.SetDatum = new_instancemethod(_StepDimTol.StepDimTol_CommonDatum_SetDatum, None, StepDimTol_CommonDatum)
StepDimTol_CommonDatum_swigregister = _StepDimTol.StepDimTol_CommonDatum_swigregister
StepDimTol_CommonDatum_swigregister(StepDimTol_CommonDatum)

class StepDimTol_Datum(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Identification(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Identification
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepDimTol.StepDimTol_Datum_Identification(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theShapeAspect_Name:
        	:type theShapeAspect_Name: TCollection_HAsciiString
        	:param theShapeAspect_Description:
        	:type theShapeAspect_Description: TCollection_HAsciiString
        	:param theShapeAspect_OfShape:
        	:type theShapeAspect_OfShape: StepRepr_ProductDefinitionShape
        	:param theShapeAspect_ProductDefinitional:
        	:type theShapeAspect_ProductDefinitional: StepData_Logical
        	:param theIdentification:
        	:type theIdentification: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_Datum_Init(self, *args)


    def SetIdentification(self, *args) -> "void":
        """
        * Set field Identification
        	:param theIdentification:
        	:type theIdentification: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_Datum_SetIdentification(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_Datum_swiginit(self, _StepDimTol.new_StepDimTol_Datum(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_Datum_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_Datum
StepDimTol_Datum.Identification = new_instancemethod(_StepDimTol.StepDimTol_Datum_Identification, None, StepDimTol_Datum)
StepDimTol_Datum.Init = new_instancemethod(_StepDimTol.StepDimTol_Datum_Init, None, StepDimTol_Datum)
StepDimTol_Datum.SetIdentification = new_instancemethod(_StepDimTol.StepDimTol_Datum_SetIdentification, None, StepDimTol_Datum)
StepDimTol_Datum_swigregister = _StepDimTol.StepDimTol_Datum_swigregister
StepDimTol_Datum_swigregister(StepDimTol_Datum)

class StepDimTol_DatumFeature(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumFeature_swiginit(self, _StepDimTol.new_StepDimTol_DatumFeature(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_DatumFeature_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumFeature
StepDimTol_DatumFeature_swigregister = _StepDimTol.StepDimTol_DatumFeature_swigregister
StepDimTol_DatumFeature_swigregister(StepDimTol_DatumFeature)

class StepDimTol_DatumOrCommonDatum(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CommonDatumList(self, *args) -> "opencascade::handle< StepDimTol_HArray1OfDatumReferenceElement >":
        """
        * returns Value as a CommonDatumList (Null if another type)
        	:rtype: opencascade::handle<StepDimTol_HArray1OfDatumReferenceElement>
        """
        return _StepDimTol.StepDimTol_DatumOrCommonDatum_CommonDatumList(self, *args)


    def Datum(self, *args) -> "opencascade::handle< StepDimTol_Datum >":
        """
        * returns Value as a Datum (Null if another type)
        	:rtype: opencascade::handle<StepDimTol_Datum>
        """
        return _StepDimTol.StepDimTol_DatumOrCommonDatum_Datum(self, *args)


    def __init__(self, *args):
        """
        * Returns a DatumOrCommonDatum select type
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumOrCommonDatum_swiginit(self, _StepDimTol.new_StepDimTol_DatumOrCommonDatum(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumOrCommonDatum
StepDimTol_DatumOrCommonDatum.CommonDatumList = new_instancemethod(_StepDimTol.StepDimTol_DatumOrCommonDatum_CommonDatumList, None, StepDimTol_DatumOrCommonDatum)
StepDimTol_DatumOrCommonDatum.Datum = new_instancemethod(_StepDimTol.StepDimTol_DatumOrCommonDatum_Datum, None, StepDimTol_DatumOrCommonDatum)
StepDimTol_DatumOrCommonDatum_swigregister = _StepDimTol.StepDimTol_DatumOrCommonDatum_swigregister
StepDimTol_DatumOrCommonDatum_swigregister(StepDimTol_DatumOrCommonDatum)

class StepDimTol_DatumReference(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param thePrecedence:
        	:type thePrecedence: int
        	:param theReferencedDatum:
        	:type theReferencedDatum: StepDimTol_Datum
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_DatumReference_Init(self, *args)


    def Precedence(self, *args) -> "Standard_Integer":
        """
        * Returns field Precedence
        	:rtype: int
        """
        return _StepDimTol.StepDimTol_DatumReference_Precedence(self, *args)


    def ReferencedDatum(self, *args) -> "opencascade::handle< StepDimTol_Datum >":
        """
        * Returns field ReferencedDatum
        	:rtype: opencascade::handle<StepDimTol_Datum>
        """
        return _StepDimTol.StepDimTol_DatumReference_ReferencedDatum(self, *args)


    def SetPrecedence(self, *args) -> "void":
        """
        * Set field Precedence
        	:param thePrecedence:
        	:type thePrecedence: int
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_DatumReference_SetPrecedence(self, *args)


    def SetReferencedDatum(self, *args) -> "void":
        """
        * Set field ReferencedDatum
        	:param theReferencedDatum:
        	:type theReferencedDatum: StepDimTol_Datum
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_DatumReference_SetReferencedDatum(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumReference_swiginit(self, _StepDimTol.new_StepDimTol_DatumReference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_DatumReference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumReference
StepDimTol_DatumReference.Init = new_instancemethod(_StepDimTol.StepDimTol_DatumReference_Init, None, StepDimTol_DatumReference)
StepDimTol_DatumReference.Precedence = new_instancemethod(_StepDimTol.StepDimTol_DatumReference_Precedence, None, StepDimTol_DatumReference)
StepDimTol_DatumReference.ReferencedDatum = new_instancemethod(_StepDimTol.StepDimTol_DatumReference_ReferencedDatum, None, StepDimTol_DatumReference)
StepDimTol_DatumReference.SetPrecedence = new_instancemethod(_StepDimTol.StepDimTol_DatumReference_SetPrecedence, None, StepDimTol_DatumReference)
StepDimTol_DatumReference.SetReferencedDatum = new_instancemethod(_StepDimTol.StepDimTol_DatumReference_SetReferencedDatum, None, StepDimTol_DatumReference)
StepDimTol_DatumReference_swigregister = _StepDimTol.StepDimTol_DatumReference_swigregister
StepDimTol_DatumReference_swigregister(StepDimTol_DatumReference)

class StepDimTol_DatumReferenceModifier(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DatumReferenceModifierWithValue(self, *args) -> "opencascade::handle< StepDimTol_DatumReferenceModifierWithValue >":
        """
        * returns Value as a DatumReferenceModifierWithValue (Null if another type)
        	:rtype: opencascade::handle<StepDimTol_DatumReferenceModifierWithValue>
        """
        return _StepDimTol.StepDimTol_DatumReferenceModifier_DatumReferenceModifierWithValue(self, *args)


    def SimpleDatumReferenceModifierMember(self, *args) -> "opencascade::handle< StepDimTol_SimpleDatumReferenceModifierMember >":
        """
        * returns Value as a SimpleDatumReferenceModifierMember (Null if another type)
        	:rtype: opencascade::handle<StepDimTol_SimpleDatumReferenceModifierMember>
        """
        return _StepDimTol.StepDimTol_DatumReferenceModifier_SimpleDatumReferenceModifierMember(self, *args)


    def __init__(self, *args):
        """
        * Returns a DatumReferenceModifier select type
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumReferenceModifier_swiginit(self, _StepDimTol.new_StepDimTol_DatumReferenceModifier(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumReferenceModifier
StepDimTol_DatumReferenceModifier.DatumReferenceModifierWithValue = new_instancemethod(_StepDimTol.StepDimTol_DatumReferenceModifier_DatumReferenceModifierWithValue, None, StepDimTol_DatumReferenceModifier)
StepDimTol_DatumReferenceModifier.SimpleDatumReferenceModifierMember = new_instancemethod(_StepDimTol.StepDimTol_DatumReferenceModifier_SimpleDatumReferenceModifierMember, None, StepDimTol_DatumReferenceModifier)
StepDimTol_DatumReferenceModifier_swigregister = _StepDimTol.StepDimTol_DatumReferenceModifier_swigregister
StepDimTol_DatumReferenceModifier_swigregister(StepDimTol_DatumReferenceModifier)

class StepDimTol_DatumReferenceModifierWithValue(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theModifierType:
        	:type theModifierType: StepDimTol_DatumReferenceModifierType
        	:param theModifierValue:
        	:type theModifierValue: StepBasic_LengthMeasureWithUnit
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_DatumReferenceModifierWithValue_Init(self, *args)


    def ModifierType(self, *args) -> "StepDimTol_DatumReferenceModifierType":
        """
        * Returns field ModifierType
        	:rtype: inline StepDimTol_DatumReferenceModifierType
        """
        return _StepDimTol.StepDimTol_DatumReferenceModifierWithValue_ModifierType(self, *args)


    def ModifierValue(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """
        * Returns field ModifierValue
        	:rtype: inline opencascade::handle<StepBasic_LengthMeasureWithUnit>
        """
        return _StepDimTol.StepDimTol_DatumReferenceModifierWithValue_ModifierValue(self, *args)


    def SetModifierType(self, *args) -> "void":
        """
        * Set field ModifierType
        	:param theModifierType:
        	:type theModifierType: StepDimTol_DatumReferenceModifierType
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_DatumReferenceModifierWithValue_SetModifierType(self, *args)


    def SetModifierValue(self, *args) -> "void":
        """
        * Set field ModifierValue
        	:param theModifierValue:
        	:type theModifierValue: StepBasic_LengthMeasureWithUnit
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_DatumReferenceModifierWithValue_SetModifierValue(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumReferenceModifierWithValue_swiginit(self, _StepDimTol.new_StepDimTol_DatumReferenceModifierWithValue(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_DatumReferenceModifierWithValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumReferenceModifierWithValue
StepDimTol_DatumReferenceModifierWithValue.Init = new_instancemethod(_StepDimTol.StepDimTol_DatumReferenceModifierWithValue_Init, None, StepDimTol_DatumReferenceModifierWithValue)
StepDimTol_DatumReferenceModifierWithValue.ModifierType = new_instancemethod(_StepDimTol.StepDimTol_DatumReferenceModifierWithValue_ModifierType, None, StepDimTol_DatumReferenceModifierWithValue)
StepDimTol_DatumReferenceModifierWithValue.ModifierValue = new_instancemethod(_StepDimTol.StepDimTol_DatumReferenceModifierWithValue_ModifierValue, None, StepDimTol_DatumReferenceModifierWithValue)
StepDimTol_DatumReferenceModifierWithValue.SetModifierType = new_instancemethod(_StepDimTol.StepDimTol_DatumReferenceModifierWithValue_SetModifierType, None, StepDimTol_DatumReferenceModifierWithValue)
StepDimTol_DatumReferenceModifierWithValue.SetModifierValue = new_instancemethod(_StepDimTol.StepDimTol_DatumReferenceModifierWithValue_SetModifierValue, None, StepDimTol_DatumReferenceModifierWithValue)
StepDimTol_DatumReferenceModifierWithValue_swigregister = _StepDimTol.StepDimTol_DatumReferenceModifierWithValue_swigregister
StepDimTol_DatumReferenceModifierWithValue_swigregister(StepDimTol_DatumReferenceModifierWithValue)

class StepDimTol_DatumSystem(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Constituents(self, *args) -> "opencascade::handle< StepDimTol_HArray1OfDatumReferenceCompartment >":
        """
        * Returns field Constituents
        	:rtype: inline opencascade::handle<StepDimTol_HArray1OfDatumReferenceCompartment>
        """
        return _StepDimTol.StepDimTol_DatumSystem_Constituents(self, *args)


    def ConstituentsValue(self, *args) -> "void":
        """
        * Returns Constituents with the given number
        	:param num:
        	:type num: int
        	:rtype: inline opencascade::handle<StepDimTol_DatumReferenceCompartment>
        * Sets Constituents with given number
        	:param num:
        	:type num: int
        	:param theItem:
        	:type theItem: StepDimTol_DatumReferenceCompartment
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_DatumSystem_ConstituentsValue(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theOfShape:
        	:type theOfShape: StepRepr_ProductDefinitionShape
        	:param theProductDefinitional:
        	:type theProductDefinitional: StepData_Logical
        	:param theConstituents:
        	:type theConstituents: StepDimTol_HArray1OfDatumReferenceCompartment
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_DatumSystem_Init(self, *args)


    def NbConstituents(self, *args) -> "Standard_Integer":
        """
        * Returns number of Constituents
        	:rtype: inline int
        """
        return _StepDimTol.StepDimTol_DatumSystem_NbConstituents(self, *args)


    def SetConstituents(self, *args) -> "void":
        """
        * Set field Constituents
        	:param theConstituents:
        	:type theConstituents: StepDimTol_HArray1OfDatumReferenceCompartment
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_DatumSystem_SetConstituents(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumSystem_swiginit(self, _StepDimTol.new_StepDimTol_DatumSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_DatumSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumSystem
StepDimTol_DatumSystem.Constituents = new_instancemethod(_StepDimTol.StepDimTol_DatumSystem_Constituents, None, StepDimTol_DatumSystem)
StepDimTol_DatumSystem.ConstituentsValue = new_instancemethod(_StepDimTol.StepDimTol_DatumSystem_ConstituentsValue, None, StepDimTol_DatumSystem)
StepDimTol_DatumSystem.Init = new_instancemethod(_StepDimTol.StepDimTol_DatumSystem_Init, None, StepDimTol_DatumSystem)
StepDimTol_DatumSystem.NbConstituents = new_instancemethod(_StepDimTol.StepDimTol_DatumSystem_NbConstituents, None, StepDimTol_DatumSystem)
StepDimTol_DatumSystem.SetConstituents = new_instancemethod(_StepDimTol.StepDimTol_DatumSystem_SetConstituents, None, StepDimTol_DatumSystem)
StepDimTol_DatumSystem_swigregister = _StepDimTol.StepDimTol_DatumSystem_swigregister
StepDimTol_DatumSystem_swigregister(StepDimTol_DatumSystem)

class StepDimTol_DatumSystemOrReference(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DatumReference(self, *args) -> "opencascade::handle< StepDimTol_DatumReference >":
        """
        * returns Value as a DatumReference (Null if another type)
        	:rtype: opencascade::handle<StepDimTol_DatumReference>
        """
        return _StepDimTol.StepDimTol_DatumSystemOrReference_DatumReference(self, *args)


    def DatumSystem(self, *args) -> "opencascade::handle< StepDimTol_DatumSystem >":
        """
        * returns Value as a DatumSystem (Null if another type)
        	:rtype: opencascade::handle<StepDimTol_DatumSystem>
        """
        return _StepDimTol.StepDimTol_DatumSystemOrReference_DatumSystem(self, *args)


    def __init__(self, *args):
        """
        * Returns a DatumSystemOrReference select type
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumSystemOrReference_swiginit(self, _StepDimTol.new_StepDimTol_DatumSystemOrReference(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumSystemOrReference
StepDimTol_DatumSystemOrReference.DatumReference = new_instancemethod(_StepDimTol.StepDimTol_DatumSystemOrReference_DatumReference, None, StepDimTol_DatumSystemOrReference)
StepDimTol_DatumSystemOrReference.DatumSystem = new_instancemethod(_StepDimTol.StepDimTol_DatumSystemOrReference_DatumSystem, None, StepDimTol_DatumSystemOrReference)
StepDimTol_DatumSystemOrReference_swigregister = _StepDimTol.StepDimTol_DatumSystemOrReference_swigregister
StepDimTol_DatumSystemOrReference_swigregister(StepDimTol_DatumSystemOrReference)

class StepDimTol_DatumTarget(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theShapeAspect_Name:
        	:type theShapeAspect_Name: TCollection_HAsciiString
        	:param theShapeAspect_Description:
        	:type theShapeAspect_Description: TCollection_HAsciiString
        	:param theShapeAspect_OfShape:
        	:type theShapeAspect_OfShape: StepRepr_ProductDefinitionShape
        	:param theShapeAspect_ProductDefinitional:
        	:type theShapeAspect_ProductDefinitional: StepData_Logical
        	:param theTargetId:
        	:type theTargetId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_DatumTarget_Init(self, *args)


    def SetTargetId(self, *args) -> "void":
        """
        * Set field TargetId
        	:param theTargetId:
        	:type theTargetId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_DatumTarget_SetTargetId(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumTarget_swiginit(self, _StepDimTol.new_StepDimTol_DatumTarget(*args))

    def TargetId(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field TargetId
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepDimTol.StepDimTol_DatumTarget_TargetId(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_DatumTarget_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumTarget
StepDimTol_DatumTarget.Init = new_instancemethod(_StepDimTol.StepDimTol_DatumTarget_Init, None, StepDimTol_DatumTarget)
StepDimTol_DatumTarget.SetTargetId = new_instancemethod(_StepDimTol.StepDimTol_DatumTarget_SetTargetId, None, StepDimTol_DatumTarget)
StepDimTol_DatumTarget.TargetId = new_instancemethod(_StepDimTol.StepDimTol_DatumTarget_TargetId, None, StepDimTol_DatumTarget)
StepDimTol_DatumTarget_swigregister = _StepDimTol.StepDimTol_DatumTarget_swigregister
StepDimTol_DatumTarget_swigregister(StepDimTol_DatumTarget)

class StepDimTol_GeneralDatumReference(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Base(self, *args) -> "StepDimTol_DatumOrCommonDatum":
        """
        * Returns field Base
        	:rtype: inline StepDimTol_DatumOrCommonDatum
        """
        return _StepDimTol.StepDimTol_GeneralDatumReference_Base(self, *args)


    def HasModifiers(self, *args) -> "Standard_Boolean":
        """
        * Indicates is field Modifiers exist
        	:rtype: inline bool
        """
        return _StepDimTol.StepDimTol_GeneralDatumReference_HasModifiers(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theOfShape:
        	:type theOfShape: StepRepr_ProductDefinitionShape
        	:param theProductDefinitional:
        	:type theProductDefinitional: StepData_Logical
        	:param theBase:
        	:type theBase: StepDimTol_DatumOrCommonDatum
        	:param theHasModifiers:
        	:type theHasModifiers: bool
        	:param theModifiers:
        	:type theModifiers: StepDimTol_HArray1OfDatumReferenceModifier
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeneralDatumReference_Init(self, *args)


    def Modifiers(self, *args) -> "opencascade::handle< StepDimTol_HArray1OfDatumReferenceModifier >":
        """
        * Returns field Modifiers
        	:rtype: inline opencascade::handle<StepDimTol_HArray1OfDatumReferenceModifier>
        """
        return _StepDimTol.StepDimTol_GeneralDatumReference_Modifiers(self, *args)


    def ModifiersValue(self, *args) -> "void":
        """
        * Returns Modifiers with the given number
        	:param theNum:
        	:type theNum: int
        	:rtype: inline StepDimTol_DatumReferenceModifier
        * Sets Modifiers with given number
        	:param theNum:
        	:type theNum: int
        	:param theItem:
        	:type theItem: StepDimTol_DatumReferenceModifier
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeneralDatumReference_ModifiersValue(self, *args)


    def NbModifiers(self, *args) -> "Standard_Integer":
        """
        * Returns number of Modifiers
        	:rtype: inline int
        """
        return _StepDimTol.StepDimTol_GeneralDatumReference_NbModifiers(self, *args)


    def SetBase(self, *args) -> "void":
        """
        * Set field Base
        	:param theBase:
        	:type theBase: StepDimTol_DatumOrCommonDatum
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeneralDatumReference_SetBase(self, *args)


    def SetModifiers(self, *args) -> "void":
        """
        * Set field Modifiers
        	:param theModifiers:
        	:type theModifiers: StepDimTol_HArray1OfDatumReferenceModifier
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeneralDatumReference_SetModifiers(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_GeneralDatumReference_swiginit(self, _StepDimTol.new_StepDimTol_GeneralDatumReference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeneralDatumReference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeneralDatumReference
StepDimTol_GeneralDatumReference.Base = new_instancemethod(_StepDimTol.StepDimTol_GeneralDatumReference_Base, None, StepDimTol_GeneralDatumReference)
StepDimTol_GeneralDatumReference.HasModifiers = new_instancemethod(_StepDimTol.StepDimTol_GeneralDatumReference_HasModifiers, None, StepDimTol_GeneralDatumReference)
StepDimTol_GeneralDatumReference.Init = new_instancemethod(_StepDimTol.StepDimTol_GeneralDatumReference_Init, None, StepDimTol_GeneralDatumReference)
StepDimTol_GeneralDatumReference.Modifiers = new_instancemethod(_StepDimTol.StepDimTol_GeneralDatumReference_Modifiers, None, StepDimTol_GeneralDatumReference)
StepDimTol_GeneralDatumReference.ModifiersValue = new_instancemethod(_StepDimTol.StepDimTol_GeneralDatumReference_ModifiersValue, None, StepDimTol_GeneralDatumReference)
StepDimTol_GeneralDatumReference.NbModifiers = new_instancemethod(_StepDimTol.StepDimTol_GeneralDatumReference_NbModifiers, None, StepDimTol_GeneralDatumReference)
StepDimTol_GeneralDatumReference.SetBase = new_instancemethod(_StepDimTol.StepDimTol_GeneralDatumReference_SetBase, None, StepDimTol_GeneralDatumReference)
StepDimTol_GeneralDatumReference.SetModifiers = new_instancemethod(_StepDimTol.StepDimTol_GeneralDatumReference_SetModifiers, None, StepDimTol_GeneralDatumReference)
StepDimTol_GeneralDatumReference_swigregister = _StepDimTol.StepDimTol_GeneralDatumReference_swigregister
StepDimTol_GeneralDatumReference_swigregister(StepDimTol_GeneralDatumReference)

class StepDimTol_GeometricTolerance(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepDimTol.StepDimTol_GeometricTolerance_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited) AP214
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepRepr_ShapeAspect
        	:rtype: None
        * Initialize all fields (own and inherited) AP242
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricTolerance_Init(self, *args)


    def Magnitude(self, *args) -> "opencascade::handle< StepBasic_MeasureWithUnit >":
        """
        * Returns field Magnitude
        	:rtype: opencascade::handle<StepBasic_MeasureWithUnit>
        """
        return _StepDimTol.StepDimTol_GeometricTolerance_Magnitude(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepDimTol.StepDimTol_GeometricTolerance_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricTolerance_SetDescription(self, *args)


    def SetMagnitude(self, *args) -> "void":
        """
        * Set field Magnitude
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricTolerance_SetMagnitude(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricTolerance_SetName(self, *args)


    def SetTolerancedShapeAspect(self, *args) -> "void":
        """
        * Set field TolerancedShapeAspect AP214
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepRepr_ShapeAspect
        	:rtype: None
        * Set field TolerancedShapeAspect AP242
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricTolerance_SetTolerancedShapeAspect(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_GeometricTolerance_swiginit(self, _StepDimTol.new_StepDimTol_GeometricTolerance(*args))

    def TolerancedShapeAspect(self, *args) -> "StepDimTol_GeometricToleranceTarget":
        """
        * Returns field TolerancedShapeAspect Note: in AP214(203) type of this attribute can be only StepRepr_ShapeAspect
        	:rtype: StepDimTol_GeometricToleranceTarget
        """
        return _StepDimTol.StepDimTol_GeometricTolerance_TolerancedShapeAspect(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeometricTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeometricTolerance
StepDimTol_GeometricTolerance.Description = new_instancemethod(_StepDimTol.StepDimTol_GeometricTolerance_Description, None, StepDimTol_GeometricTolerance)
StepDimTol_GeometricTolerance.Init = new_instancemethod(_StepDimTol.StepDimTol_GeometricTolerance_Init, None, StepDimTol_GeometricTolerance)
StepDimTol_GeometricTolerance.Magnitude = new_instancemethod(_StepDimTol.StepDimTol_GeometricTolerance_Magnitude, None, StepDimTol_GeometricTolerance)
StepDimTol_GeometricTolerance.Name = new_instancemethod(_StepDimTol.StepDimTol_GeometricTolerance_Name, None, StepDimTol_GeometricTolerance)
StepDimTol_GeometricTolerance.SetDescription = new_instancemethod(_StepDimTol.StepDimTol_GeometricTolerance_SetDescription, None, StepDimTol_GeometricTolerance)
StepDimTol_GeometricTolerance.SetMagnitude = new_instancemethod(_StepDimTol.StepDimTol_GeometricTolerance_SetMagnitude, None, StepDimTol_GeometricTolerance)
StepDimTol_GeometricTolerance.SetName = new_instancemethod(_StepDimTol.StepDimTol_GeometricTolerance_SetName, None, StepDimTol_GeometricTolerance)
StepDimTol_GeometricTolerance.SetTolerancedShapeAspect = new_instancemethod(_StepDimTol.StepDimTol_GeometricTolerance_SetTolerancedShapeAspect, None, StepDimTol_GeometricTolerance)
StepDimTol_GeometricTolerance.TolerancedShapeAspect = new_instancemethod(_StepDimTol.StepDimTol_GeometricTolerance_TolerancedShapeAspect, None, StepDimTol_GeometricTolerance)
StepDimTol_GeometricTolerance_swigregister = _StepDimTol.StepDimTol_GeometricTolerance_swigregister
StepDimTol_GeometricTolerance_swigregister(StepDimTol_GeometricTolerance)

class StepDimTol_GeometricToleranceRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceRelationship_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theRelatingGeometricTolerance:
        	:type theRelatingGeometricTolerance: StepDimTol_GeometricTolerance
        	:param theRelatedGeometricTolerance:
        	:type theRelatedGeometricTolerance: StepDimTol_GeometricTolerance
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceRelationship_Name(self, *args)


    def RelatedGeometricTolerance(self, *args) -> "opencascade::handle< StepDimTol_GeometricTolerance >":
        """
        * Returns field RelatedGeometricTolerance
        	:rtype: opencascade::handle<StepDimTol_GeometricTolerance>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceRelationship_RelatedGeometricTolerance(self, *args)


    def RelatingGeometricTolerance(self, *args) -> "opencascade::handle< StepDimTol_GeometricTolerance >":
        """
        * Returns field RelatingGeometricTolerance
        	:rtype: opencascade::handle<StepDimTol_GeometricTolerance>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceRelationship_RelatingGeometricTolerance(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceRelationship_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceRelationship_SetName(self, *args)


    def SetRelatedGeometricTolerance(self, *args) -> "void":
        """
        * Set field RelatedGeometricTolerance
        	:param theRelatedGeometricTolerance:
        	:type theRelatedGeometricTolerance: StepDimTol_GeometricTolerance
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceRelationship_SetRelatedGeometricTolerance(self, *args)


    def SetRelatingGeometricTolerance(self, *args) -> "void":
        """
        * Set field RelatingGeometricTolerance
        	:param theRelatingGeometricTolerance:
        	:type theRelatingGeometricTolerance: StepDimTol_GeometricTolerance
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceRelationship_SetRelatingGeometricTolerance(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_GeometricToleranceRelationship_swiginit(self, _StepDimTol.new_StepDimTol_GeometricToleranceRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeometricToleranceRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeometricToleranceRelationship
StepDimTol_GeometricToleranceRelationship.Description = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceRelationship_Description, None, StepDimTol_GeometricToleranceRelationship)
StepDimTol_GeometricToleranceRelationship.Init = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceRelationship_Init, None, StepDimTol_GeometricToleranceRelationship)
StepDimTol_GeometricToleranceRelationship.Name = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceRelationship_Name, None, StepDimTol_GeometricToleranceRelationship)
StepDimTol_GeometricToleranceRelationship.RelatedGeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceRelationship_RelatedGeometricTolerance, None, StepDimTol_GeometricToleranceRelationship)
StepDimTol_GeometricToleranceRelationship.RelatingGeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceRelationship_RelatingGeometricTolerance, None, StepDimTol_GeometricToleranceRelationship)
StepDimTol_GeometricToleranceRelationship.SetDescription = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceRelationship_SetDescription, None, StepDimTol_GeometricToleranceRelationship)
StepDimTol_GeometricToleranceRelationship.SetName = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceRelationship_SetName, None, StepDimTol_GeometricToleranceRelationship)
StepDimTol_GeometricToleranceRelationship.SetRelatedGeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceRelationship_SetRelatedGeometricTolerance, None, StepDimTol_GeometricToleranceRelationship)
StepDimTol_GeometricToleranceRelationship.SetRelatingGeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceRelationship_SetRelatingGeometricTolerance, None, StepDimTol_GeometricToleranceRelationship)
StepDimTol_GeometricToleranceRelationship_swigregister = _StepDimTol.StepDimTol_GeometricToleranceRelationship_swigregister
StepDimTol_GeometricToleranceRelationship_swigregister(StepDimTol_GeometricToleranceRelationship)

class StepDimTol_GeometricToleranceTarget(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DimensionalLocation(self, *args) -> "opencascade::handle< StepShape_DimensionalLocation >":
        """
        * returns Value as a DimensionalLocation (Null if another type)
        	:rtype: opencascade::handle<StepShape_DimensionalLocation>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceTarget_DimensionalLocation(self, *args)


    def DimensionalSize(self, *args) -> "opencascade::handle< StepShape_DimensionalSize >":
        """
        * returns Value as a DimensionalSize (Null if another type)
        	:rtype: opencascade::handle<StepShape_DimensionalSize>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceTarget_DimensionalSize(self, *args)


    def ProductDefinitionShape(self, *args) -> "opencascade::handle< StepRepr_ProductDefinitionShape >":
        """
        * returns Value as a ProductDefinitionShape (Null if another type)
        	:rtype: opencascade::handle<StepRepr_ProductDefinitionShape>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceTarget_ProductDefinitionShape(self, *args)


    def ShapeAspect(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        * returns Value as a ShapeAspect (Null if another type)
        	:rtype: opencascade::handle<StepRepr_ShapeAspect>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceTarget_ShapeAspect(self, *args)


    def __init__(self, *args):
        """
        * Returns a GeometricToleranceTarget select type
        	:rtype: None
        """
        _StepDimTol.StepDimTol_GeometricToleranceTarget_swiginit(self, _StepDimTol.new_StepDimTol_GeometricToleranceTarget(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeometricToleranceTarget
StepDimTol_GeometricToleranceTarget.DimensionalLocation = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceTarget_DimensionalLocation, None, StepDimTol_GeometricToleranceTarget)
StepDimTol_GeometricToleranceTarget.DimensionalSize = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceTarget_DimensionalSize, None, StepDimTol_GeometricToleranceTarget)
StepDimTol_GeometricToleranceTarget.ProductDefinitionShape = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceTarget_ProductDefinitionShape, None, StepDimTol_GeometricToleranceTarget)
StepDimTol_GeometricToleranceTarget.ShapeAspect = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceTarget_ShapeAspect, None, StepDimTol_GeometricToleranceTarget)
StepDimTol_GeometricToleranceTarget_swigregister = _StepDimTol.StepDimTol_GeometricToleranceTarget_swigregister
StepDimTol_GeometricToleranceTarget_swigregister(StepDimTol_GeometricToleranceTarget)

class StepDimTol_RunoutZoneOrientation(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Angle(self, *args) -> "opencascade::handle< StepBasic_PlaneAngleMeasureWithUnit >":
        """
        * Returns field Angle
        	:rtype: inline opencascade::handle<StepBasic_PlaneAngleMeasureWithUnit>
        """
        return _StepDimTol.StepDimTol_RunoutZoneOrientation_Angle(self, *args)


    def Init(self, *args) -> "void":
        """
        * Init all field own and inherited
        	:param theAngle:
        	:type theAngle: StepBasic_PlaneAngleMeasureWithUnit
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_RunoutZoneOrientation_Init(self, *args)


    def SetAngle(self, *args) -> "void":
        """
        * Set field Angle
        	:param theAngle:
        	:type theAngle: StepBasic_PlaneAngleMeasureWithUnit
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_RunoutZoneOrientation_SetAngle(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_RunoutZoneOrientation_swiginit(self, _StepDimTol.new_StepDimTol_RunoutZoneOrientation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_RunoutZoneOrientation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_RunoutZoneOrientation
StepDimTol_RunoutZoneOrientation.Angle = new_instancemethod(_StepDimTol.StepDimTol_RunoutZoneOrientation_Angle, None, StepDimTol_RunoutZoneOrientation)
StepDimTol_RunoutZoneOrientation.Init = new_instancemethod(_StepDimTol.StepDimTol_RunoutZoneOrientation_Init, None, StepDimTol_RunoutZoneOrientation)
StepDimTol_RunoutZoneOrientation.SetAngle = new_instancemethod(_StepDimTol.StepDimTol_RunoutZoneOrientation_SetAngle, None, StepDimTol_RunoutZoneOrientation)
StepDimTol_RunoutZoneOrientation_swigregister = _StepDimTol.StepDimTol_RunoutZoneOrientation_swigregister
StepDimTol_RunoutZoneOrientation_swigregister(StepDimTol_RunoutZoneOrientation)

class StepDimTol_ShapeToleranceSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GeometricTolerance(self, *args) -> "opencascade::handle< StepDimTol_GeometricTolerance >":
        """
        * Returns Value as GeometricTolerance (or Null if another type)
        	:rtype: opencascade::handle<StepDimTol_GeometricTolerance>
        """
        return _StepDimTol.StepDimTol_ShapeToleranceSelect_GeometricTolerance(self, *args)


    def PlusMinusTolerance(self, *args) -> "opencascade::handle< StepShape_PlusMinusTolerance >":
        """
        * Returns Value as PlusMinusTolerance (or Null if another type)
        	:rtype: opencascade::handle<StepShape_PlusMinusTolerance>
        """
        return _StepDimTol.StepDimTol_ShapeToleranceSelect_PlusMinusTolerance(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_ShapeToleranceSelect_swiginit(self, _StepDimTol.new_StepDimTol_ShapeToleranceSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_ShapeToleranceSelect
StepDimTol_ShapeToleranceSelect.GeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_ShapeToleranceSelect_GeometricTolerance, None, StepDimTol_ShapeToleranceSelect)
StepDimTol_ShapeToleranceSelect.PlusMinusTolerance = new_instancemethod(_StepDimTol.StepDimTol_ShapeToleranceSelect_PlusMinusTolerance, None, StepDimTol_ShapeToleranceSelect)
StepDimTol_ShapeToleranceSelect_swigregister = _StepDimTol.StepDimTol_ShapeToleranceSelect_swigregister
StepDimTol_ShapeToleranceSelect_swigregister(StepDimTol_ShapeToleranceSelect)

class StepDimTol_SimpleDatumReferenceModifierMember(OCC.Core.StepData.StepData_SelectInt):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def SetName(self, *args) -> "Standard_Boolean":
        """
        :param Standard_CString:
        	:type Standard_CString: 
        	:rtype: bool
        """
        return _StepDimTol.StepDimTol_SimpleDatumReferenceModifierMember_SetName(self, *args)


    def SetValue(self, *args) -> "void":
        """
        :param theValue:
        	:type theValue: StepDimTol_SimpleDatumReferenceModifier
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_SimpleDatumReferenceModifierMember_SetValue(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_SimpleDatumReferenceModifierMember_swiginit(self, _StepDimTol.new_StepDimTol_SimpleDatumReferenceModifierMember(*args))

    def Value(self, *args) -> "StepDimTol_SimpleDatumReferenceModifier":
        """:rtype: StepDimTol_SimpleDatumReferenceModifier"""
        return _StepDimTol.StepDimTol_SimpleDatumReferenceModifierMember_Value(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_SimpleDatumReferenceModifierMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_SimpleDatumReferenceModifierMember
StepDimTol_SimpleDatumReferenceModifierMember.SetName = new_instancemethod(_StepDimTol.StepDimTol_SimpleDatumReferenceModifierMember_SetName, None, StepDimTol_SimpleDatumReferenceModifierMember)
StepDimTol_SimpleDatumReferenceModifierMember.SetValue = new_instancemethod(_StepDimTol.StepDimTol_SimpleDatumReferenceModifierMember_SetValue, None, StepDimTol_SimpleDatumReferenceModifierMember)
StepDimTol_SimpleDatumReferenceModifierMember.Value = new_instancemethod(_StepDimTol.StepDimTol_SimpleDatumReferenceModifierMember_Value, None, StepDimTol_SimpleDatumReferenceModifierMember)
StepDimTol_SimpleDatumReferenceModifierMember_swigregister = _StepDimTol.StepDimTol_SimpleDatumReferenceModifierMember_swigregister
StepDimTol_SimpleDatumReferenceModifierMember_swigregister(StepDimTol_SimpleDatumReferenceModifierMember)

class StepDimTol_ToleranceZone(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DefiningTolerance(self, *args) -> "opencascade::handle< StepDimTol_HArray1OfToleranceZoneTarget >":
        """
        * Returns field DefiningTolerance
        	:rtype: inline opencascade::handle<StepDimTol_HArray1OfToleranceZoneTarget>
        """
        return _StepDimTol.StepDimTol_ToleranceZone_DefiningTolerance(self, *args)


    def DefiningToleranceValue(self, *args) -> "StepDimTol_ToleranceZoneTarget":
        """
        * Returns Defining Tolerance with the given number
        	:param theNum:
        	:type theNum: int
        	:rtype: inline StepDimTol_ToleranceZoneTarget
        """
        return _StepDimTol.StepDimTol_ToleranceZone_DefiningToleranceValue(self, *args)


    def Form(self, *args) -> "opencascade::handle< StepDimTol_ToleranceZoneForm >":
        """
        * Returns field Form
        	:rtype: inline opencascade::handle<StepDimTol_ToleranceZoneForm>
        """
        return _StepDimTol.StepDimTol_ToleranceZone_Form(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theOfShape:
        	:type theOfShape: StepRepr_ProductDefinitionShape
        	:param theProductDefinitional:
        	:type theProductDefinitional: StepData_Logical
        	:param theDefiningTolerance:
        	:type theDefiningTolerance: StepDimTol_HArray1OfToleranceZoneTarget
        	:param theForm:
        	:type theForm: StepDimTol_ToleranceZoneForm
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_ToleranceZone_Init(self, *args)


    def NbDefiningTolerances(self, *args) -> "Standard_Integer":
        """
        * Returns number of Defining Tolerances
        	:rtype: inline int
        """
        return _StepDimTol.StepDimTol_ToleranceZone_NbDefiningTolerances(self, *args)


    def SetDefiningTolerance(self, *args) -> "void":
        """
        * Set field DefiningTolerance
        	:param theDefiningTolerance:
        	:type theDefiningTolerance: StepDimTol_HArray1OfToleranceZoneTarget
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_ToleranceZone_SetDefiningTolerance(self, *args)


    def SetDefiningToleranceValue(self, *args) -> "void":
        """
        * Sets Defining Tolerance with given number
        	:param theNum:
        	:type theNum: int
        	:param theItem:
        	:type theItem: StepDimTol_ToleranceZoneTarget
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_ToleranceZone_SetDefiningToleranceValue(self, *args)


    def SetForm(self, *args) -> "void":
        """
        * Set field Form
        	:param theForm:
        	:type theForm: StepDimTol_ToleranceZoneForm
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_ToleranceZone_SetForm(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_ToleranceZone_swiginit(self, _StepDimTol.new_StepDimTol_ToleranceZone(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_ToleranceZone_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_ToleranceZone
StepDimTol_ToleranceZone.DefiningTolerance = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZone_DefiningTolerance, None, StepDimTol_ToleranceZone)
StepDimTol_ToleranceZone.DefiningToleranceValue = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZone_DefiningToleranceValue, None, StepDimTol_ToleranceZone)
StepDimTol_ToleranceZone.Form = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZone_Form, None, StepDimTol_ToleranceZone)
StepDimTol_ToleranceZone.Init = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZone_Init, None, StepDimTol_ToleranceZone)
StepDimTol_ToleranceZone.NbDefiningTolerances = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZone_NbDefiningTolerances, None, StepDimTol_ToleranceZone)
StepDimTol_ToleranceZone.SetDefiningTolerance = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZone_SetDefiningTolerance, None, StepDimTol_ToleranceZone)
StepDimTol_ToleranceZone.SetDefiningToleranceValue = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZone_SetDefiningToleranceValue, None, StepDimTol_ToleranceZone)
StepDimTol_ToleranceZone.SetForm = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZone_SetForm, None, StepDimTol_ToleranceZone)
StepDimTol_ToleranceZone_swigregister = _StepDimTol.StepDimTol_ToleranceZone_swigregister
StepDimTol_ToleranceZone_swigregister(StepDimTol_ToleranceZone)

class StepDimTol_ToleranceZoneDefinition(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Boundaries(self, *args) -> "opencascade::handle< StepRepr_HArray1OfShapeAspect >":
        """
        * Returns field Boundaries
        	:rtype: inline opencascade::handle<StepRepr_HArray1OfShapeAspect>
        """
        return _StepDimTol.StepDimTol_ToleranceZoneDefinition_Boundaries(self, *args)


    def BoundariesValue(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        * Returns Boundaries with the given number
        	:param theNum:
        	:type theNum: int
        	:rtype: inline opencascade::handle<StepRepr_ShapeAspect>
        """
        return _StepDimTol.StepDimTol_ToleranceZoneDefinition_BoundariesValue(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theZone:
        	:type theZone: StepDimTol_ToleranceZone
        	:param theBoundaries:
        	:type theBoundaries: StepRepr_HArray1OfShapeAspect
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_ToleranceZoneDefinition_Init(self, *args)


    def NbBoundaries(self, *args) -> "Standard_Integer":
        """
        * Returns number of Boundaries
        	:rtype: inline int
        """
        return _StepDimTol.StepDimTol_ToleranceZoneDefinition_NbBoundaries(self, *args)


    def SetBoundaries(self, *args) -> "void":
        """
        * Set field Boundaries
        	:param theBoundaries:
        	:type theBoundaries: StepRepr_HArray1OfShapeAspect
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_ToleranceZoneDefinition_SetBoundaries(self, *args)


    def SetBoundariesValue(self, *args) -> "void":
        """
        * Sets Boundaries with given number
        	:param theNum:
        	:type theNum: int
        	:param theItem:
        	:type theItem: StepRepr_ShapeAspect
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_ToleranceZoneDefinition_SetBoundariesValue(self, *args)


    def SetZone(self, *args) -> "void":
        """
        * Set field Zone
        	:param theZone:
        	:type theZone: StepDimTol_ToleranceZone
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_ToleranceZoneDefinition_SetZone(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_ToleranceZoneDefinition_swiginit(self, _StepDimTol.new_StepDimTol_ToleranceZoneDefinition(*args))

    def Zone(self, *args) -> "opencascade::handle< StepDimTol_ToleranceZone >":
        """
        * Returns field Zone
        	:rtype: inline opencascade::handle<StepDimTol_ToleranceZone>
        """
        return _StepDimTol.StepDimTol_ToleranceZoneDefinition_Zone(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_ToleranceZoneDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_ToleranceZoneDefinition
StepDimTol_ToleranceZoneDefinition.Boundaries = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneDefinition_Boundaries, None, StepDimTol_ToleranceZoneDefinition)
StepDimTol_ToleranceZoneDefinition.BoundariesValue = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneDefinition_BoundariesValue, None, StepDimTol_ToleranceZoneDefinition)
StepDimTol_ToleranceZoneDefinition.Init = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneDefinition_Init, None, StepDimTol_ToleranceZoneDefinition)
StepDimTol_ToleranceZoneDefinition.NbBoundaries = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneDefinition_NbBoundaries, None, StepDimTol_ToleranceZoneDefinition)
StepDimTol_ToleranceZoneDefinition.SetBoundaries = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneDefinition_SetBoundaries, None, StepDimTol_ToleranceZoneDefinition)
StepDimTol_ToleranceZoneDefinition.SetBoundariesValue = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneDefinition_SetBoundariesValue, None, StepDimTol_ToleranceZoneDefinition)
StepDimTol_ToleranceZoneDefinition.SetZone = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneDefinition_SetZone, None, StepDimTol_ToleranceZoneDefinition)
StepDimTol_ToleranceZoneDefinition.Zone = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneDefinition_Zone, None, StepDimTol_ToleranceZoneDefinition)
StepDimTol_ToleranceZoneDefinition_swigregister = _StepDimTol.StepDimTol_ToleranceZoneDefinition_swigregister
StepDimTol_ToleranceZoneDefinition_swigregister(StepDimTol_ToleranceZoneDefinition)

class StepDimTol_ToleranceZoneForm(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Init all field own and inherited
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_ToleranceZoneForm_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: inline opencascade::handle<TCollection_HAsciiString>
        """
        return _StepDimTol.StepDimTol_ToleranceZoneForm_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_ToleranceZoneForm_SetName(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_ToleranceZoneForm_swiginit(self, _StepDimTol.new_StepDimTol_ToleranceZoneForm(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_ToleranceZoneForm_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_ToleranceZoneForm
StepDimTol_ToleranceZoneForm.Init = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneForm_Init, None, StepDimTol_ToleranceZoneForm)
StepDimTol_ToleranceZoneForm.Name = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneForm_Name, None, StepDimTol_ToleranceZoneForm)
StepDimTol_ToleranceZoneForm.SetName = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneForm_SetName, None, StepDimTol_ToleranceZoneForm)
StepDimTol_ToleranceZoneForm_swigregister = _StepDimTol.StepDimTol_ToleranceZoneForm_swigregister
StepDimTol_ToleranceZoneForm_swigregister(StepDimTol_ToleranceZoneForm)

class StepDimTol_ToleranceZoneTarget(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DimensionalLocation(self, *args) -> "opencascade::handle< StepShape_DimensionalLocation >":
        """
        * returns Value as a DimensionalLocation (Null if another type)
        	:rtype: opencascade::handle<StepShape_DimensionalLocation>
        """
        return _StepDimTol.StepDimTol_ToleranceZoneTarget_DimensionalLocation(self, *args)


    def DimensionalSize(self, *args) -> "opencascade::handle< StepShape_DimensionalSize >":
        """
        * returns Value as a DimensionalSize (Null if another type)
        	:rtype: opencascade::handle<StepShape_DimensionalSize>
        """
        return _StepDimTol.StepDimTol_ToleranceZoneTarget_DimensionalSize(self, *args)


    def GeneralDatumReference(self, *args) -> "opencascade::handle< StepDimTol_GeneralDatumReference >":
        """
        * returns Value as a GeneralDatumReference (Null if another type)
        	:rtype: opencascade::handle<StepDimTol_GeneralDatumReference>
        """
        return _StepDimTol.StepDimTol_ToleranceZoneTarget_GeneralDatumReference(self, *args)


    def GeometricTolerance(self, *args) -> "opencascade::handle< StepDimTol_GeometricTolerance >":
        """
        * returns Value as a GeometricTolerance (Null if another type)
        	:rtype: opencascade::handle<StepDimTol_GeometricTolerance>
        """
        return _StepDimTol.StepDimTol_ToleranceZoneTarget_GeometricTolerance(self, *args)


    def __init__(self, *args):
        """
        * Returns a ToleranceZoneTarget select type
        	:rtype: None
        """
        _StepDimTol.StepDimTol_ToleranceZoneTarget_swiginit(self, _StepDimTol.new_StepDimTol_ToleranceZoneTarget(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_ToleranceZoneTarget
StepDimTol_ToleranceZoneTarget.DimensionalLocation = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneTarget_DimensionalLocation, None, StepDimTol_ToleranceZoneTarget)
StepDimTol_ToleranceZoneTarget.DimensionalSize = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneTarget_DimensionalSize, None, StepDimTol_ToleranceZoneTarget)
StepDimTol_ToleranceZoneTarget.GeneralDatumReference = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneTarget_GeneralDatumReference, None, StepDimTol_ToleranceZoneTarget)
StepDimTol_ToleranceZoneTarget.GeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_ToleranceZoneTarget_GeometricTolerance, None, StepDimTol_ToleranceZoneTarget)
StepDimTol_ToleranceZoneTarget_swigregister = _StepDimTol.StepDimTol_ToleranceZoneTarget_swigregister
StepDimTol_ToleranceZoneTarget_swigregister(StepDimTol_ToleranceZoneTarget)

class StepDimTol_CylindricityTolerance(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_CylindricityTolerance_swiginit(self, _StepDimTol.new_StepDimTol_CylindricityTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_CylindricityTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_CylindricityTolerance
StepDimTol_CylindricityTolerance_swigregister = _StepDimTol.StepDimTol_CylindricityTolerance_swigregister
StepDimTol_CylindricityTolerance_swigregister(StepDimTol_CylindricityTolerance)

class StepDimTol_DatumReferenceCompartment(StepDimTol_GeneralDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumReferenceCompartment_swiginit(self, _StepDimTol.new_StepDimTol_DatumReferenceCompartment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_DatumReferenceCompartment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumReferenceCompartment
StepDimTol_DatumReferenceCompartment_swigregister = _StepDimTol.StepDimTol_DatumReferenceCompartment_swigregister
StepDimTol_DatumReferenceCompartment_swigregister(StepDimTol_DatumReferenceCompartment)

class StepDimTol_DatumReferenceElement(StepDimTol_GeneralDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_DatumReferenceElement_swiginit(self, _StepDimTol.new_StepDimTol_DatumReferenceElement(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_DatumReferenceElement_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_DatumReferenceElement
StepDimTol_DatumReferenceElement_swigregister = _StepDimTol.StepDimTol_DatumReferenceElement_swigregister
StepDimTol_DatumReferenceElement_swigregister(StepDimTol_DatumReferenceElement)

class StepDimTol_FlatnessTolerance(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_FlatnessTolerance_swiginit(self, _StepDimTol.new_StepDimTol_FlatnessTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_FlatnessTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_FlatnessTolerance
StepDimTol_FlatnessTolerance_swigregister = _StepDimTol.StepDimTol_FlatnessTolerance_swigregister
StepDimTol_FlatnessTolerance_swigregister(StepDimTol_FlatnessTolerance)

class StepDimTol_GeoTolAndGeoTolWthDatRef(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GetGeometricToleranceWithDatumReference(self, *args) -> "opencascade::handle< StepDimTol_GeometricToleranceWithDatumReference >":
        """:rtype: inline opencascade::handle<StepDimTol_GeometricToleranceWithDatumReference>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_GetGeometricToleranceWithDatumReference(self, *args)


    def GetToleranceType(self, *args) -> "StepDimTol_GeometricToleranceType":
        """:rtype: StepDimTol_GeometricToleranceType"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_GetToleranceType(self, *args)


    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepRepr_ShapeAspect
        	:param theGTWDR:
        	:type theGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aMagnitude:
        	:type aMagnitude: StepBasic_MeasureWithUnit
        	:param aTolerancedShapeAspect:
        	:type aTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param aGTWDR:
        	:type aGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_Init(self, *args)


    def SetGeometricToleranceType(self, *args) -> "void":
        """
        :param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_SetGeometricToleranceType(self, *args)


    def SetGeometricToleranceWithDatumReference(self, *args) -> "void":
        """
        :param theGTWDR:
        	:type theGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_SetGeometricToleranceWithDatumReference(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_swiginit(self, _StepDimTol.new_StepDimTol_GeoTolAndGeoTolWthDatRef(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeoTolAndGeoTolWthDatRef_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeoTolAndGeoTolWthDatRef
StepDimTol_GeoTolAndGeoTolWthDatRef.GetGeometricToleranceWithDatumReference = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_GetGeometricToleranceWithDatumReference, None, StepDimTol_GeoTolAndGeoTolWthDatRef)
StepDimTol_GeoTolAndGeoTolWthDatRef.GetToleranceType = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_GetToleranceType, None, StepDimTol_GeoTolAndGeoTolWthDatRef)
StepDimTol_GeoTolAndGeoTolWthDatRef.Init = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_Init, None, StepDimTol_GeoTolAndGeoTolWthDatRef)
StepDimTol_GeoTolAndGeoTolWthDatRef.SetGeometricToleranceType = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_SetGeometricToleranceType, None, StepDimTol_GeoTolAndGeoTolWthDatRef)
StepDimTol_GeoTolAndGeoTolWthDatRef.SetGeometricToleranceWithDatumReference = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_SetGeometricToleranceWithDatumReference, None, StepDimTol_GeoTolAndGeoTolWthDatRef)
StepDimTol_GeoTolAndGeoTolWthDatRef_swigregister = _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRef_swigregister
StepDimTol_GeoTolAndGeoTolWthDatRef_swigregister(StepDimTol_GeoTolAndGeoTolWthDatRef)

class StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GetGeometricToleranceWithDatumReference(self, *args) -> "opencascade::handle< StepDimTol_GeometricToleranceWithDatumReference >":
        """:rtype: inline opencascade::handle<StepDimTol_GeometricToleranceWithDatumReference>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_GetGeometricToleranceWithDatumReference(self, *args)


    def GetGeometricToleranceWithModifiers(self, *args) -> "opencascade::handle< StepDimTol_GeometricToleranceWithModifiers >":
        """:rtype: inline opencascade::handle<StepDimTol_GeometricToleranceWithModifiers>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_GetGeometricToleranceWithModifiers(self, *args)


    def GetToleranceType(self, *args) -> "StepDimTol_GeometricToleranceType":
        """:rtype: StepDimTol_GeometricToleranceType"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_GetToleranceType(self, *args)


    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepRepr_ShapeAspect
        	:param theGTWDR:
        	:type theGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param theGTWM:
        	:type theGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aMagnitude:
        	:type aMagnitude: StepBasic_MeasureWithUnit
        	:param aTolerancedShapeAspect:
        	:type aTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param aGTWDR:
        	:type aGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param aGTWM:
        	:type aGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_Init(self, *args)


    def SetGeometricToleranceType(self, *args) -> "void":
        """
        :param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_SetGeometricToleranceType(self, *args)


    def SetGeometricToleranceWithDatumReference(self, *args) -> "void":
        """
        :param theGTWDR:
        	:type theGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_SetGeometricToleranceWithDatumReference(self, *args)


    def SetGeometricToleranceWithModifiers(self, *args) -> "void":
        """
        :param theGTWM:
        	:type theGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_SetGeometricToleranceWithModifiers(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_swiginit(self, _StepDimTol.new_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod.GetGeometricToleranceWithDatumReference = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_GetGeometricToleranceWithDatumReference, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod.GetGeometricToleranceWithModifiers = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_GetGeometricToleranceWithModifiers, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod.GetToleranceType = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_GetToleranceType, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod.Init = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_Init, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod.SetGeometricToleranceType = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_SetGeometricToleranceType, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod.SetGeometricToleranceWithDatumReference = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_SetGeometricToleranceWithDatumReference, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod.SetGeometricToleranceWithModifiers = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_SetGeometricToleranceWithModifiers, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_swigregister = _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_swigregister
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod_swigregister(StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod)

class StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GetGeometricToleranceWithDatumReference(self, *args) -> "opencascade::handle< StepDimTol_GeometricToleranceWithDatumReference >":
        """:rtype: opencascade::handle<StepDimTol_GeometricToleranceWithDatumReference>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_GetGeometricToleranceWithDatumReference(self, *args)


    def GetModifiedGeometricTolerance(self, *args) -> "opencascade::handle< StepDimTol_ModifiedGeometricTolerance >":
        """:rtype: opencascade::handle<StepDimTol_ModifiedGeometricTolerance>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_GetModifiedGeometricTolerance(self, *args)


    def GetPositionTolerance(self, *args) -> "opencascade::handle< StepDimTol_PositionTolerance >":
        """:rtype: opencascade::handle<StepDimTol_PositionTolerance>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_GetPositionTolerance(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aMagnitude:
        	:type aMagnitude: StepBasic_MeasureWithUnit
        	:param aTolerancedShapeAspect:
        	:type aTolerancedShapeAspect: StepRepr_ShapeAspect
        	:param aGTWDR:
        	:type aGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param aMGT:
        	:type aMGT: StepDimTol_ModifiedGeometricTolerance
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aMagnitude:
        	:type aMagnitude: StepBasic_MeasureWithUnit
        	:param aTolerancedShapeAspect:
        	:type aTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param aGTWDR:
        	:type aGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param aMGT:
        	:type aMGT: StepDimTol_ModifiedGeometricTolerance
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_Init(self, *args)


    def SetGeometricToleranceWithDatumReference(self, *args) -> "void":
        """
        :param aGTWDR:
        	:type aGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_SetGeometricToleranceWithDatumReference(self, *args)


    def SetModifiedGeometricTolerance(self, *args) -> "void":
        """
        :param aMGT:
        	:type aMGT: StepDimTol_ModifiedGeometricTolerance
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_SetModifiedGeometricTolerance(self, *args)


    def SetPositionTolerance(self, *args) -> "void":
        """
        :param aPT:
        	:type aPT: StepDimTol_PositionTolerance
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_SetPositionTolerance(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_swiginit(self, _StepDimTol.new_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol
StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.GetGeometricToleranceWithDatumReference = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_GetGeometricToleranceWithDatumReference, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.GetModifiedGeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_GetModifiedGeometricTolerance, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.GetPositionTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_GetPositionTolerance, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.Init = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_Init, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.SetGeometricToleranceWithDatumReference = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_SetGeometricToleranceWithDatumReference, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.SetModifiedGeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_SetModifiedGeometricTolerance, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol.SetPositionTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_SetPositionTolerance, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_swigregister = _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_swigregister
StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol_swigregister(StepDimTol_GeoTolAndGeoTolWthDatRefAndModGeoTolAndPosTol)

class StepDimTol_GeoTolAndGeoTolWthMod(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GetGeometricToleranceWithModifiers(self, *args) -> "opencascade::handle< StepDimTol_GeometricToleranceWithModifiers >":
        """:rtype: inline opencascade::handle<StepDimTol_GeometricToleranceWithModifiers>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_GetGeometricToleranceWithModifiers(self, *args)


    def GetToleranceType(self, *args) -> "StepDimTol_GeometricToleranceType":
        """:rtype: StepDimTol_GeometricToleranceType"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_GetToleranceType(self, *args)


    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepRepr_ShapeAspect
        	:param theGTWM:
        	:type theGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aMagnitude:
        	:type aMagnitude: StepBasic_MeasureWithUnit
        	:param aTolerancedShapeAspect:
        	:type aTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param aGTWM:
        	:type aGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_Init(self, *args)


    def SetGeometricToleranceType(self, *args) -> "void":
        """
        :param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_SetGeometricToleranceType(self, *args)


    def SetGeometricToleranceWithModifiers(self, *args) -> "void":
        """
        :param theGTWM:
        	:type theGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_SetGeometricToleranceWithModifiers(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_swiginit(self, _StepDimTol.new_StepDimTol_GeoTolAndGeoTolWthMod(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeoTolAndGeoTolWthMod_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeoTolAndGeoTolWthMod
StepDimTol_GeoTolAndGeoTolWthMod.GetGeometricToleranceWithModifiers = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_GetGeometricToleranceWithModifiers, None, StepDimTol_GeoTolAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthMod.GetToleranceType = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_GetToleranceType, None, StepDimTol_GeoTolAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthMod.Init = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_Init, None, StepDimTol_GeoTolAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthMod.SetGeometricToleranceType = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_SetGeometricToleranceType, None, StepDimTol_GeoTolAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthMod.SetGeometricToleranceWithModifiers = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_SetGeometricToleranceWithModifiers, None, StepDimTol_GeoTolAndGeoTolWthMod)
StepDimTol_GeoTolAndGeoTolWthMod_swigregister = _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMod_swigregister
StepDimTol_GeoTolAndGeoTolWthMod_swigregister(StepDimTol_GeoTolAndGeoTolWthMod)

class StepDimTol_GeometricToleranceWithDatumReference(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DatumSystem(self, *args) -> "opencascade::handle< StepDimTol_HArray1OfDatumReference >":
        """
        * Returns field DatumSystem AP214
        	:rtype: opencascade::handle<StepDimTol_HArray1OfDatumReference>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_DatumSystem(self, *args)


    def DatumSystemAP242(self, *args) -> "opencascade::handle< StepDimTol_HArray1OfDatumSystemOrReference >":
        """
        * Returns field DatumSystem AP242
        	:rtype: opencascade::handle<StepDimTol_HArray1OfDatumSystemOrReference>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_DatumSystemAP242(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited) AP214
        	:param theGeometricTolerance_Name:
        	:type theGeometricTolerance_Name: TCollection_HAsciiString
        	:param theGeometricTolerance_Description:
        	:type theGeometricTolerance_Description: TCollection_HAsciiString
        	:param theGeometricTolerance_Magnitude:
        	:type theGeometricTolerance_Magnitude: StepBasic_MeasureWithUnit
        	:param theGeometricTolerance_TolerancedShapeAspect:
        	:type theGeometricTolerance_TolerancedShapeAspect: StepRepr_ShapeAspect
        	:param theDatumSystem:
        	:type theDatumSystem: StepDimTol_HArray1OfDatumReference
        	:rtype: None
        * Initialize all fields (own and inherited) AP242
        	:param theGeometricTolerance_Name:
        	:type theGeometricTolerance_Name: TCollection_HAsciiString
        	:param theGeometricTolerance_Description:
        	:type theGeometricTolerance_Description: TCollection_HAsciiString
        	:param theGeometricTolerance_Magnitude:
        	:type theGeometricTolerance_Magnitude: StepBasic_MeasureWithUnit
        	:param theGeometricTolerance_TolerancedShapeAspect:
        	:type theGeometricTolerance_TolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param theDatumSystem:
        	:type theDatumSystem: StepDimTol_HArray1OfDatumSystemOrReference
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_Init(self, *args)


    def SetDatumSystem(self, *args) -> "void":
        """
        * Set field DatumSystem AP214
        	:param theDatumSystem:
        	:type theDatumSystem: StepDimTol_HArray1OfDatumReference
        	:rtype: None
        * Set field DatumSystem AP242
        	:param theDatumSystem:
        	:type theDatumSystem: StepDimTol_HArray1OfDatumSystemOrReference
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_SetDatumSystem(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_swiginit(self, _StepDimTol.new_StepDimTol_GeometricToleranceWithDatumReference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeometricToleranceWithDatumReference_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeometricToleranceWithDatumReference
StepDimTol_GeometricToleranceWithDatumReference.DatumSystem = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_DatumSystem, None, StepDimTol_GeometricToleranceWithDatumReference)
StepDimTol_GeometricToleranceWithDatumReference.DatumSystemAP242 = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_DatumSystemAP242, None, StepDimTol_GeometricToleranceWithDatumReference)
StepDimTol_GeometricToleranceWithDatumReference.Init = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_Init, None, StepDimTol_GeometricToleranceWithDatumReference)
StepDimTol_GeometricToleranceWithDatumReference.SetDatumSystem = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_SetDatumSystem, None, StepDimTol_GeometricToleranceWithDatumReference)
StepDimTol_GeometricToleranceWithDatumReference_swigregister = _StepDimTol.StepDimTol_GeometricToleranceWithDatumReference_swigregister
StepDimTol_GeometricToleranceWithDatumReference_swigregister(StepDimTol_GeometricToleranceWithDatumReference)

class StepDimTol_GeometricToleranceWithDefinedUnit(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited) AP214
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepRepr_ShapeAspect
        	:param theUnitSize:
        	:type theUnitSize: StepBasic_LengthMeasureWithUnit
        	:rtype: None
        * Initialize all fields (own and inherited) AP242
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param theUnitSize:
        	:type theUnitSize: StepBasic_LengthMeasureWithUnit
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDefinedUnit_Init(self, *args)


    def SetUnitSize(self, *args) -> "void":
        """
        * Set field UnitSize
        	:param theUnitSize:
        	:type theUnitSize: StepBasic_LengthMeasureWithUnit
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDefinedUnit_SetUnitSize(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_GeometricToleranceWithDefinedUnit_swiginit(self, _StepDimTol.new_StepDimTol_GeometricToleranceWithDefinedUnit(*args))

    def UnitSize(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """
        * Returns field UnitSize
        	:rtype: inline opencascade::handle<StepBasic_LengthMeasureWithUnit>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDefinedUnit_UnitSize(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeometricToleranceWithDefinedUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeometricToleranceWithDefinedUnit
StepDimTol_GeometricToleranceWithDefinedUnit.Init = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDefinedUnit_Init, None, StepDimTol_GeometricToleranceWithDefinedUnit)
StepDimTol_GeometricToleranceWithDefinedUnit.SetUnitSize = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDefinedUnit_SetUnitSize, None, StepDimTol_GeometricToleranceWithDefinedUnit)
StepDimTol_GeometricToleranceWithDefinedUnit.UnitSize = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDefinedUnit_UnitSize, None, StepDimTol_GeometricToleranceWithDefinedUnit)
StepDimTol_GeometricToleranceWithDefinedUnit_swigregister = _StepDimTol.StepDimTol_GeometricToleranceWithDefinedUnit_swigregister
StepDimTol_GeometricToleranceWithDefinedUnit_swigregister(StepDimTol_GeometricToleranceWithDefinedUnit)

class StepDimTol_GeometricToleranceWithModifiers(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param theModifiers:
        	:type theModifiers: StepDimTol_HArray1OfGeometricToleranceModifier
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithModifiers_Init(self, *args)


    def ModifierValue(self, *args) -> "StepDimTol_GeometricToleranceModifier":
        """
        * Returns modifier with the given number
        	:param theNum:
        	:type theNum: int
        	:rtype: inline StepDimTol_GeometricToleranceModifier
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithModifiers_ModifierValue(self, *args)


    def Modifiers(self, *args) -> "opencascade::handle< StepDimTol_HArray1OfGeometricToleranceModifier >":
        """
        * Returns field Modifiers
        	:rtype: inline opencascade::handle<StepDimTol_HArray1OfGeometricToleranceModifier>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithModifiers_Modifiers(self, *args)


    def NbModifiers(self, *args) -> "Standard_Integer":
        """
        * Returns number of modifiers
        	:rtype: inline int
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithModifiers_NbModifiers(self, *args)


    def SetModifierValue(self, *args) -> "void":
        """
        * Sets modifier with given number
        	:param theNum:
        	:type theNum: int
        	:param theItem:
        	:type theItem: StepDimTol_GeometricToleranceModifier
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithModifiers_SetModifierValue(self, *args)


    def SetModifiers(self, *args) -> "void":
        """
        * Set field Modifiers
        	:param theModifiers:
        	:type theModifiers: StepDimTol_HArray1OfGeometricToleranceModifier
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithModifiers_SetModifiers(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_GeometricToleranceWithModifiers_swiginit(self, _StepDimTol.new_StepDimTol_GeometricToleranceWithModifiers(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeometricToleranceWithModifiers_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeometricToleranceWithModifiers
StepDimTol_GeometricToleranceWithModifiers.Init = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithModifiers_Init, None, StepDimTol_GeometricToleranceWithModifiers)
StepDimTol_GeometricToleranceWithModifiers.ModifierValue = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithModifiers_ModifierValue, None, StepDimTol_GeometricToleranceWithModifiers)
StepDimTol_GeometricToleranceWithModifiers.Modifiers = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithModifiers_Modifiers, None, StepDimTol_GeometricToleranceWithModifiers)
StepDimTol_GeometricToleranceWithModifiers.NbModifiers = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithModifiers_NbModifiers, None, StepDimTol_GeometricToleranceWithModifiers)
StepDimTol_GeometricToleranceWithModifiers.SetModifierValue = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithModifiers_SetModifierValue, None, StepDimTol_GeometricToleranceWithModifiers)
StepDimTol_GeometricToleranceWithModifiers.SetModifiers = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithModifiers_SetModifiers, None, StepDimTol_GeometricToleranceWithModifiers)
StepDimTol_GeometricToleranceWithModifiers_swigregister = _StepDimTol.StepDimTol_GeometricToleranceWithModifiers_swigregister
StepDimTol_GeometricToleranceWithModifiers_swigregister(StepDimTol_GeometricToleranceWithModifiers)

class StepDimTol_LineProfileTolerance(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_LineProfileTolerance_swiginit(self, _StepDimTol.new_StepDimTol_LineProfileTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_LineProfileTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_LineProfileTolerance
StepDimTol_LineProfileTolerance_swigregister = _StepDimTol.StepDimTol_LineProfileTolerance_swigregister
StepDimTol_LineProfileTolerance_swigregister(StepDimTol_LineProfileTolerance)

class StepDimTol_ModifiedGeometricTolerance(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited) AP214
        	:param theGeometricTolerance_Name:
        	:type theGeometricTolerance_Name: TCollection_HAsciiString
        	:param theGeometricTolerance_Description:
        	:type theGeometricTolerance_Description: TCollection_HAsciiString
        	:param theGeometricTolerance_Magnitude:
        	:type theGeometricTolerance_Magnitude: StepBasic_MeasureWithUnit
        	:param theGeometricTolerance_TolerancedShapeAspect:
        	:type theGeometricTolerance_TolerancedShapeAspect: StepRepr_ShapeAspect
        	:param theModifier:
        	:type theModifier: StepDimTol_LimitCondition
        	:rtype: None
        * Initialize all fields (own and inherited) AP242
        	:param theGeometricTolerance_Name:
        	:type theGeometricTolerance_Name: TCollection_HAsciiString
        	:param theGeometricTolerance_Description:
        	:type theGeometricTolerance_Description: TCollection_HAsciiString
        	:param theGeometricTolerance_Magnitude:
        	:type theGeometricTolerance_Magnitude: StepBasic_MeasureWithUnit
        	:param theGeometricTolerance_TolerancedShapeAspect:
        	:type theGeometricTolerance_TolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param theModifier:
        	:type theModifier: StepDimTol_LimitCondition
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_ModifiedGeometricTolerance_Init(self, *args)


    def Modifier(self, *args) -> "StepDimTol_LimitCondition":
        """
        * Returns field Modifier
        	:rtype: StepDimTol_LimitCondition
        """
        return _StepDimTol.StepDimTol_ModifiedGeometricTolerance_Modifier(self, *args)


    def SetModifier(self, *args) -> "void":
        """
        * Set field Modifier
        	:param theModifier:
        	:type theModifier: StepDimTol_LimitCondition
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_ModifiedGeometricTolerance_SetModifier(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_ModifiedGeometricTolerance_swiginit(self, _StepDimTol.new_StepDimTol_ModifiedGeometricTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_ModifiedGeometricTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_ModifiedGeometricTolerance
StepDimTol_ModifiedGeometricTolerance.Init = new_instancemethod(_StepDimTol.StepDimTol_ModifiedGeometricTolerance_Init, None, StepDimTol_ModifiedGeometricTolerance)
StepDimTol_ModifiedGeometricTolerance.Modifier = new_instancemethod(_StepDimTol.StepDimTol_ModifiedGeometricTolerance_Modifier, None, StepDimTol_ModifiedGeometricTolerance)
StepDimTol_ModifiedGeometricTolerance.SetModifier = new_instancemethod(_StepDimTol.StepDimTol_ModifiedGeometricTolerance_SetModifier, None, StepDimTol_ModifiedGeometricTolerance)
StepDimTol_ModifiedGeometricTolerance_swigregister = _StepDimTol.StepDimTol_ModifiedGeometricTolerance_swigregister
StepDimTol_ModifiedGeometricTolerance_swigregister(StepDimTol_ModifiedGeometricTolerance)

class StepDimTol_NonUniformZoneDefinition(StepDimTol_ToleranceZoneDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_NonUniformZoneDefinition_swiginit(self, _StepDimTol.new_StepDimTol_NonUniformZoneDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_NonUniformZoneDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_NonUniformZoneDefinition
StepDimTol_NonUniformZoneDefinition_swigregister = _StepDimTol.StepDimTol_NonUniformZoneDefinition_swigregister
StepDimTol_NonUniformZoneDefinition_swigregister(StepDimTol_NonUniformZoneDefinition)

class StepDimTol_PlacedDatumTargetFeature(StepDimTol_DatumTarget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_PlacedDatumTargetFeature_swiginit(self, _StepDimTol.new_StepDimTol_PlacedDatumTargetFeature(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_PlacedDatumTargetFeature_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_PlacedDatumTargetFeature
StepDimTol_PlacedDatumTargetFeature_swigregister = _StepDimTol.StepDimTol_PlacedDatumTargetFeature_swigregister
StepDimTol_PlacedDatumTargetFeature_swigregister(StepDimTol_PlacedDatumTargetFeature)

class StepDimTol_PositionTolerance(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_PositionTolerance_swiginit(self, _StepDimTol.new_StepDimTol_PositionTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_PositionTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_PositionTolerance
StepDimTol_PositionTolerance_swigregister = _StepDimTol.StepDimTol_PositionTolerance_swigregister
StepDimTol_PositionTolerance_swigregister(StepDimTol_PositionTolerance)

class StepDimTol_ProjectedZoneDefinition(StepDimTol_ToleranceZoneDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theZone:
        	:type theZone: StepDimTol_ToleranceZone
        	:param theBoundaries:
        	:type theBoundaries: StepRepr_HArray1OfShapeAspect
        	:param theProjectionEnd:
        	:type theProjectionEnd: StepRepr_ShapeAspect
        	:param theProjectionLength:
        	:type theProjectionLength: StepBasic_LengthMeasureWithUnit
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_ProjectedZoneDefinition_Init(self, *args)


    def ProjectionEnd(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        * Returns field ProjectionEnd
        	:rtype: inline opencascade::handle<StepRepr_ShapeAspect>
        """
        return _StepDimTol.StepDimTol_ProjectedZoneDefinition_ProjectionEnd(self, *args)


    def ProjectionLength(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """
        * Returns field ProjectionLength
        	:rtype: inline opencascade::handle<StepBasic_LengthMeasureWithUnit>
        """
        return _StepDimTol.StepDimTol_ProjectedZoneDefinition_ProjectionLength(self, *args)


    def SetProjectionEnd(self, *args) -> "void":
        """
        * Set field ProjectionEnd
        	:param theProjectionEnd:
        	:type theProjectionEnd: StepRepr_ShapeAspect
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_ProjectedZoneDefinition_SetProjectionEnd(self, *args)


    def SetProjectionLength(self, *args) -> "void":
        """
        * Set field ProjectionLength
        	:param theProjectionLength:
        	:type theProjectionLength: StepBasic_LengthMeasureWithUnit
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_ProjectedZoneDefinition_SetProjectionLength(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_ProjectedZoneDefinition_swiginit(self, _StepDimTol.new_StepDimTol_ProjectedZoneDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_ProjectedZoneDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_ProjectedZoneDefinition
StepDimTol_ProjectedZoneDefinition.Init = new_instancemethod(_StepDimTol.StepDimTol_ProjectedZoneDefinition_Init, None, StepDimTol_ProjectedZoneDefinition)
StepDimTol_ProjectedZoneDefinition.ProjectionEnd = new_instancemethod(_StepDimTol.StepDimTol_ProjectedZoneDefinition_ProjectionEnd, None, StepDimTol_ProjectedZoneDefinition)
StepDimTol_ProjectedZoneDefinition.ProjectionLength = new_instancemethod(_StepDimTol.StepDimTol_ProjectedZoneDefinition_ProjectionLength, None, StepDimTol_ProjectedZoneDefinition)
StepDimTol_ProjectedZoneDefinition.SetProjectionEnd = new_instancemethod(_StepDimTol.StepDimTol_ProjectedZoneDefinition_SetProjectionEnd, None, StepDimTol_ProjectedZoneDefinition)
StepDimTol_ProjectedZoneDefinition.SetProjectionLength = new_instancemethod(_StepDimTol.StepDimTol_ProjectedZoneDefinition_SetProjectionLength, None, StepDimTol_ProjectedZoneDefinition)
StepDimTol_ProjectedZoneDefinition_swigregister = _StepDimTol.StepDimTol_ProjectedZoneDefinition_swigregister
StepDimTol_ProjectedZoneDefinition_swigregister(StepDimTol_ProjectedZoneDefinition)

class StepDimTol_RoundnessTolerance(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_RoundnessTolerance_swiginit(self, _StepDimTol.new_StepDimTol_RoundnessTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_RoundnessTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_RoundnessTolerance
StepDimTol_RoundnessTolerance_swigregister = _StepDimTol.StepDimTol_RoundnessTolerance_swigregister
StepDimTol_RoundnessTolerance_swigregister(StepDimTol_RoundnessTolerance)

class StepDimTol_RunoutZoneDefinition(StepDimTol_ToleranceZoneDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theZone:
        	:type theZone: StepDimTol_ToleranceZone
        	:param theBoundaries:
        	:type theBoundaries: StepRepr_HArray1OfShapeAspect
        	:param theOrientation:
        	:type theOrientation: StepDimTol_RunoutZoneOrientation
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_RunoutZoneDefinition_Init(self, *args)


    def Orientation(self, *args) -> "opencascade::handle< StepDimTol_RunoutZoneOrientation >":
        """
        * Returns field Orientation
        	:rtype: inline opencascade::handle<StepDimTol_RunoutZoneOrientation>
        """
        return _StepDimTol.StepDimTol_RunoutZoneDefinition_Orientation(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        * Set field Orientation
        	:param theOrientation:
        	:type theOrientation: StepDimTol_RunoutZoneOrientation
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_RunoutZoneDefinition_SetOrientation(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_RunoutZoneDefinition_swiginit(self, _StepDimTol.new_StepDimTol_RunoutZoneDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_RunoutZoneDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_RunoutZoneDefinition
StepDimTol_RunoutZoneDefinition.Init = new_instancemethod(_StepDimTol.StepDimTol_RunoutZoneDefinition_Init, None, StepDimTol_RunoutZoneDefinition)
StepDimTol_RunoutZoneDefinition.Orientation = new_instancemethod(_StepDimTol.StepDimTol_RunoutZoneDefinition_Orientation, None, StepDimTol_RunoutZoneDefinition)
StepDimTol_RunoutZoneDefinition.SetOrientation = new_instancemethod(_StepDimTol.StepDimTol_RunoutZoneDefinition_SetOrientation, None, StepDimTol_RunoutZoneDefinition)
StepDimTol_RunoutZoneDefinition_swigregister = _StepDimTol.StepDimTol_RunoutZoneDefinition_swigregister
StepDimTol_RunoutZoneDefinition_swigregister(StepDimTol_RunoutZoneDefinition)

class StepDimTol_StraightnessTolerance(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_StraightnessTolerance_swiginit(self, _StepDimTol.new_StepDimTol_StraightnessTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_StraightnessTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_StraightnessTolerance
StepDimTol_StraightnessTolerance_swigregister = _StepDimTol.StepDimTol_StraightnessTolerance_swigregister
StepDimTol_StraightnessTolerance_swigregister(StepDimTol_StraightnessTolerance)

class StepDimTol_SurfaceProfileTolerance(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_SurfaceProfileTolerance_swiginit(self, _StepDimTol.new_StepDimTol_SurfaceProfileTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_SurfaceProfileTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_SurfaceProfileTolerance
StepDimTol_SurfaceProfileTolerance_swigregister = _StepDimTol.StepDimTol_SurfaceProfileTolerance_swigregister
StepDimTol_SurfaceProfileTolerance_swigregister(StepDimTol_SurfaceProfileTolerance)

class StepDimTol_UnequallyDisposedGeometricTolerance(StepDimTol_GeometricTolerance):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Displacement(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """
        * Returns field Displacement
        	:rtype: inline opencascade::handle<StepBasic_LengthMeasureWithUnit>
        """
        return _StepDimTol.StepDimTol_UnequallyDisposedGeometricTolerance_Displacement(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param theDisplacement:
        	:type theDisplacement: StepBasic_LengthMeasureWithUnit
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_UnequallyDisposedGeometricTolerance_Init(self, *args)


    def SetDisplacement(self, *args) -> "void":
        """
        * Set field Displacement
        	:param theDisplacement:
        	:type theDisplacement: StepBasic_LengthMeasureWithUnit
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_UnequallyDisposedGeometricTolerance_SetDisplacement(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_UnequallyDisposedGeometricTolerance_swiginit(self, _StepDimTol.new_StepDimTol_UnequallyDisposedGeometricTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_UnequallyDisposedGeometricTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_UnequallyDisposedGeometricTolerance
StepDimTol_UnequallyDisposedGeometricTolerance.Displacement = new_instancemethod(_StepDimTol.StepDimTol_UnequallyDisposedGeometricTolerance_Displacement, None, StepDimTol_UnequallyDisposedGeometricTolerance)
StepDimTol_UnequallyDisposedGeometricTolerance.Init = new_instancemethod(_StepDimTol.StepDimTol_UnequallyDisposedGeometricTolerance_Init, None, StepDimTol_UnequallyDisposedGeometricTolerance)
StepDimTol_UnequallyDisposedGeometricTolerance.SetDisplacement = new_instancemethod(_StepDimTol.StepDimTol_UnequallyDisposedGeometricTolerance_SetDisplacement, None, StepDimTol_UnequallyDisposedGeometricTolerance)
StepDimTol_UnequallyDisposedGeometricTolerance_swigregister = _StepDimTol.StepDimTol_UnequallyDisposedGeometricTolerance_swigregister
StepDimTol_UnequallyDisposedGeometricTolerance_swigregister(StepDimTol_UnequallyDisposedGeometricTolerance)

class StepDimTol_AngularityTolerance(StepDimTol_GeometricToleranceWithDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_AngularityTolerance_swiginit(self, _StepDimTol.new_StepDimTol_AngularityTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_AngularityTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_AngularityTolerance
StepDimTol_AngularityTolerance_swigregister = _StepDimTol.StepDimTol_AngularityTolerance_swigregister
StepDimTol_AngularityTolerance_swigregister(StepDimTol_AngularityTolerance)

class StepDimTol_CircularRunoutTolerance(StepDimTol_GeometricToleranceWithDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_CircularRunoutTolerance_swiginit(self, _StepDimTol.new_StepDimTol_CircularRunoutTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_CircularRunoutTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_CircularRunoutTolerance
StepDimTol_CircularRunoutTolerance_swigregister = _StepDimTol.StepDimTol_CircularRunoutTolerance_swigregister
StepDimTol_CircularRunoutTolerance_swigregister(StepDimTol_CircularRunoutTolerance)

class StepDimTol_CoaxialityTolerance(StepDimTol_GeometricToleranceWithDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_CoaxialityTolerance_swiginit(self, _StepDimTol.new_StepDimTol_CoaxialityTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_CoaxialityTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_CoaxialityTolerance
StepDimTol_CoaxialityTolerance_swigregister = _StepDimTol.StepDimTol_CoaxialityTolerance_swigregister
StepDimTol_CoaxialityTolerance_swigregister(StepDimTol_CoaxialityTolerance)

class StepDimTol_ConcentricityTolerance(StepDimTol_GeometricToleranceWithDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_ConcentricityTolerance_swiginit(self, _StepDimTol.new_StepDimTol_ConcentricityTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_ConcentricityTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_ConcentricityTolerance
StepDimTol_ConcentricityTolerance_swigregister = _StepDimTol.StepDimTol_ConcentricityTolerance_swigregister
StepDimTol_ConcentricityTolerance_swigregister(StepDimTol_ConcentricityTolerance)

class StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol(StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMod):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GetMaxTolerance(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """:rtype: inline opencascade::handle<StepBasic_LengthMeasureWithUnit>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_GetMaxTolerance(self, *args)


    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepRepr_ShapeAspect
        	:param theGTWDR:
        	:type theGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param theGTWM:
        	:type theGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:param theMaxTol:
        	:type theMaxTol: StepBasic_LengthMeasureWithUnit
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aMagnitude:
        	:type aMagnitude: StepBasic_MeasureWithUnit
        	:param aTolerancedShapeAspect:
        	:type aTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param aGTWDR:
        	:type aGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param aGTWM:
        	:type aGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:param theMaxTol:
        	:type theMaxTol: StepBasic_LengthMeasureWithUnit
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_Init(self, *args)


    def SetMaxTolerance(self, *args) -> "void":
        """
        :param theMaxTol:
        	:type theMaxTol: StepBasic_LengthMeasureWithUnit
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_SetMaxTolerance(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_swiginit(self, _StepDimTol.new_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol.GetMaxTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_GetMaxTolerance, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol.Init = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_Init, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol.SetMaxTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_SetMaxTolerance, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_swigregister = _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_swigregister
StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol_swigregister(StepDimTol_GeoTolAndGeoTolWthDatRefAndGeoTolWthMaxTol)

class StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol(StepDimTol_GeoTolAndGeoTolWthDatRef):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GetUnequallyDisposedGeometricTolerance(self, *args) -> "opencascade::handle< StepDimTol_UnequallyDisposedGeometricTolerance >":
        """:rtype: inline opencascade::handle<StepDimTol_UnequallyDisposedGeometricTolerance>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_GetUnequallyDisposedGeometricTolerance(self, *args)


    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepRepr_ShapeAspect
        	:param theGTWDR:
        	:type theGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:param theUDGT:
        	:type theUDGT: StepDimTol_UnequallyDisposedGeometricTolerance
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aMagnitude:
        	:type aMagnitude: StepBasic_MeasureWithUnit
        	:param aTolerancedShapeAspect:
        	:type aTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param aGTWDR:
        	:type aGTWDR: StepDimTol_GeometricToleranceWithDatumReference
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:param theUDGT:
        	:type theUDGT: StepDimTol_UnequallyDisposedGeometricTolerance
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_Init(self, *args)


    def SetUnequallyDisposedGeometricTolerance(self, *args) -> "void":
        """
        :param theUDGT:
        	:type theUDGT: StepDimTol_UnequallyDisposedGeometricTolerance
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_SetUnequallyDisposedGeometricTolerance(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_swiginit(self, _StepDimTol.new_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol
StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol.GetUnequallyDisposedGeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_GetUnequallyDisposedGeometricTolerance, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol.Init = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_Init, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol.SetUnequallyDisposedGeometricTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_SetUnequallyDisposedGeometricTolerance, None, StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol)
StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_swigregister = _StepDimTol.StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_swigregister
StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol_swigregister(StepDimTol_GeoTolAndGeoTolWthDatRefAndUneqDisGeoTol)

class StepDimTol_GeoTolAndGeoTolWthMaxTol(StepDimTol_GeoTolAndGeoTolWthMod):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GetMaxTolerance(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """:rtype: inline opencascade::handle<StepBasic_LengthMeasureWithUnit>"""
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMaxTol_GetMaxTolerance(self, *args)


    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepRepr_ShapeAspect
        	:param theGTWM:
        	:type theGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:param theMaxTol:
        	:type theMaxTol: StepBasic_LengthMeasureWithUnit
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aMagnitude:
        	:type aMagnitude: StepBasic_MeasureWithUnit
        	:param aTolerancedShapeAspect:
        	:type aTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param aGTWM:
        	:type aGTWM: StepDimTol_GeometricToleranceWithModifiers
        	:param theMaxTol:
        	:type theMaxTol: StepBasic_LengthMeasureWithUnit
        	:param theType:
        	:type theType: StepDimTol_GeometricToleranceType
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMaxTol_Init(self, *args)


    def SetMaxTolerance(self, *args) -> "void":
        """
        :param theMaxTol:
        	:type theMaxTol: StepBasic_LengthMeasureWithUnit
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMaxTol_SetMaxTolerance(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMaxTol_swiginit(self, _StepDimTol.new_StepDimTol_GeoTolAndGeoTolWthMaxTol(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeoTolAndGeoTolWthMaxTol_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeoTolAndGeoTolWthMaxTol
StepDimTol_GeoTolAndGeoTolWthMaxTol.GetMaxTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthMaxTol_GetMaxTolerance, None, StepDimTol_GeoTolAndGeoTolWthMaxTol)
StepDimTol_GeoTolAndGeoTolWthMaxTol.Init = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthMaxTol_Init, None, StepDimTol_GeoTolAndGeoTolWthMaxTol)
StepDimTol_GeoTolAndGeoTolWthMaxTol.SetMaxTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeoTolAndGeoTolWthMaxTol_SetMaxTolerance, None, StepDimTol_GeoTolAndGeoTolWthMaxTol)
StepDimTol_GeoTolAndGeoTolWthMaxTol_swigregister = _StepDimTol.StepDimTol_GeoTolAndGeoTolWthMaxTol_swigregister
StepDimTol_GeoTolAndGeoTolWthMaxTol_swigregister(StepDimTol_GeoTolAndGeoTolWthMaxTol)

class StepDimTol_GeometricToleranceWithDefinedAreaUnit(StepDimTol_GeometricToleranceWithDefinedUnit):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AreaType(self, *args) -> "StepDimTol_AreaUnitType":
        """
        * Returns field AreaType
        	:rtype: inline StepDimTol_AreaUnitType
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_AreaType(self, *args)


    def HasSecondUnitSize(self, *args) -> "Standard_Boolean":
        """
        * Indicates if SecondUnitSize field exist
        	:rtype: inline bool
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_HasSecondUnitSize(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param theUnitSize:
        	:type theUnitSize: StepBasic_LengthMeasureWithUnit
        	:param theAreaType:
        	:type theAreaType: StepDimTol_AreaUnitType
        	:param theHasSecondUnitSize:
        	:type theHasSecondUnitSize: bool
        	:param theSecondUnitSize:
        	:type theSecondUnitSize: StepBasic_LengthMeasureWithUnit
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_Init(self, *args)


    def SecondUnitSize(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """
        * Returns field SecondUnitSize
        	:rtype: inline opencascade::handle<StepBasic_LengthMeasureWithUnit>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_SecondUnitSize(self, *args)


    def SetAreaType(self, *args) -> "void":
        """
        * Set field AreaType
        	:param theAreaType:
        	:type theAreaType: StepDimTol_AreaUnitType
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_SetAreaType(self, *args)


    def SetSecondUnitSize(self, *args) -> "void":
        """
        * Set field SecondUnitSize
        	:param theSecondUnitSize:
        	:type theSecondUnitSize: StepBasic_LengthMeasureWithUnit
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_SetSecondUnitSize(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_swiginit(self, _StepDimTol.new_StepDimTol_GeometricToleranceWithDefinedAreaUnit(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeometricToleranceWithDefinedAreaUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeometricToleranceWithDefinedAreaUnit
StepDimTol_GeometricToleranceWithDefinedAreaUnit.AreaType = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_AreaType, None, StepDimTol_GeometricToleranceWithDefinedAreaUnit)
StepDimTol_GeometricToleranceWithDefinedAreaUnit.HasSecondUnitSize = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_HasSecondUnitSize, None, StepDimTol_GeometricToleranceWithDefinedAreaUnit)
StepDimTol_GeometricToleranceWithDefinedAreaUnit.Init = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_Init, None, StepDimTol_GeometricToleranceWithDefinedAreaUnit)
StepDimTol_GeometricToleranceWithDefinedAreaUnit.SecondUnitSize = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_SecondUnitSize, None, StepDimTol_GeometricToleranceWithDefinedAreaUnit)
StepDimTol_GeometricToleranceWithDefinedAreaUnit.SetAreaType = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_SetAreaType, None, StepDimTol_GeometricToleranceWithDefinedAreaUnit)
StepDimTol_GeometricToleranceWithDefinedAreaUnit.SetSecondUnitSize = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_SetSecondUnitSize, None, StepDimTol_GeometricToleranceWithDefinedAreaUnit)
StepDimTol_GeometricToleranceWithDefinedAreaUnit_swigregister = _StepDimTol.StepDimTol_GeometricToleranceWithDefinedAreaUnit_swigregister
StepDimTol_GeometricToleranceWithDefinedAreaUnit_swigregister(StepDimTol_GeometricToleranceWithDefinedAreaUnit)

class StepDimTol_GeometricToleranceWithMaximumTolerance(StepDimTol_GeometricToleranceWithModifiers):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theDescription:
        	:type theDescription: TCollection_HAsciiString
        	:param theMagnitude:
        	:type theMagnitude: StepBasic_MeasureWithUnit
        	:param theTolerancedShapeAspect:
        	:type theTolerancedShapeAspect: StepDimTol_GeometricToleranceTarget
        	:param theModifiers:
        	:type theModifiers: StepDimTol_HArray1OfGeometricToleranceModifier
        	:param theUnitSize:
        	:type theUnitSize: StepBasic_LengthMeasureWithUnit
        	:rtype: None
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithMaximumTolerance_Init(self, *args)


    def MaximumUpperTolerance(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """
        * Returns field MaximumUpperTolerance
        	:rtype: inline opencascade::handle<StepBasic_LengthMeasureWithUnit>
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithMaximumTolerance_MaximumUpperTolerance(self, *args)


    def SetMaximumUpperTolerance(self, *args) -> "void":
        """
        * Set field MaximumUpperTolerance
        	:param theMaximumUpperTolerance:
        	:type theMaximumUpperTolerance: StepBasic_LengthMeasureWithUnit
        	:rtype: inline void
        """
        return _StepDimTol.StepDimTol_GeometricToleranceWithMaximumTolerance_SetMaximumUpperTolerance(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_GeometricToleranceWithMaximumTolerance_swiginit(self, _StepDimTol.new_StepDimTol_GeometricToleranceWithMaximumTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_GeometricToleranceWithMaximumTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_GeometricToleranceWithMaximumTolerance
StepDimTol_GeometricToleranceWithMaximumTolerance.Init = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithMaximumTolerance_Init, None, StepDimTol_GeometricToleranceWithMaximumTolerance)
StepDimTol_GeometricToleranceWithMaximumTolerance.MaximumUpperTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithMaximumTolerance_MaximumUpperTolerance, None, StepDimTol_GeometricToleranceWithMaximumTolerance)
StepDimTol_GeometricToleranceWithMaximumTolerance.SetMaximumUpperTolerance = new_instancemethod(_StepDimTol.StepDimTol_GeometricToleranceWithMaximumTolerance_SetMaximumUpperTolerance, None, StepDimTol_GeometricToleranceWithMaximumTolerance)
StepDimTol_GeometricToleranceWithMaximumTolerance_swigregister = _StepDimTol.StepDimTol_GeometricToleranceWithMaximumTolerance_swigregister
StepDimTol_GeometricToleranceWithMaximumTolerance_swigregister(StepDimTol_GeometricToleranceWithMaximumTolerance)

class StepDimTol_ParallelismTolerance(StepDimTol_GeometricToleranceWithDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_ParallelismTolerance_swiginit(self, _StepDimTol.new_StepDimTol_ParallelismTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_ParallelismTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_ParallelismTolerance
StepDimTol_ParallelismTolerance_swigregister = _StepDimTol.StepDimTol_ParallelismTolerance_swigregister
StepDimTol_ParallelismTolerance_swigregister(StepDimTol_ParallelismTolerance)

class StepDimTol_PerpendicularityTolerance(StepDimTol_GeometricToleranceWithDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_PerpendicularityTolerance_swiginit(self, _StepDimTol.new_StepDimTol_PerpendicularityTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_PerpendicularityTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_PerpendicularityTolerance
StepDimTol_PerpendicularityTolerance_swigregister = _StepDimTol.StepDimTol_PerpendicularityTolerance_swigregister
StepDimTol_PerpendicularityTolerance_swigregister(StepDimTol_PerpendicularityTolerance)

class StepDimTol_SymmetryTolerance(StepDimTol_GeometricToleranceWithDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_SymmetryTolerance_swiginit(self, _StepDimTol.new_StepDimTol_SymmetryTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_SymmetryTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_SymmetryTolerance
StepDimTol_SymmetryTolerance_swigregister = _StepDimTol.StepDimTol_SymmetryTolerance_swigregister
StepDimTol_SymmetryTolerance_swigregister(StepDimTol_SymmetryTolerance)

class StepDimTol_TotalRunoutTolerance(StepDimTol_GeometricToleranceWithDatumReference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepDimTol.StepDimTol_TotalRunoutTolerance_swiginit(self, _StepDimTol.new_StepDimTol_TotalRunoutTolerance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_TotalRunoutTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_TotalRunoutTolerance
StepDimTol_TotalRunoutTolerance_swigregister = _StepDimTol.StepDimTol_TotalRunoutTolerance_swigregister
StepDimTol_TotalRunoutTolerance_swigregister(StepDimTol_TotalRunoutTolerance)

class StepDimTol_HArray1OfToleranceZoneTarget(StepDimTol_Array1OfToleranceZoneTarget, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_HArray1OfToleranceZoneTarget_swiginit(self, _StepDimTol.new_StepDimTol_HArray1OfToleranceZoneTarget(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_HArray1OfToleranceZoneTarget_DownCast(t)

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_HArray1OfToleranceZoneTarget
StepDimTol_HArray1OfToleranceZoneTarget.Array1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfToleranceZoneTarget_Array1, None, StepDimTol_HArray1OfToleranceZoneTarget)
StepDimTol_HArray1OfToleranceZoneTarget.ChangeArray1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfToleranceZoneTarget_ChangeArray1, None, StepDimTol_HArray1OfToleranceZoneTarget)
StepDimTol_HArray1OfToleranceZoneTarget_swigregister = _StepDimTol.StepDimTol_HArray1OfToleranceZoneTarget_swigregister
StepDimTol_HArray1OfToleranceZoneTarget_swigregister(StepDimTol_HArray1OfToleranceZoneTarget)

class StepDimTol_HArray1OfDatumReference(StepDimTol_Array1OfDatumReference, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_HArray1OfDatumReference_swiginit(self, _StepDimTol.new_StepDimTol_HArray1OfDatumReference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_HArray1OfDatumReference_DownCast(t)

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_HArray1OfDatumReference
StepDimTol_HArray1OfDatumReference.Array1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumReference_Array1, None, StepDimTol_HArray1OfDatumReference)
StepDimTol_HArray1OfDatumReference.ChangeArray1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumReference_ChangeArray1, None, StepDimTol_HArray1OfDatumReference)
StepDimTol_HArray1OfDatumReference_swigregister = _StepDimTol.StepDimTol_HArray1OfDatumReference_swigregister
StepDimTol_HArray1OfDatumReference_swigregister(StepDimTol_HArray1OfDatumReference)

class StepDimTol_HArray1OfDatumReferenceElement(StepDimTol_Array1OfDatumReferenceElement, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_HArray1OfDatumReferenceElement_swiginit(self, _StepDimTol.new_StepDimTol_HArray1OfDatumReferenceElement(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_HArray1OfDatumReferenceElement_DownCast(t)

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_HArray1OfDatumReferenceElement
StepDimTol_HArray1OfDatumReferenceElement.Array1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumReferenceElement_Array1, None, StepDimTol_HArray1OfDatumReferenceElement)
StepDimTol_HArray1OfDatumReferenceElement.ChangeArray1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumReferenceElement_ChangeArray1, None, StepDimTol_HArray1OfDatumReferenceElement)
StepDimTol_HArray1OfDatumReferenceElement_swigregister = _StepDimTol.StepDimTol_HArray1OfDatumReferenceElement_swigregister
StepDimTol_HArray1OfDatumReferenceElement_swigregister(StepDimTol_HArray1OfDatumReferenceElement)

class StepDimTol_HArray1OfDatumSystemOrReference(StepDimTol_Array1OfDatumSystemOrReference, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_HArray1OfDatumSystemOrReference_swiginit(self, _StepDimTol.new_StepDimTol_HArray1OfDatumSystemOrReference(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_HArray1OfDatumSystemOrReference_DownCast(t)

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_HArray1OfDatumSystemOrReference
StepDimTol_HArray1OfDatumSystemOrReference.Array1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumSystemOrReference_Array1, None, StepDimTol_HArray1OfDatumSystemOrReference)
StepDimTol_HArray1OfDatumSystemOrReference.ChangeArray1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumSystemOrReference_ChangeArray1, None, StepDimTol_HArray1OfDatumSystemOrReference)
StepDimTol_HArray1OfDatumSystemOrReference_swigregister = _StepDimTol.StepDimTol_HArray1OfDatumSystemOrReference_swigregister
StepDimTol_HArray1OfDatumSystemOrReference_swigregister(StepDimTol_HArray1OfDatumSystemOrReference)

class StepDimTol_HArray1OfDatumReferenceCompartment(StepDimTol_Array1OfDatumReferenceCompartment, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_HArray1OfDatumReferenceCompartment_swiginit(self, _StepDimTol.new_StepDimTol_HArray1OfDatumReferenceCompartment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_HArray1OfDatumReferenceCompartment_DownCast(t)

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_HArray1OfDatumReferenceCompartment
StepDimTol_HArray1OfDatumReferenceCompartment.Array1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumReferenceCompartment_Array1, None, StepDimTol_HArray1OfDatumReferenceCompartment)
StepDimTol_HArray1OfDatumReferenceCompartment.ChangeArray1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumReferenceCompartment_ChangeArray1, None, StepDimTol_HArray1OfDatumReferenceCompartment)
StepDimTol_HArray1OfDatumReferenceCompartment_swigregister = _StepDimTol.StepDimTol_HArray1OfDatumReferenceCompartment_swigregister
StepDimTol_HArray1OfDatumReferenceCompartment_swigregister(StepDimTol_HArray1OfDatumReferenceCompartment)

class StepDimTol_HArray1OfDatumReferenceModifier(StepDimTol_Array1OfDatumReferenceModifier, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_HArray1OfDatumReferenceModifier_swiginit(self, _StepDimTol.new_StepDimTol_HArray1OfDatumReferenceModifier(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_HArray1OfDatumReferenceModifier_DownCast(t)

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_HArray1OfDatumReferenceModifier
StepDimTol_HArray1OfDatumReferenceModifier.Array1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumReferenceModifier_Array1, None, StepDimTol_HArray1OfDatumReferenceModifier)
StepDimTol_HArray1OfDatumReferenceModifier.ChangeArray1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfDatumReferenceModifier_ChangeArray1, None, StepDimTol_HArray1OfDatumReferenceModifier)
StepDimTol_HArray1OfDatumReferenceModifier_swigregister = _StepDimTol.StepDimTol_HArray1OfDatumReferenceModifier_swigregister
StepDimTol_HArray1OfDatumReferenceModifier_swigregister(StepDimTol_HArray1OfDatumReferenceModifier)

class StepDimTol_HArray1OfGeometricToleranceModifier(StepDimTol_Array1OfGeometricToleranceModifier, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepDimTol.StepDimTol_HArray1OfGeometricToleranceModifier_swiginit(self, _StepDimTol.new_StepDimTol_HArray1OfGeometricToleranceModifier(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepDimTol_HArray1OfGeometricToleranceModifier_DownCast(t)

    __swig_destroy__ = _StepDimTol.delete_StepDimTol_HArray1OfGeometricToleranceModifier
StepDimTol_HArray1OfGeometricToleranceModifier.Array1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfGeometricToleranceModifier_Array1, None, StepDimTol_HArray1OfGeometricToleranceModifier)
StepDimTol_HArray1OfGeometricToleranceModifier.ChangeArray1 = new_instancemethod(_StepDimTol.StepDimTol_HArray1OfGeometricToleranceModifier_ChangeArray1, None, StepDimTol_HArray1OfGeometricToleranceModifier)
StepDimTol_HArray1OfGeometricToleranceModifier_swigregister = _StepDimTol.StepDimTol_HArray1OfGeometricToleranceModifier_swigregister
StepDimTol_HArray1OfGeometricToleranceModifier_swigregister(StepDimTol_HArray1OfGeometricToleranceModifier)



