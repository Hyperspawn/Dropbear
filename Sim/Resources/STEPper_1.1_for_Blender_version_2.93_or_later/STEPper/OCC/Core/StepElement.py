# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepElement module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepelement.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StepElement.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StepElement')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StepElement')
    _StepElement = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepElement', [dirname(__file__)])
        except ImportError:
            import _StepElement
            return _StepElement
        try:
            _mod = imp.load_module('_StepElement', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _StepElement = swig_import_helper()
    del swig_import_helper
else:
    import _StepElement
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepElement.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_StepElement.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_StepElement.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_StepElement.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_StepElement.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_StepElement.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_StepElement.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_StepElement.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_StepElement.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_StepElement.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_StepElement.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_StepElement.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_StepElement.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_StepElement.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_StepElement.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_StepElement.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_StepElement.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _StepElement.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _StepElement.process_exception(error, method_name, class_name)
process_exception = _StepElement.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TCollection
import OCC.Core.StepRepr
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepBasic
StepElement_Volume = _StepElement.StepElement_Volume
StepElement_ElementEdge = _StepElement.StepElement_ElementEdge
StepElement_Hexahedron = _StepElement.StepElement_Hexahedron
StepElement_Wedge = _StepElement.StepElement_Wedge
StepElement_Tetrahedron = _StepElement.StepElement_Tetrahedron
StepElement_Pyramid = _StepElement.StepElement_Pyramid
StepElement_Linear = _StepElement.StepElement_Linear
StepElement_Quadratic = _StepElement.StepElement_Quadratic
StepElement_Cubic = _StepElement.StepElement_Cubic
StepElement_Quadrilateral = _StepElement.StepElement_Quadrilateral
StepElement_Triangle = _StepElement.StepElement_Triangle
StepElement_XTranslation = _StepElement.StepElement_XTranslation
StepElement_YTranslation = _StepElement.StepElement_YTranslation
StepElement_ZTranslation = _StepElement.StepElement_ZTranslation
StepElement_XRotation = _StepElement.StepElement_XRotation
StepElement_YRotation = _StepElement.StepElement_YRotation
StepElement_ZRotation = _StepElement.StepElement_ZRotation
StepElement_Warp = _StepElement.StepElement_Warp
StepElement_None = _StepElement.StepElement_None
StepElement_StressDisplacement = _StepElement.StepElement_StressDisplacement
StepElement_MembraneDirect = _StepElement.StepElement_MembraneDirect
StepElement_MembraneShear = _StepElement.StepElement_MembraneShear
StepElement_BendingDirect = _StepElement.StepElement_BendingDirect
StepElement_BendingTorsion = _StepElement.StepElement_BendingTorsion
StepElement_NormalToPlaneShear = _StepElement.StepElement_NormalToPlaneShear
StepElement_Unspecified = _StepElement.StepElement_Unspecified
StepElement_Axial = _StepElement.StepElement_Axial
StepElement_YYBending = _StepElement.StepElement_YYBending
StepElement_ZZBending = _StepElement.StepElement_ZZBending
StepElement_Torsion = _StepElement.StepElement_Torsion
StepElement_XYShear = _StepElement.StepElement_XYShear
StepElement_XZShear = _StepElement.StepElement_XZShear
StepElement_Warping = _StepElement.StepElement_Warping

def Handle_StepElement_AnalysisItemWithinRepresentation_Create() -> "opencascade::handle< StepElement_AnalysisItemWithinRepresentation >":
    return _StepElement.Handle_StepElement_AnalysisItemWithinRepresentation_Create()
Handle_StepElement_AnalysisItemWithinRepresentation_Create = _StepElement.Handle_StepElement_AnalysisItemWithinRepresentation_Create

def Handle_StepElement_AnalysisItemWithinRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_AnalysisItemWithinRepresentation >":
    return _StepElement.Handle_StepElement_AnalysisItemWithinRepresentation_DownCast(t)
Handle_StepElement_AnalysisItemWithinRepresentation_DownCast = _StepElement.Handle_StepElement_AnalysisItemWithinRepresentation_DownCast

def Handle_StepElement_AnalysisItemWithinRepresentation_IsNull(t: 'opencascade::handle< StepElement_AnalysisItemWithinRepresentation > const &') -> "bool":
    return _StepElement.Handle_StepElement_AnalysisItemWithinRepresentation_IsNull(t)
Handle_StepElement_AnalysisItemWithinRepresentation_IsNull = _StepElement.Handle_StepElement_AnalysisItemWithinRepresentation_IsNull

def Handle_StepElement_CurveElementEndReleasePacket_Create() -> "opencascade::handle< StepElement_CurveElementEndReleasePacket >":
    return _StepElement.Handle_StepElement_CurveElementEndReleasePacket_Create()
Handle_StepElement_CurveElementEndReleasePacket_Create = _StepElement.Handle_StepElement_CurveElementEndReleasePacket_Create

def Handle_StepElement_CurveElementEndReleasePacket_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_CurveElementEndReleasePacket >":
    return _StepElement.Handle_StepElement_CurveElementEndReleasePacket_DownCast(t)
Handle_StepElement_CurveElementEndReleasePacket_DownCast = _StepElement.Handle_StepElement_CurveElementEndReleasePacket_DownCast

def Handle_StepElement_CurveElementEndReleasePacket_IsNull(t: 'opencascade::handle< StepElement_CurveElementEndReleasePacket > const &') -> "bool":
    return _StepElement.Handle_StepElement_CurveElementEndReleasePacket_IsNull(t)
Handle_StepElement_CurveElementEndReleasePacket_IsNull = _StepElement.Handle_StepElement_CurveElementEndReleasePacket_IsNull

def Handle_StepElement_CurveElementFreedomMember_Create() -> "opencascade::handle< StepElement_CurveElementFreedomMember >":
    return _StepElement.Handle_StepElement_CurveElementFreedomMember_Create()
Handle_StepElement_CurveElementFreedomMember_Create = _StepElement.Handle_StepElement_CurveElementFreedomMember_Create

def Handle_StepElement_CurveElementFreedomMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_CurveElementFreedomMember >":
    return _StepElement.Handle_StepElement_CurveElementFreedomMember_DownCast(t)
Handle_StepElement_CurveElementFreedomMember_DownCast = _StepElement.Handle_StepElement_CurveElementFreedomMember_DownCast

def Handle_StepElement_CurveElementFreedomMember_IsNull(t: 'opencascade::handle< StepElement_CurveElementFreedomMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_CurveElementFreedomMember_IsNull(t)
Handle_StepElement_CurveElementFreedomMember_IsNull = _StepElement.Handle_StepElement_CurveElementFreedomMember_IsNull

def Handle_StepElement_CurveElementPurposeMember_Create() -> "opencascade::handle< StepElement_CurveElementPurposeMember >":
    return _StepElement.Handle_StepElement_CurveElementPurposeMember_Create()
Handle_StepElement_CurveElementPurposeMember_Create = _StepElement.Handle_StepElement_CurveElementPurposeMember_Create

def Handle_StepElement_CurveElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_CurveElementPurposeMember >":
    return _StepElement.Handle_StepElement_CurveElementPurposeMember_DownCast(t)
Handle_StepElement_CurveElementPurposeMember_DownCast = _StepElement.Handle_StepElement_CurveElementPurposeMember_DownCast

def Handle_StepElement_CurveElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_CurveElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_CurveElementPurposeMember_IsNull(t)
Handle_StepElement_CurveElementPurposeMember_IsNull = _StepElement.Handle_StepElement_CurveElementPurposeMember_IsNull

def Handle_StepElement_CurveElementSectionDefinition_Create() -> "opencascade::handle< StepElement_CurveElementSectionDefinition >":
    return _StepElement.Handle_StepElement_CurveElementSectionDefinition_Create()
Handle_StepElement_CurveElementSectionDefinition_Create = _StepElement.Handle_StepElement_CurveElementSectionDefinition_Create

def Handle_StepElement_CurveElementSectionDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_CurveElementSectionDefinition >":
    return _StepElement.Handle_StepElement_CurveElementSectionDefinition_DownCast(t)
Handle_StepElement_CurveElementSectionDefinition_DownCast = _StepElement.Handle_StepElement_CurveElementSectionDefinition_DownCast

def Handle_StepElement_CurveElementSectionDefinition_IsNull(t: 'opencascade::handle< StepElement_CurveElementSectionDefinition > const &') -> "bool":
    return _StepElement.Handle_StepElement_CurveElementSectionDefinition_IsNull(t)
Handle_StepElement_CurveElementSectionDefinition_IsNull = _StepElement.Handle_StepElement_CurveElementSectionDefinition_IsNull

def Handle_StepElement_ElementAspectMember_Create() -> "opencascade::handle< StepElement_ElementAspectMember >":
    return _StepElement.Handle_StepElement_ElementAspectMember_Create()
Handle_StepElement_ElementAspectMember_Create = _StepElement.Handle_StepElement_ElementAspectMember_Create

def Handle_StepElement_ElementAspectMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_ElementAspectMember >":
    return _StepElement.Handle_StepElement_ElementAspectMember_DownCast(t)
Handle_StepElement_ElementAspectMember_DownCast = _StepElement.Handle_StepElement_ElementAspectMember_DownCast

def Handle_StepElement_ElementAspectMember_IsNull(t: 'opencascade::handle< StepElement_ElementAspectMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_ElementAspectMember_IsNull(t)
Handle_StepElement_ElementAspectMember_IsNull = _StepElement.Handle_StepElement_ElementAspectMember_IsNull

def Handle_StepElement_ElementDescriptor_Create() -> "opencascade::handle< StepElement_ElementDescriptor >":
    return _StepElement.Handle_StepElement_ElementDescriptor_Create()
Handle_StepElement_ElementDescriptor_Create = _StepElement.Handle_StepElement_ElementDescriptor_Create

def Handle_StepElement_ElementDescriptor_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_ElementDescriptor >":
    return _StepElement.Handle_StepElement_ElementDescriptor_DownCast(t)
Handle_StepElement_ElementDescriptor_DownCast = _StepElement.Handle_StepElement_ElementDescriptor_DownCast

def Handle_StepElement_ElementDescriptor_IsNull(t: 'opencascade::handle< StepElement_ElementDescriptor > const &') -> "bool":
    return _StepElement.Handle_StepElement_ElementDescriptor_IsNull(t)
Handle_StepElement_ElementDescriptor_IsNull = _StepElement.Handle_StepElement_ElementDescriptor_IsNull

def Handle_StepElement_ElementMaterial_Create() -> "opencascade::handle< StepElement_ElementMaterial >":
    return _StepElement.Handle_StepElement_ElementMaterial_Create()
Handle_StepElement_ElementMaterial_Create = _StepElement.Handle_StepElement_ElementMaterial_Create

def Handle_StepElement_ElementMaterial_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_ElementMaterial >":
    return _StepElement.Handle_StepElement_ElementMaterial_DownCast(t)
Handle_StepElement_ElementMaterial_DownCast = _StepElement.Handle_StepElement_ElementMaterial_DownCast

def Handle_StepElement_ElementMaterial_IsNull(t: 'opencascade::handle< StepElement_ElementMaterial > const &') -> "bool":
    return _StepElement.Handle_StepElement_ElementMaterial_IsNull(t)
Handle_StepElement_ElementMaterial_IsNull = _StepElement.Handle_StepElement_ElementMaterial_IsNull

def Handle_StepElement_MeasureOrUnspecifiedValueMember_Create() -> "opencascade::handle< StepElement_MeasureOrUnspecifiedValueMember >":
    return _StepElement.Handle_StepElement_MeasureOrUnspecifiedValueMember_Create()
Handle_StepElement_MeasureOrUnspecifiedValueMember_Create = _StepElement.Handle_StepElement_MeasureOrUnspecifiedValueMember_Create

def Handle_StepElement_MeasureOrUnspecifiedValueMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_MeasureOrUnspecifiedValueMember >":
    return _StepElement.Handle_StepElement_MeasureOrUnspecifiedValueMember_DownCast(t)
Handle_StepElement_MeasureOrUnspecifiedValueMember_DownCast = _StepElement.Handle_StepElement_MeasureOrUnspecifiedValueMember_DownCast

def Handle_StepElement_MeasureOrUnspecifiedValueMember_IsNull(t: 'opencascade::handle< StepElement_MeasureOrUnspecifiedValueMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_MeasureOrUnspecifiedValueMember_IsNull(t)
Handle_StepElement_MeasureOrUnspecifiedValueMember_IsNull = _StepElement.Handle_StepElement_MeasureOrUnspecifiedValueMember_IsNull

def Handle_StepElement_SurfaceElementProperty_Create() -> "opencascade::handle< StepElement_SurfaceElementProperty >":
    return _StepElement.Handle_StepElement_SurfaceElementProperty_Create()
Handle_StepElement_SurfaceElementProperty_Create = _StepElement.Handle_StepElement_SurfaceElementProperty_Create

def Handle_StepElement_SurfaceElementProperty_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_SurfaceElementProperty >":
    return _StepElement.Handle_StepElement_SurfaceElementProperty_DownCast(t)
Handle_StepElement_SurfaceElementProperty_DownCast = _StepElement.Handle_StepElement_SurfaceElementProperty_DownCast

def Handle_StepElement_SurfaceElementProperty_IsNull(t: 'opencascade::handle< StepElement_SurfaceElementProperty > const &') -> "bool":
    return _StepElement.Handle_StepElement_SurfaceElementProperty_IsNull(t)
Handle_StepElement_SurfaceElementProperty_IsNull = _StepElement.Handle_StepElement_SurfaceElementProperty_IsNull

def Handle_StepElement_SurfaceElementPurposeMember_Create() -> "opencascade::handle< StepElement_SurfaceElementPurposeMember >":
    return _StepElement.Handle_StepElement_SurfaceElementPurposeMember_Create()
Handle_StepElement_SurfaceElementPurposeMember_Create = _StepElement.Handle_StepElement_SurfaceElementPurposeMember_Create

def Handle_StepElement_SurfaceElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_SurfaceElementPurposeMember >":
    return _StepElement.Handle_StepElement_SurfaceElementPurposeMember_DownCast(t)
Handle_StepElement_SurfaceElementPurposeMember_DownCast = _StepElement.Handle_StepElement_SurfaceElementPurposeMember_DownCast

def Handle_StepElement_SurfaceElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_SurfaceElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_SurfaceElementPurposeMember_IsNull(t)
Handle_StepElement_SurfaceElementPurposeMember_IsNull = _StepElement.Handle_StepElement_SurfaceElementPurposeMember_IsNull

def Handle_StepElement_SurfaceSection_Create() -> "opencascade::handle< StepElement_SurfaceSection >":
    return _StepElement.Handle_StepElement_SurfaceSection_Create()
Handle_StepElement_SurfaceSection_Create = _StepElement.Handle_StepElement_SurfaceSection_Create

def Handle_StepElement_SurfaceSection_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_SurfaceSection >":
    return _StepElement.Handle_StepElement_SurfaceSection_DownCast(t)
Handle_StepElement_SurfaceSection_DownCast = _StepElement.Handle_StepElement_SurfaceSection_DownCast

def Handle_StepElement_SurfaceSection_IsNull(t: 'opencascade::handle< StepElement_SurfaceSection > const &') -> "bool":
    return _StepElement.Handle_StepElement_SurfaceSection_IsNull(t)
Handle_StepElement_SurfaceSection_IsNull = _StepElement.Handle_StepElement_SurfaceSection_IsNull

def Handle_StepElement_SurfaceSectionField_Create() -> "opencascade::handle< StepElement_SurfaceSectionField >":
    return _StepElement.Handle_StepElement_SurfaceSectionField_Create()
Handle_StepElement_SurfaceSectionField_Create = _StepElement.Handle_StepElement_SurfaceSectionField_Create

def Handle_StepElement_SurfaceSectionField_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_SurfaceSectionField >":
    return _StepElement.Handle_StepElement_SurfaceSectionField_DownCast(t)
Handle_StepElement_SurfaceSectionField_DownCast = _StepElement.Handle_StepElement_SurfaceSectionField_DownCast

def Handle_StepElement_SurfaceSectionField_IsNull(t: 'opencascade::handle< StepElement_SurfaceSectionField > const &') -> "bool":
    return _StepElement.Handle_StepElement_SurfaceSectionField_IsNull(t)
Handle_StepElement_SurfaceSectionField_IsNull = _StepElement.Handle_StepElement_SurfaceSectionField_IsNull

def Handle_StepElement_VolumeElementPurposeMember_Create() -> "opencascade::handle< StepElement_VolumeElementPurposeMember >":
    return _StepElement.Handle_StepElement_VolumeElementPurposeMember_Create()
Handle_StepElement_VolumeElementPurposeMember_Create = _StepElement.Handle_StepElement_VolumeElementPurposeMember_Create

def Handle_StepElement_VolumeElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_VolumeElementPurposeMember >":
    return _StepElement.Handle_StepElement_VolumeElementPurposeMember_DownCast(t)
Handle_StepElement_VolumeElementPurposeMember_DownCast = _StepElement.Handle_StepElement_VolumeElementPurposeMember_DownCast

def Handle_StepElement_VolumeElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_VolumeElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_VolumeElementPurposeMember_IsNull(t)
Handle_StepElement_VolumeElementPurposeMember_IsNull = _StepElement.Handle_StepElement_VolumeElementPurposeMember_IsNull

def Handle_StepElement_Curve3dElementDescriptor_Create() -> "opencascade::handle< StepElement_Curve3dElementDescriptor >":
    return _StepElement.Handle_StepElement_Curve3dElementDescriptor_Create()
Handle_StepElement_Curve3dElementDescriptor_Create = _StepElement.Handle_StepElement_Curve3dElementDescriptor_Create

def Handle_StepElement_Curve3dElementDescriptor_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_Curve3dElementDescriptor >":
    return _StepElement.Handle_StepElement_Curve3dElementDescriptor_DownCast(t)
Handle_StepElement_Curve3dElementDescriptor_DownCast = _StepElement.Handle_StepElement_Curve3dElementDescriptor_DownCast

def Handle_StepElement_Curve3dElementDescriptor_IsNull(t: 'opencascade::handle< StepElement_Curve3dElementDescriptor > const &') -> "bool":
    return _StepElement.Handle_StepElement_Curve3dElementDescriptor_IsNull(t)
Handle_StepElement_Curve3dElementDescriptor_IsNull = _StepElement.Handle_StepElement_Curve3dElementDescriptor_IsNull

def Handle_StepElement_CurveElementSectionDerivedDefinitions_Create() -> "opencascade::handle< StepElement_CurveElementSectionDerivedDefinitions >":
    return _StepElement.Handle_StepElement_CurveElementSectionDerivedDefinitions_Create()
Handle_StepElement_CurveElementSectionDerivedDefinitions_Create = _StepElement.Handle_StepElement_CurveElementSectionDerivedDefinitions_Create

def Handle_StepElement_CurveElementSectionDerivedDefinitions_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_CurveElementSectionDerivedDefinitions >":
    return _StepElement.Handle_StepElement_CurveElementSectionDerivedDefinitions_DownCast(t)
Handle_StepElement_CurveElementSectionDerivedDefinitions_DownCast = _StepElement.Handle_StepElement_CurveElementSectionDerivedDefinitions_DownCast

def Handle_StepElement_CurveElementSectionDerivedDefinitions_IsNull(t: 'opencascade::handle< StepElement_CurveElementSectionDerivedDefinitions > const &') -> "bool":
    return _StepElement.Handle_StepElement_CurveElementSectionDerivedDefinitions_IsNull(t)
Handle_StepElement_CurveElementSectionDerivedDefinitions_IsNull = _StepElement.Handle_StepElement_CurveElementSectionDerivedDefinitions_IsNull

def Handle_StepElement_Surface3dElementDescriptor_Create() -> "opencascade::handle< StepElement_Surface3dElementDescriptor >":
    return _StepElement.Handle_StepElement_Surface3dElementDescriptor_Create()
Handle_StepElement_Surface3dElementDescriptor_Create = _StepElement.Handle_StepElement_Surface3dElementDescriptor_Create

def Handle_StepElement_Surface3dElementDescriptor_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_Surface3dElementDescriptor >":
    return _StepElement.Handle_StepElement_Surface3dElementDescriptor_DownCast(t)
Handle_StepElement_Surface3dElementDescriptor_DownCast = _StepElement.Handle_StepElement_Surface3dElementDescriptor_DownCast

def Handle_StepElement_Surface3dElementDescriptor_IsNull(t: 'opencascade::handle< StepElement_Surface3dElementDescriptor > const &') -> "bool":
    return _StepElement.Handle_StepElement_Surface3dElementDescriptor_IsNull(t)
Handle_StepElement_Surface3dElementDescriptor_IsNull = _StepElement.Handle_StepElement_Surface3dElementDescriptor_IsNull

def Handle_StepElement_SurfaceSectionFieldConstant_Create() -> "opencascade::handle< StepElement_SurfaceSectionFieldConstant >":
    return _StepElement.Handle_StepElement_SurfaceSectionFieldConstant_Create()
Handle_StepElement_SurfaceSectionFieldConstant_Create = _StepElement.Handle_StepElement_SurfaceSectionFieldConstant_Create

def Handle_StepElement_SurfaceSectionFieldConstant_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_SurfaceSectionFieldConstant >":
    return _StepElement.Handle_StepElement_SurfaceSectionFieldConstant_DownCast(t)
Handle_StepElement_SurfaceSectionFieldConstant_DownCast = _StepElement.Handle_StepElement_SurfaceSectionFieldConstant_DownCast

def Handle_StepElement_SurfaceSectionFieldConstant_IsNull(t: 'opencascade::handle< StepElement_SurfaceSectionFieldConstant > const &') -> "bool":
    return _StepElement.Handle_StepElement_SurfaceSectionFieldConstant_IsNull(t)
Handle_StepElement_SurfaceSectionFieldConstant_IsNull = _StepElement.Handle_StepElement_SurfaceSectionFieldConstant_IsNull

def Handle_StepElement_SurfaceSectionFieldVarying_Create() -> "opencascade::handle< StepElement_SurfaceSectionFieldVarying >":
    return _StepElement.Handle_StepElement_SurfaceSectionFieldVarying_Create()
Handle_StepElement_SurfaceSectionFieldVarying_Create = _StepElement.Handle_StepElement_SurfaceSectionFieldVarying_Create

def Handle_StepElement_SurfaceSectionFieldVarying_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_SurfaceSectionFieldVarying >":
    return _StepElement.Handle_StepElement_SurfaceSectionFieldVarying_DownCast(t)
Handle_StepElement_SurfaceSectionFieldVarying_DownCast = _StepElement.Handle_StepElement_SurfaceSectionFieldVarying_DownCast

def Handle_StepElement_SurfaceSectionFieldVarying_IsNull(t: 'opencascade::handle< StepElement_SurfaceSectionFieldVarying > const &') -> "bool":
    return _StepElement.Handle_StepElement_SurfaceSectionFieldVarying_IsNull(t)
Handle_StepElement_SurfaceSectionFieldVarying_IsNull = _StepElement.Handle_StepElement_SurfaceSectionFieldVarying_IsNull

def Handle_StepElement_UniformSurfaceSection_Create() -> "opencascade::handle< StepElement_UniformSurfaceSection >":
    return _StepElement.Handle_StepElement_UniformSurfaceSection_Create()
Handle_StepElement_UniformSurfaceSection_Create = _StepElement.Handle_StepElement_UniformSurfaceSection_Create

def Handle_StepElement_UniformSurfaceSection_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_UniformSurfaceSection >":
    return _StepElement.Handle_StepElement_UniformSurfaceSection_DownCast(t)
Handle_StepElement_UniformSurfaceSection_DownCast = _StepElement.Handle_StepElement_UniformSurfaceSection_DownCast

def Handle_StepElement_UniformSurfaceSection_IsNull(t: 'opencascade::handle< StepElement_UniformSurfaceSection > const &') -> "bool":
    return _StepElement.Handle_StepElement_UniformSurfaceSection_IsNull(t)
Handle_StepElement_UniformSurfaceSection_IsNull = _StepElement.Handle_StepElement_UniformSurfaceSection_IsNull

def Handle_StepElement_Volume3dElementDescriptor_Create() -> "opencascade::handle< StepElement_Volume3dElementDescriptor >":
    return _StepElement.Handle_StepElement_Volume3dElementDescriptor_Create()
Handle_StepElement_Volume3dElementDescriptor_Create = _StepElement.Handle_StepElement_Volume3dElementDescriptor_Create

def Handle_StepElement_Volume3dElementDescriptor_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_Volume3dElementDescriptor >":
    return _StepElement.Handle_StepElement_Volume3dElementDescriptor_DownCast(t)
Handle_StepElement_Volume3dElementDescriptor_DownCast = _StepElement.Handle_StepElement_Volume3dElementDescriptor_DownCast

def Handle_StepElement_Volume3dElementDescriptor_IsNull(t: 'opencascade::handle< StepElement_Volume3dElementDescriptor > const &') -> "bool":
    return _StepElement.Handle_StepElement_Volume3dElementDescriptor_IsNull(t)
Handle_StepElement_Volume3dElementDescriptor_IsNull = _StepElement.Handle_StepElement_Volume3dElementDescriptor_IsNull

def Handle_StepElement_HArray1OfVolumeElementPurpose_Create() -> "opencascade::handle< StepElement_HArray1OfVolumeElementPurpose >":
    return _StepElement.Handle_StepElement_HArray1OfVolumeElementPurpose_Create()
Handle_StepElement_HArray1OfVolumeElementPurpose_Create = _StepElement.Handle_StepElement_HArray1OfVolumeElementPurpose_Create

def Handle_StepElement_HArray1OfVolumeElementPurpose_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray1OfVolumeElementPurpose >":
    return _StepElement.Handle_StepElement_HArray1OfVolumeElementPurpose_DownCast(t)
Handle_StepElement_HArray1OfVolumeElementPurpose_DownCast = _StepElement.Handle_StepElement_HArray1OfVolumeElementPurpose_DownCast

def Handle_StepElement_HArray1OfVolumeElementPurpose_IsNull(t: 'opencascade::handle< StepElement_HArray1OfVolumeElementPurpose > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray1OfVolumeElementPurpose_IsNull(t)
Handle_StepElement_HArray1OfVolumeElementPurpose_IsNull = _StepElement.Handle_StepElement_HArray1OfVolumeElementPurpose_IsNull

def Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_Create() -> "opencascade::handle< StepElement_HArray1OfHSequenceOfCurveElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_Create()
Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_Create = _StepElement.Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_Create

def Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray1OfHSequenceOfCurveElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_DownCast(t)
Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_DownCast = _StepElement.Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_DownCast

def Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_HArray1OfHSequenceOfCurveElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_IsNull(t)
Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_IsNull = _StepElement.Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_IsNull

def Handle_StepElement_HArray1OfSurfaceSection_Create() -> "opencascade::handle< StepElement_HArray1OfSurfaceSection >":
    return _StepElement.Handle_StepElement_HArray1OfSurfaceSection_Create()
Handle_StepElement_HArray1OfSurfaceSection_Create = _StepElement.Handle_StepElement_HArray1OfSurfaceSection_Create

def Handle_StepElement_HArray1OfSurfaceSection_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray1OfSurfaceSection >":
    return _StepElement.Handle_StepElement_HArray1OfSurfaceSection_DownCast(t)
Handle_StepElement_HArray1OfSurfaceSection_DownCast = _StepElement.Handle_StepElement_HArray1OfSurfaceSection_DownCast

def Handle_StepElement_HArray1OfSurfaceSection_IsNull(t: 'opencascade::handle< StepElement_HArray1OfSurfaceSection > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray1OfSurfaceSection_IsNull(t)
Handle_StepElement_HArray1OfSurfaceSection_IsNull = _StepElement.Handle_StepElement_HArray1OfSurfaceSection_IsNull

def Handle_StepElement_HArray1OfCurveElementSectionDefinition_Create() -> "opencascade::handle< StepElement_HArray1OfCurveElementSectionDefinition >":
    return _StepElement.Handle_StepElement_HArray1OfCurveElementSectionDefinition_Create()
Handle_StepElement_HArray1OfCurveElementSectionDefinition_Create = _StepElement.Handle_StepElement_HArray1OfCurveElementSectionDefinition_Create

def Handle_StepElement_HArray1OfCurveElementSectionDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray1OfCurveElementSectionDefinition >":
    return _StepElement.Handle_StepElement_HArray1OfCurveElementSectionDefinition_DownCast(t)
Handle_StepElement_HArray1OfCurveElementSectionDefinition_DownCast = _StepElement.Handle_StepElement_HArray1OfCurveElementSectionDefinition_DownCast

def Handle_StepElement_HArray1OfCurveElementSectionDefinition_IsNull(t: 'opencascade::handle< StepElement_HArray1OfCurveElementSectionDefinition > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray1OfCurveElementSectionDefinition_IsNull(t)
Handle_StepElement_HArray1OfCurveElementSectionDefinition_IsNull = _StepElement.Handle_StepElement_HArray1OfCurveElementSectionDefinition_IsNull

def Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_Create() -> "opencascade::handle< StepElement_HArray1OfMeasureOrUnspecifiedValue >":
    return _StepElement.Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_Create()
Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_Create = _StepElement.Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_Create

def Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray1OfMeasureOrUnspecifiedValue >":
    return _StepElement.Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_DownCast(t)
Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_DownCast = _StepElement.Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_DownCast

def Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_IsNull(t: 'opencascade::handle< StepElement_HArray1OfMeasureOrUnspecifiedValue > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_IsNull(t)
Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_IsNull = _StepElement.Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_IsNull

def Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_Create() -> "opencascade::handle< StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_Create()
Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_Create = _StepElement.Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_Create

def Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_DownCast(t)
Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_DownCast = _StepElement.Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_DownCast

def Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_IsNull(t)
Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_IsNull = _StepElement.Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_IsNull

def Handle_StepElement_HArray1OfVolumeElementPurposeMember_Create() -> "opencascade::handle< StepElement_HArray1OfVolumeElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray1OfVolumeElementPurposeMember_Create()
Handle_StepElement_HArray1OfVolumeElementPurposeMember_Create = _StepElement.Handle_StepElement_HArray1OfVolumeElementPurposeMember_Create

def Handle_StepElement_HArray1OfVolumeElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray1OfVolumeElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray1OfVolumeElementPurposeMember_DownCast(t)
Handle_StepElement_HArray1OfVolumeElementPurposeMember_DownCast = _StepElement.Handle_StepElement_HArray1OfVolumeElementPurposeMember_DownCast

def Handle_StepElement_HArray1OfVolumeElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_HArray1OfVolumeElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray1OfVolumeElementPurposeMember_IsNull(t)
Handle_StepElement_HArray1OfVolumeElementPurposeMember_IsNull = _StepElement.Handle_StepElement_HArray1OfVolumeElementPurposeMember_IsNull

def Handle_StepElement_HArray1OfCurveElementEndReleasePacket_Create() -> "opencascade::handle< StepElement_HArray1OfCurveElementEndReleasePacket >":
    return _StepElement.Handle_StepElement_HArray1OfCurveElementEndReleasePacket_Create()
Handle_StepElement_HArray1OfCurveElementEndReleasePacket_Create = _StepElement.Handle_StepElement_HArray1OfCurveElementEndReleasePacket_Create

def Handle_StepElement_HArray1OfCurveElementEndReleasePacket_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray1OfCurveElementEndReleasePacket >":
    return _StepElement.Handle_StepElement_HArray1OfCurveElementEndReleasePacket_DownCast(t)
Handle_StepElement_HArray1OfCurveElementEndReleasePacket_DownCast = _StepElement.Handle_StepElement_HArray1OfCurveElementEndReleasePacket_DownCast

def Handle_StepElement_HArray1OfCurveElementEndReleasePacket_IsNull(t: 'opencascade::handle< StepElement_HArray1OfCurveElementEndReleasePacket > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray1OfCurveElementEndReleasePacket_IsNull(t)
Handle_StepElement_HArray1OfCurveElementEndReleasePacket_IsNull = _StepElement.Handle_StepElement_HArray1OfCurveElementEndReleasePacket_IsNull

def Handle_StepElement_HArray2OfSurfaceElementPurposeMember_Create() -> "opencascade::handle< StepElement_HArray2OfSurfaceElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurposeMember_Create()
Handle_StepElement_HArray2OfSurfaceElementPurposeMember_Create = _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurposeMember_Create

def Handle_StepElement_HArray2OfSurfaceElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray2OfSurfaceElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurposeMember_DownCast(t)
Handle_StepElement_HArray2OfSurfaceElementPurposeMember_DownCast = _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurposeMember_DownCast

def Handle_StepElement_HArray2OfSurfaceElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_HArray2OfSurfaceElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurposeMember_IsNull(t)
Handle_StepElement_HArray2OfSurfaceElementPurposeMember_IsNull = _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurposeMember_IsNull

def Handle_StepElement_HArray2OfSurfaceElementPurpose_Create() -> "opencascade::handle< StepElement_HArray2OfSurfaceElementPurpose >":
    return _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurpose_Create()
Handle_StepElement_HArray2OfSurfaceElementPurpose_Create = _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurpose_Create

def Handle_StepElement_HArray2OfSurfaceElementPurpose_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray2OfSurfaceElementPurpose >":
    return _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurpose_DownCast(t)
Handle_StepElement_HArray2OfSurfaceElementPurpose_DownCast = _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurpose_DownCast

def Handle_StepElement_HArray2OfSurfaceElementPurpose_IsNull(t: 'opencascade::handle< StepElement_HArray2OfSurfaceElementPurpose > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurpose_IsNull(t)
Handle_StepElement_HArray2OfSurfaceElementPurpose_IsNull = _StepElement.Handle_StepElement_HArray2OfSurfaceElementPurpose_IsNull

def Handle_StepElement_HArray2OfCurveElementPurposeMember_Create() -> "opencascade::handle< StepElement_HArray2OfCurveElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray2OfCurveElementPurposeMember_Create()
Handle_StepElement_HArray2OfCurveElementPurposeMember_Create = _StepElement.Handle_StepElement_HArray2OfCurveElementPurposeMember_Create

def Handle_StepElement_HArray2OfCurveElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HArray2OfCurveElementPurposeMember >":
    return _StepElement.Handle_StepElement_HArray2OfCurveElementPurposeMember_DownCast(t)
Handle_StepElement_HArray2OfCurveElementPurposeMember_DownCast = _StepElement.Handle_StepElement_HArray2OfCurveElementPurposeMember_DownCast

def Handle_StepElement_HArray2OfCurveElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_HArray2OfCurveElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_HArray2OfCurveElementPurposeMember_IsNull(t)
Handle_StepElement_HArray2OfCurveElementPurposeMember_IsNull = _StepElement.Handle_StepElement_HArray2OfCurveElementPurposeMember_IsNull

def Handle_StepElement_HSequenceOfCurveElementSectionDefinition_Create() -> "opencascade::handle< StepElement_HSequenceOfCurveElementSectionDefinition >":
    return _StepElement.Handle_StepElement_HSequenceOfCurveElementSectionDefinition_Create()
Handle_StepElement_HSequenceOfCurveElementSectionDefinition_Create = _StepElement.Handle_StepElement_HSequenceOfCurveElementSectionDefinition_Create

def Handle_StepElement_HSequenceOfCurveElementSectionDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HSequenceOfCurveElementSectionDefinition >":
    return _StepElement.Handle_StepElement_HSequenceOfCurveElementSectionDefinition_DownCast(t)
Handle_StepElement_HSequenceOfCurveElementSectionDefinition_DownCast = _StepElement.Handle_StepElement_HSequenceOfCurveElementSectionDefinition_DownCast

def Handle_StepElement_HSequenceOfCurveElementSectionDefinition_IsNull(t: 'opencascade::handle< StepElement_HSequenceOfCurveElementSectionDefinition > const &') -> "bool":
    return _StepElement.Handle_StepElement_HSequenceOfCurveElementSectionDefinition_IsNull(t)
Handle_StepElement_HSequenceOfCurveElementSectionDefinition_IsNull = _StepElement.Handle_StepElement_HSequenceOfCurveElementSectionDefinition_IsNull

def Handle_StepElement_HSequenceOfCurveElementPurposeMember_Create() -> "opencascade::handle< StepElement_HSequenceOfCurveElementPurposeMember >":
    return _StepElement.Handle_StepElement_HSequenceOfCurveElementPurposeMember_Create()
Handle_StepElement_HSequenceOfCurveElementPurposeMember_Create = _StepElement.Handle_StepElement_HSequenceOfCurveElementPurposeMember_Create

def Handle_StepElement_HSequenceOfCurveElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HSequenceOfCurveElementPurposeMember >":
    return _StepElement.Handle_StepElement_HSequenceOfCurveElementPurposeMember_DownCast(t)
Handle_StepElement_HSequenceOfCurveElementPurposeMember_DownCast = _StepElement.Handle_StepElement_HSequenceOfCurveElementPurposeMember_DownCast

def Handle_StepElement_HSequenceOfCurveElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_HSequenceOfCurveElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_HSequenceOfCurveElementPurposeMember_IsNull(t)
Handle_StepElement_HSequenceOfCurveElementPurposeMember_IsNull = _StepElement.Handle_StepElement_HSequenceOfCurveElementPurposeMember_IsNull

def Handle_StepElement_HSequenceOfElementMaterial_Create() -> "opencascade::handle< StepElement_HSequenceOfElementMaterial >":
    return _StepElement.Handle_StepElement_HSequenceOfElementMaterial_Create()
Handle_StepElement_HSequenceOfElementMaterial_Create = _StepElement.Handle_StepElement_HSequenceOfElementMaterial_Create

def Handle_StepElement_HSequenceOfElementMaterial_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HSequenceOfElementMaterial >":
    return _StepElement.Handle_StepElement_HSequenceOfElementMaterial_DownCast(t)
Handle_StepElement_HSequenceOfElementMaterial_DownCast = _StepElement.Handle_StepElement_HSequenceOfElementMaterial_DownCast

def Handle_StepElement_HSequenceOfElementMaterial_IsNull(t: 'opencascade::handle< StepElement_HSequenceOfElementMaterial > const &') -> "bool":
    return _StepElement.Handle_StepElement_HSequenceOfElementMaterial_IsNull(t)
Handle_StepElement_HSequenceOfElementMaterial_IsNull = _StepElement.Handle_StepElement_HSequenceOfElementMaterial_IsNull

def Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_Create() -> "opencascade::handle< StepElement_HSequenceOfSurfaceElementPurposeMember >":
    return _StepElement.Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_Create()
Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_Create = _StepElement.Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_Create

def Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepElement_HSequenceOfSurfaceElementPurposeMember >":
    return _StepElement.Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_DownCast(t)
Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_DownCast = _StepElement.Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_DownCast

def Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_IsNull(t: 'opencascade::handle< StepElement_HSequenceOfSurfaceElementPurposeMember > const &') -> "bool":
    return _StepElement.Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_IsNull(t)
Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_IsNull = _StepElement.Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_IsNull
class StepElement_SequenceOfCurveElementSectionDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_SequenceOfCurveElementSectionDefinition_swiginit(self, _StepElement.new_StepElement_SequenceOfCurveElementSectionDefinition(*args))
    delNode = staticmethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_delNode)
    __swig_destroy__ = _StepElement.delete_StepElement_SequenceOfCurveElementSectionDefinition
StepElement_SequenceOfCurveElementSectionDefinition.begin = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_begin, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.end = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_end, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.cbegin = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_cbegin, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.cend = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_cend, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Size = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Size, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Length = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Length, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Lower = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Lower, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Upper = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Upper, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.IsEmpty = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_IsEmpty, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Reverse = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Reverse, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Exchange = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Exchange, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Clear = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Clear, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Assign = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Assign, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Set = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Set, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Remove = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Remove, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Append = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Append, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Prepend = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Prepend, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.InsertBefore = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_InsertBefore, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.InsertAfter = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_InsertAfter, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Split = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Split, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.First = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_First, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.ChangeFirst = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_ChangeFirst, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Last = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Last, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.ChangeLast = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_ChangeLast, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.Value = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_Value, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.ChangeValue = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_ChangeValue, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.__call__ = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition___call__, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition.SetValue = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementSectionDefinition_SetValue, None, StepElement_SequenceOfCurveElementSectionDefinition)
StepElement_SequenceOfCurveElementSectionDefinition_swigregister = _StepElement.StepElement_SequenceOfCurveElementSectionDefinition_swigregister
StepElement_SequenceOfCurveElementSectionDefinition_swigregister(StepElement_SequenceOfCurveElementSectionDefinition)

def StepElement_SequenceOfCurveElementSectionDefinition_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepElement.StepElement_SequenceOfCurveElementSectionDefinition_delNode(theNode, theAl)
StepElement_SequenceOfCurveElementSectionDefinition_delNode = _StepElement.StepElement_SequenceOfCurveElementSectionDefinition_delNode

class StepElement_Array2OfCurveElementPurposeMember(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array2OfCurveElementPurposeMember_swiginit(self, _StepElement.new_StepElement_Array2OfCurveElementPurposeMember(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array2OfCurveElementPurposeMember
StepElement_Array2OfCurveElementPurposeMember.Init = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_Init, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.Size = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_Size, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.Length = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_Length, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.NbRows = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_NbRows, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.NbColumns = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_NbColumns, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.RowLength = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_RowLength, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.ColLength = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_ColLength, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.LowerRow = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_LowerRow, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.UpperRow = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_UpperRow, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.LowerCol = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_LowerCol, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.UpperCol = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_UpperCol, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.IsDeletable = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_IsDeletable, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.Assign = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_Assign, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.Move = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_Move, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.Set = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_Set, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.Value = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_Value, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.ChangeValue = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_ChangeValue, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.__call__ = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember___call__, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.SetValue = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_SetValue, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember.Resize = new_instancemethod(_StepElement.StepElement_Array2OfCurveElementPurposeMember_Resize, None, StepElement_Array2OfCurveElementPurposeMember)
StepElement_Array2OfCurveElementPurposeMember_swigregister = _StepElement.StepElement_Array2OfCurveElementPurposeMember_swigregister
StepElement_Array2OfCurveElementPurposeMember_swigregister(StepElement_Array2OfCurveElementPurposeMember)

class StepElement_Array1OfCurveElementSectionDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array1OfCurveElementSectionDefinition_swiginit(self, _StepElement.new_StepElement_Array1OfCurveElementSectionDefinition(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array1OfCurveElementSectionDefinition

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepElement_Array1OfCurveElementSectionDefinition.begin = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_begin, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.end = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_end, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.cbegin = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_cbegin, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.cend = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_cend, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Init = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Init, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Size = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Size, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Length = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Length, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.IsEmpty = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_IsEmpty, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Lower = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Lower, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Upper = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Upper, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.IsDeletable = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_IsDeletable, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.IsAllocated = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_IsAllocated, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Assign = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Assign, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Move = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Move, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Set = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Set, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.First = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_First, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.ChangeFirst = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_ChangeFirst, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Last = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Last, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.ChangeLast = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_ChangeLast, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Value = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Value, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.ChangeValue = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_ChangeValue, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.__call__ = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition___call__, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.SetValue = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_SetValue, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition.Resize = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementSectionDefinition_Resize, None, StepElement_Array1OfCurveElementSectionDefinition)
StepElement_Array1OfCurveElementSectionDefinition_swigregister = _StepElement.StepElement_Array1OfCurveElementSectionDefinition_swigregister
StepElement_Array1OfCurveElementSectionDefinition_swigregister(StepElement_Array1OfCurveElementSectionDefinition)

class StepElement_Array1OfHSequenceOfCurveElementPurposeMember(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_swiginit(self, _StepElement.new_StepElement_Array1OfHSequenceOfCurveElementPurposeMember(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array1OfHSequenceOfCurveElementPurposeMember

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepElement_Array1OfHSequenceOfCurveElementPurposeMember.begin = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_begin, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.end = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_end, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.cbegin = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_cbegin, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.cend = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_cend, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Init = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Init, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Size = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Size, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Length = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Length, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.IsEmpty = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_IsEmpty, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Lower = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Lower, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Upper = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Upper, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.IsDeletable = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_IsDeletable, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.IsAllocated = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_IsAllocated, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Assign = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Assign, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Move = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Move, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Set = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Set, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.First = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_First, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.ChangeFirst = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_ChangeFirst, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Last = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Last, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.ChangeLast = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_ChangeLast, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Value = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Value, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.ChangeValue = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_ChangeValue, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.__call__ = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember___call__, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.SetValue = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_SetValue, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember.Resize = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_Resize, None, StepElement_Array1OfHSequenceOfCurveElementPurposeMember)
StepElement_Array1OfHSequenceOfCurveElementPurposeMember_swigregister = _StepElement.StepElement_Array1OfHSequenceOfCurveElementPurposeMember_swigregister
StepElement_Array1OfHSequenceOfCurveElementPurposeMember_swigregister(StepElement_Array1OfHSequenceOfCurveElementPurposeMember)

class StepElement_Array1OfVolumeElementPurpose(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array1OfVolumeElementPurpose_swiginit(self, _StepElement.new_StepElement_Array1OfVolumeElementPurpose(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array1OfVolumeElementPurpose

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepElement_Array1OfVolumeElementPurpose.begin = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_begin, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.end = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_end, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.cbegin = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_cbegin, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.cend = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_cend, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Init = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Init, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Size = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Size, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Length = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Length, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.IsEmpty = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_IsEmpty, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Lower = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Lower, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Upper = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Upper, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.IsDeletable = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_IsDeletable, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.IsAllocated = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_IsAllocated, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Assign = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Assign, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Move = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Move, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Set = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Set, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.First = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_First, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.ChangeFirst = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_ChangeFirst, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Last = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Last, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.ChangeLast = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_ChangeLast, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Value = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Value, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.ChangeValue = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_ChangeValue, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.__call__ = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose___call__, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.SetValue = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_SetValue, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose.Resize = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurpose_Resize, None, StepElement_Array1OfVolumeElementPurpose)
StepElement_Array1OfVolumeElementPurpose_swigregister = _StepElement.StepElement_Array1OfVolumeElementPurpose_swigregister
StepElement_Array1OfVolumeElementPurpose_swigregister(StepElement_Array1OfVolumeElementPurpose)

class StepElement_Array1OfCurveElementEndReleasePacket(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array1OfCurveElementEndReleasePacket_swiginit(self, _StepElement.new_StepElement_Array1OfCurveElementEndReleasePacket(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array1OfCurveElementEndReleasePacket

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepElement_Array1OfCurveElementEndReleasePacket.begin = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_begin, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.end = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_end, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.cbegin = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_cbegin, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.cend = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_cend, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Init = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Init, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Size = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Size, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Length = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Length, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.IsEmpty = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_IsEmpty, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Lower = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Lower, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Upper = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Upper, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.IsDeletable = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_IsDeletable, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.IsAllocated = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_IsAllocated, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Assign = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Assign, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Move = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Move, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Set = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Set, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.First = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_First, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.ChangeFirst = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_ChangeFirst, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Last = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Last, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.ChangeLast = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_ChangeLast, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Value = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Value, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.ChangeValue = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_ChangeValue, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.__call__ = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket___call__, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.SetValue = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_SetValue, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket.Resize = new_instancemethod(_StepElement.StepElement_Array1OfCurveElementEndReleasePacket_Resize, None, StepElement_Array1OfCurveElementEndReleasePacket)
StepElement_Array1OfCurveElementEndReleasePacket_swigregister = _StepElement.StepElement_Array1OfCurveElementEndReleasePacket_swigregister
StepElement_Array1OfCurveElementEndReleasePacket_swigregister(StepElement_Array1OfCurveElementEndReleasePacket)

class StepElement_Array1OfMeasureOrUnspecifiedValue(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_swiginit(self, _StepElement.new_StepElement_Array1OfMeasureOrUnspecifiedValue(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array1OfMeasureOrUnspecifiedValue

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepElement_Array1OfMeasureOrUnspecifiedValue.begin = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_begin, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.end = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_end, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.cbegin = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_cbegin, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.cend = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_cend, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Init = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Init, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Size = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Size, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Length = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Length, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.IsEmpty = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_IsEmpty, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Lower = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Lower, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Upper = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Upper, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.IsDeletable = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_IsDeletable, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.IsAllocated = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_IsAllocated, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Assign = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Assign, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Move = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Move, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Set = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Set, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.First = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_First, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.ChangeFirst = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_ChangeFirst, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Last = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Last, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.ChangeLast = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_ChangeLast, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Value = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Value, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.ChangeValue = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_ChangeValue, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.__call__ = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue___call__, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.SetValue = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_SetValue, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue.Resize = new_instancemethod(_StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_Resize, None, StepElement_Array1OfMeasureOrUnspecifiedValue)
StepElement_Array1OfMeasureOrUnspecifiedValue_swigregister = _StepElement.StepElement_Array1OfMeasureOrUnspecifiedValue_swigregister
StepElement_Array1OfMeasureOrUnspecifiedValue_swigregister(StepElement_Array1OfMeasureOrUnspecifiedValue)

class StepElement_Array2OfSurfaceElementPurpose(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array2OfSurfaceElementPurpose_swiginit(self, _StepElement.new_StepElement_Array2OfSurfaceElementPurpose(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array2OfSurfaceElementPurpose
StepElement_Array2OfSurfaceElementPurpose.Init = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_Init, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.Size = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_Size, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.Length = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_Length, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.NbRows = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_NbRows, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.NbColumns = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_NbColumns, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.RowLength = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_RowLength, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.ColLength = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_ColLength, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.LowerRow = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_LowerRow, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.UpperRow = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_UpperRow, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.LowerCol = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_LowerCol, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.UpperCol = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_UpperCol, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.IsDeletable = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_IsDeletable, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.Assign = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_Assign, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.Move = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_Move, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.Set = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_Set, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.Value = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_Value, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.ChangeValue = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_ChangeValue, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.__call__ = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose___call__, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.SetValue = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_SetValue, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose.Resize = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurpose_Resize, None, StepElement_Array2OfSurfaceElementPurpose)
StepElement_Array2OfSurfaceElementPurpose_swigregister = _StepElement.StepElement_Array2OfSurfaceElementPurpose_swigregister
StepElement_Array2OfSurfaceElementPurpose_swigregister(StepElement_Array2OfSurfaceElementPurpose)

class StepElement_SequenceOfElementMaterial(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_SequenceOfElementMaterial_swiginit(self, _StepElement.new_StepElement_SequenceOfElementMaterial(*args))
    delNode = staticmethod(_StepElement.StepElement_SequenceOfElementMaterial_delNode)
    __swig_destroy__ = _StepElement.delete_StepElement_SequenceOfElementMaterial
StepElement_SequenceOfElementMaterial.begin = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_begin, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.end = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_end, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.cbegin = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_cbegin, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.cend = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_cend, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Size = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Size, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Length = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Length, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Lower = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Lower, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Upper = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Upper, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.IsEmpty = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_IsEmpty, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Reverse = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Reverse, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Exchange = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Exchange, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Clear = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Clear, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Assign = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Assign, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Set = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Set, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Remove = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Remove, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Append = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Append, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Prepend = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Prepend, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.InsertBefore = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_InsertBefore, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.InsertAfter = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_InsertAfter, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Split = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Split, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.First = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_First, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.ChangeFirst = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_ChangeFirst, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Last = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Last, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.ChangeLast = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_ChangeLast, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.Value = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_Value, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.ChangeValue = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_ChangeValue, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.__call__ = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial___call__, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial.SetValue = new_instancemethod(_StepElement.StepElement_SequenceOfElementMaterial_SetValue, None, StepElement_SequenceOfElementMaterial)
StepElement_SequenceOfElementMaterial_swigregister = _StepElement.StepElement_SequenceOfElementMaterial_swigregister
StepElement_SequenceOfElementMaterial_swigregister(StepElement_SequenceOfElementMaterial)

def StepElement_SequenceOfElementMaterial_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepElement.StepElement_SequenceOfElementMaterial_delNode(theNode, theAl)
StepElement_SequenceOfElementMaterial_delNode = _StepElement.StepElement_SequenceOfElementMaterial_delNode

class StepElement_SequenceOfSurfaceElementPurposeMember(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_swiginit(self, _StepElement.new_StepElement_SequenceOfSurfaceElementPurposeMember(*args))
    delNode = staticmethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_delNode)
    __swig_destroy__ = _StepElement.delete_StepElement_SequenceOfSurfaceElementPurposeMember
StepElement_SequenceOfSurfaceElementPurposeMember.begin = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_begin, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.end = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_end, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.cbegin = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_cbegin, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.cend = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_cend, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Size = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Size, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Length = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Length, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Lower = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Lower, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Upper = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Upper, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.IsEmpty = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_IsEmpty, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Reverse = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Reverse, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Exchange = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Exchange, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Clear = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Clear, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Assign = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Assign, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Set = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Set, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Remove = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Remove, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Append = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Append, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Prepend = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Prepend, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.InsertBefore = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_InsertBefore, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.InsertAfter = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_InsertAfter, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Split = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Split, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.First = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_First, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.ChangeFirst = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_ChangeFirst, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Last = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Last, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.ChangeLast = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_ChangeLast, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.Value = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_Value, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.ChangeValue = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_ChangeValue, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.__call__ = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember___call__, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember.SetValue = new_instancemethod(_StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_SetValue, None, StepElement_SequenceOfSurfaceElementPurposeMember)
StepElement_SequenceOfSurfaceElementPurposeMember_swigregister = _StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_swigregister
StepElement_SequenceOfSurfaceElementPurposeMember_swigregister(StepElement_SequenceOfSurfaceElementPurposeMember)

def StepElement_SequenceOfSurfaceElementPurposeMember_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_delNode(theNode, theAl)
StepElement_SequenceOfSurfaceElementPurposeMember_delNode = _StepElement.StepElement_SequenceOfSurfaceElementPurposeMember_delNode

class StepElement_Array1OfSurfaceSection(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array1OfSurfaceSection_swiginit(self, _StepElement.new_StepElement_Array1OfSurfaceSection(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array1OfSurfaceSection

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepElement_Array1OfSurfaceSection.begin = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_begin, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.end = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_end, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.cbegin = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_cbegin, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.cend = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_cend, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Init = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Init, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Size = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Size, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Length = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Length, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.IsEmpty = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_IsEmpty, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Lower = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Lower, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Upper = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Upper, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.IsDeletable = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_IsDeletable, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.IsAllocated = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_IsAllocated, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Assign = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Assign, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Move = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Move, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Set = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Set, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.First = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_First, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.ChangeFirst = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_ChangeFirst, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Last = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Last, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.ChangeLast = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_ChangeLast, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Value = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Value, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.ChangeValue = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_ChangeValue, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.__call__ = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection___call__, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.SetValue = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_SetValue, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection.Resize = new_instancemethod(_StepElement.StepElement_Array1OfSurfaceSection_Resize, None, StepElement_Array1OfSurfaceSection)
StepElement_Array1OfSurfaceSection_swigregister = _StepElement.StepElement_Array1OfSurfaceSection_swigregister
StepElement_Array1OfSurfaceSection_swigregister(StepElement_Array1OfSurfaceSection)

class StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_swiginit(self, _StepElement.new_StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.begin = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_begin, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.end = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_end, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.cbegin = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_cbegin, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.cend = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_cend, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Init = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Init, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Size = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Size, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Length = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Length, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.IsEmpty = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_IsEmpty, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Lower = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Lower, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Upper = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Upper, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.IsDeletable = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_IsDeletable, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.IsAllocated = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_IsAllocated, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Assign = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Assign, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Move = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Move, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Set = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Set, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.First = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_First, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.ChangeFirst = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_ChangeFirst, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Last = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Last, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.ChangeLast = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_ChangeLast, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Value = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Value, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.ChangeValue = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_ChangeValue, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.__call__ = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember___call__, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.SetValue = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_SetValue, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember.Resize = new_instancemethod(_StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_Resize, None, StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_swigregister = _StepElement.StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_swigregister
StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember_swigregister(StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember)

class StepElement_Array1OfVolumeElementPurposeMember(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array1OfVolumeElementPurposeMember_swiginit(self, _StepElement.new_StepElement_Array1OfVolumeElementPurposeMember(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array1OfVolumeElementPurposeMember

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepElement_Array1OfVolumeElementPurposeMember.begin = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_begin, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.end = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_end, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.cbegin = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_cbegin, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.cend = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_cend, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Init = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Init, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Size = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Size, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Length = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Length, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.IsEmpty = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_IsEmpty, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Lower = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Lower, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Upper = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Upper, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.IsDeletable = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_IsDeletable, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.IsAllocated = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_IsAllocated, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Assign = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Assign, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Move = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Move, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Set = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Set, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.First = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_First, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.ChangeFirst = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_ChangeFirst, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Last = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Last, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.ChangeLast = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_ChangeLast, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Value = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Value, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.ChangeValue = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_ChangeValue, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.__call__ = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember___call__, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.SetValue = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_SetValue, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember.Resize = new_instancemethod(_StepElement.StepElement_Array1OfVolumeElementPurposeMember_Resize, None, StepElement_Array1OfVolumeElementPurposeMember)
StepElement_Array1OfVolumeElementPurposeMember_swigregister = _StepElement.StepElement_Array1OfVolumeElementPurposeMember_swigregister
StepElement_Array1OfVolumeElementPurposeMember_swigregister(StepElement_Array1OfVolumeElementPurposeMember)

class StepElement_Array2OfSurfaceElementPurposeMember(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_Array2OfSurfaceElementPurposeMember_swiginit(self, _StepElement.new_StepElement_Array2OfSurfaceElementPurposeMember(*args))
    __swig_destroy__ = _StepElement.delete_StepElement_Array2OfSurfaceElementPurposeMember
StepElement_Array2OfSurfaceElementPurposeMember.Init = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_Init, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.Size = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_Size, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.Length = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_Length, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.NbRows = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_NbRows, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.NbColumns = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_NbColumns, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.RowLength = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_RowLength, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.ColLength = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_ColLength, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.LowerRow = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_LowerRow, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.UpperRow = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_UpperRow, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.LowerCol = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_LowerCol, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.UpperCol = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_UpperCol, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.IsDeletable = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_IsDeletable, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.Assign = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_Assign, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.Move = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_Move, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.Set = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_Set, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.Value = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_Value, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.ChangeValue = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_ChangeValue, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.__call__ = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember___call__, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.SetValue = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_SetValue, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember.Resize = new_instancemethod(_StepElement.StepElement_Array2OfSurfaceElementPurposeMember_Resize, None, StepElement_Array2OfSurfaceElementPurposeMember)
StepElement_Array2OfSurfaceElementPurposeMember_swigregister = _StepElement.StepElement_Array2OfSurfaceElementPurposeMember_swigregister
StepElement_Array2OfSurfaceElementPurposeMember_swigregister(StepElement_Array2OfSurfaceElementPurposeMember)

class StepElement_SequenceOfCurveElementPurposeMember(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_SequenceOfCurveElementPurposeMember_swiginit(self, _StepElement.new_StepElement_SequenceOfCurveElementPurposeMember(*args))
    delNode = staticmethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_delNode)
    __swig_destroy__ = _StepElement.delete_StepElement_SequenceOfCurveElementPurposeMember
StepElement_SequenceOfCurveElementPurposeMember.begin = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_begin, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.end = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_end, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.cbegin = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_cbegin, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.cend = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_cend, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Size = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Size, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Length = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Length, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Lower = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Lower, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Upper = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Upper, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.IsEmpty = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_IsEmpty, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Reverse = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Reverse, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Exchange = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Exchange, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Clear = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Clear, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Assign = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Assign, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Set = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Set, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Remove = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Remove, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Append = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Append, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Prepend = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Prepend, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.InsertBefore = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_InsertBefore, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.InsertAfter = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_InsertAfter, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Split = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Split, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.First = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_First, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.ChangeFirst = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_ChangeFirst, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Last = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Last, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.ChangeLast = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_ChangeLast, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.Value = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_Value, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.ChangeValue = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_ChangeValue, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.__call__ = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember___call__, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember.SetValue = new_instancemethod(_StepElement.StepElement_SequenceOfCurveElementPurposeMember_SetValue, None, StepElement_SequenceOfCurveElementPurposeMember)
StepElement_SequenceOfCurveElementPurposeMember_swigregister = _StepElement.StepElement_SequenceOfCurveElementPurposeMember_swigregister
StepElement_SequenceOfCurveElementPurposeMember_swigregister(StepElement_SequenceOfCurveElementPurposeMember)

def StepElement_SequenceOfCurveElementPurposeMember_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepElement.StepElement_SequenceOfCurveElementPurposeMember_delNode(theNode, theAl)
StepElement_SequenceOfCurveElementPurposeMember_delNode = _StepElement.StepElement_SequenceOfCurveElementPurposeMember_delNode

class StepElement_AnalysisItemWithinRepresentation(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_AnalysisItemWithinRepresentation_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aItem:
        	:type aItem: StepRepr_RepresentationItem
        	:param aRep:
        	:type aRep: StepRepr_Representation
        	:rtype: None
        """
        return _StepElement.StepElement_AnalysisItemWithinRepresentation_Init(self, *args)


    def Item(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        * Returns field Item
        	:rtype: opencascade::handle<StepRepr_RepresentationItem>
        """
        return _StepElement.StepElement_AnalysisItemWithinRepresentation_Item(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_AnalysisItemWithinRepresentation_Name(self, *args)


    def Rep(self, *args) -> "opencascade::handle< StepRepr_Representation >":
        """
        * Returns field Rep
        	:rtype: opencascade::handle<StepRepr_Representation>
        """
        return _StepElement.StepElement_AnalysisItemWithinRepresentation_Rep(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_AnalysisItemWithinRepresentation_SetDescription(self, *args)


    def SetItem(self, *args) -> "void":
        """
        * Set field Item
        	:param Item:
        	:type Item: StepRepr_RepresentationItem
        	:rtype: None
        """
        return _StepElement.StepElement_AnalysisItemWithinRepresentation_SetItem(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_AnalysisItemWithinRepresentation_SetName(self, *args)


    def SetRep(self, *args) -> "void":
        """
        * Set field Rep
        	:param Rep:
        	:type Rep: StepRepr_Representation
        	:rtype: None
        """
        return _StepElement.StepElement_AnalysisItemWithinRepresentation_SetRep(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_AnalysisItemWithinRepresentation_swiginit(self, _StepElement.new_StepElement_AnalysisItemWithinRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_AnalysisItemWithinRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_AnalysisItemWithinRepresentation
StepElement_AnalysisItemWithinRepresentation.Description = new_instancemethod(_StepElement.StepElement_AnalysisItemWithinRepresentation_Description, None, StepElement_AnalysisItemWithinRepresentation)
StepElement_AnalysisItemWithinRepresentation.Init = new_instancemethod(_StepElement.StepElement_AnalysisItemWithinRepresentation_Init, None, StepElement_AnalysisItemWithinRepresentation)
StepElement_AnalysisItemWithinRepresentation.Item = new_instancemethod(_StepElement.StepElement_AnalysisItemWithinRepresentation_Item, None, StepElement_AnalysisItemWithinRepresentation)
StepElement_AnalysisItemWithinRepresentation.Name = new_instancemethod(_StepElement.StepElement_AnalysisItemWithinRepresentation_Name, None, StepElement_AnalysisItemWithinRepresentation)
StepElement_AnalysisItemWithinRepresentation.Rep = new_instancemethod(_StepElement.StepElement_AnalysisItemWithinRepresentation_Rep, None, StepElement_AnalysisItemWithinRepresentation)
StepElement_AnalysisItemWithinRepresentation.SetDescription = new_instancemethod(_StepElement.StepElement_AnalysisItemWithinRepresentation_SetDescription, None, StepElement_AnalysisItemWithinRepresentation)
StepElement_AnalysisItemWithinRepresentation.SetItem = new_instancemethod(_StepElement.StepElement_AnalysisItemWithinRepresentation_SetItem, None, StepElement_AnalysisItemWithinRepresentation)
StepElement_AnalysisItemWithinRepresentation.SetName = new_instancemethod(_StepElement.StepElement_AnalysisItemWithinRepresentation_SetName, None, StepElement_AnalysisItemWithinRepresentation)
StepElement_AnalysisItemWithinRepresentation.SetRep = new_instancemethod(_StepElement.StepElement_AnalysisItemWithinRepresentation_SetRep, None, StepElement_AnalysisItemWithinRepresentation)
StepElement_AnalysisItemWithinRepresentation_swigregister = _StepElement.StepElement_AnalysisItemWithinRepresentation_swigregister
StepElement_AnalysisItemWithinRepresentation_swigregister(StepElement_AnalysisItemWithinRepresentation)

class StepElement_CurveElementEndReleasePacket(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aReleaseFreedom:
        	:type aReleaseFreedom: StepElement_CurveElementFreedom
        	:param aReleaseStiffness:
        	:type aReleaseStiffness: float
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementEndReleasePacket_Init(self, *args)


    def ReleaseFreedom(self, *args) -> "StepElement_CurveElementFreedom":
        """
        * Returns field ReleaseFreedom
        	:rtype: StepElement_CurveElementFreedom
        """
        return _StepElement.StepElement_CurveElementEndReleasePacket_ReleaseFreedom(self, *args)


    def ReleaseStiffness(self, *args) -> "Standard_Real":
        """
        * Returns field ReleaseStiffness
        	:rtype: float
        """
        return _StepElement.StepElement_CurveElementEndReleasePacket_ReleaseStiffness(self, *args)


    def SetReleaseFreedom(self, *args) -> "void":
        """
        * Set field ReleaseFreedom
        	:param ReleaseFreedom:
        	:type ReleaseFreedom: StepElement_CurveElementFreedom
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementEndReleasePacket_SetReleaseFreedom(self, *args)


    def SetReleaseStiffness(self, *args) -> "void":
        """
        * Set field ReleaseStiffness
        	:param ReleaseStiffness:
        	:type ReleaseStiffness: float
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementEndReleasePacket_SetReleaseStiffness(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_CurveElementEndReleasePacket_swiginit(self, _StepElement.new_StepElement_CurveElementEndReleasePacket(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_CurveElementEndReleasePacket_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_CurveElementEndReleasePacket
StepElement_CurveElementEndReleasePacket.Init = new_instancemethod(_StepElement.StepElement_CurveElementEndReleasePacket_Init, None, StepElement_CurveElementEndReleasePacket)
StepElement_CurveElementEndReleasePacket.ReleaseFreedom = new_instancemethod(_StepElement.StepElement_CurveElementEndReleasePacket_ReleaseFreedom, None, StepElement_CurveElementEndReleasePacket)
StepElement_CurveElementEndReleasePacket.ReleaseStiffness = new_instancemethod(_StepElement.StepElement_CurveElementEndReleasePacket_ReleaseStiffness, None, StepElement_CurveElementEndReleasePacket)
StepElement_CurveElementEndReleasePacket.SetReleaseFreedom = new_instancemethod(_StepElement.StepElement_CurveElementEndReleasePacket_SetReleaseFreedom, None, StepElement_CurveElementEndReleasePacket)
StepElement_CurveElementEndReleasePacket.SetReleaseStiffness = new_instancemethod(_StepElement.StepElement_CurveElementEndReleasePacket_SetReleaseStiffness, None, StepElement_CurveElementEndReleasePacket)
StepElement_CurveElementEndReleasePacket_swigregister = _StepElement.StepElement_CurveElementEndReleasePacket_swigregister
StepElement_CurveElementEndReleasePacket_swigregister(StepElement_CurveElementEndReleasePacket)

class StepElement_CurveElementFreedom(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ApplicationDefinedDegreeOfFreedom(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns Value as ApplicationDefinedDegreeOfFreedom (or Null if another type)
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_CurveElementFreedom_ApplicationDefinedDegreeOfFreedom(self, *args)


    def EnumeratedCurveElementFreedom(self, *args) -> "StepElement_EnumeratedCurveElementFreedom":
        """
        * Returns Value as EnumeratedCurveElementFreedom (or Null if another type)
        	:rtype: StepElement_EnumeratedCurveElementFreedom
        """
        return _StepElement.StepElement_CurveElementFreedom_EnumeratedCurveElementFreedom(self, *args)


    def SetApplicationDefinedDegreeOfFreedom(self, *args) -> "void":
        """
        * Set Value for ApplicationDefinedDegreeOfFreedom
        	:param aVal:
        	:type aVal: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementFreedom_SetApplicationDefinedDegreeOfFreedom(self, *args)


    def SetEnumeratedCurveElementFreedom(self, *args) -> "void":
        """
        * Set Value for EnumeratedCurveElementFreedom
        	:param aVal:
        	:type aVal: StepElement_EnumeratedCurveElementFreedom
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementFreedom_SetEnumeratedCurveElementFreedom(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_CurveElementFreedom_swiginit(self, _StepElement.new_StepElement_CurveElementFreedom(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_CurveElementFreedom
StepElement_CurveElementFreedom.ApplicationDefinedDegreeOfFreedom = new_instancemethod(_StepElement.StepElement_CurveElementFreedom_ApplicationDefinedDegreeOfFreedom, None, StepElement_CurveElementFreedom)
StepElement_CurveElementFreedom.EnumeratedCurveElementFreedom = new_instancemethod(_StepElement.StepElement_CurveElementFreedom_EnumeratedCurveElementFreedom, None, StepElement_CurveElementFreedom)
StepElement_CurveElementFreedom.SetApplicationDefinedDegreeOfFreedom = new_instancemethod(_StepElement.StepElement_CurveElementFreedom_SetApplicationDefinedDegreeOfFreedom, None, StepElement_CurveElementFreedom)
StepElement_CurveElementFreedom.SetEnumeratedCurveElementFreedom = new_instancemethod(_StepElement.StepElement_CurveElementFreedom_SetEnumeratedCurveElementFreedom, None, StepElement_CurveElementFreedom)
StepElement_CurveElementFreedom_swigregister = _StepElement.StepElement_CurveElementFreedom_swigregister
StepElement_CurveElementFreedom_swigregister(StepElement_CurveElementFreedom)

class StepElement_CurveElementFreedomMember(OCC.Core.StepData.StepData_SelectNamed):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_CurveElementFreedomMember_swiginit(self, _StepElement.new_StepElement_CurveElementFreedomMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_CurveElementFreedomMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_CurveElementFreedomMember
StepElement_CurveElementFreedomMember_swigregister = _StepElement.StepElement_CurveElementFreedomMember_swigregister
StepElement_CurveElementFreedomMember_swigregister(StepElement_CurveElementFreedomMember)

class StepElement_CurveElementPurpose(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ApplicationDefinedElementPurpose(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns Value as ApplicationDefinedElementPurpose (or Null if another type)
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_CurveElementPurpose_ApplicationDefinedElementPurpose(self, *args)


    def EnumeratedCurveElementPurpose(self, *args) -> "StepElement_EnumeratedCurveElementPurpose":
        """
        * Returns Value as EnumeratedCurveElementPurpose (or Null if another type)
        	:rtype: StepElement_EnumeratedCurveElementPurpose
        """
        return _StepElement.StepElement_CurveElementPurpose_EnumeratedCurveElementPurpose(self, *args)


    def SetApplicationDefinedElementPurpose(self, *args) -> "void":
        """
        * Set Value for ApplicationDefinedElementPurpose
        	:param aVal:
        	:type aVal: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementPurpose_SetApplicationDefinedElementPurpose(self, *args)


    def SetEnumeratedCurveElementPurpose(self, *args) -> "void":
        """
        * Set Value for EnumeratedCurveElementPurpose
        	:param aVal:
        	:type aVal: StepElement_EnumeratedCurveElementPurpose
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementPurpose_SetEnumeratedCurveElementPurpose(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_CurveElementPurpose_swiginit(self, _StepElement.new_StepElement_CurveElementPurpose(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_CurveElementPurpose
StepElement_CurveElementPurpose.ApplicationDefinedElementPurpose = new_instancemethod(_StepElement.StepElement_CurveElementPurpose_ApplicationDefinedElementPurpose, None, StepElement_CurveElementPurpose)
StepElement_CurveElementPurpose.EnumeratedCurveElementPurpose = new_instancemethod(_StepElement.StepElement_CurveElementPurpose_EnumeratedCurveElementPurpose, None, StepElement_CurveElementPurpose)
StepElement_CurveElementPurpose.SetApplicationDefinedElementPurpose = new_instancemethod(_StepElement.StepElement_CurveElementPurpose_SetApplicationDefinedElementPurpose, None, StepElement_CurveElementPurpose)
StepElement_CurveElementPurpose.SetEnumeratedCurveElementPurpose = new_instancemethod(_StepElement.StepElement_CurveElementPurpose_SetEnumeratedCurveElementPurpose, None, StepElement_CurveElementPurpose)
StepElement_CurveElementPurpose_swigregister = _StepElement.StepElement_CurveElementPurpose_swigregister
StepElement_CurveElementPurpose_swigregister(StepElement_CurveElementPurpose)

class StepElement_CurveElementPurposeMember(OCC.Core.StepData.StepData_SelectNamed):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_CurveElementPurposeMember_swiginit(self, _StepElement.new_StepElement_CurveElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_CurveElementPurposeMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_CurveElementPurposeMember
StepElement_CurveElementPurposeMember_swigregister = _StepElement.StepElement_CurveElementPurposeMember_swigregister
StepElement_CurveElementPurposeMember_swigregister(StepElement_CurveElementPurposeMember)

class StepElement_CurveElementSectionDefinition(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_CurveElementSectionDefinition_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aSectionAngle:
        	:type aSectionAngle: float
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDefinition_Init(self, *args)


    def SectionAngle(self, *args) -> "Standard_Real":
        """
        * Returns field SectionAngle
        	:rtype: float
        """
        return _StepElement.StepElement_CurveElementSectionDefinition_SectionAngle(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDefinition_SetDescription(self, *args)


    def SetSectionAngle(self, *args) -> "void":
        """
        * Set field SectionAngle
        	:param SectionAngle:
        	:type SectionAngle: float
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDefinition_SetSectionAngle(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_CurveElementSectionDefinition_swiginit(self, _StepElement.new_StepElement_CurveElementSectionDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_CurveElementSectionDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_CurveElementSectionDefinition
StepElement_CurveElementSectionDefinition.Description = new_instancemethod(_StepElement.StepElement_CurveElementSectionDefinition_Description, None, StepElement_CurveElementSectionDefinition)
StepElement_CurveElementSectionDefinition.Init = new_instancemethod(_StepElement.StepElement_CurveElementSectionDefinition_Init, None, StepElement_CurveElementSectionDefinition)
StepElement_CurveElementSectionDefinition.SectionAngle = new_instancemethod(_StepElement.StepElement_CurveElementSectionDefinition_SectionAngle, None, StepElement_CurveElementSectionDefinition)
StepElement_CurveElementSectionDefinition.SetDescription = new_instancemethod(_StepElement.StepElement_CurveElementSectionDefinition_SetDescription, None, StepElement_CurveElementSectionDefinition)
StepElement_CurveElementSectionDefinition.SetSectionAngle = new_instancemethod(_StepElement.StepElement_CurveElementSectionDefinition_SetSectionAngle, None, StepElement_CurveElementSectionDefinition)
StepElement_CurveElementSectionDefinition_swigregister = _StepElement.StepElement_CurveElementSectionDefinition_swigregister
StepElement_CurveElementSectionDefinition_swigregister(StepElement_CurveElementSectionDefinition)

class StepElement_ElementAspect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CurveEdge(self, *args) -> "StepElement_CurveEdge":
        """
        * Returns Value as CurveEdge (or Null if another type)
        	:rtype: StepElement_CurveEdge
        """
        return _StepElement.StepElement_ElementAspect_CurveEdge(self, *args)


    def ElementVolume(self, *args) -> "StepElement_ElementVolume":
        """
        * Returns Value as ElementVolume (or Null if another type)
        	:rtype: StepElement_ElementVolume
        """
        return _StepElement.StepElement_ElementAspect_ElementVolume(self, *args)


    def SetCurveEdge(self, *args) -> "void":
        """
        * Set Value for CurveEdge
        	:param aVal:
        	:type aVal: StepElement_CurveEdge
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetCurveEdge(self, *args)


    def SetElementVolume(self, *args) -> "void":
        """
        * Set Value for ElementVolume
        	:param aVal:
        	:type aVal: StepElement_ElementVolume
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetElementVolume(self, *args)


    def SetSurface2dEdge(self, *args) -> "void":
        """
        * Set Value for Surface2dEdge
        	:param aVal:
        	:type aVal: int
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetSurface2dEdge(self, *args)


    def SetSurface2dFace(self, *args) -> "void":
        """
        * Set Value for Surface2dFace
        	:param aVal:
        	:type aVal: int
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetSurface2dFace(self, *args)


    def SetSurface3dEdge(self, *args) -> "void":
        """
        * Set Value for Surface3dEdge
        	:param aVal:
        	:type aVal: int
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetSurface3dEdge(self, *args)


    def SetSurface3dFace(self, *args) -> "void":
        """
        * Set Value for Surface3dFace
        	:param aVal:
        	:type aVal: int
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetSurface3dFace(self, *args)


    def SetVolume2dEdge(self, *args) -> "void":
        """
        * Set Value for Volume2dEdge
        	:param aVal:
        	:type aVal: int
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetVolume2dEdge(self, *args)


    def SetVolume2dFace(self, *args) -> "void":
        """
        * Set Value for Volume2dFace
        	:param aVal:
        	:type aVal: int
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetVolume2dFace(self, *args)


    def SetVolume3dEdge(self, *args) -> "void":
        """
        * Set Value for Volume3dEdge
        	:param aVal:
        	:type aVal: int
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetVolume3dEdge(self, *args)


    def SetVolume3dFace(self, *args) -> "void":
        """
        * Set Value for Volume3dFace
        	:param aVal:
        	:type aVal: int
        	:rtype: None
        """
        return _StepElement.StepElement_ElementAspect_SetVolume3dFace(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_ElementAspect_swiginit(self, _StepElement.new_StepElement_ElementAspect(*args))

    def Surface2dEdge(self, *args) -> "Standard_Integer":
        """
        * Returns Value as Surface2dEdge (or Null if another type)
        	:rtype: int
        """
        return _StepElement.StepElement_ElementAspect_Surface2dEdge(self, *args)


    def Surface2dFace(self, *args) -> "Standard_Integer":
        """
        * Returns Value as Surface2dFace (or Null if another type)
        	:rtype: int
        """
        return _StepElement.StepElement_ElementAspect_Surface2dFace(self, *args)


    def Surface3dEdge(self, *args) -> "Standard_Integer":
        """
        * Returns Value as Surface3dEdge (or Null if another type)
        	:rtype: int
        """
        return _StepElement.StepElement_ElementAspect_Surface3dEdge(self, *args)


    def Surface3dFace(self, *args) -> "Standard_Integer":
        """
        * Returns Value as Surface3dFace (or Null if another type)
        	:rtype: int
        """
        return _StepElement.StepElement_ElementAspect_Surface3dFace(self, *args)


    def Volume2dEdge(self, *args) -> "Standard_Integer":
        """
        * Returns Value as Volume2dEdge (or Null if another type)
        	:rtype: int
        """
        return _StepElement.StepElement_ElementAspect_Volume2dEdge(self, *args)


    def Volume2dFace(self, *args) -> "Standard_Integer":
        """
        * Returns Value as Volume2dFace (or Null if another type)
        	:rtype: int
        """
        return _StepElement.StepElement_ElementAspect_Volume2dFace(self, *args)


    def Volume3dEdge(self, *args) -> "Standard_Integer":
        """
        * Returns Value as Volume3dEdge (or Null if another type)
        	:rtype: int
        """
        return _StepElement.StepElement_ElementAspect_Volume3dEdge(self, *args)


    def Volume3dFace(self, *args) -> "Standard_Integer":
        """
        * Returns Value as Volume3dFace (or Null if another type)
        	:rtype: int
        """
        return _StepElement.StepElement_ElementAspect_Volume3dFace(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_ElementAspect
StepElement_ElementAspect.CurveEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_CurveEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.ElementVolume = new_instancemethod(_StepElement.StepElement_ElementAspect_ElementVolume, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetCurveEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_SetCurveEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetElementVolume = new_instancemethod(_StepElement.StepElement_ElementAspect_SetElementVolume, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetSurface2dEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_SetSurface2dEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetSurface2dFace = new_instancemethod(_StepElement.StepElement_ElementAspect_SetSurface2dFace, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetSurface3dEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_SetSurface3dEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetSurface3dFace = new_instancemethod(_StepElement.StepElement_ElementAspect_SetSurface3dFace, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetVolume2dEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_SetVolume2dEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetVolume2dFace = new_instancemethod(_StepElement.StepElement_ElementAspect_SetVolume2dFace, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetVolume3dEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_SetVolume3dEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.SetVolume3dFace = new_instancemethod(_StepElement.StepElement_ElementAspect_SetVolume3dFace, None, StepElement_ElementAspect)
StepElement_ElementAspect.Surface2dEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_Surface2dEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.Surface2dFace = new_instancemethod(_StepElement.StepElement_ElementAspect_Surface2dFace, None, StepElement_ElementAspect)
StepElement_ElementAspect.Surface3dEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_Surface3dEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.Surface3dFace = new_instancemethod(_StepElement.StepElement_ElementAspect_Surface3dFace, None, StepElement_ElementAspect)
StepElement_ElementAspect.Volume2dEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_Volume2dEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.Volume2dFace = new_instancemethod(_StepElement.StepElement_ElementAspect_Volume2dFace, None, StepElement_ElementAspect)
StepElement_ElementAspect.Volume3dEdge = new_instancemethod(_StepElement.StepElement_ElementAspect_Volume3dEdge, None, StepElement_ElementAspect)
StepElement_ElementAspect.Volume3dFace = new_instancemethod(_StepElement.StepElement_ElementAspect_Volume3dFace, None, StepElement_ElementAspect)
StepElement_ElementAspect_swigregister = _StepElement.StepElement_ElementAspect_swigregister
StepElement_ElementAspect_swigregister(StepElement_ElementAspect)

class StepElement_ElementAspectMember(OCC.Core.StepData.StepData_SelectNamed):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_ElementAspectMember_swiginit(self, _StepElement.new_StepElement_ElementAspectMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_ElementAspectMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_ElementAspectMember
StepElement_ElementAspectMember_swigregister = _StepElement.StepElement_ElementAspectMember_swigregister
StepElement_ElementAspectMember_swigregister(StepElement_ElementAspectMember)

class StepElement_ElementDescriptor(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_ElementDescriptor_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aTopologyOrder:
        	:type aTopologyOrder: StepElement_ElementOrder
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_ElementDescriptor_Init(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_ElementDescriptor_SetDescription(self, *args)


    def SetTopologyOrder(self, *args) -> "void":
        """
        * Set field TopologyOrder
        	:param TopologyOrder:
        	:type TopologyOrder: StepElement_ElementOrder
        	:rtype: None
        """
        return _StepElement.StepElement_ElementDescriptor_SetTopologyOrder(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_ElementDescriptor_swiginit(self, _StepElement.new_StepElement_ElementDescriptor(*args))

    def TopologyOrder(self, *args) -> "StepElement_ElementOrder":
        """
        * Returns field TopologyOrder
        	:rtype: StepElement_ElementOrder
        """
        return _StepElement.StepElement_ElementDescriptor_TopologyOrder(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepElement_ElementDescriptor_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_ElementDescriptor
StepElement_ElementDescriptor.Description = new_instancemethod(_StepElement.StepElement_ElementDescriptor_Description, None, StepElement_ElementDescriptor)
StepElement_ElementDescriptor.Init = new_instancemethod(_StepElement.StepElement_ElementDescriptor_Init, None, StepElement_ElementDescriptor)
StepElement_ElementDescriptor.SetDescription = new_instancemethod(_StepElement.StepElement_ElementDescriptor_SetDescription, None, StepElement_ElementDescriptor)
StepElement_ElementDescriptor.SetTopologyOrder = new_instancemethod(_StepElement.StepElement_ElementDescriptor_SetTopologyOrder, None, StepElement_ElementDescriptor)
StepElement_ElementDescriptor.TopologyOrder = new_instancemethod(_StepElement.StepElement_ElementDescriptor_TopologyOrder, None, StepElement_ElementDescriptor)
StepElement_ElementDescriptor_swigregister = _StepElement.StepElement_ElementDescriptor_swigregister
StepElement_ElementDescriptor_swigregister(StepElement_ElementDescriptor)

class StepElement_ElementMaterial(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_ElementMaterial_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aMaterialId:
        	:type aMaterialId: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aProperties:
        	:type aProperties: StepRepr_HArray1OfMaterialPropertyRepresentation
        	:rtype: None
        """
        return _StepElement.StepElement_ElementMaterial_Init(self, *args)


    def MaterialId(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field MaterialId
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_ElementMaterial_MaterialId(self, *args)


    def Properties(self, *args) -> "opencascade::handle< StepRepr_HArray1OfMaterialPropertyRepresentation >":
        """
        * Returns field Properties
        	:rtype: opencascade::handle<StepRepr_HArray1OfMaterialPropertyRepresentation>
        """
        return _StepElement.StepElement_ElementMaterial_Properties(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_ElementMaterial_SetDescription(self, *args)


    def SetMaterialId(self, *args) -> "void":
        """
        * Set field MaterialId
        	:param MaterialId:
        	:type MaterialId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_ElementMaterial_SetMaterialId(self, *args)


    def SetProperties(self, *args) -> "void":
        """
        * Set field Properties
        	:param Properties:
        	:type Properties: StepRepr_HArray1OfMaterialPropertyRepresentation
        	:rtype: None
        """
        return _StepElement.StepElement_ElementMaterial_SetProperties(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_ElementMaterial_swiginit(self, _StepElement.new_StepElement_ElementMaterial(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_ElementMaterial_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_ElementMaterial
StepElement_ElementMaterial.Description = new_instancemethod(_StepElement.StepElement_ElementMaterial_Description, None, StepElement_ElementMaterial)
StepElement_ElementMaterial.Init = new_instancemethod(_StepElement.StepElement_ElementMaterial_Init, None, StepElement_ElementMaterial)
StepElement_ElementMaterial.MaterialId = new_instancemethod(_StepElement.StepElement_ElementMaterial_MaterialId, None, StepElement_ElementMaterial)
StepElement_ElementMaterial.Properties = new_instancemethod(_StepElement.StepElement_ElementMaterial_Properties, None, StepElement_ElementMaterial)
StepElement_ElementMaterial.SetDescription = new_instancemethod(_StepElement.StepElement_ElementMaterial_SetDescription, None, StepElement_ElementMaterial)
StepElement_ElementMaterial.SetMaterialId = new_instancemethod(_StepElement.StepElement_ElementMaterial_SetMaterialId, None, StepElement_ElementMaterial)
StepElement_ElementMaterial.SetProperties = new_instancemethod(_StepElement.StepElement_ElementMaterial_SetProperties, None, StepElement_ElementMaterial)
StepElement_ElementMaterial_swigregister = _StepElement.StepElement_ElementMaterial_swigregister
StepElement_ElementMaterial_swigregister(StepElement_ElementMaterial)

class StepElement_MeasureOrUnspecifiedValue(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ContextDependentMeasure(self, *args) -> "Standard_Real":
        """
        * Returns Value as ContextDependentMeasure (or Null if another type)
        	:rtype: float
        """
        return _StepElement.StepElement_MeasureOrUnspecifiedValue_ContextDependentMeasure(self, *args)


    def SetContextDependentMeasure(self, *args) -> "void":
        """
        * Set Value for ContextDependentMeasure
        	:param aVal:
        	:type aVal: float
        	:rtype: None
        """
        return _StepElement.StepElement_MeasureOrUnspecifiedValue_SetContextDependentMeasure(self, *args)


    def SetUnspecifiedValue(self, *args) -> "void":
        """
        * Set Value for UnspecifiedValue
        	:param aVal:
        	:type aVal: StepElement_UnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_MeasureOrUnspecifiedValue_SetUnspecifiedValue(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_MeasureOrUnspecifiedValue_swiginit(self, _StepElement.new_StepElement_MeasureOrUnspecifiedValue(*args))

    def UnspecifiedValue(self, *args) -> "StepElement_UnspecifiedValue":
        """
        * Returns Value as UnspecifiedValue (or Null if another type)
        	:rtype: StepElement_UnspecifiedValue
        """
        return _StepElement.StepElement_MeasureOrUnspecifiedValue_UnspecifiedValue(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_MeasureOrUnspecifiedValue
StepElement_MeasureOrUnspecifiedValue.ContextDependentMeasure = new_instancemethod(_StepElement.StepElement_MeasureOrUnspecifiedValue_ContextDependentMeasure, None, StepElement_MeasureOrUnspecifiedValue)
StepElement_MeasureOrUnspecifiedValue.SetContextDependentMeasure = new_instancemethod(_StepElement.StepElement_MeasureOrUnspecifiedValue_SetContextDependentMeasure, None, StepElement_MeasureOrUnspecifiedValue)
StepElement_MeasureOrUnspecifiedValue.SetUnspecifiedValue = new_instancemethod(_StepElement.StepElement_MeasureOrUnspecifiedValue_SetUnspecifiedValue, None, StepElement_MeasureOrUnspecifiedValue)
StepElement_MeasureOrUnspecifiedValue.UnspecifiedValue = new_instancemethod(_StepElement.StepElement_MeasureOrUnspecifiedValue_UnspecifiedValue, None, StepElement_MeasureOrUnspecifiedValue)
StepElement_MeasureOrUnspecifiedValue_swigregister = _StepElement.StepElement_MeasureOrUnspecifiedValue_swigregister
StepElement_MeasureOrUnspecifiedValue_swigregister(StepElement_MeasureOrUnspecifiedValue)

class StepElement_MeasureOrUnspecifiedValueMember(OCC.Core.StepData.StepData_SelectNamed):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_MeasureOrUnspecifiedValueMember_swiginit(self, _StepElement.new_StepElement_MeasureOrUnspecifiedValueMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_MeasureOrUnspecifiedValueMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_MeasureOrUnspecifiedValueMember
StepElement_MeasureOrUnspecifiedValueMember_swigregister = _StepElement.StepElement_MeasureOrUnspecifiedValueMember_swigregister
StepElement_MeasureOrUnspecifiedValueMember_swigregister(StepElement_MeasureOrUnspecifiedValueMember)

class StepElement_SurfaceElementProperty(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_SurfaceElementProperty_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aPropertyId:
        	:type aPropertyId: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aSection:
        	:type aSection: StepElement_SurfaceSectionField
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceElementProperty_Init(self, *args)


    def PropertyId(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field PropertyId
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_SurfaceElementProperty_PropertyId(self, *args)


    def Section(self, *args) -> "opencascade::handle< StepElement_SurfaceSectionField >":
        """
        * Returns field Section
        	:rtype: opencascade::handle<StepElement_SurfaceSectionField>
        """
        return _StepElement.StepElement_SurfaceElementProperty_Section(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceElementProperty_SetDescription(self, *args)


    def SetPropertyId(self, *args) -> "void":
        """
        * Set field PropertyId
        	:param PropertyId:
        	:type PropertyId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceElementProperty_SetPropertyId(self, *args)


    def SetSection(self, *args) -> "void":
        """
        * Set field Section
        	:param Section:
        	:type Section: StepElement_SurfaceSectionField
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceElementProperty_SetSection(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_SurfaceElementProperty_swiginit(self, _StepElement.new_StepElement_SurfaceElementProperty(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_SurfaceElementProperty_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_SurfaceElementProperty
StepElement_SurfaceElementProperty.Description = new_instancemethod(_StepElement.StepElement_SurfaceElementProperty_Description, None, StepElement_SurfaceElementProperty)
StepElement_SurfaceElementProperty.Init = new_instancemethod(_StepElement.StepElement_SurfaceElementProperty_Init, None, StepElement_SurfaceElementProperty)
StepElement_SurfaceElementProperty.PropertyId = new_instancemethod(_StepElement.StepElement_SurfaceElementProperty_PropertyId, None, StepElement_SurfaceElementProperty)
StepElement_SurfaceElementProperty.Section = new_instancemethod(_StepElement.StepElement_SurfaceElementProperty_Section, None, StepElement_SurfaceElementProperty)
StepElement_SurfaceElementProperty.SetDescription = new_instancemethod(_StepElement.StepElement_SurfaceElementProperty_SetDescription, None, StepElement_SurfaceElementProperty)
StepElement_SurfaceElementProperty.SetPropertyId = new_instancemethod(_StepElement.StepElement_SurfaceElementProperty_SetPropertyId, None, StepElement_SurfaceElementProperty)
StepElement_SurfaceElementProperty.SetSection = new_instancemethod(_StepElement.StepElement_SurfaceElementProperty_SetSection, None, StepElement_SurfaceElementProperty)
StepElement_SurfaceElementProperty_swigregister = _StepElement.StepElement_SurfaceElementProperty_swigregister
StepElement_SurfaceElementProperty_swigregister(StepElement_SurfaceElementProperty)

class StepElement_SurfaceElementPurpose(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ApplicationDefinedElementPurpose(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns Value as ApplicationDefinedElementPurpose (or Null if another type)
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_SurfaceElementPurpose_ApplicationDefinedElementPurpose(self, *args)


    def EnumeratedSurfaceElementPurpose(self, *args) -> "StepElement_EnumeratedSurfaceElementPurpose":
        """
        * Returns Value as EnumeratedSurfaceElementPurpose (or Null if another type)
        	:rtype: StepElement_EnumeratedSurfaceElementPurpose
        """
        return _StepElement.StepElement_SurfaceElementPurpose_EnumeratedSurfaceElementPurpose(self, *args)


    def SetApplicationDefinedElementPurpose(self, *args) -> "void":
        """
        * Set Value for ApplicationDefinedElementPurpose
        	:param aVal:
        	:type aVal: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceElementPurpose_SetApplicationDefinedElementPurpose(self, *args)


    def SetEnumeratedSurfaceElementPurpose(self, *args) -> "void":
        """
        * Set Value for EnumeratedSurfaceElementPurpose
        	:param aVal:
        	:type aVal: StepElement_EnumeratedSurfaceElementPurpose
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceElementPurpose_SetEnumeratedSurfaceElementPurpose(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_SurfaceElementPurpose_swiginit(self, _StepElement.new_StepElement_SurfaceElementPurpose(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_SurfaceElementPurpose
StepElement_SurfaceElementPurpose.ApplicationDefinedElementPurpose = new_instancemethod(_StepElement.StepElement_SurfaceElementPurpose_ApplicationDefinedElementPurpose, None, StepElement_SurfaceElementPurpose)
StepElement_SurfaceElementPurpose.EnumeratedSurfaceElementPurpose = new_instancemethod(_StepElement.StepElement_SurfaceElementPurpose_EnumeratedSurfaceElementPurpose, None, StepElement_SurfaceElementPurpose)
StepElement_SurfaceElementPurpose.SetApplicationDefinedElementPurpose = new_instancemethod(_StepElement.StepElement_SurfaceElementPurpose_SetApplicationDefinedElementPurpose, None, StepElement_SurfaceElementPurpose)
StepElement_SurfaceElementPurpose.SetEnumeratedSurfaceElementPurpose = new_instancemethod(_StepElement.StepElement_SurfaceElementPurpose_SetEnumeratedSurfaceElementPurpose, None, StepElement_SurfaceElementPurpose)
StepElement_SurfaceElementPurpose_swigregister = _StepElement.StepElement_SurfaceElementPurpose_swigregister
StepElement_SurfaceElementPurpose_swigregister(StepElement_SurfaceElementPurpose)

class StepElement_SurfaceElementPurposeMember(OCC.Core.StepData.StepData_SelectNamed):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_SurfaceElementPurposeMember_swiginit(self, _StepElement.new_StepElement_SurfaceElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_SurfaceElementPurposeMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_SurfaceElementPurposeMember
StepElement_SurfaceElementPurposeMember_swigregister = _StepElement.StepElement_SurfaceElementPurposeMember_swigregister
StepElement_SurfaceElementPurposeMember_swigregister(StepElement_SurfaceElementPurposeMember)

class StepElement_SurfaceSection(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aOffset:
        	:type aOffset: StepElement_MeasureOrUnspecifiedValue
        	:param aNonStructuralMass:
        	:type aNonStructuralMass: StepElement_MeasureOrUnspecifiedValue
        	:param aNonStructuralMassOffset:
        	:type aNonStructuralMassOffset: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceSection_Init(self, *args)


    def NonStructuralMass(self, *args) -> "StepElement_MeasureOrUnspecifiedValue":
        """
        * Returns field NonStructuralMass
        	:rtype: StepElement_MeasureOrUnspecifiedValue
        """
        return _StepElement.StepElement_SurfaceSection_NonStructuralMass(self, *args)


    def NonStructuralMassOffset(self, *args) -> "StepElement_MeasureOrUnspecifiedValue":
        """
        * Returns field NonStructuralMassOffset
        	:rtype: StepElement_MeasureOrUnspecifiedValue
        """
        return _StepElement.StepElement_SurfaceSection_NonStructuralMassOffset(self, *args)


    def Offset(self, *args) -> "StepElement_MeasureOrUnspecifiedValue":
        """
        * Returns field Offset
        	:rtype: StepElement_MeasureOrUnspecifiedValue
        """
        return _StepElement.StepElement_SurfaceSection_Offset(self, *args)


    def SetNonStructuralMass(self, *args) -> "void":
        """
        * Set field NonStructuralMass
        	:param NonStructuralMass:
        	:type NonStructuralMass: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceSection_SetNonStructuralMass(self, *args)


    def SetNonStructuralMassOffset(self, *args) -> "void":
        """
        * Set field NonStructuralMassOffset
        	:param NonStructuralMassOffset:
        	:type NonStructuralMassOffset: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceSection_SetNonStructuralMassOffset(self, *args)


    def SetOffset(self, *args) -> "void":
        """
        * Set field Offset
        	:param Offset:
        	:type Offset: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceSection_SetOffset(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_SurfaceSection_swiginit(self, _StepElement.new_StepElement_SurfaceSection(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_SurfaceSection_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_SurfaceSection
StepElement_SurfaceSection.Init = new_instancemethod(_StepElement.StepElement_SurfaceSection_Init, None, StepElement_SurfaceSection)
StepElement_SurfaceSection.NonStructuralMass = new_instancemethod(_StepElement.StepElement_SurfaceSection_NonStructuralMass, None, StepElement_SurfaceSection)
StepElement_SurfaceSection.NonStructuralMassOffset = new_instancemethod(_StepElement.StepElement_SurfaceSection_NonStructuralMassOffset, None, StepElement_SurfaceSection)
StepElement_SurfaceSection.Offset = new_instancemethod(_StepElement.StepElement_SurfaceSection_Offset, None, StepElement_SurfaceSection)
StepElement_SurfaceSection.SetNonStructuralMass = new_instancemethod(_StepElement.StepElement_SurfaceSection_SetNonStructuralMass, None, StepElement_SurfaceSection)
StepElement_SurfaceSection.SetNonStructuralMassOffset = new_instancemethod(_StepElement.StepElement_SurfaceSection_SetNonStructuralMassOffset, None, StepElement_SurfaceSection)
StepElement_SurfaceSection.SetOffset = new_instancemethod(_StepElement.StepElement_SurfaceSection_SetOffset, None, StepElement_SurfaceSection)
StepElement_SurfaceSection_swigregister = _StepElement.StepElement_SurfaceSection_swigregister
StepElement_SurfaceSection_swigregister(StepElement_SurfaceSection)

class StepElement_SurfaceSectionField(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_SurfaceSectionField_swiginit(self, _StepElement.new_StepElement_SurfaceSectionField(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_SurfaceSectionField_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_SurfaceSectionField
StepElement_SurfaceSectionField_swigregister = _StepElement.StepElement_SurfaceSectionField_swigregister
StepElement_SurfaceSectionField_swigregister(StepElement_SurfaceSectionField)

class StepElement_VolumeElementPurpose(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ApplicationDefinedElementPurpose(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns Value as ApplicationDefinedElementPurpose (or Null if another type)
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepElement.StepElement_VolumeElementPurpose_ApplicationDefinedElementPurpose(self, *args)


    def EnumeratedVolumeElementPurpose(self, *args) -> "StepElement_EnumeratedVolumeElementPurpose":
        """
        * Returns Value as EnumeratedVolumeElementPurpose (or Null if another type)
        	:rtype: StepElement_EnumeratedVolumeElementPurpose
        """
        return _StepElement.StepElement_VolumeElementPurpose_EnumeratedVolumeElementPurpose(self, *args)


    def SetApplicationDefinedElementPurpose(self, *args) -> "void":
        """
        * Set Value for ApplicationDefinedElementPurpose
        	:param aVal:
        	:type aVal: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepElement.StepElement_VolumeElementPurpose_SetApplicationDefinedElementPurpose(self, *args)


    def SetEnumeratedVolumeElementPurpose(self, *args) -> "void":
        """
        * Set Value for EnumeratedVolumeElementPurpose
        	:param aVal:
        	:type aVal: StepElement_EnumeratedVolumeElementPurpose
        	:rtype: None
        """
        return _StepElement.StepElement_VolumeElementPurpose_SetEnumeratedVolumeElementPurpose(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_VolumeElementPurpose_swiginit(self, _StepElement.new_StepElement_VolumeElementPurpose(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_VolumeElementPurpose
StepElement_VolumeElementPurpose.ApplicationDefinedElementPurpose = new_instancemethod(_StepElement.StepElement_VolumeElementPurpose_ApplicationDefinedElementPurpose, None, StepElement_VolumeElementPurpose)
StepElement_VolumeElementPurpose.EnumeratedVolumeElementPurpose = new_instancemethod(_StepElement.StepElement_VolumeElementPurpose_EnumeratedVolumeElementPurpose, None, StepElement_VolumeElementPurpose)
StepElement_VolumeElementPurpose.SetApplicationDefinedElementPurpose = new_instancemethod(_StepElement.StepElement_VolumeElementPurpose_SetApplicationDefinedElementPurpose, None, StepElement_VolumeElementPurpose)
StepElement_VolumeElementPurpose.SetEnumeratedVolumeElementPurpose = new_instancemethod(_StepElement.StepElement_VolumeElementPurpose_SetEnumeratedVolumeElementPurpose, None, StepElement_VolumeElementPurpose)
StepElement_VolumeElementPurpose_swigregister = _StepElement.StepElement_VolumeElementPurpose_swigregister
StepElement_VolumeElementPurpose_swigregister(StepElement_VolumeElementPurpose)

class StepElement_VolumeElementPurposeMember(OCC.Core.StepData.StepData_SelectNamed):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_VolumeElementPurposeMember_swiginit(self, _StepElement.new_StepElement_VolumeElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_VolumeElementPurposeMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_VolumeElementPurposeMember
StepElement_VolumeElementPurposeMember_swigregister = _StepElement.StepElement_VolumeElementPurposeMember_swigregister
StepElement_VolumeElementPurposeMember_swigregister(StepElement_VolumeElementPurposeMember)

class StepElement_Curve3dElementDescriptor(StepElement_ElementDescriptor):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aElementDescriptor_TopologyOrder:
        	:type aElementDescriptor_TopologyOrder: StepElement_ElementOrder
        	:param aElementDescriptor_Description:
        	:type aElementDescriptor_Description: TCollection_HAsciiString
        	:param aPurpose:
        	:type aPurpose: StepElement_HArray1OfHSequenceOfCurveElementPurposeMember
        	:rtype: None
        """
        return _StepElement.StepElement_Curve3dElementDescriptor_Init(self, *args)


    def Purpose(self, *args) -> "opencascade::handle< StepElement_HArray1OfHSequenceOfCurveElementPurposeMember >":
        """
        * Returns field Purpose
        	:rtype: opencascade::handle<StepElement_HArray1OfHSequenceOfCurveElementPurposeMember>
        """
        return _StepElement.StepElement_Curve3dElementDescriptor_Purpose(self, *args)


    def SetPurpose(self, *args) -> "void":
        """
        * Set field Purpose
        	:param Purpose:
        	:type Purpose: StepElement_HArray1OfHSequenceOfCurveElementPurposeMember
        	:rtype: None
        """
        return _StepElement.StepElement_Curve3dElementDescriptor_SetPurpose(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_Curve3dElementDescriptor_swiginit(self, _StepElement.new_StepElement_Curve3dElementDescriptor(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_Curve3dElementDescriptor_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_Curve3dElementDescriptor
StepElement_Curve3dElementDescriptor.Init = new_instancemethod(_StepElement.StepElement_Curve3dElementDescriptor_Init, None, StepElement_Curve3dElementDescriptor)
StepElement_Curve3dElementDescriptor.Purpose = new_instancemethod(_StepElement.StepElement_Curve3dElementDescriptor_Purpose, None, StepElement_Curve3dElementDescriptor)
StepElement_Curve3dElementDescriptor.SetPurpose = new_instancemethod(_StepElement.StepElement_Curve3dElementDescriptor_SetPurpose, None, StepElement_Curve3dElementDescriptor)
StepElement_Curve3dElementDescriptor_swigregister = _StepElement.StepElement_Curve3dElementDescriptor_swigregister
StepElement_Curve3dElementDescriptor_swigregister(StepElement_Curve3dElementDescriptor)

class StepElement_CurveElementSectionDerivedDefinitions(StepElement_CurveElementSectionDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CrossSectionalArea(self, *args) -> "Standard_Real":
        """
        * Returns field CrossSectionalArea
        	:rtype: float
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_CrossSectionalArea(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aCurveElementSectionDefinition_Description:
        	:type aCurveElementSectionDefinition_Description: TCollection_HAsciiString
        	:param aCurveElementSectionDefinition_SectionAngle:
        	:type aCurveElementSectionDefinition_SectionAngle: float
        	:param aCrossSectionalArea:
        	:type aCrossSectionalArea: float
        	:param aShearArea:
        	:type aShearArea: StepElement_HArray1OfMeasureOrUnspecifiedValue
        	:param aSecondMomentOfArea:
        	:type aSecondMomentOfArea: TColStd_HArray1OfReal
        	:param aTorsionalConstant:
        	:type aTorsionalConstant: float
        	:param aWarpingConstant:
        	:type aWarpingConstant: StepElement_MeasureOrUnspecifiedValue
        	:param aLocationOfCentroid:
        	:type aLocationOfCentroid: StepElement_HArray1OfMeasureOrUnspecifiedValue
        	:param aLocationOfShearCentre:
        	:type aLocationOfShearCentre: StepElement_HArray1OfMeasureOrUnspecifiedValue
        	:param aLocationOfNonStructuralMass:
        	:type aLocationOfNonStructuralMass: StepElement_HArray1OfMeasureOrUnspecifiedValue
        	:param aNonStructuralMass:
        	:type aNonStructuralMass: StepElement_MeasureOrUnspecifiedValue
        	:param aPolarMoment:
        	:type aPolarMoment: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_Init(self, *args)


    def LocationOfCentroid(self, *args) -> "opencascade::handle< StepElement_HArray1OfMeasureOrUnspecifiedValue >":
        """
        * Returns field LocationOfCentroid
        	:rtype: opencascade::handle<StepElement_HArray1OfMeasureOrUnspecifiedValue>
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_LocationOfCentroid(self, *args)


    def LocationOfNonStructuralMass(self, *args) -> "opencascade::handle< StepElement_HArray1OfMeasureOrUnspecifiedValue >":
        """
        * Returns field LocationOfNonStructuralMass
        	:rtype: opencascade::handle<StepElement_HArray1OfMeasureOrUnspecifiedValue>
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_LocationOfNonStructuralMass(self, *args)


    def LocationOfShearCentre(self, *args) -> "opencascade::handle< StepElement_HArray1OfMeasureOrUnspecifiedValue >":
        """
        * Returns field LocationOfShearCentre
        	:rtype: opencascade::handle<StepElement_HArray1OfMeasureOrUnspecifiedValue>
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_LocationOfShearCentre(self, *args)


    def NonStructuralMass(self, *args) -> "StepElement_MeasureOrUnspecifiedValue":
        """
        * Returns field NonStructuralMass
        	:rtype: StepElement_MeasureOrUnspecifiedValue
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_NonStructuralMass(self, *args)


    def PolarMoment(self, *args) -> "StepElement_MeasureOrUnspecifiedValue":
        """
        * Returns field PolarMoment
        	:rtype: StepElement_MeasureOrUnspecifiedValue
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_PolarMoment(self, *args)


    def SecondMomentOfArea(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns field SecondMomentOfArea
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SecondMomentOfArea(self, *args)


    def SetCrossSectionalArea(self, *args) -> "void":
        """
        * Set field CrossSectionalArea
        	:param CrossSectionalArea:
        	:type CrossSectionalArea: float
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetCrossSectionalArea(self, *args)


    def SetLocationOfCentroid(self, *args) -> "void":
        """
        * Set field LocationOfCentroid
        	:param LocationOfCentroid:
        	:type LocationOfCentroid: StepElement_HArray1OfMeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetLocationOfCentroid(self, *args)


    def SetLocationOfNonStructuralMass(self, *args) -> "void":
        """
        * Set field LocationOfNonStructuralMass
        	:param LocationOfNonStructuralMass:
        	:type LocationOfNonStructuralMass: StepElement_HArray1OfMeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetLocationOfNonStructuralMass(self, *args)


    def SetLocationOfShearCentre(self, *args) -> "void":
        """
        * Set field LocationOfShearCentre
        	:param LocationOfShearCentre:
        	:type LocationOfShearCentre: StepElement_HArray1OfMeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetLocationOfShearCentre(self, *args)


    def SetNonStructuralMass(self, *args) -> "void":
        """
        * Set field NonStructuralMass
        	:param NonStructuralMass:
        	:type NonStructuralMass: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetNonStructuralMass(self, *args)


    def SetPolarMoment(self, *args) -> "void":
        """
        * Set field PolarMoment
        	:param PolarMoment:
        	:type PolarMoment: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetPolarMoment(self, *args)


    def SetSecondMomentOfArea(self, *args) -> "void":
        """
        * Set field SecondMomentOfArea
        	:param SecondMomentOfArea:
        	:type SecondMomentOfArea: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetSecondMomentOfArea(self, *args)


    def SetShearArea(self, *args) -> "void":
        """
        * Set field ShearArea
        	:param ShearArea:
        	:type ShearArea: StepElement_HArray1OfMeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetShearArea(self, *args)


    def SetTorsionalConstant(self, *args) -> "void":
        """
        * Set field TorsionalConstant
        	:param TorsionalConstant:
        	:type TorsionalConstant: float
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetTorsionalConstant(self, *args)


    def SetWarpingConstant(self, *args) -> "void":
        """
        * Set field WarpingConstant
        	:param WarpingConstant:
        	:type WarpingConstant: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetWarpingConstant(self, *args)


    def ShearArea(self, *args) -> "opencascade::handle< StepElement_HArray1OfMeasureOrUnspecifiedValue >":
        """
        * Returns field ShearArea
        	:rtype: opencascade::handle<StepElement_HArray1OfMeasureOrUnspecifiedValue>
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_ShearArea(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_CurveElementSectionDerivedDefinitions_swiginit(self, _StepElement.new_StepElement_CurveElementSectionDerivedDefinitions(*args))

    def TorsionalConstant(self, *args) -> "Standard_Real":
        """
        * Returns field TorsionalConstant
        	:rtype: float
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_TorsionalConstant(self, *args)


    def WarpingConstant(self, *args) -> "StepElement_MeasureOrUnspecifiedValue":
        """
        * Returns field WarpingConstant
        	:rtype: StepElement_MeasureOrUnspecifiedValue
        """
        return _StepElement.StepElement_CurveElementSectionDerivedDefinitions_WarpingConstant(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepElement_CurveElementSectionDerivedDefinitions_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_CurveElementSectionDerivedDefinitions
StepElement_CurveElementSectionDerivedDefinitions.CrossSectionalArea = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_CrossSectionalArea, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.Init = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_Init, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.LocationOfCentroid = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_LocationOfCentroid, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.LocationOfNonStructuralMass = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_LocationOfNonStructuralMass, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.LocationOfShearCentre = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_LocationOfShearCentre, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.NonStructuralMass = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_NonStructuralMass, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.PolarMoment = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_PolarMoment, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SecondMomentOfArea = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SecondMomentOfArea, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetCrossSectionalArea = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetCrossSectionalArea, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetLocationOfCentroid = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetLocationOfCentroid, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetLocationOfNonStructuralMass = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetLocationOfNonStructuralMass, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetLocationOfShearCentre = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetLocationOfShearCentre, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetNonStructuralMass = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetNonStructuralMass, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetPolarMoment = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetPolarMoment, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetSecondMomentOfArea = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetSecondMomentOfArea, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetShearArea = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetShearArea, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetTorsionalConstant = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetTorsionalConstant, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.SetWarpingConstant = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_SetWarpingConstant, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.ShearArea = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_ShearArea, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.TorsionalConstant = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_TorsionalConstant, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions.WarpingConstant = new_instancemethod(_StepElement.StepElement_CurveElementSectionDerivedDefinitions_WarpingConstant, None, StepElement_CurveElementSectionDerivedDefinitions)
StepElement_CurveElementSectionDerivedDefinitions_swigregister = _StepElement.StepElement_CurveElementSectionDerivedDefinitions_swigregister
StepElement_CurveElementSectionDerivedDefinitions_swigregister(StepElement_CurveElementSectionDerivedDefinitions)

class StepElement_Surface3dElementDescriptor(StepElement_ElementDescriptor):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aElementDescriptor_TopologyOrder:
        	:type aElementDescriptor_TopologyOrder: StepElement_ElementOrder
        	:param aElementDescriptor_Description:
        	:type aElementDescriptor_Description: TCollection_HAsciiString
        	:param aPurpose:
        	:type aPurpose: StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember
        	:param aShape:
        	:type aShape: StepElement_Element2dShape
        	:rtype: None
        """
        return _StepElement.StepElement_Surface3dElementDescriptor_Init(self, *args)


    def Purpose(self, *args) -> "opencascade::handle< StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember >":
        """
        * Returns field Purpose
        	:rtype: opencascade::handle<StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember>
        """
        return _StepElement.StepElement_Surface3dElementDescriptor_Purpose(self, *args)


    def SetPurpose(self, *args) -> "void":
        """
        * Set field Purpose
        	:param Purpose:
        	:type Purpose: StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember
        	:rtype: None
        """
        return _StepElement.StepElement_Surface3dElementDescriptor_SetPurpose(self, *args)


    def SetShape(self, *args) -> "void":
        """
        * Set field Shape
        	:param Shape:
        	:type Shape: StepElement_Element2dShape
        	:rtype: None
        """
        return _StepElement.StepElement_Surface3dElementDescriptor_SetShape(self, *args)


    def Shape(self, *args) -> "StepElement_Element2dShape":
        """
        * Returns field Shape
        	:rtype: StepElement_Element2dShape
        """
        return _StepElement.StepElement_Surface3dElementDescriptor_Shape(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_Surface3dElementDescriptor_swiginit(self, _StepElement.new_StepElement_Surface3dElementDescriptor(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_Surface3dElementDescriptor_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_Surface3dElementDescriptor
StepElement_Surface3dElementDescriptor.Init = new_instancemethod(_StepElement.StepElement_Surface3dElementDescriptor_Init, None, StepElement_Surface3dElementDescriptor)
StepElement_Surface3dElementDescriptor.Purpose = new_instancemethod(_StepElement.StepElement_Surface3dElementDescriptor_Purpose, None, StepElement_Surface3dElementDescriptor)
StepElement_Surface3dElementDescriptor.SetPurpose = new_instancemethod(_StepElement.StepElement_Surface3dElementDescriptor_SetPurpose, None, StepElement_Surface3dElementDescriptor)
StepElement_Surface3dElementDescriptor.SetShape = new_instancemethod(_StepElement.StepElement_Surface3dElementDescriptor_SetShape, None, StepElement_Surface3dElementDescriptor)
StepElement_Surface3dElementDescriptor.Shape = new_instancemethod(_StepElement.StepElement_Surface3dElementDescriptor_Shape, None, StepElement_Surface3dElementDescriptor)
StepElement_Surface3dElementDescriptor_swigregister = _StepElement.StepElement_Surface3dElementDescriptor_swigregister
StepElement_Surface3dElementDescriptor_swigregister(StepElement_Surface3dElementDescriptor)

class StepElement_SurfaceSectionFieldConstant(StepElement_SurfaceSectionField):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Definition(self, *args) -> "opencascade::handle< StepElement_SurfaceSection >":
        """
        * Returns field Definition
        	:rtype: opencascade::handle<StepElement_SurfaceSection>
        """
        return _StepElement.StepElement_SurfaceSectionFieldConstant_Definition(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aDefinition:
        	:type aDefinition: StepElement_SurfaceSection
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceSectionFieldConstant_Init(self, *args)


    def SetDefinition(self, *args) -> "void":
        """
        * Set field Definition
        	:param Definition:
        	:type Definition: StepElement_SurfaceSection
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceSectionFieldConstant_SetDefinition(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_SurfaceSectionFieldConstant_swiginit(self, _StepElement.new_StepElement_SurfaceSectionFieldConstant(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_SurfaceSectionFieldConstant_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_SurfaceSectionFieldConstant
StepElement_SurfaceSectionFieldConstant.Definition = new_instancemethod(_StepElement.StepElement_SurfaceSectionFieldConstant_Definition, None, StepElement_SurfaceSectionFieldConstant)
StepElement_SurfaceSectionFieldConstant.Init = new_instancemethod(_StepElement.StepElement_SurfaceSectionFieldConstant_Init, None, StepElement_SurfaceSectionFieldConstant)
StepElement_SurfaceSectionFieldConstant.SetDefinition = new_instancemethod(_StepElement.StepElement_SurfaceSectionFieldConstant_SetDefinition, None, StepElement_SurfaceSectionFieldConstant)
StepElement_SurfaceSectionFieldConstant_swigregister = _StepElement.StepElement_SurfaceSectionFieldConstant_swigregister
StepElement_SurfaceSectionFieldConstant_swigregister(StepElement_SurfaceSectionFieldConstant)

class StepElement_SurfaceSectionFieldVarying(StepElement_SurfaceSectionField):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AdditionalNodeValues(self, *args) -> "Standard_Boolean":
        """
        * Returns field AdditionalNodeValues
        	:rtype: bool
        """
        return _StepElement.StepElement_SurfaceSectionFieldVarying_AdditionalNodeValues(self, *args)


    def Definitions(self, *args) -> "opencascade::handle< StepElement_HArray1OfSurfaceSection >":
        """
        * Returns field Definitions
        	:rtype: opencascade::handle<StepElement_HArray1OfSurfaceSection>
        """
        return _StepElement.StepElement_SurfaceSectionFieldVarying_Definitions(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aDefinitions:
        	:type aDefinitions: StepElement_HArray1OfSurfaceSection
        	:param aAdditionalNodeValues:
        	:type aAdditionalNodeValues: bool
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceSectionFieldVarying_Init(self, *args)


    def SetAdditionalNodeValues(self, *args) -> "void":
        """
        * Set field AdditionalNodeValues
        	:param AdditionalNodeValues:
        	:type AdditionalNodeValues: bool
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceSectionFieldVarying_SetAdditionalNodeValues(self, *args)


    def SetDefinitions(self, *args) -> "void":
        """
        * Set field Definitions
        	:param Definitions:
        	:type Definitions: StepElement_HArray1OfSurfaceSection
        	:rtype: None
        """
        return _StepElement.StepElement_SurfaceSectionFieldVarying_SetDefinitions(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_SurfaceSectionFieldVarying_swiginit(self, _StepElement.new_StepElement_SurfaceSectionFieldVarying(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_SurfaceSectionFieldVarying_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_SurfaceSectionFieldVarying
StepElement_SurfaceSectionFieldVarying.AdditionalNodeValues = new_instancemethod(_StepElement.StepElement_SurfaceSectionFieldVarying_AdditionalNodeValues, None, StepElement_SurfaceSectionFieldVarying)
StepElement_SurfaceSectionFieldVarying.Definitions = new_instancemethod(_StepElement.StepElement_SurfaceSectionFieldVarying_Definitions, None, StepElement_SurfaceSectionFieldVarying)
StepElement_SurfaceSectionFieldVarying.Init = new_instancemethod(_StepElement.StepElement_SurfaceSectionFieldVarying_Init, None, StepElement_SurfaceSectionFieldVarying)
StepElement_SurfaceSectionFieldVarying.SetAdditionalNodeValues = new_instancemethod(_StepElement.StepElement_SurfaceSectionFieldVarying_SetAdditionalNodeValues, None, StepElement_SurfaceSectionFieldVarying)
StepElement_SurfaceSectionFieldVarying.SetDefinitions = new_instancemethod(_StepElement.StepElement_SurfaceSectionFieldVarying_SetDefinitions, None, StepElement_SurfaceSectionFieldVarying)
StepElement_SurfaceSectionFieldVarying_swigregister = _StepElement.StepElement_SurfaceSectionFieldVarying_swigregister
StepElement_SurfaceSectionFieldVarying_swigregister(StepElement_SurfaceSectionFieldVarying)

class StepElement_UniformSurfaceSection(StepElement_SurfaceSection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BendingThickness(self, *args) -> "StepElement_MeasureOrUnspecifiedValue":
        """
        * Returns field BendingThickness
        	:rtype: StepElement_MeasureOrUnspecifiedValue
        """
        return _StepElement.StepElement_UniformSurfaceSection_BendingThickness(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aSurfaceSection_Offset:
        	:type aSurfaceSection_Offset: StepElement_MeasureOrUnspecifiedValue
        	:param aSurfaceSection_NonStructuralMass:
        	:type aSurfaceSection_NonStructuralMass: StepElement_MeasureOrUnspecifiedValue
        	:param aSurfaceSection_NonStructuralMassOffset:
        	:type aSurfaceSection_NonStructuralMassOffset: StepElement_MeasureOrUnspecifiedValue
        	:param aThickness:
        	:type aThickness: float
        	:param aBendingThickness:
        	:type aBendingThickness: StepElement_MeasureOrUnspecifiedValue
        	:param aShearThickness:
        	:type aShearThickness: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_UniformSurfaceSection_Init(self, *args)


    def SetBendingThickness(self, *args) -> "void":
        """
        * Set field BendingThickness
        	:param BendingThickness:
        	:type BendingThickness: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_UniformSurfaceSection_SetBendingThickness(self, *args)


    def SetShearThickness(self, *args) -> "void":
        """
        * Set field ShearThickness
        	:param ShearThickness:
        	:type ShearThickness: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepElement.StepElement_UniformSurfaceSection_SetShearThickness(self, *args)


    def SetThickness(self, *args) -> "void":
        """
        * Set field Thickness
        	:param Thickness:
        	:type Thickness: float
        	:rtype: None
        """
        return _StepElement.StepElement_UniformSurfaceSection_SetThickness(self, *args)


    def ShearThickness(self, *args) -> "StepElement_MeasureOrUnspecifiedValue":
        """
        * Returns field ShearThickness
        	:rtype: StepElement_MeasureOrUnspecifiedValue
        """
        return _StepElement.StepElement_UniformSurfaceSection_ShearThickness(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_UniformSurfaceSection_swiginit(self, _StepElement.new_StepElement_UniformSurfaceSection(*args))

    def Thickness(self, *args) -> "Standard_Real":
        """
        * Returns field Thickness
        	:rtype: float
        """
        return _StepElement.StepElement_UniformSurfaceSection_Thickness(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepElement_UniformSurfaceSection_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_UniformSurfaceSection
StepElement_UniformSurfaceSection.BendingThickness = new_instancemethod(_StepElement.StepElement_UniformSurfaceSection_BendingThickness, None, StepElement_UniformSurfaceSection)
StepElement_UniformSurfaceSection.Init = new_instancemethod(_StepElement.StepElement_UniformSurfaceSection_Init, None, StepElement_UniformSurfaceSection)
StepElement_UniformSurfaceSection.SetBendingThickness = new_instancemethod(_StepElement.StepElement_UniformSurfaceSection_SetBendingThickness, None, StepElement_UniformSurfaceSection)
StepElement_UniformSurfaceSection.SetShearThickness = new_instancemethod(_StepElement.StepElement_UniformSurfaceSection_SetShearThickness, None, StepElement_UniformSurfaceSection)
StepElement_UniformSurfaceSection.SetThickness = new_instancemethod(_StepElement.StepElement_UniformSurfaceSection_SetThickness, None, StepElement_UniformSurfaceSection)
StepElement_UniformSurfaceSection.ShearThickness = new_instancemethod(_StepElement.StepElement_UniformSurfaceSection_ShearThickness, None, StepElement_UniformSurfaceSection)
StepElement_UniformSurfaceSection.Thickness = new_instancemethod(_StepElement.StepElement_UniformSurfaceSection_Thickness, None, StepElement_UniformSurfaceSection)
StepElement_UniformSurfaceSection_swigregister = _StepElement.StepElement_UniformSurfaceSection_swigregister
StepElement_UniformSurfaceSection_swigregister(StepElement_UniformSurfaceSection)

class StepElement_Volume3dElementDescriptor(StepElement_ElementDescriptor):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aElementDescriptor_TopologyOrder:
        	:type aElementDescriptor_TopologyOrder: StepElement_ElementOrder
        	:param aElementDescriptor_Description:
        	:type aElementDescriptor_Description: TCollection_HAsciiString
        	:param aPurpose:
        	:type aPurpose: StepElement_HArray1OfVolumeElementPurposeMember
        	:param aShape:
        	:type aShape: StepElement_Volume3dElementShape
        	:rtype: None
        """
        return _StepElement.StepElement_Volume3dElementDescriptor_Init(self, *args)


    def Purpose(self, *args) -> "opencascade::handle< StepElement_HArray1OfVolumeElementPurposeMember >":
        """
        * Returns field Purpose
        	:rtype: opencascade::handle<StepElement_HArray1OfVolumeElementPurposeMember>
        """
        return _StepElement.StepElement_Volume3dElementDescriptor_Purpose(self, *args)


    def SetPurpose(self, *args) -> "void":
        """
        * Set field Purpose
        	:param Purpose:
        	:type Purpose: StepElement_HArray1OfVolumeElementPurposeMember
        	:rtype: None
        """
        return _StepElement.StepElement_Volume3dElementDescriptor_SetPurpose(self, *args)


    def SetShape(self, *args) -> "void":
        """
        * Set field Shape
        	:param Shape:
        	:type Shape: StepElement_Volume3dElementShape
        	:rtype: None
        """
        return _StepElement.StepElement_Volume3dElementDescriptor_SetShape(self, *args)


    def Shape(self, *args) -> "StepElement_Volume3dElementShape":
        """
        * Returns field Shape
        	:rtype: StepElement_Volume3dElementShape
        """
        return _StepElement.StepElement_Volume3dElementDescriptor_Shape(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepElement.StepElement_Volume3dElementDescriptor_swiginit(self, _StepElement.new_StepElement_Volume3dElementDescriptor(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_Volume3dElementDescriptor_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepElement.delete_StepElement_Volume3dElementDescriptor
StepElement_Volume3dElementDescriptor.Init = new_instancemethod(_StepElement.StepElement_Volume3dElementDescriptor_Init, None, StepElement_Volume3dElementDescriptor)
StepElement_Volume3dElementDescriptor.Purpose = new_instancemethod(_StepElement.StepElement_Volume3dElementDescriptor_Purpose, None, StepElement_Volume3dElementDescriptor)
StepElement_Volume3dElementDescriptor.SetPurpose = new_instancemethod(_StepElement.StepElement_Volume3dElementDescriptor_SetPurpose, None, StepElement_Volume3dElementDescriptor)
StepElement_Volume3dElementDescriptor.SetShape = new_instancemethod(_StepElement.StepElement_Volume3dElementDescriptor_SetShape, None, StepElement_Volume3dElementDescriptor)
StepElement_Volume3dElementDescriptor.Shape = new_instancemethod(_StepElement.StepElement_Volume3dElementDescriptor_Shape, None, StepElement_Volume3dElementDescriptor)
StepElement_Volume3dElementDescriptor_swigregister = _StepElement.StepElement_Volume3dElementDescriptor_swigregister
StepElement_Volume3dElementDescriptor_swigregister(StepElement_Volume3dElementDescriptor)

class StepElement_HArray1OfVolumeElementPurpose(StepElement_Array1OfVolumeElementPurpose, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray1OfVolumeElementPurpose_swiginit(self, _StepElement.new_StepElement_HArray1OfVolumeElementPurpose(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray1OfVolumeElementPurpose_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray1OfVolumeElementPurpose
StepElement_HArray1OfVolumeElementPurpose.Array1 = new_instancemethod(_StepElement.StepElement_HArray1OfVolumeElementPurpose_Array1, None, StepElement_HArray1OfVolumeElementPurpose)
StepElement_HArray1OfVolumeElementPurpose.ChangeArray1 = new_instancemethod(_StepElement.StepElement_HArray1OfVolumeElementPurpose_ChangeArray1, None, StepElement_HArray1OfVolumeElementPurpose)
StepElement_HArray1OfVolumeElementPurpose_swigregister = _StepElement.StepElement_HArray1OfVolumeElementPurpose_swigregister
StepElement_HArray1OfVolumeElementPurpose_swigregister(StepElement_HArray1OfVolumeElementPurpose)

class StepElement_HArray1OfHSequenceOfCurveElementPurposeMember(StepElement_Array1OfHSequenceOfCurveElementPurposeMember, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_swiginit(self, _StepElement.new_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray1OfHSequenceOfCurveElementPurposeMember
StepElement_HArray1OfHSequenceOfCurveElementPurposeMember.Array1 = new_instancemethod(_StepElement.StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_Array1, None, StepElement_HArray1OfHSequenceOfCurveElementPurposeMember)
StepElement_HArray1OfHSequenceOfCurveElementPurposeMember.ChangeArray1 = new_instancemethod(_StepElement.StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_ChangeArray1, None, StepElement_HArray1OfHSequenceOfCurveElementPurposeMember)
StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_swigregister = _StepElement.StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_swigregister
StepElement_HArray1OfHSequenceOfCurveElementPurposeMember_swigregister(StepElement_HArray1OfHSequenceOfCurveElementPurposeMember)

class StepElement_HArray1OfSurfaceSection(StepElement_Array1OfSurfaceSection, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray1OfSurfaceSection_swiginit(self, _StepElement.new_StepElement_HArray1OfSurfaceSection(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray1OfSurfaceSection_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray1OfSurfaceSection
StepElement_HArray1OfSurfaceSection.Array1 = new_instancemethod(_StepElement.StepElement_HArray1OfSurfaceSection_Array1, None, StepElement_HArray1OfSurfaceSection)
StepElement_HArray1OfSurfaceSection.ChangeArray1 = new_instancemethod(_StepElement.StepElement_HArray1OfSurfaceSection_ChangeArray1, None, StepElement_HArray1OfSurfaceSection)
StepElement_HArray1OfSurfaceSection_swigregister = _StepElement.StepElement_HArray1OfSurfaceSection_swigregister
StepElement_HArray1OfSurfaceSection_swigregister(StepElement_HArray1OfSurfaceSection)

class StepElement_HArray1OfCurveElementSectionDefinition(StepElement_Array1OfCurveElementSectionDefinition, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray1OfCurveElementSectionDefinition_swiginit(self, _StepElement.new_StepElement_HArray1OfCurveElementSectionDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray1OfCurveElementSectionDefinition_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray1OfCurveElementSectionDefinition
StepElement_HArray1OfCurveElementSectionDefinition.Array1 = new_instancemethod(_StepElement.StepElement_HArray1OfCurveElementSectionDefinition_Array1, None, StepElement_HArray1OfCurveElementSectionDefinition)
StepElement_HArray1OfCurveElementSectionDefinition.ChangeArray1 = new_instancemethod(_StepElement.StepElement_HArray1OfCurveElementSectionDefinition_ChangeArray1, None, StepElement_HArray1OfCurveElementSectionDefinition)
StepElement_HArray1OfCurveElementSectionDefinition_swigregister = _StepElement.StepElement_HArray1OfCurveElementSectionDefinition_swigregister
StepElement_HArray1OfCurveElementSectionDefinition_swigregister(StepElement_HArray1OfCurveElementSectionDefinition)

class StepElement_HArray1OfMeasureOrUnspecifiedValue(StepElement_Array1OfMeasureOrUnspecifiedValue, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray1OfMeasureOrUnspecifiedValue_swiginit(self, _StepElement.new_StepElement_HArray1OfMeasureOrUnspecifiedValue(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray1OfMeasureOrUnspecifiedValue_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray1OfMeasureOrUnspecifiedValue
StepElement_HArray1OfMeasureOrUnspecifiedValue.Array1 = new_instancemethod(_StepElement.StepElement_HArray1OfMeasureOrUnspecifiedValue_Array1, None, StepElement_HArray1OfMeasureOrUnspecifiedValue)
StepElement_HArray1OfMeasureOrUnspecifiedValue.ChangeArray1 = new_instancemethod(_StepElement.StepElement_HArray1OfMeasureOrUnspecifiedValue_ChangeArray1, None, StepElement_HArray1OfMeasureOrUnspecifiedValue)
StepElement_HArray1OfMeasureOrUnspecifiedValue_swigregister = _StepElement.StepElement_HArray1OfMeasureOrUnspecifiedValue_swigregister
StepElement_HArray1OfMeasureOrUnspecifiedValue_swigregister(StepElement_HArray1OfMeasureOrUnspecifiedValue)

class StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember(StepElement_Array1OfHSequenceOfSurfaceElementPurposeMember, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_swiginit(self, _StepElement.new_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember
StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember.Array1 = new_instancemethod(_StepElement.StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_Array1, None, StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember.ChangeArray1 = new_instancemethod(_StepElement.StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_ChangeArray1, None, StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember)
StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_swigregister = _StepElement.StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_swigregister
StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember_swigregister(StepElement_HArray1OfHSequenceOfSurfaceElementPurposeMember)

class StepElement_HArray1OfVolumeElementPurposeMember(StepElement_Array1OfVolumeElementPurposeMember, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray1OfVolumeElementPurposeMember_swiginit(self, _StepElement.new_StepElement_HArray1OfVolumeElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray1OfVolumeElementPurposeMember_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray1OfVolumeElementPurposeMember
StepElement_HArray1OfVolumeElementPurposeMember.Array1 = new_instancemethod(_StepElement.StepElement_HArray1OfVolumeElementPurposeMember_Array1, None, StepElement_HArray1OfVolumeElementPurposeMember)
StepElement_HArray1OfVolumeElementPurposeMember.ChangeArray1 = new_instancemethod(_StepElement.StepElement_HArray1OfVolumeElementPurposeMember_ChangeArray1, None, StepElement_HArray1OfVolumeElementPurposeMember)
StepElement_HArray1OfVolumeElementPurposeMember_swigregister = _StepElement.StepElement_HArray1OfVolumeElementPurposeMember_swigregister
StepElement_HArray1OfVolumeElementPurposeMember_swigregister(StepElement_HArray1OfVolumeElementPurposeMember)

class StepElement_HArray1OfCurveElementEndReleasePacket(StepElement_Array1OfCurveElementEndReleasePacket, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray1OfCurveElementEndReleasePacket_swiginit(self, _StepElement.new_StepElement_HArray1OfCurveElementEndReleasePacket(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray1OfCurveElementEndReleasePacket_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray1OfCurveElementEndReleasePacket
StepElement_HArray1OfCurveElementEndReleasePacket.Array1 = new_instancemethod(_StepElement.StepElement_HArray1OfCurveElementEndReleasePacket_Array1, None, StepElement_HArray1OfCurveElementEndReleasePacket)
StepElement_HArray1OfCurveElementEndReleasePacket.ChangeArray1 = new_instancemethod(_StepElement.StepElement_HArray1OfCurveElementEndReleasePacket_ChangeArray1, None, StepElement_HArray1OfCurveElementEndReleasePacket)
StepElement_HArray1OfCurveElementEndReleasePacket_swigregister = _StepElement.StepElement_HArray1OfCurveElementEndReleasePacket_swigregister
StepElement_HArray1OfCurveElementEndReleasePacket_swigregister(StepElement_HArray1OfCurveElementEndReleasePacket)

class StepElement_HArray2OfSurfaceElementPurposeMember(StepElement_Array2OfSurfaceElementPurposeMember, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray2OfSurfaceElementPurposeMember_swiginit(self, _StepElement.new_StepElement_HArray2OfSurfaceElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray2OfSurfaceElementPurposeMember_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray2OfSurfaceElementPurposeMember
StepElement_HArray2OfSurfaceElementPurposeMember.Array2 = new_instancemethod(_StepElement.StepElement_HArray2OfSurfaceElementPurposeMember_Array2, None, StepElement_HArray2OfSurfaceElementPurposeMember)
StepElement_HArray2OfSurfaceElementPurposeMember.ChangeArray2 = new_instancemethod(_StepElement.StepElement_HArray2OfSurfaceElementPurposeMember_ChangeArray2, None, StepElement_HArray2OfSurfaceElementPurposeMember)
StepElement_HArray2OfSurfaceElementPurposeMember_swigregister = _StepElement.StepElement_HArray2OfSurfaceElementPurposeMember_swigregister
StepElement_HArray2OfSurfaceElementPurposeMember_swigregister(StepElement_HArray2OfSurfaceElementPurposeMember)

class StepElement_HArray2OfSurfaceElementPurpose(StepElement_Array2OfSurfaceElementPurpose, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray2OfSurfaceElementPurpose_swiginit(self, _StepElement.new_StepElement_HArray2OfSurfaceElementPurpose(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray2OfSurfaceElementPurpose_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray2OfSurfaceElementPurpose
StepElement_HArray2OfSurfaceElementPurpose.Array2 = new_instancemethod(_StepElement.StepElement_HArray2OfSurfaceElementPurpose_Array2, None, StepElement_HArray2OfSurfaceElementPurpose)
StepElement_HArray2OfSurfaceElementPurpose.ChangeArray2 = new_instancemethod(_StepElement.StepElement_HArray2OfSurfaceElementPurpose_ChangeArray2, None, StepElement_HArray2OfSurfaceElementPurpose)
StepElement_HArray2OfSurfaceElementPurpose_swigregister = _StepElement.StepElement_HArray2OfSurfaceElementPurpose_swigregister
StepElement_HArray2OfSurfaceElementPurpose_swigregister(StepElement_HArray2OfSurfaceElementPurpose)

class StepElement_HArray2OfCurveElementPurposeMember(StepElement_Array2OfCurveElementPurposeMember, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HArray2OfCurveElementPurposeMember_swiginit(self, _StepElement.new_StepElement_HArray2OfCurveElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HArray2OfCurveElementPurposeMember_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HArray2OfCurveElementPurposeMember
StepElement_HArray2OfCurveElementPurposeMember.Array2 = new_instancemethod(_StepElement.StepElement_HArray2OfCurveElementPurposeMember_Array2, None, StepElement_HArray2OfCurveElementPurposeMember)
StepElement_HArray2OfCurveElementPurposeMember.ChangeArray2 = new_instancemethod(_StepElement.StepElement_HArray2OfCurveElementPurposeMember_ChangeArray2, None, StepElement_HArray2OfCurveElementPurposeMember)
StepElement_HArray2OfCurveElementPurposeMember_swigregister = _StepElement.StepElement_HArray2OfCurveElementPurposeMember_swigregister
StepElement_HArray2OfCurveElementPurposeMember_swigregister(StepElement_HArray2OfCurveElementPurposeMember)

class StepElement_HSequenceOfCurveElementSectionDefinition(StepElement_SequenceOfCurveElementSectionDefinition, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HSequenceOfCurveElementSectionDefinition_swiginit(self, _StepElement.new_StepElement_HSequenceOfCurveElementSectionDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HSequenceOfCurveElementSectionDefinition_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HSequenceOfCurveElementSectionDefinition
StepElement_HSequenceOfCurveElementSectionDefinition.Sequence = new_instancemethod(_StepElement.StepElement_HSequenceOfCurveElementSectionDefinition_Sequence, None, StepElement_HSequenceOfCurveElementSectionDefinition)
StepElement_HSequenceOfCurveElementSectionDefinition.Append = new_instancemethod(_StepElement.StepElement_HSequenceOfCurveElementSectionDefinition_Append, None, StepElement_HSequenceOfCurveElementSectionDefinition)
StepElement_HSequenceOfCurveElementSectionDefinition.ChangeSequence = new_instancemethod(_StepElement.StepElement_HSequenceOfCurveElementSectionDefinition_ChangeSequence, None, StepElement_HSequenceOfCurveElementSectionDefinition)
StepElement_HSequenceOfCurveElementSectionDefinition_swigregister = _StepElement.StepElement_HSequenceOfCurveElementSectionDefinition_swigregister
StepElement_HSequenceOfCurveElementSectionDefinition_swigregister(StepElement_HSequenceOfCurveElementSectionDefinition)

class StepElement_HSequenceOfCurveElementPurposeMember(StepElement_SequenceOfCurveElementPurposeMember, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HSequenceOfCurveElementPurposeMember_swiginit(self, _StepElement.new_StepElement_HSequenceOfCurveElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HSequenceOfCurveElementPurposeMember_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HSequenceOfCurveElementPurposeMember
StepElement_HSequenceOfCurveElementPurposeMember.Sequence = new_instancemethod(_StepElement.StepElement_HSequenceOfCurveElementPurposeMember_Sequence, None, StepElement_HSequenceOfCurveElementPurposeMember)
StepElement_HSequenceOfCurveElementPurposeMember.Append = new_instancemethod(_StepElement.StepElement_HSequenceOfCurveElementPurposeMember_Append, None, StepElement_HSequenceOfCurveElementPurposeMember)
StepElement_HSequenceOfCurveElementPurposeMember.ChangeSequence = new_instancemethod(_StepElement.StepElement_HSequenceOfCurveElementPurposeMember_ChangeSequence, None, StepElement_HSequenceOfCurveElementPurposeMember)
StepElement_HSequenceOfCurveElementPurposeMember_swigregister = _StepElement.StepElement_HSequenceOfCurveElementPurposeMember_swigregister
StepElement_HSequenceOfCurveElementPurposeMember_swigregister(StepElement_HSequenceOfCurveElementPurposeMember)

class StepElement_HSequenceOfElementMaterial(StepElement_SequenceOfElementMaterial, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HSequenceOfElementMaterial_swiginit(self, _StepElement.new_StepElement_HSequenceOfElementMaterial(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HSequenceOfElementMaterial_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HSequenceOfElementMaterial
StepElement_HSequenceOfElementMaterial.Sequence = new_instancemethod(_StepElement.StepElement_HSequenceOfElementMaterial_Sequence, None, StepElement_HSequenceOfElementMaterial)
StepElement_HSequenceOfElementMaterial.Append = new_instancemethod(_StepElement.StepElement_HSequenceOfElementMaterial_Append, None, StepElement_HSequenceOfElementMaterial)
StepElement_HSequenceOfElementMaterial.ChangeSequence = new_instancemethod(_StepElement.StepElement_HSequenceOfElementMaterial_ChangeSequence, None, StepElement_HSequenceOfElementMaterial)
StepElement_HSequenceOfElementMaterial_swigregister = _StepElement.StepElement_HSequenceOfElementMaterial_swigregister
StepElement_HSequenceOfElementMaterial_swigregister(StepElement_HSequenceOfElementMaterial)

class StepElement_HSequenceOfSurfaceElementPurposeMember(StepElement_SequenceOfSurfaceElementPurposeMember, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepElement.StepElement_HSequenceOfSurfaceElementPurposeMember_swiginit(self, _StepElement.new_StepElement_HSequenceOfSurfaceElementPurposeMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepElement_HSequenceOfSurfaceElementPurposeMember_DownCast(t)

    __swig_destroy__ = _StepElement.delete_StepElement_HSequenceOfSurfaceElementPurposeMember
StepElement_HSequenceOfSurfaceElementPurposeMember.Sequence = new_instancemethod(_StepElement.StepElement_HSequenceOfSurfaceElementPurposeMember_Sequence, None, StepElement_HSequenceOfSurfaceElementPurposeMember)
StepElement_HSequenceOfSurfaceElementPurposeMember.Append = new_instancemethod(_StepElement.StepElement_HSequenceOfSurfaceElementPurposeMember_Append, None, StepElement_HSequenceOfSurfaceElementPurposeMember)
StepElement_HSequenceOfSurfaceElementPurposeMember.ChangeSequence = new_instancemethod(_StepElement.StepElement_HSequenceOfSurfaceElementPurposeMember_ChangeSequence, None, StepElement_HSequenceOfSurfaceElementPurposeMember)
StepElement_HSequenceOfSurfaceElementPurposeMember_swigregister = _StepElement.StepElement_HSequenceOfSurfaceElementPurposeMember_swigregister
StepElement_HSequenceOfSurfaceElementPurposeMember_swigregister(StepElement_HSequenceOfSurfaceElementPurposeMember)



