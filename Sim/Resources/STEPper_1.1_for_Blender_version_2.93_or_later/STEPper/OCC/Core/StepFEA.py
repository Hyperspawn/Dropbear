# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepFEA module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepfea.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StepFEA.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StepFEA')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StepFEA')
    _StepFEA = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepFEA', [dirname(__file__)])
        except ImportError:
            import _StepFEA
            return _StepFEA
        try:
            _mod = imp.load_module('_StepFEA', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _StepFEA = swig_import_helper()
    del swig_import_helper
else:
    import _StepFEA
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepFEA.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_StepFEA.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_StepFEA.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_StepFEA.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_StepFEA.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_StepFEA.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_StepFEA.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_StepFEA.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_StepFEA.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_StepFEA.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_StepFEA.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_StepFEA.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_StepFEA.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_StepFEA.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_StepFEA.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_StepFEA.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_StepFEA.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _StepFEA.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _StepFEA.process_exception(error, method_name, class_name)
process_exception = _StepFEA.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepElement
import OCC.Core.StepRepr
import OCC.Core.StepBasic
import OCC.Core.StepGeom
StepFEA_Volume = _StepFEA.StepFEA_Volume
StepFEA_Cartesian = _StepFEA.StepFEA_Cartesian
StepFEA_Cylindrical = _StepFEA.StepFEA_Cylindrical
StepFEA_Spherical = _StepFEA.StepFEA_Spherical
StepFEA_XTranslation = _StepFEA.StepFEA_XTranslation
StepFEA_YTranslation = _StepFEA.StepFEA_YTranslation
StepFEA_ZTranslation = _StepFEA.StepFEA_ZTranslation
StepFEA_XRotation = _StepFEA.StepFEA_XRotation
StepFEA_YRotation = _StepFEA.StepFEA_YRotation
StepFEA_ZRotation = _StepFEA.StepFEA_ZRotation
StepFEA_Warp = _StepFEA.StepFEA_Warp
StepFEA_ElementEdge = _StepFEA.StepFEA_ElementEdge
StepFEA_Unspecified = _StepFEA.StepFEA_Unspecified

def Handle_StepFEA_Curve3dElementProperty_Create() -> "opencascade::handle< StepFEA_Curve3dElementProperty >":
    return _StepFEA.Handle_StepFEA_Curve3dElementProperty_Create()
Handle_StepFEA_Curve3dElementProperty_Create = _StepFEA.Handle_StepFEA_Curve3dElementProperty_Create

def Handle_StepFEA_Curve3dElementProperty_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_Curve3dElementProperty >":
    return _StepFEA.Handle_StepFEA_Curve3dElementProperty_DownCast(t)
Handle_StepFEA_Curve3dElementProperty_DownCast = _StepFEA.Handle_StepFEA_Curve3dElementProperty_DownCast

def Handle_StepFEA_Curve3dElementProperty_IsNull(t: 'opencascade::handle< StepFEA_Curve3dElementProperty > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_Curve3dElementProperty_IsNull(t)
Handle_StepFEA_Curve3dElementProperty_IsNull = _StepFEA.Handle_StepFEA_Curve3dElementProperty_IsNull

def Handle_StepFEA_CurveElementEndOffset_Create() -> "opencascade::handle< StepFEA_CurveElementEndOffset >":
    return _StepFEA.Handle_StepFEA_CurveElementEndOffset_Create()
Handle_StepFEA_CurveElementEndOffset_Create = _StepFEA.Handle_StepFEA_CurveElementEndOffset_Create

def Handle_StepFEA_CurveElementEndOffset_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_CurveElementEndOffset >":
    return _StepFEA.Handle_StepFEA_CurveElementEndOffset_DownCast(t)
Handle_StepFEA_CurveElementEndOffset_DownCast = _StepFEA.Handle_StepFEA_CurveElementEndOffset_DownCast

def Handle_StepFEA_CurveElementEndOffset_IsNull(t: 'opencascade::handle< StepFEA_CurveElementEndOffset > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_CurveElementEndOffset_IsNull(t)
Handle_StepFEA_CurveElementEndOffset_IsNull = _StepFEA.Handle_StepFEA_CurveElementEndOffset_IsNull

def Handle_StepFEA_CurveElementEndRelease_Create() -> "opencascade::handle< StepFEA_CurveElementEndRelease >":
    return _StepFEA.Handle_StepFEA_CurveElementEndRelease_Create()
Handle_StepFEA_CurveElementEndRelease_Create = _StepFEA.Handle_StepFEA_CurveElementEndRelease_Create

def Handle_StepFEA_CurveElementEndRelease_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_CurveElementEndRelease >":
    return _StepFEA.Handle_StepFEA_CurveElementEndRelease_DownCast(t)
Handle_StepFEA_CurveElementEndRelease_DownCast = _StepFEA.Handle_StepFEA_CurveElementEndRelease_DownCast

def Handle_StepFEA_CurveElementEndRelease_IsNull(t: 'opencascade::handle< StepFEA_CurveElementEndRelease > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_CurveElementEndRelease_IsNull(t)
Handle_StepFEA_CurveElementEndRelease_IsNull = _StepFEA.Handle_StepFEA_CurveElementEndRelease_IsNull

def Handle_StepFEA_CurveElementInterval_Create() -> "opencascade::handle< StepFEA_CurveElementInterval >":
    return _StepFEA.Handle_StepFEA_CurveElementInterval_Create()
Handle_StepFEA_CurveElementInterval_Create = _StepFEA.Handle_StepFEA_CurveElementInterval_Create

def Handle_StepFEA_CurveElementInterval_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_CurveElementInterval >":
    return _StepFEA.Handle_StepFEA_CurveElementInterval_DownCast(t)
Handle_StepFEA_CurveElementInterval_DownCast = _StepFEA.Handle_StepFEA_CurveElementInterval_DownCast

def Handle_StepFEA_CurveElementInterval_IsNull(t: 'opencascade::handle< StepFEA_CurveElementInterval > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_CurveElementInterval_IsNull(t)
Handle_StepFEA_CurveElementInterval_IsNull = _StepFEA.Handle_StepFEA_CurveElementInterval_IsNull

def Handle_StepFEA_CurveElementLocation_Create() -> "opencascade::handle< StepFEA_CurveElementLocation >":
    return _StepFEA.Handle_StepFEA_CurveElementLocation_Create()
Handle_StepFEA_CurveElementLocation_Create = _StepFEA.Handle_StepFEA_CurveElementLocation_Create

def Handle_StepFEA_CurveElementLocation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_CurveElementLocation >":
    return _StepFEA.Handle_StepFEA_CurveElementLocation_DownCast(t)
Handle_StepFEA_CurveElementLocation_DownCast = _StepFEA.Handle_StepFEA_CurveElementLocation_DownCast

def Handle_StepFEA_CurveElementLocation_IsNull(t: 'opencascade::handle< StepFEA_CurveElementLocation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_CurveElementLocation_IsNull(t)
Handle_StepFEA_CurveElementLocation_IsNull = _StepFEA.Handle_StepFEA_CurveElementLocation_IsNull

def Handle_StepFEA_DegreeOfFreedomMember_Create() -> "opencascade::handle< StepFEA_DegreeOfFreedomMember >":
    return _StepFEA.Handle_StepFEA_DegreeOfFreedomMember_Create()
Handle_StepFEA_DegreeOfFreedomMember_Create = _StepFEA.Handle_StepFEA_DegreeOfFreedomMember_Create

def Handle_StepFEA_DegreeOfFreedomMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_DegreeOfFreedomMember >":
    return _StepFEA.Handle_StepFEA_DegreeOfFreedomMember_DownCast(t)
Handle_StepFEA_DegreeOfFreedomMember_DownCast = _StepFEA.Handle_StepFEA_DegreeOfFreedomMember_DownCast

def Handle_StepFEA_DegreeOfFreedomMember_IsNull(t: 'opencascade::handle< StepFEA_DegreeOfFreedomMember > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_DegreeOfFreedomMember_IsNull(t)
Handle_StepFEA_DegreeOfFreedomMember_IsNull = _StepFEA.Handle_StepFEA_DegreeOfFreedomMember_IsNull

def Handle_StepFEA_ElementGeometricRelationship_Create() -> "opencascade::handle< StepFEA_ElementGeometricRelationship >":
    return _StepFEA.Handle_StepFEA_ElementGeometricRelationship_Create()
Handle_StepFEA_ElementGeometricRelationship_Create = _StepFEA.Handle_StepFEA_ElementGeometricRelationship_Create

def Handle_StepFEA_ElementGeometricRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_ElementGeometricRelationship >":
    return _StepFEA.Handle_StepFEA_ElementGeometricRelationship_DownCast(t)
Handle_StepFEA_ElementGeometricRelationship_DownCast = _StepFEA.Handle_StepFEA_ElementGeometricRelationship_DownCast

def Handle_StepFEA_ElementGeometricRelationship_IsNull(t: 'opencascade::handle< StepFEA_ElementGeometricRelationship > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_ElementGeometricRelationship_IsNull(t)
Handle_StepFEA_ElementGeometricRelationship_IsNull = _StepFEA.Handle_StepFEA_ElementGeometricRelationship_IsNull

def Handle_StepFEA_ElementRepresentation_Create() -> "opencascade::handle< StepFEA_ElementRepresentation >":
    return _StepFEA.Handle_StepFEA_ElementRepresentation_Create()
Handle_StepFEA_ElementRepresentation_Create = _StepFEA.Handle_StepFEA_ElementRepresentation_Create

def Handle_StepFEA_ElementRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_ElementRepresentation >":
    return _StepFEA.Handle_StepFEA_ElementRepresentation_DownCast(t)
Handle_StepFEA_ElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_ElementRepresentation_DownCast

def Handle_StepFEA_ElementRepresentation_IsNull(t: 'opencascade::handle< StepFEA_ElementRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_ElementRepresentation_IsNull(t)
Handle_StepFEA_ElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_ElementRepresentation_IsNull

def Handle_StepFEA_FeaAxis2Placement3d_Create() -> "opencascade::handle< StepFEA_FeaAxis2Placement3d >":
    return _StepFEA.Handle_StepFEA_FeaAxis2Placement3d_Create()
Handle_StepFEA_FeaAxis2Placement3d_Create = _StepFEA.Handle_StepFEA_FeaAxis2Placement3d_Create

def Handle_StepFEA_FeaAxis2Placement3d_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaAxis2Placement3d >":
    return _StepFEA.Handle_StepFEA_FeaAxis2Placement3d_DownCast(t)
Handle_StepFEA_FeaAxis2Placement3d_DownCast = _StepFEA.Handle_StepFEA_FeaAxis2Placement3d_DownCast

def Handle_StepFEA_FeaAxis2Placement3d_IsNull(t: 'opencascade::handle< StepFEA_FeaAxis2Placement3d > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaAxis2Placement3d_IsNull(t)
Handle_StepFEA_FeaAxis2Placement3d_IsNull = _StepFEA.Handle_StepFEA_FeaAxis2Placement3d_IsNull

def Handle_StepFEA_FeaCurveSectionGeometricRelationship_Create() -> "opencascade::handle< StepFEA_FeaCurveSectionGeometricRelationship >":
    return _StepFEA.Handle_StepFEA_FeaCurveSectionGeometricRelationship_Create()
Handle_StepFEA_FeaCurveSectionGeometricRelationship_Create = _StepFEA.Handle_StepFEA_FeaCurveSectionGeometricRelationship_Create

def Handle_StepFEA_FeaCurveSectionGeometricRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaCurveSectionGeometricRelationship >":
    return _StepFEA.Handle_StepFEA_FeaCurveSectionGeometricRelationship_DownCast(t)
Handle_StepFEA_FeaCurveSectionGeometricRelationship_DownCast = _StepFEA.Handle_StepFEA_FeaCurveSectionGeometricRelationship_DownCast

def Handle_StepFEA_FeaCurveSectionGeometricRelationship_IsNull(t: 'opencascade::handle< StepFEA_FeaCurveSectionGeometricRelationship > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaCurveSectionGeometricRelationship_IsNull(t)
Handle_StepFEA_FeaCurveSectionGeometricRelationship_IsNull = _StepFEA.Handle_StepFEA_FeaCurveSectionGeometricRelationship_IsNull

def Handle_StepFEA_FeaGroup_Create() -> "opencascade::handle< StepFEA_FeaGroup >":
    return _StepFEA.Handle_StepFEA_FeaGroup_Create()
Handle_StepFEA_FeaGroup_Create = _StepFEA.Handle_StepFEA_FeaGroup_Create

def Handle_StepFEA_FeaGroup_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaGroup >":
    return _StepFEA.Handle_StepFEA_FeaGroup_DownCast(t)
Handle_StepFEA_FeaGroup_DownCast = _StepFEA.Handle_StepFEA_FeaGroup_DownCast

def Handle_StepFEA_FeaGroup_IsNull(t: 'opencascade::handle< StepFEA_FeaGroup > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaGroup_IsNull(t)
Handle_StepFEA_FeaGroup_IsNull = _StepFEA.Handle_StepFEA_FeaGroup_IsNull

def Handle_StepFEA_FeaMaterialPropertyRepresentation_Create() -> "opencascade::handle< StepFEA_FeaMaterialPropertyRepresentation >":
    return _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentation_Create()
Handle_StepFEA_FeaMaterialPropertyRepresentation_Create = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentation_Create

def Handle_StepFEA_FeaMaterialPropertyRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaMaterialPropertyRepresentation >":
    return _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentation_DownCast(t)
Handle_StepFEA_FeaMaterialPropertyRepresentation_DownCast = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentation_DownCast

def Handle_StepFEA_FeaMaterialPropertyRepresentation_IsNull(t: 'opencascade::handle< StepFEA_FeaMaterialPropertyRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentation_IsNull(t)
Handle_StepFEA_FeaMaterialPropertyRepresentation_IsNull = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentation_IsNull

def Handle_StepFEA_FeaMaterialPropertyRepresentationItem_Create() -> "opencascade::handle< StepFEA_FeaMaterialPropertyRepresentationItem >":
    return _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentationItem_Create()
Handle_StepFEA_FeaMaterialPropertyRepresentationItem_Create = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentationItem_Create

def Handle_StepFEA_FeaMaterialPropertyRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaMaterialPropertyRepresentationItem >":
    return _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentationItem_DownCast(t)
Handle_StepFEA_FeaMaterialPropertyRepresentationItem_DownCast = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentationItem_DownCast

def Handle_StepFEA_FeaMaterialPropertyRepresentationItem_IsNull(t: 'opencascade::handle< StepFEA_FeaMaterialPropertyRepresentationItem > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentationItem_IsNull(t)
Handle_StepFEA_FeaMaterialPropertyRepresentationItem_IsNull = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentationItem_IsNull

def Handle_StepFEA_FeaModel_Create() -> "opencascade::handle< StepFEA_FeaModel >":
    return _StepFEA.Handle_StepFEA_FeaModel_Create()
Handle_StepFEA_FeaModel_Create = _StepFEA.Handle_StepFEA_FeaModel_Create

def Handle_StepFEA_FeaModel_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaModel >":
    return _StepFEA.Handle_StepFEA_FeaModel_DownCast(t)
Handle_StepFEA_FeaModel_DownCast = _StepFEA.Handle_StepFEA_FeaModel_DownCast

def Handle_StepFEA_FeaModel_IsNull(t: 'opencascade::handle< StepFEA_FeaModel > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaModel_IsNull(t)
Handle_StepFEA_FeaModel_IsNull = _StepFEA.Handle_StepFEA_FeaModel_IsNull

def Handle_StepFEA_FeaModelDefinition_Create() -> "opencascade::handle< StepFEA_FeaModelDefinition >":
    return _StepFEA.Handle_StepFEA_FeaModelDefinition_Create()
Handle_StepFEA_FeaModelDefinition_Create = _StepFEA.Handle_StepFEA_FeaModelDefinition_Create

def Handle_StepFEA_FeaModelDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaModelDefinition >":
    return _StepFEA.Handle_StepFEA_FeaModelDefinition_DownCast(t)
Handle_StepFEA_FeaModelDefinition_DownCast = _StepFEA.Handle_StepFEA_FeaModelDefinition_DownCast

def Handle_StepFEA_FeaModelDefinition_IsNull(t: 'opencascade::handle< StepFEA_FeaModelDefinition > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaModelDefinition_IsNull(t)
Handle_StepFEA_FeaModelDefinition_IsNull = _StepFEA.Handle_StepFEA_FeaModelDefinition_IsNull

def Handle_StepFEA_FeaParametricPoint_Create() -> "opencascade::handle< StepFEA_FeaParametricPoint >":
    return _StepFEA.Handle_StepFEA_FeaParametricPoint_Create()
Handle_StepFEA_FeaParametricPoint_Create = _StepFEA.Handle_StepFEA_FeaParametricPoint_Create

def Handle_StepFEA_FeaParametricPoint_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaParametricPoint >":
    return _StepFEA.Handle_StepFEA_FeaParametricPoint_DownCast(t)
Handle_StepFEA_FeaParametricPoint_DownCast = _StepFEA.Handle_StepFEA_FeaParametricPoint_DownCast

def Handle_StepFEA_FeaParametricPoint_IsNull(t: 'opencascade::handle< StepFEA_FeaParametricPoint > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaParametricPoint_IsNull(t)
Handle_StepFEA_FeaParametricPoint_IsNull = _StepFEA.Handle_StepFEA_FeaParametricPoint_IsNull

def Handle_StepFEA_FeaRepresentationItem_Create() -> "opencascade::handle< StepFEA_FeaRepresentationItem >":
    return _StepFEA.Handle_StepFEA_FeaRepresentationItem_Create()
Handle_StepFEA_FeaRepresentationItem_Create = _StepFEA.Handle_StepFEA_FeaRepresentationItem_Create

def Handle_StepFEA_FeaRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaRepresentationItem >":
    return _StepFEA.Handle_StepFEA_FeaRepresentationItem_DownCast(t)
Handle_StepFEA_FeaRepresentationItem_DownCast = _StepFEA.Handle_StepFEA_FeaRepresentationItem_DownCast

def Handle_StepFEA_FeaRepresentationItem_IsNull(t: 'opencascade::handle< StepFEA_FeaRepresentationItem > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaRepresentationItem_IsNull(t)
Handle_StepFEA_FeaRepresentationItem_IsNull = _StepFEA.Handle_StepFEA_FeaRepresentationItem_IsNull

def Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_Create() -> "opencascade::handle< StepFEA_FeaSurfaceSectionGeometricRelationship >":
    return _StepFEA.Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_Create()
Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_Create = _StepFEA.Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_Create

def Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaSurfaceSectionGeometricRelationship >":
    return _StepFEA.Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_DownCast(t)
Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_DownCast = _StepFEA.Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_DownCast

def Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_IsNull(t: 'opencascade::handle< StepFEA_FeaSurfaceSectionGeometricRelationship > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_IsNull(t)
Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_IsNull = _StepFEA.Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_IsNull

def Handle_StepFEA_FreedomAndCoefficient_Create() -> "opencascade::handle< StepFEA_FreedomAndCoefficient >":
    return _StepFEA.Handle_StepFEA_FreedomAndCoefficient_Create()
Handle_StepFEA_FreedomAndCoefficient_Create = _StepFEA.Handle_StepFEA_FreedomAndCoefficient_Create

def Handle_StepFEA_FreedomAndCoefficient_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FreedomAndCoefficient >":
    return _StepFEA.Handle_StepFEA_FreedomAndCoefficient_DownCast(t)
Handle_StepFEA_FreedomAndCoefficient_DownCast = _StepFEA.Handle_StepFEA_FreedomAndCoefficient_DownCast

def Handle_StepFEA_FreedomAndCoefficient_IsNull(t: 'opencascade::handle< StepFEA_FreedomAndCoefficient > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FreedomAndCoefficient_IsNull(t)
Handle_StepFEA_FreedomAndCoefficient_IsNull = _StepFEA.Handle_StepFEA_FreedomAndCoefficient_IsNull

def Handle_StepFEA_FreedomsList_Create() -> "opencascade::handle< StepFEA_FreedomsList >":
    return _StepFEA.Handle_StepFEA_FreedomsList_Create()
Handle_StepFEA_FreedomsList_Create = _StepFEA.Handle_StepFEA_FreedomsList_Create

def Handle_StepFEA_FreedomsList_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FreedomsList >":
    return _StepFEA.Handle_StepFEA_FreedomsList_DownCast(t)
Handle_StepFEA_FreedomsList_DownCast = _StepFEA.Handle_StepFEA_FreedomsList_DownCast

def Handle_StepFEA_FreedomsList_IsNull(t: 'opencascade::handle< StepFEA_FreedomsList > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FreedomsList_IsNull(t)
Handle_StepFEA_FreedomsList_IsNull = _StepFEA.Handle_StepFEA_FreedomsList_IsNull

def Handle_StepFEA_NodeDefinition_Create() -> "opencascade::handle< StepFEA_NodeDefinition >":
    return _StepFEA.Handle_StepFEA_NodeDefinition_Create()
Handle_StepFEA_NodeDefinition_Create = _StepFEA.Handle_StepFEA_NodeDefinition_Create

def Handle_StepFEA_NodeDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_NodeDefinition >":
    return _StepFEA.Handle_StepFEA_NodeDefinition_DownCast(t)
Handle_StepFEA_NodeDefinition_DownCast = _StepFEA.Handle_StepFEA_NodeDefinition_DownCast

def Handle_StepFEA_NodeDefinition_IsNull(t: 'opencascade::handle< StepFEA_NodeDefinition > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_NodeDefinition_IsNull(t)
Handle_StepFEA_NodeDefinition_IsNull = _StepFEA.Handle_StepFEA_NodeDefinition_IsNull

def Handle_StepFEA_NodeRepresentation_Create() -> "opencascade::handle< StepFEA_NodeRepresentation >":
    return _StepFEA.Handle_StepFEA_NodeRepresentation_Create()
Handle_StepFEA_NodeRepresentation_Create = _StepFEA.Handle_StepFEA_NodeRepresentation_Create

def Handle_StepFEA_NodeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_NodeRepresentation >":
    return _StepFEA.Handle_StepFEA_NodeRepresentation_DownCast(t)
Handle_StepFEA_NodeRepresentation_DownCast = _StepFEA.Handle_StepFEA_NodeRepresentation_DownCast

def Handle_StepFEA_NodeRepresentation_IsNull(t: 'opencascade::handle< StepFEA_NodeRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_NodeRepresentation_IsNull(t)
Handle_StepFEA_NodeRepresentation_IsNull = _StepFEA.Handle_StepFEA_NodeRepresentation_IsNull

def Handle_StepFEA_NodeSet_Create() -> "opencascade::handle< StepFEA_NodeSet >":
    return _StepFEA.Handle_StepFEA_NodeSet_Create()
Handle_StepFEA_NodeSet_Create = _StepFEA.Handle_StepFEA_NodeSet_Create

def Handle_StepFEA_NodeSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_NodeSet >":
    return _StepFEA.Handle_StepFEA_NodeSet_DownCast(t)
Handle_StepFEA_NodeSet_DownCast = _StepFEA.Handle_StepFEA_NodeSet_DownCast

def Handle_StepFEA_NodeSet_IsNull(t: 'opencascade::handle< StepFEA_NodeSet > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_NodeSet_IsNull(t)
Handle_StepFEA_NodeSet_IsNull = _StepFEA.Handle_StepFEA_NodeSet_IsNull

def Handle_StepFEA_SymmetricTensor23dMember_Create() -> "opencascade::handle< StepFEA_SymmetricTensor23dMember >":
    return _StepFEA.Handle_StepFEA_SymmetricTensor23dMember_Create()
Handle_StepFEA_SymmetricTensor23dMember_Create = _StepFEA.Handle_StepFEA_SymmetricTensor23dMember_Create

def Handle_StepFEA_SymmetricTensor23dMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_SymmetricTensor23dMember >":
    return _StepFEA.Handle_StepFEA_SymmetricTensor23dMember_DownCast(t)
Handle_StepFEA_SymmetricTensor23dMember_DownCast = _StepFEA.Handle_StepFEA_SymmetricTensor23dMember_DownCast

def Handle_StepFEA_SymmetricTensor23dMember_IsNull(t: 'opencascade::handle< StepFEA_SymmetricTensor23dMember > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_SymmetricTensor23dMember_IsNull(t)
Handle_StepFEA_SymmetricTensor23dMember_IsNull = _StepFEA.Handle_StepFEA_SymmetricTensor23dMember_IsNull

def Handle_StepFEA_SymmetricTensor43dMember_Create() -> "opencascade::handle< StepFEA_SymmetricTensor43dMember >":
    return _StepFEA.Handle_StepFEA_SymmetricTensor43dMember_Create()
Handle_StepFEA_SymmetricTensor43dMember_Create = _StepFEA.Handle_StepFEA_SymmetricTensor43dMember_Create

def Handle_StepFEA_SymmetricTensor43dMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_SymmetricTensor43dMember >":
    return _StepFEA.Handle_StepFEA_SymmetricTensor43dMember_DownCast(t)
Handle_StepFEA_SymmetricTensor43dMember_DownCast = _StepFEA.Handle_StepFEA_SymmetricTensor43dMember_DownCast

def Handle_StepFEA_SymmetricTensor43dMember_IsNull(t: 'opencascade::handle< StepFEA_SymmetricTensor43dMember > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_SymmetricTensor43dMember_IsNull(t)
Handle_StepFEA_SymmetricTensor43dMember_IsNull = _StepFEA.Handle_StepFEA_SymmetricTensor43dMember_IsNull

def Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_Create() -> "opencascade::handle< StepFEA_AlignedCurve3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_Create()
Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_Create

def Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_AlignedCurve3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_DownCast(t)
Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_DownCast

def Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_IsNull(t: 'opencascade::handle< StepFEA_AlignedCurve3dElementCoordinateSystem > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_IsNull(t)
Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_IsNull

def Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_Create() -> "opencascade::handle< StepFEA_AlignedSurface3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_Create()
Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_Create

def Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_AlignedSurface3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_DownCast(t)
Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_DownCast

def Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_IsNull(t: 'opencascade::handle< StepFEA_AlignedSurface3dElementCoordinateSystem > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_IsNull(t)
Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_IsNull

def Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_Create() -> "opencascade::handle< StepFEA_ArbitraryVolume3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_Create()
Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_Create

def Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_ArbitraryVolume3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_DownCast(t)
Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_DownCast

def Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_IsNull(t: 'opencascade::handle< StepFEA_ArbitraryVolume3dElementCoordinateSystem > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_IsNull(t)
Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_IsNull

def Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_Create() -> "opencascade::handle< StepFEA_ConstantSurface3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_Create()
Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_Create

def Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_ConstantSurface3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_DownCast(t)
Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_DownCast

def Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_IsNull(t: 'opencascade::handle< StepFEA_ConstantSurface3dElementCoordinateSystem > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_IsNull(t)
Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_IsNull

def Handle_StepFEA_Curve3dElementRepresentation_Create() -> "opencascade::handle< StepFEA_Curve3dElementRepresentation >":
    return _StepFEA.Handle_StepFEA_Curve3dElementRepresentation_Create()
Handle_StepFEA_Curve3dElementRepresentation_Create = _StepFEA.Handle_StepFEA_Curve3dElementRepresentation_Create

def Handle_StepFEA_Curve3dElementRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_Curve3dElementRepresentation >":
    return _StepFEA.Handle_StepFEA_Curve3dElementRepresentation_DownCast(t)
Handle_StepFEA_Curve3dElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_Curve3dElementRepresentation_DownCast

def Handle_StepFEA_Curve3dElementRepresentation_IsNull(t: 'opencascade::handle< StepFEA_Curve3dElementRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_Curve3dElementRepresentation_IsNull(t)
Handle_StepFEA_Curve3dElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_Curve3dElementRepresentation_IsNull

def Handle_StepFEA_CurveElementIntervalConstant_Create() -> "opencascade::handle< StepFEA_CurveElementIntervalConstant >":
    return _StepFEA.Handle_StepFEA_CurveElementIntervalConstant_Create()
Handle_StepFEA_CurveElementIntervalConstant_Create = _StepFEA.Handle_StepFEA_CurveElementIntervalConstant_Create

def Handle_StepFEA_CurveElementIntervalConstant_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_CurveElementIntervalConstant >":
    return _StepFEA.Handle_StepFEA_CurveElementIntervalConstant_DownCast(t)
Handle_StepFEA_CurveElementIntervalConstant_DownCast = _StepFEA.Handle_StepFEA_CurveElementIntervalConstant_DownCast

def Handle_StepFEA_CurveElementIntervalConstant_IsNull(t: 'opencascade::handle< StepFEA_CurveElementIntervalConstant > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_CurveElementIntervalConstant_IsNull(t)
Handle_StepFEA_CurveElementIntervalConstant_IsNull = _StepFEA.Handle_StepFEA_CurveElementIntervalConstant_IsNull

def Handle_StepFEA_CurveElementIntervalLinearlyVarying_Create() -> "opencascade::handle< StepFEA_CurveElementIntervalLinearlyVarying >":
    return _StepFEA.Handle_StepFEA_CurveElementIntervalLinearlyVarying_Create()
Handle_StepFEA_CurveElementIntervalLinearlyVarying_Create = _StepFEA.Handle_StepFEA_CurveElementIntervalLinearlyVarying_Create

def Handle_StepFEA_CurveElementIntervalLinearlyVarying_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_CurveElementIntervalLinearlyVarying >":
    return _StepFEA.Handle_StepFEA_CurveElementIntervalLinearlyVarying_DownCast(t)
Handle_StepFEA_CurveElementIntervalLinearlyVarying_DownCast = _StepFEA.Handle_StepFEA_CurveElementIntervalLinearlyVarying_DownCast

def Handle_StepFEA_CurveElementIntervalLinearlyVarying_IsNull(t: 'opencascade::handle< StepFEA_CurveElementIntervalLinearlyVarying > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_CurveElementIntervalLinearlyVarying_IsNull(t)
Handle_StepFEA_CurveElementIntervalLinearlyVarying_IsNull = _StepFEA.Handle_StepFEA_CurveElementIntervalLinearlyVarying_IsNull

def Handle_StepFEA_DummyNode_Create() -> "opencascade::handle< StepFEA_DummyNode >":
    return _StepFEA.Handle_StepFEA_DummyNode_Create()
Handle_StepFEA_DummyNode_Create = _StepFEA.Handle_StepFEA_DummyNode_Create

def Handle_StepFEA_DummyNode_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_DummyNode >":
    return _StepFEA.Handle_StepFEA_DummyNode_DownCast(t)
Handle_StepFEA_DummyNode_DownCast = _StepFEA.Handle_StepFEA_DummyNode_DownCast

def Handle_StepFEA_DummyNode_IsNull(t: 'opencascade::handle< StepFEA_DummyNode > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_DummyNode_IsNull(t)
Handle_StepFEA_DummyNode_IsNull = _StepFEA.Handle_StepFEA_DummyNode_IsNull

def Handle_StepFEA_ElementGroup_Create() -> "opencascade::handle< StepFEA_ElementGroup >":
    return _StepFEA.Handle_StepFEA_ElementGroup_Create()
Handle_StepFEA_ElementGroup_Create = _StepFEA.Handle_StepFEA_ElementGroup_Create

def Handle_StepFEA_ElementGroup_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_ElementGroup >":
    return _StepFEA.Handle_StepFEA_ElementGroup_DownCast(t)
Handle_StepFEA_ElementGroup_DownCast = _StepFEA.Handle_StepFEA_ElementGroup_DownCast

def Handle_StepFEA_ElementGroup_IsNull(t: 'opencascade::handle< StepFEA_ElementGroup > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_ElementGroup_IsNull(t)
Handle_StepFEA_ElementGroup_IsNull = _StepFEA.Handle_StepFEA_ElementGroup_IsNull

def Handle_StepFEA_FeaAreaDensity_Create() -> "opencascade::handle< StepFEA_FeaAreaDensity >":
    return _StepFEA.Handle_StepFEA_FeaAreaDensity_Create()
Handle_StepFEA_FeaAreaDensity_Create = _StepFEA.Handle_StepFEA_FeaAreaDensity_Create

def Handle_StepFEA_FeaAreaDensity_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaAreaDensity >":
    return _StepFEA.Handle_StepFEA_FeaAreaDensity_DownCast(t)
Handle_StepFEA_FeaAreaDensity_DownCast = _StepFEA.Handle_StepFEA_FeaAreaDensity_DownCast

def Handle_StepFEA_FeaAreaDensity_IsNull(t: 'opencascade::handle< StepFEA_FeaAreaDensity > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaAreaDensity_IsNull(t)
Handle_StepFEA_FeaAreaDensity_IsNull = _StepFEA.Handle_StepFEA_FeaAreaDensity_IsNull

def Handle_StepFEA_FeaLinearElasticity_Create() -> "opencascade::handle< StepFEA_FeaLinearElasticity >":
    return _StepFEA.Handle_StepFEA_FeaLinearElasticity_Create()
Handle_StepFEA_FeaLinearElasticity_Create = _StepFEA.Handle_StepFEA_FeaLinearElasticity_Create

def Handle_StepFEA_FeaLinearElasticity_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaLinearElasticity >":
    return _StepFEA.Handle_StepFEA_FeaLinearElasticity_DownCast(t)
Handle_StepFEA_FeaLinearElasticity_DownCast = _StepFEA.Handle_StepFEA_FeaLinearElasticity_DownCast

def Handle_StepFEA_FeaLinearElasticity_IsNull(t: 'opencascade::handle< StepFEA_FeaLinearElasticity > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaLinearElasticity_IsNull(t)
Handle_StepFEA_FeaLinearElasticity_IsNull = _StepFEA.Handle_StepFEA_FeaLinearElasticity_IsNull

def Handle_StepFEA_FeaMassDensity_Create() -> "opencascade::handle< StepFEA_FeaMassDensity >":
    return _StepFEA.Handle_StepFEA_FeaMassDensity_Create()
Handle_StepFEA_FeaMassDensity_Create = _StepFEA.Handle_StepFEA_FeaMassDensity_Create

def Handle_StepFEA_FeaMassDensity_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaMassDensity >":
    return _StepFEA.Handle_StepFEA_FeaMassDensity_DownCast(t)
Handle_StepFEA_FeaMassDensity_DownCast = _StepFEA.Handle_StepFEA_FeaMassDensity_DownCast

def Handle_StepFEA_FeaMassDensity_IsNull(t: 'opencascade::handle< StepFEA_FeaMassDensity > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaMassDensity_IsNull(t)
Handle_StepFEA_FeaMassDensity_IsNull = _StepFEA.Handle_StepFEA_FeaMassDensity_IsNull

def Handle_StepFEA_FeaModel3d_Create() -> "opencascade::handle< StepFEA_FeaModel3d >":
    return _StepFEA.Handle_StepFEA_FeaModel3d_Create()
Handle_StepFEA_FeaModel3d_Create = _StepFEA.Handle_StepFEA_FeaModel3d_Create

def Handle_StepFEA_FeaModel3d_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaModel3d >":
    return _StepFEA.Handle_StepFEA_FeaModel3d_DownCast(t)
Handle_StepFEA_FeaModel3d_DownCast = _StepFEA.Handle_StepFEA_FeaModel3d_DownCast

def Handle_StepFEA_FeaModel3d_IsNull(t: 'opencascade::handle< StepFEA_FeaModel3d > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaModel3d_IsNull(t)
Handle_StepFEA_FeaModel3d_IsNull = _StepFEA.Handle_StepFEA_FeaModel3d_IsNull

def Handle_StepFEA_FeaMoistureAbsorption_Create() -> "opencascade::handle< StepFEA_FeaMoistureAbsorption >":
    return _StepFEA.Handle_StepFEA_FeaMoistureAbsorption_Create()
Handle_StepFEA_FeaMoistureAbsorption_Create = _StepFEA.Handle_StepFEA_FeaMoistureAbsorption_Create

def Handle_StepFEA_FeaMoistureAbsorption_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaMoistureAbsorption >":
    return _StepFEA.Handle_StepFEA_FeaMoistureAbsorption_DownCast(t)
Handle_StepFEA_FeaMoistureAbsorption_DownCast = _StepFEA.Handle_StepFEA_FeaMoistureAbsorption_DownCast

def Handle_StepFEA_FeaMoistureAbsorption_IsNull(t: 'opencascade::handle< StepFEA_FeaMoistureAbsorption > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaMoistureAbsorption_IsNull(t)
Handle_StepFEA_FeaMoistureAbsorption_IsNull = _StepFEA.Handle_StepFEA_FeaMoistureAbsorption_IsNull

def Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_Create() -> "opencascade::handle< StepFEA_FeaSecantCoefficientOfLinearThermalExpansion >":
    return _StepFEA.Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_Create()
Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_Create = _StepFEA.Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_Create

def Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaSecantCoefficientOfLinearThermalExpansion >":
    return _StepFEA.Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_DownCast(t)
Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_DownCast = _StepFEA.Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_DownCast

def Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_IsNull(t: 'opencascade::handle< StepFEA_FeaSecantCoefficientOfLinearThermalExpansion > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_IsNull(t)
Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_IsNull = _StepFEA.Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_IsNull

def Handle_StepFEA_FeaShellBendingStiffness_Create() -> "opencascade::handle< StepFEA_FeaShellBendingStiffness >":
    return _StepFEA.Handle_StepFEA_FeaShellBendingStiffness_Create()
Handle_StepFEA_FeaShellBendingStiffness_Create = _StepFEA.Handle_StepFEA_FeaShellBendingStiffness_Create

def Handle_StepFEA_FeaShellBendingStiffness_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaShellBendingStiffness >":
    return _StepFEA.Handle_StepFEA_FeaShellBendingStiffness_DownCast(t)
Handle_StepFEA_FeaShellBendingStiffness_DownCast = _StepFEA.Handle_StepFEA_FeaShellBendingStiffness_DownCast

def Handle_StepFEA_FeaShellBendingStiffness_IsNull(t: 'opencascade::handle< StepFEA_FeaShellBendingStiffness > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaShellBendingStiffness_IsNull(t)
Handle_StepFEA_FeaShellBendingStiffness_IsNull = _StepFEA.Handle_StepFEA_FeaShellBendingStiffness_IsNull

def Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_Create() -> "opencascade::handle< StepFEA_FeaShellMembraneBendingCouplingStiffness >":
    return _StepFEA.Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_Create()
Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_Create = _StepFEA.Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_Create

def Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaShellMembraneBendingCouplingStiffness >":
    return _StepFEA.Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_DownCast(t)
Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_DownCast = _StepFEA.Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_DownCast

def Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_IsNull(t: 'opencascade::handle< StepFEA_FeaShellMembraneBendingCouplingStiffness > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_IsNull(t)
Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_IsNull = _StepFEA.Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_IsNull

def Handle_StepFEA_FeaShellMembraneStiffness_Create() -> "opencascade::handle< StepFEA_FeaShellMembraneStiffness >":
    return _StepFEA.Handle_StepFEA_FeaShellMembraneStiffness_Create()
Handle_StepFEA_FeaShellMembraneStiffness_Create = _StepFEA.Handle_StepFEA_FeaShellMembraneStiffness_Create

def Handle_StepFEA_FeaShellMembraneStiffness_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaShellMembraneStiffness >":
    return _StepFEA.Handle_StepFEA_FeaShellMembraneStiffness_DownCast(t)
Handle_StepFEA_FeaShellMembraneStiffness_DownCast = _StepFEA.Handle_StepFEA_FeaShellMembraneStiffness_DownCast

def Handle_StepFEA_FeaShellMembraneStiffness_IsNull(t: 'opencascade::handle< StepFEA_FeaShellMembraneStiffness > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaShellMembraneStiffness_IsNull(t)
Handle_StepFEA_FeaShellMembraneStiffness_IsNull = _StepFEA.Handle_StepFEA_FeaShellMembraneStiffness_IsNull

def Handle_StepFEA_FeaShellShearStiffness_Create() -> "opencascade::handle< StepFEA_FeaShellShearStiffness >":
    return _StepFEA.Handle_StepFEA_FeaShellShearStiffness_Create()
Handle_StepFEA_FeaShellShearStiffness_Create = _StepFEA.Handle_StepFEA_FeaShellShearStiffness_Create

def Handle_StepFEA_FeaShellShearStiffness_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaShellShearStiffness >":
    return _StepFEA.Handle_StepFEA_FeaShellShearStiffness_DownCast(t)
Handle_StepFEA_FeaShellShearStiffness_DownCast = _StepFEA.Handle_StepFEA_FeaShellShearStiffness_DownCast

def Handle_StepFEA_FeaShellShearStiffness_IsNull(t: 'opencascade::handle< StepFEA_FeaShellShearStiffness > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaShellShearStiffness_IsNull(t)
Handle_StepFEA_FeaShellShearStiffness_IsNull = _StepFEA.Handle_StepFEA_FeaShellShearStiffness_IsNull

def Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_Create() -> "opencascade::handle< StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion >":
    return _StepFEA.Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_Create()
Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_Create = _StepFEA.Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_Create

def Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion >":
    return _StepFEA.Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_DownCast(t)
Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_DownCast = _StepFEA.Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_DownCast

def Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_IsNull(t: 'opencascade::handle< StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_IsNull(t)
Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_IsNull = _StepFEA.Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_IsNull

def Handle_StepFEA_GeometricNode_Create() -> "opencascade::handle< StepFEA_GeometricNode >":
    return _StepFEA.Handle_StepFEA_GeometricNode_Create()
Handle_StepFEA_GeometricNode_Create = _StepFEA.Handle_StepFEA_GeometricNode_Create

def Handle_StepFEA_GeometricNode_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_GeometricNode >":
    return _StepFEA.Handle_StepFEA_GeometricNode_DownCast(t)
Handle_StepFEA_GeometricNode_DownCast = _StepFEA.Handle_StepFEA_GeometricNode_DownCast

def Handle_StepFEA_GeometricNode_IsNull(t: 'opencascade::handle< StepFEA_GeometricNode > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_GeometricNode_IsNull(t)
Handle_StepFEA_GeometricNode_IsNull = _StepFEA.Handle_StepFEA_GeometricNode_IsNull

def Handle_StepFEA_Node_Create() -> "opencascade::handle< StepFEA_Node >":
    return _StepFEA.Handle_StepFEA_Node_Create()
Handle_StepFEA_Node_Create = _StepFEA.Handle_StepFEA_Node_Create

def Handle_StepFEA_Node_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_Node >":
    return _StepFEA.Handle_StepFEA_Node_DownCast(t)
Handle_StepFEA_Node_DownCast = _StepFEA.Handle_StepFEA_Node_DownCast

def Handle_StepFEA_Node_IsNull(t: 'opencascade::handle< StepFEA_Node > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_Node_IsNull(t)
Handle_StepFEA_Node_IsNull = _StepFEA.Handle_StepFEA_Node_IsNull

def Handle_StepFEA_NodeGroup_Create() -> "opencascade::handle< StepFEA_NodeGroup >":
    return _StepFEA.Handle_StepFEA_NodeGroup_Create()
Handle_StepFEA_NodeGroup_Create = _StepFEA.Handle_StepFEA_NodeGroup_Create

def Handle_StepFEA_NodeGroup_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_NodeGroup >":
    return _StepFEA.Handle_StepFEA_NodeGroup_DownCast(t)
Handle_StepFEA_NodeGroup_DownCast = _StepFEA.Handle_StepFEA_NodeGroup_DownCast

def Handle_StepFEA_NodeGroup_IsNull(t: 'opencascade::handle< StepFEA_NodeGroup > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_NodeGroup_IsNull(t)
Handle_StepFEA_NodeGroup_IsNull = _StepFEA.Handle_StepFEA_NodeGroup_IsNull

def Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_Create() -> "opencascade::handle< StepFEA_ParametricCurve3dElementCoordinateDirection >":
    return _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_Create()
Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_Create = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_Create

def Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_ParametricCurve3dElementCoordinateDirection >":
    return _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_DownCast(t)
Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_DownCast = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_DownCast

def Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_IsNull(t: 'opencascade::handle< StepFEA_ParametricCurve3dElementCoordinateDirection > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_IsNull(t)
Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_IsNull = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_IsNull

def Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_Create() -> "opencascade::handle< StepFEA_ParametricCurve3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_Create()
Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_Create

def Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_ParametricCurve3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_DownCast(t)
Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_DownCast

def Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_IsNull(t: 'opencascade::handle< StepFEA_ParametricCurve3dElementCoordinateSystem > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_IsNull(t)
Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_IsNull

def Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_Create() -> "opencascade::handle< StepFEA_ParametricSurface3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_Create()
Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_Create

def Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_ParametricSurface3dElementCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_DownCast(t)
Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_DownCast

def Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_IsNull(t: 'opencascade::handle< StepFEA_ParametricSurface3dElementCoordinateSystem > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_IsNull(t)
Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_IsNull

def Handle_StepFEA_Surface3dElementRepresentation_Create() -> "opencascade::handle< StepFEA_Surface3dElementRepresentation >":
    return _StepFEA.Handle_StepFEA_Surface3dElementRepresentation_Create()
Handle_StepFEA_Surface3dElementRepresentation_Create = _StepFEA.Handle_StepFEA_Surface3dElementRepresentation_Create

def Handle_StepFEA_Surface3dElementRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_Surface3dElementRepresentation >":
    return _StepFEA.Handle_StepFEA_Surface3dElementRepresentation_DownCast(t)
Handle_StepFEA_Surface3dElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_Surface3dElementRepresentation_DownCast

def Handle_StepFEA_Surface3dElementRepresentation_IsNull(t: 'opencascade::handle< StepFEA_Surface3dElementRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_Surface3dElementRepresentation_IsNull(t)
Handle_StepFEA_Surface3dElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_Surface3dElementRepresentation_IsNull

def Handle_StepFEA_Volume3dElementRepresentation_Create() -> "opencascade::handle< StepFEA_Volume3dElementRepresentation >":
    return _StepFEA.Handle_StepFEA_Volume3dElementRepresentation_Create()
Handle_StepFEA_Volume3dElementRepresentation_Create = _StepFEA.Handle_StepFEA_Volume3dElementRepresentation_Create

def Handle_StepFEA_Volume3dElementRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_Volume3dElementRepresentation >":
    return _StepFEA.Handle_StepFEA_Volume3dElementRepresentation_DownCast(t)
Handle_StepFEA_Volume3dElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_Volume3dElementRepresentation_DownCast

def Handle_StepFEA_Volume3dElementRepresentation_IsNull(t: 'opencascade::handle< StepFEA_Volume3dElementRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_Volume3dElementRepresentation_IsNull(t)
Handle_StepFEA_Volume3dElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_Volume3dElementRepresentation_IsNull

def Handle_StepFEA_NodeWithSolutionCoordinateSystem_Create() -> "opencascade::handle< StepFEA_NodeWithSolutionCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_NodeWithSolutionCoordinateSystem_Create()
Handle_StepFEA_NodeWithSolutionCoordinateSystem_Create = _StepFEA.Handle_StepFEA_NodeWithSolutionCoordinateSystem_Create

def Handle_StepFEA_NodeWithSolutionCoordinateSystem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_NodeWithSolutionCoordinateSystem >":
    return _StepFEA.Handle_StepFEA_NodeWithSolutionCoordinateSystem_DownCast(t)
Handle_StepFEA_NodeWithSolutionCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_NodeWithSolutionCoordinateSystem_DownCast

def Handle_StepFEA_NodeWithSolutionCoordinateSystem_IsNull(t: 'opencascade::handle< StepFEA_NodeWithSolutionCoordinateSystem > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_NodeWithSolutionCoordinateSystem_IsNull(t)
Handle_StepFEA_NodeWithSolutionCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_NodeWithSolutionCoordinateSystem_IsNull

def Handle_StepFEA_NodeWithVector_Create() -> "opencascade::handle< StepFEA_NodeWithVector >":
    return _StepFEA.Handle_StepFEA_NodeWithVector_Create()
Handle_StepFEA_NodeWithVector_Create = _StepFEA.Handle_StepFEA_NodeWithVector_Create

def Handle_StepFEA_NodeWithVector_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_NodeWithVector >":
    return _StepFEA.Handle_StepFEA_NodeWithVector_DownCast(t)
Handle_StepFEA_NodeWithVector_DownCast = _StepFEA.Handle_StepFEA_NodeWithVector_DownCast

def Handle_StepFEA_NodeWithVector_IsNull(t: 'opencascade::handle< StepFEA_NodeWithVector > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_NodeWithVector_IsNull(t)
Handle_StepFEA_NodeWithVector_IsNull = _StepFEA.Handle_StepFEA_NodeWithVector_IsNull

def Handle_StepFEA_HArray1OfCurveElementInterval_Create() -> "opencascade::handle< StepFEA_HArray1OfCurveElementInterval >":
    return _StepFEA.Handle_StepFEA_HArray1OfCurveElementInterval_Create()
Handle_StepFEA_HArray1OfCurveElementInterval_Create = _StepFEA.Handle_StepFEA_HArray1OfCurveElementInterval_Create

def Handle_StepFEA_HArray1OfCurveElementInterval_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HArray1OfCurveElementInterval >":
    return _StepFEA.Handle_StepFEA_HArray1OfCurveElementInterval_DownCast(t)
Handle_StepFEA_HArray1OfCurveElementInterval_DownCast = _StepFEA.Handle_StepFEA_HArray1OfCurveElementInterval_DownCast

def Handle_StepFEA_HArray1OfCurveElementInterval_IsNull(t: 'opencascade::handle< StepFEA_HArray1OfCurveElementInterval > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HArray1OfCurveElementInterval_IsNull(t)
Handle_StepFEA_HArray1OfCurveElementInterval_IsNull = _StepFEA.Handle_StepFEA_HArray1OfCurveElementInterval_IsNull

def Handle_StepFEA_HArray1OfCurveElementEndOffset_Create() -> "opencascade::handle< StepFEA_HArray1OfCurveElementEndOffset >":
    return _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndOffset_Create()
Handle_StepFEA_HArray1OfCurveElementEndOffset_Create = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndOffset_Create

def Handle_StepFEA_HArray1OfCurveElementEndOffset_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HArray1OfCurveElementEndOffset >":
    return _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndOffset_DownCast(t)
Handle_StepFEA_HArray1OfCurveElementEndOffset_DownCast = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndOffset_DownCast

def Handle_StepFEA_HArray1OfCurveElementEndOffset_IsNull(t: 'opencascade::handle< StepFEA_HArray1OfCurveElementEndOffset > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndOffset_IsNull(t)
Handle_StepFEA_HArray1OfCurveElementEndOffset_IsNull = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndOffset_IsNull

def Handle_StepFEA_HArray1OfElementRepresentation_Create() -> "opencascade::handle< StepFEA_HArray1OfElementRepresentation >":
    return _StepFEA.Handle_StepFEA_HArray1OfElementRepresentation_Create()
Handle_StepFEA_HArray1OfElementRepresentation_Create = _StepFEA.Handle_StepFEA_HArray1OfElementRepresentation_Create

def Handle_StepFEA_HArray1OfElementRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HArray1OfElementRepresentation >":
    return _StepFEA.Handle_StepFEA_HArray1OfElementRepresentation_DownCast(t)
Handle_StepFEA_HArray1OfElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_HArray1OfElementRepresentation_DownCast

def Handle_StepFEA_HArray1OfElementRepresentation_IsNull(t: 'opencascade::handle< StepFEA_HArray1OfElementRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HArray1OfElementRepresentation_IsNull(t)
Handle_StepFEA_HArray1OfElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_HArray1OfElementRepresentation_IsNull

def Handle_StepFEA_HArray1OfCurveElementEndRelease_Create() -> "opencascade::handle< StepFEA_HArray1OfCurveElementEndRelease >":
    return _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndRelease_Create()
Handle_StepFEA_HArray1OfCurveElementEndRelease_Create = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndRelease_Create

def Handle_StepFEA_HArray1OfCurveElementEndRelease_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HArray1OfCurveElementEndRelease >":
    return _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndRelease_DownCast(t)
Handle_StepFEA_HArray1OfCurveElementEndRelease_DownCast = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndRelease_DownCast

def Handle_StepFEA_HArray1OfCurveElementEndRelease_IsNull(t: 'opencascade::handle< StepFEA_HArray1OfCurveElementEndRelease > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndRelease_IsNull(t)
Handle_StepFEA_HArray1OfCurveElementEndRelease_IsNull = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndRelease_IsNull

def Handle_StepFEA_HArray1OfDegreeOfFreedom_Create() -> "opencascade::handle< StepFEA_HArray1OfDegreeOfFreedom >":
    return _StepFEA.Handle_StepFEA_HArray1OfDegreeOfFreedom_Create()
Handle_StepFEA_HArray1OfDegreeOfFreedom_Create = _StepFEA.Handle_StepFEA_HArray1OfDegreeOfFreedom_Create

def Handle_StepFEA_HArray1OfDegreeOfFreedom_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HArray1OfDegreeOfFreedom >":
    return _StepFEA.Handle_StepFEA_HArray1OfDegreeOfFreedom_DownCast(t)
Handle_StepFEA_HArray1OfDegreeOfFreedom_DownCast = _StepFEA.Handle_StepFEA_HArray1OfDegreeOfFreedom_DownCast

def Handle_StepFEA_HArray1OfDegreeOfFreedom_IsNull(t: 'opencascade::handle< StepFEA_HArray1OfDegreeOfFreedom > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HArray1OfDegreeOfFreedom_IsNull(t)
Handle_StepFEA_HArray1OfDegreeOfFreedom_IsNull = _StepFEA.Handle_StepFEA_HArray1OfDegreeOfFreedom_IsNull

def Handle_StepFEA_HArray1OfNodeRepresentation_Create() -> "opencascade::handle< StepFEA_HArray1OfNodeRepresentation >":
    return _StepFEA.Handle_StepFEA_HArray1OfNodeRepresentation_Create()
Handle_StepFEA_HArray1OfNodeRepresentation_Create = _StepFEA.Handle_StepFEA_HArray1OfNodeRepresentation_Create

def Handle_StepFEA_HArray1OfNodeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HArray1OfNodeRepresentation >":
    return _StepFEA.Handle_StepFEA_HArray1OfNodeRepresentation_DownCast(t)
Handle_StepFEA_HArray1OfNodeRepresentation_DownCast = _StepFEA.Handle_StepFEA_HArray1OfNodeRepresentation_DownCast

def Handle_StepFEA_HArray1OfNodeRepresentation_IsNull(t: 'opencascade::handle< StepFEA_HArray1OfNodeRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HArray1OfNodeRepresentation_IsNull(t)
Handle_StepFEA_HArray1OfNodeRepresentation_IsNull = _StepFEA.Handle_StepFEA_HArray1OfNodeRepresentation_IsNull

def Handle_StepFEA_HSequenceOfElementRepresentation_Create() -> "opencascade::handle< StepFEA_HSequenceOfElementRepresentation >":
    return _StepFEA.Handle_StepFEA_HSequenceOfElementRepresentation_Create()
Handle_StepFEA_HSequenceOfElementRepresentation_Create = _StepFEA.Handle_StepFEA_HSequenceOfElementRepresentation_Create

def Handle_StepFEA_HSequenceOfElementRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HSequenceOfElementRepresentation >":
    return _StepFEA.Handle_StepFEA_HSequenceOfElementRepresentation_DownCast(t)
Handle_StepFEA_HSequenceOfElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_HSequenceOfElementRepresentation_DownCast

def Handle_StepFEA_HSequenceOfElementRepresentation_IsNull(t: 'opencascade::handle< StepFEA_HSequenceOfElementRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HSequenceOfElementRepresentation_IsNull(t)
Handle_StepFEA_HSequenceOfElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_HSequenceOfElementRepresentation_IsNull

def Handle_StepFEA_HSequenceOfElementGeometricRelationship_Create() -> "opencascade::handle< StepFEA_HSequenceOfElementGeometricRelationship >":
    return _StepFEA.Handle_StepFEA_HSequenceOfElementGeometricRelationship_Create()
Handle_StepFEA_HSequenceOfElementGeometricRelationship_Create = _StepFEA.Handle_StepFEA_HSequenceOfElementGeometricRelationship_Create

def Handle_StepFEA_HSequenceOfElementGeometricRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HSequenceOfElementGeometricRelationship >":
    return _StepFEA.Handle_StepFEA_HSequenceOfElementGeometricRelationship_DownCast(t)
Handle_StepFEA_HSequenceOfElementGeometricRelationship_DownCast = _StepFEA.Handle_StepFEA_HSequenceOfElementGeometricRelationship_DownCast

def Handle_StepFEA_HSequenceOfElementGeometricRelationship_IsNull(t: 'opencascade::handle< StepFEA_HSequenceOfElementGeometricRelationship > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HSequenceOfElementGeometricRelationship_IsNull(t)
Handle_StepFEA_HSequenceOfElementGeometricRelationship_IsNull = _StepFEA.Handle_StepFEA_HSequenceOfElementGeometricRelationship_IsNull

def Handle_StepFEA_HSequenceOfNodeRepresentation_Create() -> "opencascade::handle< StepFEA_HSequenceOfNodeRepresentation >":
    return _StepFEA.Handle_StepFEA_HSequenceOfNodeRepresentation_Create()
Handle_StepFEA_HSequenceOfNodeRepresentation_Create = _StepFEA.Handle_StepFEA_HSequenceOfNodeRepresentation_Create

def Handle_StepFEA_HSequenceOfNodeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HSequenceOfNodeRepresentation >":
    return _StepFEA.Handle_StepFEA_HSequenceOfNodeRepresentation_DownCast(t)
Handle_StepFEA_HSequenceOfNodeRepresentation_DownCast = _StepFEA.Handle_StepFEA_HSequenceOfNodeRepresentation_DownCast

def Handle_StepFEA_HSequenceOfNodeRepresentation_IsNull(t: 'opencascade::handle< StepFEA_HSequenceOfNodeRepresentation > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HSequenceOfNodeRepresentation_IsNull(t)
Handle_StepFEA_HSequenceOfNodeRepresentation_IsNull = _StepFEA.Handle_StepFEA_HSequenceOfNodeRepresentation_IsNull

def Handle_StepFEA_HSequenceOfCurve3dElementProperty_Create() -> "opencascade::handle< StepFEA_HSequenceOfCurve3dElementProperty >":
    return _StepFEA.Handle_StepFEA_HSequenceOfCurve3dElementProperty_Create()
Handle_StepFEA_HSequenceOfCurve3dElementProperty_Create = _StepFEA.Handle_StepFEA_HSequenceOfCurve3dElementProperty_Create

def Handle_StepFEA_HSequenceOfCurve3dElementProperty_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepFEA_HSequenceOfCurve3dElementProperty >":
    return _StepFEA.Handle_StepFEA_HSequenceOfCurve3dElementProperty_DownCast(t)
Handle_StepFEA_HSequenceOfCurve3dElementProperty_DownCast = _StepFEA.Handle_StepFEA_HSequenceOfCurve3dElementProperty_DownCast

def Handle_StepFEA_HSequenceOfCurve3dElementProperty_IsNull(t: 'opencascade::handle< StepFEA_HSequenceOfCurve3dElementProperty > const &') -> "bool":
    return _StepFEA.Handle_StepFEA_HSequenceOfCurve3dElementProperty_IsNull(t)
Handle_StepFEA_HSequenceOfCurve3dElementProperty_IsNull = _StepFEA.Handle_StepFEA_HSequenceOfCurve3dElementProperty_IsNull
class StepFEA_SequenceOfElementRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_SequenceOfElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_SequenceOfElementRepresentation(*args))
    delNode = staticmethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_delNode)
    __swig_destroy__ = _StepFEA.delete_StepFEA_SequenceOfElementRepresentation
StepFEA_SequenceOfElementRepresentation.begin = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_begin, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.end = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_end, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.cbegin = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_cbegin, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.cend = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_cend, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Size = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Size, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Length = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Length, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Lower = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Lower, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Upper = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Upper, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.IsEmpty = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_IsEmpty, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Reverse = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Reverse, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Exchange = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Exchange, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Clear = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Clear, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Assign = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Assign, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Set = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Set, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Remove = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Remove, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Append = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Append, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Prepend = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Prepend, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.InsertBefore = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_InsertBefore, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.InsertAfter = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_InsertAfter, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Split = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Split, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.First = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_First, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_ChangeFirst, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Last = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Last, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.ChangeLast = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_ChangeLast, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.Value = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_Value, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.ChangeValue = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_ChangeValue, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.__call__ = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation___call__, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation.SetValue = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementRepresentation_SetValue, None, StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation_swigregister = _StepFEA.StepFEA_SequenceOfElementRepresentation_swigregister
StepFEA_SequenceOfElementRepresentation_swigregister(StepFEA_SequenceOfElementRepresentation)

def StepFEA_SequenceOfElementRepresentation_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepFEA.StepFEA_SequenceOfElementRepresentation_delNode(theNode, theAl)
StepFEA_SequenceOfElementRepresentation_delNode = _StepFEA.StepFEA_SequenceOfElementRepresentation_delNode

class StepFEA_SequenceOfCurve3dElementProperty(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_SequenceOfCurve3dElementProperty_swiginit(self, _StepFEA.new_StepFEA_SequenceOfCurve3dElementProperty(*args))
    delNode = staticmethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_delNode)
    __swig_destroy__ = _StepFEA.delete_StepFEA_SequenceOfCurve3dElementProperty
StepFEA_SequenceOfCurve3dElementProperty.begin = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_begin, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.end = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_end, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.cbegin = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_cbegin, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.cend = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_cend, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Size = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Size, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Length = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Length, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Lower = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Lower, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Upper = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Upper, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.IsEmpty = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_IsEmpty, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Reverse = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Reverse, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Exchange = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Exchange, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Clear = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Clear, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Assign = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Assign, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Set = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Set, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Remove = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Remove, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Append = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Append, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Prepend = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Prepend, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.InsertBefore = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_InsertBefore, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.InsertAfter = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_InsertAfter, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Split = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Split, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.First = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_First, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_ChangeFirst, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Last = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Last, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.ChangeLast = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_ChangeLast, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.Value = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Value, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.ChangeValue = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_ChangeValue, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.__call__ = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty___call__, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty.SetValue = new_instancemethod(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_SetValue, None, StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty_swigregister = _StepFEA.StepFEA_SequenceOfCurve3dElementProperty_swigregister
StepFEA_SequenceOfCurve3dElementProperty_swigregister(StepFEA_SequenceOfCurve3dElementProperty)

def StepFEA_SequenceOfCurve3dElementProperty_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepFEA.StepFEA_SequenceOfCurve3dElementProperty_delNode(theNode, theAl)
StepFEA_SequenceOfCurve3dElementProperty_delNode = _StepFEA.StepFEA_SequenceOfCurve3dElementProperty_delNode

class StepFEA_SequenceOfNodeRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_SequenceOfNodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_SequenceOfNodeRepresentation(*args))
    delNode = staticmethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_delNode)
    __swig_destroy__ = _StepFEA.delete_StepFEA_SequenceOfNodeRepresentation
StepFEA_SequenceOfNodeRepresentation.begin = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_begin, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.end = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_end, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.cbegin = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_cbegin, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.cend = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_cend, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Size = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Size, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Length = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Length, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Lower = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Lower, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Upper = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Upper, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.IsEmpty = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_IsEmpty, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Reverse = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Reverse, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Exchange = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Exchange, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Clear = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Clear, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Assign = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Assign, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Set = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Set, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Remove = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Remove, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Append = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Append, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Prepend = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Prepend, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.InsertBefore = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_InsertBefore, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.InsertAfter = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_InsertAfter, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Split = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Split, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.First = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_First, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_ChangeFirst, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Last = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Last, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.ChangeLast = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_ChangeLast, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.Value = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Value, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.ChangeValue = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_ChangeValue, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.__call__ = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation___call__, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation.SetValue = new_instancemethod(_StepFEA.StepFEA_SequenceOfNodeRepresentation_SetValue, None, StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation_swigregister = _StepFEA.StepFEA_SequenceOfNodeRepresentation_swigregister
StepFEA_SequenceOfNodeRepresentation_swigregister(StepFEA_SequenceOfNodeRepresentation)

def StepFEA_SequenceOfNodeRepresentation_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepFEA.StepFEA_SequenceOfNodeRepresentation_delNode(theNode, theAl)
StepFEA_SequenceOfNodeRepresentation_delNode = _StepFEA.StepFEA_SequenceOfNodeRepresentation_delNode

class StepFEA_SequenceOfElementGeometricRelationship(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_SequenceOfElementGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_SequenceOfElementGeometricRelationship(*args))
    delNode = staticmethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_delNode)
    __swig_destroy__ = _StepFEA.delete_StepFEA_SequenceOfElementGeometricRelationship
StepFEA_SequenceOfElementGeometricRelationship.begin = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_begin, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.end = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_end, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.cbegin = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_cbegin, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.cend = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_cend, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Size = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Size, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Length = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Length, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Lower = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Lower, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Upper = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Upper, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.IsEmpty = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_IsEmpty, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Reverse = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Reverse, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Exchange = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Exchange, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Clear = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Clear, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Assign = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Assign, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Set = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Set, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Remove = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Remove, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Append = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Append, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Prepend = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Prepend, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.InsertBefore = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_InsertBefore, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.InsertAfter = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_InsertAfter, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Split = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Split, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.First = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_First, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_ChangeFirst, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Last = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Last, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.ChangeLast = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_ChangeLast, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.Value = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Value, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.ChangeValue = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_ChangeValue, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.__call__ = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship___call__, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship.SetValue = new_instancemethod(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_SetValue, None, StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship_swigregister = _StepFEA.StepFEA_SequenceOfElementGeometricRelationship_swigregister
StepFEA_SequenceOfElementGeometricRelationship_swigregister(StepFEA_SequenceOfElementGeometricRelationship)

def StepFEA_SequenceOfElementGeometricRelationship_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepFEA.StepFEA_SequenceOfElementGeometricRelationship_delNode(theNode, theAl)
StepFEA_SequenceOfElementGeometricRelationship_delNode = _StepFEA.StepFEA_SequenceOfElementGeometricRelationship_delNode

class StepFEA_Array1OfDegreeOfFreedom(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfDegreeOfFreedom_swiginit(self, _StepFEA.new_StepFEA_Array1OfDegreeOfFreedom(*args))
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfDegreeOfFreedom

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepFEA_Array1OfDegreeOfFreedom.begin = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_begin, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.end = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_end, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.cbegin = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_cbegin, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.cend = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_cend, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Init = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Init, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Size = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Size, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Length = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Length, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.IsEmpty = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_IsEmpty, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Lower = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Lower, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Upper = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Upper, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.IsDeletable = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_IsDeletable, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.IsAllocated = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_IsAllocated, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Assign = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Assign, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Move = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Move, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Set = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Set, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.First = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_First, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_ChangeFirst, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Last = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Last, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.ChangeLast = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_ChangeLast, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Value = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Value, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.ChangeValue = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_ChangeValue, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.__call__ = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom___call__, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.SetValue = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_SetValue, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom.Resize = new_instancemethod(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Resize, None, StepFEA_Array1OfDegreeOfFreedom)
StepFEA_Array1OfDegreeOfFreedom_swigregister = _StepFEA.StepFEA_Array1OfDegreeOfFreedom_swigregister
StepFEA_Array1OfDegreeOfFreedom_swigregister(StepFEA_Array1OfDegreeOfFreedom)

class StepFEA_Array1OfCurveElementEndRelease(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfCurveElementEndRelease_swiginit(self, _StepFEA.new_StepFEA_Array1OfCurveElementEndRelease(*args))
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfCurveElementEndRelease

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepFEA_Array1OfCurveElementEndRelease.begin = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_begin, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.end = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_end, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.cbegin = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_cbegin, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.cend = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_cend, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Init = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Init, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Size = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Size, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Length = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Length, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.IsEmpty = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_IsEmpty, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Lower = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Lower, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Upper = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Upper, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.IsDeletable = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_IsDeletable, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.IsAllocated = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_IsAllocated, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Assign = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Assign, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Move = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Move, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Set = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Set, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.First = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_First, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_ChangeFirst, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Last = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Last, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.ChangeLast = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_ChangeLast, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Value = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Value, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.ChangeValue = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_ChangeValue, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.__call__ = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease___call__, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.SetValue = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_SetValue, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease.Resize = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Resize, None, StepFEA_Array1OfCurveElementEndRelease)
StepFEA_Array1OfCurveElementEndRelease_swigregister = _StepFEA.StepFEA_Array1OfCurveElementEndRelease_swigregister
StepFEA_Array1OfCurveElementEndRelease_swigregister(StepFEA_Array1OfCurveElementEndRelease)

class StepFEA_Array1OfCurveElementInterval(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfCurveElementInterval_swiginit(self, _StepFEA.new_StepFEA_Array1OfCurveElementInterval(*args))
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfCurveElementInterval

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepFEA_Array1OfCurveElementInterval.begin = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_begin, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.end = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_end, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.cbegin = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_cbegin, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.cend = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_cend, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Init = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Init, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Size = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Size, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Length = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Length, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.IsEmpty = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_IsEmpty, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Lower = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Lower, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Upper = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Upper, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.IsDeletable = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_IsDeletable, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.IsAllocated = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_IsAllocated, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Assign = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Assign, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Move = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Move, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Set = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Set, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.First = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_First, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_ChangeFirst, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Last = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Last, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.ChangeLast = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_ChangeLast, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Value = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Value, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.ChangeValue = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_ChangeValue, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.__call__ = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval___call__, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.SetValue = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_SetValue, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval.Resize = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementInterval_Resize, None, StepFEA_Array1OfCurveElementInterval)
StepFEA_Array1OfCurveElementInterval_swigregister = _StepFEA.StepFEA_Array1OfCurveElementInterval_swigregister
StepFEA_Array1OfCurveElementInterval_swigregister(StepFEA_Array1OfCurveElementInterval)

class StepFEA_Array1OfNodeRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfNodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_Array1OfNodeRepresentation(*args))
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfNodeRepresentation

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepFEA_Array1OfNodeRepresentation.begin = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_begin, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.end = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_end, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.cbegin = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_cbegin, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.cend = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_cend, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Init = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Init, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Size = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Size, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Length = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Length, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.IsEmpty = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_IsEmpty, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Lower = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Lower, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Upper = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Upper, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.IsDeletable = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_IsDeletable, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.IsAllocated = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_IsAllocated, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Assign = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Assign, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Move = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Move, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Set = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Set, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.First = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_First, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_ChangeFirst, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Last = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Last, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.ChangeLast = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_ChangeLast, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Value = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Value, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.ChangeValue = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_ChangeValue, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.__call__ = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation___call__, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.SetValue = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_SetValue, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation.Resize = new_instancemethod(_StepFEA.StepFEA_Array1OfNodeRepresentation_Resize, None, StepFEA_Array1OfNodeRepresentation)
StepFEA_Array1OfNodeRepresentation_swigregister = _StepFEA.StepFEA_Array1OfNodeRepresentation_swigregister
StepFEA_Array1OfNodeRepresentation_swigregister(StepFEA_Array1OfNodeRepresentation)

class StepFEA_Array1OfElementRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_Array1OfElementRepresentation(*args))
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfElementRepresentation

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepFEA_Array1OfElementRepresentation.begin = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_begin, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.end = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_end, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.cbegin = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_cbegin, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.cend = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_cend, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Init = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Init, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Size = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Size, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Length = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Length, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.IsEmpty = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_IsEmpty, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Lower = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Lower, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Upper = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Upper, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.IsDeletable = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_IsDeletable, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.IsAllocated = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_IsAllocated, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Assign = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Assign, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Move = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Move, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Set = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Set, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.First = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_First, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_ChangeFirst, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Last = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Last, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.ChangeLast = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_ChangeLast, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Value = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Value, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.ChangeValue = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_ChangeValue, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.__call__ = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation___call__, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.SetValue = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_SetValue, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation.Resize = new_instancemethod(_StepFEA.StepFEA_Array1OfElementRepresentation_Resize, None, StepFEA_Array1OfElementRepresentation)
StepFEA_Array1OfElementRepresentation_swigregister = _StepFEA.StepFEA_Array1OfElementRepresentation_swigregister
StepFEA_Array1OfElementRepresentation_swigregister(StepFEA_Array1OfElementRepresentation)

class StepFEA_Array1OfCurveElementEndOffset(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfCurveElementEndOffset_swiginit(self, _StepFEA.new_StepFEA_Array1OfCurveElementEndOffset(*args))
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfCurveElementEndOffset

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepFEA_Array1OfCurveElementEndOffset.begin = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_begin, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.end = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_end, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.cbegin = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_cbegin, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.cend = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_cend, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Init = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Init, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Size = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Size, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Length = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Length, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.IsEmpty = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_IsEmpty, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Lower = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Lower, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Upper = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Upper, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.IsDeletable = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_IsDeletable, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.IsAllocated = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_IsAllocated, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Assign = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Assign, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Move = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Move, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Set = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Set, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.First = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_First, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.ChangeFirst = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_ChangeFirst, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Last = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Last, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.ChangeLast = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_ChangeLast, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Value = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Value, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.ChangeValue = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_ChangeValue, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.__call__ = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset___call__, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.SetValue = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_SetValue, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset.Resize = new_instancemethod(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Resize, None, StepFEA_Array1OfCurveElementEndOffset)
StepFEA_Array1OfCurveElementEndOffset_swigregister = _StepFEA.StepFEA_Array1OfCurveElementEndOffset_swigregister
StepFEA_Array1OfCurveElementEndOffset_swigregister(StepFEA_Array1OfCurveElementEndOffset)

class StepFEA_Curve3dElementProperty(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_Description(self, *args)


    def EndOffsets(self, *args) -> "opencascade::handle< StepFEA_HArray1OfCurveElementEndOffset >":
        """
        * Returns field EndOffsets
        	:rtype: opencascade::handle<StepFEA_HArray1OfCurveElementEndOffset>
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_EndOffsets(self, *args)


    def EndReleases(self, *args) -> "opencascade::handle< StepFEA_HArray1OfCurveElementEndRelease >":
        """
        * Returns field EndReleases
        	:rtype: opencascade::handle<StepFEA_HArray1OfCurveElementEndRelease>
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_EndReleases(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aPropertyId:
        	:type aPropertyId: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aIntervalDefinitions:
        	:type aIntervalDefinitions: StepFEA_HArray1OfCurveElementInterval
        	:param aEndOffsets:
        	:type aEndOffsets: StepFEA_HArray1OfCurveElementEndOffset
        	:param aEndReleases:
        	:type aEndReleases: StepFEA_HArray1OfCurveElementEndRelease
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_Init(self, *args)


    def IntervalDefinitions(self, *args) -> "opencascade::handle< StepFEA_HArray1OfCurveElementInterval >":
        """
        * Returns field IntervalDefinitions
        	:rtype: opencascade::handle<StepFEA_HArray1OfCurveElementInterval>
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_IntervalDefinitions(self, *args)


    def PropertyId(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field PropertyId
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_PropertyId(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_SetDescription(self, *args)


    def SetEndOffsets(self, *args) -> "void":
        """
        * Set field EndOffsets
        	:param EndOffsets:
        	:type EndOffsets: StepFEA_HArray1OfCurveElementEndOffset
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_SetEndOffsets(self, *args)


    def SetEndReleases(self, *args) -> "void":
        """
        * Set field EndReleases
        	:param EndReleases:
        	:type EndReleases: StepFEA_HArray1OfCurveElementEndRelease
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_SetEndReleases(self, *args)


    def SetIntervalDefinitions(self, *args) -> "void":
        """
        * Set field IntervalDefinitions
        	:param IntervalDefinitions:
        	:type IntervalDefinitions: StepFEA_HArray1OfCurveElementInterval
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_SetIntervalDefinitions(self, *args)


    def SetPropertyId(self, *args) -> "void":
        """
        * Set field PropertyId
        	:param PropertyId:
        	:type PropertyId: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementProperty_SetPropertyId(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Curve3dElementProperty_swiginit(self, _StepFEA.new_StepFEA_Curve3dElementProperty(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Curve3dElementProperty_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Curve3dElementProperty
StepFEA_Curve3dElementProperty.Description = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_Description, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.EndOffsets = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_EndOffsets, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.EndReleases = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_EndReleases, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.Init = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_Init, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.IntervalDefinitions = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_IntervalDefinitions, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.PropertyId = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_PropertyId, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.SetDescription = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_SetDescription, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.SetEndOffsets = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_SetEndOffsets, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.SetEndReleases = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_SetEndReleases, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.SetIntervalDefinitions = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_SetIntervalDefinitions, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty.SetPropertyId = new_instancemethod(_StepFEA.StepFEA_Curve3dElementProperty_SetPropertyId, None, StepFEA_Curve3dElementProperty)
StepFEA_Curve3dElementProperty_swigregister = _StepFEA.StepFEA_Curve3dElementProperty_swigregister
StepFEA_Curve3dElementProperty_swigregister(StepFEA_Curve3dElementProperty)

class StepFEA_CurveElementEndCoordinateSystem(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AlignedCurve3dElementCoordinateSystem(self, *args) -> "opencascade::handle< StepFEA_AlignedCurve3dElementCoordinateSystem >":
        """
        * Returns Value as AlignedCurve3dElementCoordinateSystem (or Null if another type)
        	:rtype: opencascade::handle<StepFEA_AlignedCurve3dElementCoordinateSystem>
        """
        return _StepFEA.StepFEA_CurveElementEndCoordinateSystem_AlignedCurve3dElementCoordinateSystem(self, *args)


    def FeaAxis2Placement3d(self, *args) -> "opencascade::handle< StepFEA_FeaAxis2Placement3d >":
        """
        * Returns Value as FeaAxis2Placement3d (or Null if another type)
        	:rtype: opencascade::handle<StepFEA_FeaAxis2Placement3d>
        """
        return _StepFEA.StepFEA_CurveElementEndCoordinateSystem_FeaAxis2Placement3d(self, *args)


    def ParametricCurve3dElementCoordinateSystem(self, *args) -> "opencascade::handle< StepFEA_ParametricCurve3dElementCoordinateSystem >":
        """
        * Returns Value as ParametricCurve3dElementCoordinateSystem (or Null if another type)
        	:rtype: opencascade::handle<StepFEA_ParametricCurve3dElementCoordinateSystem>
        """
        return _StepFEA.StepFEA_CurveElementEndCoordinateSystem_ParametricCurve3dElementCoordinateSystem(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementEndCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_CurveElementEndCoordinateSystem(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementEndCoordinateSystem
StepFEA_CurveElementEndCoordinateSystem.AlignedCurve3dElementCoordinateSystem = new_instancemethod(_StepFEA.StepFEA_CurveElementEndCoordinateSystem_AlignedCurve3dElementCoordinateSystem, None, StepFEA_CurveElementEndCoordinateSystem)
StepFEA_CurveElementEndCoordinateSystem.FeaAxis2Placement3d = new_instancemethod(_StepFEA.StepFEA_CurveElementEndCoordinateSystem_FeaAxis2Placement3d, None, StepFEA_CurveElementEndCoordinateSystem)
StepFEA_CurveElementEndCoordinateSystem.ParametricCurve3dElementCoordinateSystem = new_instancemethod(_StepFEA.StepFEA_CurveElementEndCoordinateSystem_ParametricCurve3dElementCoordinateSystem, None, StepFEA_CurveElementEndCoordinateSystem)
StepFEA_CurveElementEndCoordinateSystem_swigregister = _StepFEA.StepFEA_CurveElementEndCoordinateSystem_swigregister
StepFEA_CurveElementEndCoordinateSystem_swigregister(StepFEA_CurveElementEndCoordinateSystem)

class StepFEA_CurveElementEndOffset(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordinateSystem(self, *args) -> "StepFEA_CurveElementEndCoordinateSystem":
        """
        * Returns field CoordinateSystem
        	:rtype: StepFEA_CurveElementEndCoordinateSystem
        """
        return _StepFEA.StepFEA_CurveElementEndOffset_CoordinateSystem(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aCoordinateSystem:
        	:type aCoordinateSystem: StepFEA_CurveElementEndCoordinateSystem
        	:param aOffsetVector:
        	:type aOffsetVector: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementEndOffset_Init(self, *args)


    def OffsetVector(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns field OffsetVector
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_CurveElementEndOffset_OffsetVector(self, *args)


    def SetCoordinateSystem(self, *args) -> "void":
        """
        * Set field CoordinateSystem
        	:param CoordinateSystem:
        	:type CoordinateSystem: StepFEA_CurveElementEndCoordinateSystem
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementEndOffset_SetCoordinateSystem(self, *args)


    def SetOffsetVector(self, *args) -> "void":
        """
        * Set field OffsetVector
        	:param OffsetVector:
        	:type OffsetVector: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementEndOffset_SetOffsetVector(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementEndOffset_swiginit(self, _StepFEA.new_StepFEA_CurveElementEndOffset(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementEndOffset_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementEndOffset
StepFEA_CurveElementEndOffset.CoordinateSystem = new_instancemethod(_StepFEA.StepFEA_CurveElementEndOffset_CoordinateSystem, None, StepFEA_CurveElementEndOffset)
StepFEA_CurveElementEndOffset.Init = new_instancemethod(_StepFEA.StepFEA_CurveElementEndOffset_Init, None, StepFEA_CurveElementEndOffset)
StepFEA_CurveElementEndOffset.OffsetVector = new_instancemethod(_StepFEA.StepFEA_CurveElementEndOffset_OffsetVector, None, StepFEA_CurveElementEndOffset)
StepFEA_CurveElementEndOffset.SetCoordinateSystem = new_instancemethod(_StepFEA.StepFEA_CurveElementEndOffset_SetCoordinateSystem, None, StepFEA_CurveElementEndOffset)
StepFEA_CurveElementEndOffset.SetOffsetVector = new_instancemethod(_StepFEA.StepFEA_CurveElementEndOffset_SetOffsetVector, None, StepFEA_CurveElementEndOffset)
StepFEA_CurveElementEndOffset_swigregister = _StepFEA.StepFEA_CurveElementEndOffset_swigregister
StepFEA_CurveElementEndOffset_swigregister(StepFEA_CurveElementEndOffset)

class StepFEA_CurveElementEndRelease(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordinateSystem(self, *args) -> "StepFEA_CurveElementEndCoordinateSystem":
        """
        * Returns field CoordinateSystem
        	:rtype: StepFEA_CurveElementEndCoordinateSystem
        """
        return _StepFEA.StepFEA_CurveElementEndRelease_CoordinateSystem(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aCoordinateSystem:
        	:type aCoordinateSystem: StepFEA_CurveElementEndCoordinateSystem
        	:param aReleases:
        	:type aReleases: StepElement_HArray1OfCurveElementEndReleasePacket
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementEndRelease_Init(self, *args)


    def Releases(self, *args) -> "opencascade::handle< StepElement_HArray1OfCurveElementEndReleasePacket >":
        """
        * Returns field Releases
        	:rtype: opencascade::handle<StepElement_HArray1OfCurveElementEndReleasePacket>
        """
        return _StepFEA.StepFEA_CurveElementEndRelease_Releases(self, *args)


    def SetCoordinateSystem(self, *args) -> "void":
        """
        * Set field CoordinateSystem
        	:param CoordinateSystem:
        	:type CoordinateSystem: StepFEA_CurveElementEndCoordinateSystem
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementEndRelease_SetCoordinateSystem(self, *args)


    def SetReleases(self, *args) -> "void":
        """
        * Set field Releases
        	:param Releases:
        	:type Releases: StepElement_HArray1OfCurveElementEndReleasePacket
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementEndRelease_SetReleases(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementEndRelease_swiginit(self, _StepFEA.new_StepFEA_CurveElementEndRelease(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementEndRelease_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementEndRelease
StepFEA_CurveElementEndRelease.CoordinateSystem = new_instancemethod(_StepFEA.StepFEA_CurveElementEndRelease_CoordinateSystem, None, StepFEA_CurveElementEndRelease)
StepFEA_CurveElementEndRelease.Init = new_instancemethod(_StepFEA.StepFEA_CurveElementEndRelease_Init, None, StepFEA_CurveElementEndRelease)
StepFEA_CurveElementEndRelease.Releases = new_instancemethod(_StepFEA.StepFEA_CurveElementEndRelease_Releases, None, StepFEA_CurveElementEndRelease)
StepFEA_CurveElementEndRelease.SetCoordinateSystem = new_instancemethod(_StepFEA.StepFEA_CurveElementEndRelease_SetCoordinateSystem, None, StepFEA_CurveElementEndRelease)
StepFEA_CurveElementEndRelease.SetReleases = new_instancemethod(_StepFEA.StepFEA_CurveElementEndRelease_SetReleases, None, StepFEA_CurveElementEndRelease)
StepFEA_CurveElementEndRelease_swigregister = _StepFEA.StepFEA_CurveElementEndRelease_swigregister
StepFEA_CurveElementEndRelease_swigregister(StepFEA_CurveElementEndRelease)

class StepFEA_CurveElementInterval(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EuAngles(self, *args) -> "opencascade::handle< StepBasic_EulerAngles >":
        """
        * Returns field EuAngles
        	:rtype: opencascade::handle<StepBasic_EulerAngles>
        """
        return _StepFEA.StepFEA_CurveElementInterval_EuAngles(self, *args)


    def FinishPosition(self, *args) -> "opencascade::handle< StepFEA_CurveElementLocation >":
        """
        * Returns field FinishPosition
        	:rtype: opencascade::handle<StepFEA_CurveElementLocation>
        """
        return _StepFEA.StepFEA_CurveElementInterval_FinishPosition(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aFinishPosition:
        	:type aFinishPosition: StepFEA_CurveElementLocation
        	:param aEuAngles:
        	:type aEuAngles: StepBasic_EulerAngles
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementInterval_Init(self, *args)


    def SetEuAngles(self, *args) -> "void":
        """
        * Set field EuAngles
        	:param EuAngles:
        	:type EuAngles: StepBasic_EulerAngles
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementInterval_SetEuAngles(self, *args)


    def SetFinishPosition(self, *args) -> "void":
        """
        * Set field FinishPosition
        	:param FinishPosition:
        	:type FinishPosition: StepFEA_CurveElementLocation
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementInterval_SetFinishPosition(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementInterval_swiginit(self, _StepFEA.new_StepFEA_CurveElementInterval(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementInterval_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementInterval
StepFEA_CurveElementInterval.EuAngles = new_instancemethod(_StepFEA.StepFEA_CurveElementInterval_EuAngles, None, StepFEA_CurveElementInterval)
StepFEA_CurveElementInterval.FinishPosition = new_instancemethod(_StepFEA.StepFEA_CurveElementInterval_FinishPosition, None, StepFEA_CurveElementInterval)
StepFEA_CurveElementInterval.Init = new_instancemethod(_StepFEA.StepFEA_CurveElementInterval_Init, None, StepFEA_CurveElementInterval)
StepFEA_CurveElementInterval.SetEuAngles = new_instancemethod(_StepFEA.StepFEA_CurveElementInterval_SetEuAngles, None, StepFEA_CurveElementInterval)
StepFEA_CurveElementInterval.SetFinishPosition = new_instancemethod(_StepFEA.StepFEA_CurveElementInterval_SetFinishPosition, None, StepFEA_CurveElementInterval)
StepFEA_CurveElementInterval_swigregister = _StepFEA.StepFEA_CurveElementInterval_swigregister
StepFEA_CurveElementInterval_swigregister(StepFEA_CurveElementInterval)

class StepFEA_CurveElementLocation(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Coordinate(self, *args) -> "opencascade::handle< StepFEA_FeaParametricPoint >":
        """
        * Returns field Coordinate
        	:rtype: opencascade::handle<StepFEA_FeaParametricPoint>
        """
        return _StepFEA.StepFEA_CurveElementLocation_Coordinate(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aCoordinate:
        	:type aCoordinate: StepFEA_FeaParametricPoint
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementLocation_Init(self, *args)


    def SetCoordinate(self, *args) -> "void":
        """
        * Set field Coordinate
        	:param Coordinate:
        	:type Coordinate: StepFEA_FeaParametricPoint
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementLocation_SetCoordinate(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementLocation_swiginit(self, _StepFEA.new_StepFEA_CurveElementLocation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementLocation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementLocation
StepFEA_CurveElementLocation.Coordinate = new_instancemethod(_StepFEA.StepFEA_CurveElementLocation_Coordinate, None, StepFEA_CurveElementLocation)
StepFEA_CurveElementLocation.Init = new_instancemethod(_StepFEA.StepFEA_CurveElementLocation_Init, None, StepFEA_CurveElementLocation)
StepFEA_CurveElementLocation.SetCoordinate = new_instancemethod(_StepFEA.StepFEA_CurveElementLocation_SetCoordinate, None, StepFEA_CurveElementLocation)
StepFEA_CurveElementLocation_swigregister = _StepFEA.StepFEA_CurveElementLocation_swigregister
StepFEA_CurveElementLocation_swigregister(StepFEA_CurveElementLocation)

class StepFEA_DegreeOfFreedom(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ApplicationDefinedDegreeOfFreedom(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns Value as ApplicationDefinedDegreeOfFreedom (or Null if another type)
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepFEA.StepFEA_DegreeOfFreedom_ApplicationDefinedDegreeOfFreedom(self, *args)


    def EnumeratedDegreeOfFreedom(self, *args) -> "StepFEA_EnumeratedDegreeOfFreedom":
        """
        * Returns Value as EnumeratedDegreeOfFreedom (or Null if another type)
        	:rtype: StepFEA_EnumeratedDegreeOfFreedom
        """
        return _StepFEA.StepFEA_DegreeOfFreedom_EnumeratedDegreeOfFreedom(self, *args)


    def SetApplicationDefinedDegreeOfFreedom(self, *args) -> "void":
        """
        * Set Value for ApplicationDefinedDegreeOfFreedom
        	:param aVal:
        	:type aVal: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_DegreeOfFreedom_SetApplicationDefinedDegreeOfFreedom(self, *args)


    def SetEnumeratedDegreeOfFreedom(self, *args) -> "void":
        """
        * Returns Value as EnumeratedDegreeOfFreedom (or Null if another type)
        	:param aVal:
        	:type aVal: StepFEA_EnumeratedDegreeOfFreedom
        	:rtype: None
        """
        return _StepFEA.StepFEA_DegreeOfFreedom_SetEnumeratedDegreeOfFreedom(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_DegreeOfFreedom_swiginit(self, _StepFEA.new_StepFEA_DegreeOfFreedom(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_DegreeOfFreedom
StepFEA_DegreeOfFreedom.ApplicationDefinedDegreeOfFreedom = new_instancemethod(_StepFEA.StepFEA_DegreeOfFreedom_ApplicationDefinedDegreeOfFreedom, None, StepFEA_DegreeOfFreedom)
StepFEA_DegreeOfFreedom.EnumeratedDegreeOfFreedom = new_instancemethod(_StepFEA.StepFEA_DegreeOfFreedom_EnumeratedDegreeOfFreedom, None, StepFEA_DegreeOfFreedom)
StepFEA_DegreeOfFreedom.SetApplicationDefinedDegreeOfFreedom = new_instancemethod(_StepFEA.StepFEA_DegreeOfFreedom_SetApplicationDefinedDegreeOfFreedom, None, StepFEA_DegreeOfFreedom)
StepFEA_DegreeOfFreedom.SetEnumeratedDegreeOfFreedom = new_instancemethod(_StepFEA.StepFEA_DegreeOfFreedom_SetEnumeratedDegreeOfFreedom, None, StepFEA_DegreeOfFreedom)
StepFEA_DegreeOfFreedom_swigregister = _StepFEA.StepFEA_DegreeOfFreedom_swigregister
StepFEA_DegreeOfFreedom_swigregister(StepFEA_DegreeOfFreedom)

class StepFEA_DegreeOfFreedomMember(OCC.Core.StepData.StepData_SelectNamed):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_DegreeOfFreedomMember_swiginit(self, _StepFEA.new_StepFEA_DegreeOfFreedomMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_DegreeOfFreedomMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_DegreeOfFreedomMember
StepFEA_DegreeOfFreedomMember_swigregister = _StepFEA.StepFEA_DegreeOfFreedomMember_swigregister
StepFEA_DegreeOfFreedomMember_swigregister(StepFEA_DegreeOfFreedomMember)

class StepFEA_ElementGeometricRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Aspect(self, *args) -> "StepElement_ElementAspect":
        """
        * Returns field Aspect
        	:rtype: StepElement_ElementAspect
        """
        return _StepFEA.StepFEA_ElementGeometricRelationship_Aspect(self, *args)


    def ElementRef(self, *args) -> "StepFEA_ElementOrElementGroup":
        """
        * Returns field ElementRef
        	:rtype: StepFEA_ElementOrElementGroup
        """
        return _StepFEA.StepFEA_ElementGeometricRelationship_ElementRef(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aElementRef:
        	:type aElementRef: StepFEA_ElementOrElementGroup
        	:param aItem:
        	:type aItem: StepElement_AnalysisItemWithinRepresentation
        	:param aAspect:
        	:type aAspect: StepElement_ElementAspect
        	:rtype: None
        """
        return _StepFEA.StepFEA_ElementGeometricRelationship_Init(self, *args)


    def Item(self, *args) -> "opencascade::handle< StepElement_AnalysisItemWithinRepresentation >":
        """
        * Returns field Item
        	:rtype: opencascade::handle<StepElement_AnalysisItemWithinRepresentation>
        """
        return _StepFEA.StepFEA_ElementGeometricRelationship_Item(self, *args)


    def SetAspect(self, *args) -> "void":
        """
        * Set field Aspect
        	:param Aspect:
        	:type Aspect: StepElement_ElementAspect
        	:rtype: None
        """
        return _StepFEA.StepFEA_ElementGeometricRelationship_SetAspect(self, *args)


    def SetElementRef(self, *args) -> "void":
        """
        * Set field ElementRef
        	:param ElementRef:
        	:type ElementRef: StepFEA_ElementOrElementGroup
        	:rtype: None
        """
        return _StepFEA.StepFEA_ElementGeometricRelationship_SetElementRef(self, *args)


    def SetItem(self, *args) -> "void":
        """
        * Set field Item
        	:param Item:
        	:type Item: StepElement_AnalysisItemWithinRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_ElementGeometricRelationship_SetItem(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ElementGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_ElementGeometricRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ElementGeometricRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ElementGeometricRelationship
StepFEA_ElementGeometricRelationship.Aspect = new_instancemethod(_StepFEA.StepFEA_ElementGeometricRelationship_Aspect, None, StepFEA_ElementGeometricRelationship)
StepFEA_ElementGeometricRelationship.ElementRef = new_instancemethod(_StepFEA.StepFEA_ElementGeometricRelationship_ElementRef, None, StepFEA_ElementGeometricRelationship)
StepFEA_ElementGeometricRelationship.Init = new_instancemethod(_StepFEA.StepFEA_ElementGeometricRelationship_Init, None, StepFEA_ElementGeometricRelationship)
StepFEA_ElementGeometricRelationship.Item = new_instancemethod(_StepFEA.StepFEA_ElementGeometricRelationship_Item, None, StepFEA_ElementGeometricRelationship)
StepFEA_ElementGeometricRelationship.SetAspect = new_instancemethod(_StepFEA.StepFEA_ElementGeometricRelationship_SetAspect, None, StepFEA_ElementGeometricRelationship)
StepFEA_ElementGeometricRelationship.SetElementRef = new_instancemethod(_StepFEA.StepFEA_ElementGeometricRelationship_SetElementRef, None, StepFEA_ElementGeometricRelationship)
StepFEA_ElementGeometricRelationship.SetItem = new_instancemethod(_StepFEA.StepFEA_ElementGeometricRelationship_SetItem, None, StepFEA_ElementGeometricRelationship)
StepFEA_ElementGeometricRelationship_swigregister = _StepFEA.StepFEA_ElementGeometricRelationship_swigregister
StepFEA_ElementGeometricRelationship_swigregister(StepFEA_ElementGeometricRelationship)

class StepFEA_ElementOrElementGroup(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ElementGroup(self, *args) -> "opencascade::handle< StepFEA_ElementGroup >":
        """
        * Returns Value as ElementGroup (or Null if another type)
        	:rtype: opencascade::handle<StepFEA_ElementGroup>
        """
        return _StepFEA.StepFEA_ElementOrElementGroup_ElementGroup(self, *args)


    def ElementRepresentation(self, *args) -> "opencascade::handle< StepFEA_ElementRepresentation >":
        """
        * Returns Value as ElementRepresentation (or Null if another type)
        	:rtype: opencascade::handle<StepFEA_ElementRepresentation>
        """
        return _StepFEA.StepFEA_ElementOrElementGroup_ElementRepresentation(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ElementOrElementGroup_swiginit(self, _StepFEA.new_StepFEA_ElementOrElementGroup(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ElementOrElementGroup
StepFEA_ElementOrElementGroup.ElementGroup = new_instancemethod(_StepFEA.StepFEA_ElementOrElementGroup_ElementGroup, None, StepFEA_ElementOrElementGroup)
StepFEA_ElementOrElementGroup.ElementRepresentation = new_instancemethod(_StepFEA.StepFEA_ElementOrElementGroup_ElementRepresentation, None, StepFEA_ElementOrElementGroup)
StepFEA_ElementOrElementGroup_swigregister = _StepFEA.StepFEA_ElementOrElementGroup_swigregister
StepFEA_ElementOrElementGroup_swigregister(StepFEA_ElementOrElementGroup)

class StepFEA_ElementRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentation_Name:
        	:type aRepresentation_Name: TCollection_HAsciiString
        	:param aRepresentation_Items:
        	:type aRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        	:param aRepresentation_ContextOfItems:
        	:type aRepresentation_ContextOfItems: StepRepr_RepresentationContext
        	:param aNodeList:
        	:type aNodeList: StepFEA_HArray1OfNodeRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_ElementRepresentation_Init(self, *args)


    def NodeList(self, *args) -> "opencascade::handle< StepFEA_HArray1OfNodeRepresentation >":
        """
        * Returns field NodeList
        	:rtype: opencascade::handle<StepFEA_HArray1OfNodeRepresentation>
        """
        return _StepFEA.StepFEA_ElementRepresentation_NodeList(self, *args)


    def SetNodeList(self, *args) -> "void":
        """
        * Set field NodeList
        	:param NodeList:
        	:type NodeList: StepFEA_HArray1OfNodeRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_ElementRepresentation_SetNodeList(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_ElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ElementRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ElementRepresentation
StepFEA_ElementRepresentation.Init = new_instancemethod(_StepFEA.StepFEA_ElementRepresentation_Init, None, StepFEA_ElementRepresentation)
StepFEA_ElementRepresentation.NodeList = new_instancemethod(_StepFEA.StepFEA_ElementRepresentation_NodeList, None, StepFEA_ElementRepresentation)
StepFEA_ElementRepresentation.SetNodeList = new_instancemethod(_StepFEA.StepFEA_ElementRepresentation_SetNodeList, None, StepFEA_ElementRepresentation)
StepFEA_ElementRepresentation_swigregister = _StepFEA.StepFEA_ElementRepresentation_swigregister
StepFEA_ElementRepresentation_swigregister(StepFEA_ElementRepresentation)

class StepFEA_FeaAxis2Placement3d(OCC.Core.StepGeom.StepGeom_Axis2Placement3d):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepFEA.StepFEA_FeaAxis2Placement3d_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aPlacement_Location:
        	:type aPlacement_Location: StepGeom_CartesianPoint
        	:param hasAxis2Placement3d_Axis:
        	:type hasAxis2Placement3d_Axis: bool
        	:param aAxis2Placement3d_Axis:
        	:type aAxis2Placement3d_Axis: StepGeom_Direction
        	:param hasAxis2Placement3d_RefDirection:
        	:type hasAxis2Placement3d_RefDirection: bool
        	:param aAxis2Placement3d_RefDirection:
        	:type aAxis2Placement3d_RefDirection: StepGeom_Direction
        	:param aSystemType:
        	:type aSystemType: StepFEA_CoordinateSystemType
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaAxis2Placement3d_Init(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaAxis2Placement3d_SetDescription(self, *args)


    def SetSystemType(self, *args) -> "void":
        """
        * Set field SystemType
        	:param SystemType:
        	:type SystemType: StepFEA_CoordinateSystemType
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaAxis2Placement3d_SetSystemType(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaAxis2Placement3d_swiginit(self, _StepFEA.new_StepFEA_FeaAxis2Placement3d(*args))

    def SystemType(self, *args) -> "StepFEA_CoordinateSystemType":
        """
        * Returns field SystemType
        	:rtype: StepFEA_CoordinateSystemType
        """
        return _StepFEA.StepFEA_FeaAxis2Placement3d_SystemType(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaAxis2Placement3d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaAxis2Placement3d
StepFEA_FeaAxis2Placement3d.Description = new_instancemethod(_StepFEA.StepFEA_FeaAxis2Placement3d_Description, None, StepFEA_FeaAxis2Placement3d)
StepFEA_FeaAxis2Placement3d.Init = new_instancemethod(_StepFEA.StepFEA_FeaAxis2Placement3d_Init, None, StepFEA_FeaAxis2Placement3d)
StepFEA_FeaAxis2Placement3d.SetDescription = new_instancemethod(_StepFEA.StepFEA_FeaAxis2Placement3d_SetDescription, None, StepFEA_FeaAxis2Placement3d)
StepFEA_FeaAxis2Placement3d.SetSystemType = new_instancemethod(_StepFEA.StepFEA_FeaAxis2Placement3d_SetSystemType, None, StepFEA_FeaAxis2Placement3d)
StepFEA_FeaAxis2Placement3d.SystemType = new_instancemethod(_StepFEA.StepFEA_FeaAxis2Placement3d_SystemType, None, StepFEA_FeaAxis2Placement3d)
StepFEA_FeaAxis2Placement3d_swigregister = _StepFEA.StepFEA_FeaAxis2Placement3d_swigregister
StepFEA_FeaAxis2Placement3d_swigregister(StepFEA_FeaAxis2Placement3d)

class StepFEA_FeaCurveSectionGeometricRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aSectionRef:
        	:type aSectionRef: StepElement_CurveElementSectionDefinition
        	:param aItem:
        	:type aItem: StepElement_AnalysisItemWithinRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_Init(self, *args)


    def Item(self, *args) -> "opencascade::handle< StepElement_AnalysisItemWithinRepresentation >":
        """
        * Returns field Item
        	:rtype: opencascade::handle<StepElement_AnalysisItemWithinRepresentation>
        """
        return _StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_Item(self, *args)


    def SectionRef(self, *args) -> "opencascade::handle< StepElement_CurveElementSectionDefinition >":
        """
        * Returns field SectionRef
        	:rtype: opencascade::handle<StepElement_CurveElementSectionDefinition>
        """
        return _StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_SectionRef(self, *args)


    def SetItem(self, *args) -> "void":
        """
        * Set field Item
        	:param Item:
        	:type Item: StepElement_AnalysisItemWithinRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_SetItem(self, *args)


    def SetSectionRef(self, *args) -> "void":
        """
        * Set field SectionRef
        	:param SectionRef:
        	:type SectionRef: StepElement_CurveElementSectionDefinition
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_SetSectionRef(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_FeaCurveSectionGeometricRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaCurveSectionGeometricRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaCurveSectionGeometricRelationship
StepFEA_FeaCurveSectionGeometricRelationship.Init = new_instancemethod(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_Init, None, StepFEA_FeaCurveSectionGeometricRelationship)
StepFEA_FeaCurveSectionGeometricRelationship.Item = new_instancemethod(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_Item, None, StepFEA_FeaCurveSectionGeometricRelationship)
StepFEA_FeaCurveSectionGeometricRelationship.SectionRef = new_instancemethod(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_SectionRef, None, StepFEA_FeaCurveSectionGeometricRelationship)
StepFEA_FeaCurveSectionGeometricRelationship.SetItem = new_instancemethod(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_SetItem, None, StepFEA_FeaCurveSectionGeometricRelationship)
StepFEA_FeaCurveSectionGeometricRelationship.SetSectionRef = new_instancemethod(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_SetSectionRef, None, StepFEA_FeaCurveSectionGeometricRelationship)
StepFEA_FeaCurveSectionGeometricRelationship_swigregister = _StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_swigregister
StepFEA_FeaCurveSectionGeometricRelationship_swigregister(StepFEA_FeaCurveSectionGeometricRelationship)

class StepFEA_FeaGroup(OCC.Core.StepBasic.StepBasic_Group):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aGroup_Name:
        	:type aGroup_Name: TCollection_HAsciiString
        	:param aGroup_Description:
        	:type aGroup_Description: TCollection_HAsciiString
        	:param aModelRef:
        	:type aModelRef: StepFEA_FeaModel
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaGroup_Init(self, *args)


    def ModelRef(self, *args) -> "opencascade::handle< StepFEA_FeaModel >":
        """
        * Returns field ModelRef
        	:rtype: opencascade::handle<StepFEA_FeaModel>
        """
        return _StepFEA.StepFEA_FeaGroup_ModelRef(self, *args)


    def SetModelRef(self, *args) -> "void":
        """
        * Set field ModelRef
        	:param ModelRef:
        	:type ModelRef: StepFEA_FeaModel
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaGroup_SetModelRef(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaGroup_swiginit(self, _StepFEA.new_StepFEA_FeaGroup(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaGroup_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaGroup
StepFEA_FeaGroup.Init = new_instancemethod(_StepFEA.StepFEA_FeaGroup_Init, None, StepFEA_FeaGroup)
StepFEA_FeaGroup.ModelRef = new_instancemethod(_StepFEA.StepFEA_FeaGroup_ModelRef, None, StepFEA_FeaGroup)
StepFEA_FeaGroup.SetModelRef = new_instancemethod(_StepFEA.StepFEA_FeaGroup_SetModelRef, None, StepFEA_FeaGroup)
StepFEA_FeaGroup_swigregister = _StepFEA.StepFEA_FeaGroup_swigregister
StepFEA_FeaGroup_swigregister(StepFEA_FeaGroup)

class StepFEA_FeaMaterialPropertyRepresentation(OCC.Core.StepRepr.StepRepr_MaterialPropertyRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaMaterialPropertyRepresentation_swiginit(self, _StepFEA.new_StepFEA_FeaMaterialPropertyRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaMaterialPropertyRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaMaterialPropertyRepresentation
StepFEA_FeaMaterialPropertyRepresentation_swigregister = _StepFEA.StepFEA_FeaMaterialPropertyRepresentation_swigregister
StepFEA_FeaMaterialPropertyRepresentation_swigregister(StepFEA_FeaMaterialPropertyRepresentation)

class StepFEA_FeaMaterialPropertyRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaMaterialPropertyRepresentationItem_swiginit(self, _StepFEA.new_StepFEA_FeaMaterialPropertyRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaMaterialPropertyRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaMaterialPropertyRepresentationItem
StepFEA_FeaMaterialPropertyRepresentationItem_swigregister = _StepFEA.StepFEA_FeaMaterialPropertyRepresentationItem_swigregister
StepFEA_FeaMaterialPropertyRepresentationItem_swigregister(StepFEA_FeaMaterialPropertyRepresentationItem)

class StepFEA_FeaModel(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AnalysisType(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field AnalysisType
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepFEA.StepFEA_FeaModel_AnalysisType(self, *args)


    def CreatingSoftware(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field CreatingSoftware
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepFEA.StepFEA_FeaModel_CreatingSoftware(self, *args)


    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Description
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepFEA.StepFEA_FeaModel_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentation_Name:
        	:type aRepresentation_Name: TCollection_HAsciiString
        	:param aRepresentation_Items:
        	:type aRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        	:param aRepresentation_ContextOfItems:
        	:type aRepresentation_ContextOfItems: StepRepr_RepresentationContext
        	:param aCreatingSoftware:
        	:type aCreatingSoftware: TCollection_HAsciiString
        	:param aIntendedAnalysisCode:
        	:type aIntendedAnalysisCode: TColStd_HArray1OfAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aAnalysisType:
        	:type aAnalysisType: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaModel_Init(self, *args)


    def IntendedAnalysisCode(self, *args) -> "opencascade::handle< TColStd_HArray1OfAsciiString >":
        """
        * Returns field IntendedAnalysisCode
        	:rtype: opencascade::handle<TColStd_HArray1OfAsciiString>
        """
        return _StepFEA.StepFEA_FeaModel_IntendedAnalysisCode(self, *args)


    def SetAnalysisType(self, *args) -> "void":
        """
        * Set field AnalysisType
        	:param AnalysisType:
        	:type AnalysisType: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaModel_SetAnalysisType(self, *args)


    def SetCreatingSoftware(self, *args) -> "void":
        """
        * Set field CreatingSoftware
        	:param CreatingSoftware:
        	:type CreatingSoftware: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaModel_SetCreatingSoftware(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        * Set field Description
        	:param Description:
        	:type Description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaModel_SetDescription(self, *args)


    def SetIntendedAnalysisCode(self, *args) -> "void":
        """
        * Set field IntendedAnalysisCode
        	:param IntendedAnalysisCode:
        	:type IntendedAnalysisCode: TColStd_HArray1OfAsciiString
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaModel_SetIntendedAnalysisCode(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaModel_swiginit(self, _StepFEA.new_StepFEA_FeaModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaModel
StepFEA_FeaModel.AnalysisType = new_instancemethod(_StepFEA.StepFEA_FeaModel_AnalysisType, None, StepFEA_FeaModel)
StepFEA_FeaModel.CreatingSoftware = new_instancemethod(_StepFEA.StepFEA_FeaModel_CreatingSoftware, None, StepFEA_FeaModel)
StepFEA_FeaModel.Description = new_instancemethod(_StepFEA.StepFEA_FeaModel_Description, None, StepFEA_FeaModel)
StepFEA_FeaModel.Init = new_instancemethod(_StepFEA.StepFEA_FeaModel_Init, None, StepFEA_FeaModel)
StepFEA_FeaModel.IntendedAnalysisCode = new_instancemethod(_StepFEA.StepFEA_FeaModel_IntendedAnalysisCode, None, StepFEA_FeaModel)
StepFEA_FeaModel.SetAnalysisType = new_instancemethod(_StepFEA.StepFEA_FeaModel_SetAnalysisType, None, StepFEA_FeaModel)
StepFEA_FeaModel.SetCreatingSoftware = new_instancemethod(_StepFEA.StepFEA_FeaModel_SetCreatingSoftware, None, StepFEA_FeaModel)
StepFEA_FeaModel.SetDescription = new_instancemethod(_StepFEA.StepFEA_FeaModel_SetDescription, None, StepFEA_FeaModel)
StepFEA_FeaModel.SetIntendedAnalysisCode = new_instancemethod(_StepFEA.StepFEA_FeaModel_SetIntendedAnalysisCode, None, StepFEA_FeaModel)
StepFEA_FeaModel_swigregister = _StepFEA.StepFEA_FeaModel_swigregister
StepFEA_FeaModel_swigregister(StepFEA_FeaModel)

class StepFEA_FeaModelDefinition(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaModelDefinition_swiginit(self, _StepFEA.new_StepFEA_FeaModelDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaModelDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaModelDefinition
StepFEA_FeaModelDefinition_swigregister = _StepFEA.StepFEA_FeaModelDefinition_swigregister
StepFEA_FeaModelDefinition_swigregister(StepFEA_FeaModelDefinition)

class StepFEA_FeaParametricPoint(OCC.Core.StepGeom.StepGeom_Point):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Coordinates(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns field Coordinates
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_FeaParametricPoint_Coordinates(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aCoordinates:
        	:type aCoordinates: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaParametricPoint_Init(self, *args)


    def SetCoordinates(self, *args) -> "void":
        """
        * Set field Coordinates
        	:param Coordinates:
        	:type Coordinates: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaParametricPoint_SetCoordinates(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaParametricPoint_swiginit(self, _StepFEA.new_StepFEA_FeaParametricPoint(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaParametricPoint_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaParametricPoint
StepFEA_FeaParametricPoint.Coordinates = new_instancemethod(_StepFEA.StepFEA_FeaParametricPoint_Coordinates, None, StepFEA_FeaParametricPoint)
StepFEA_FeaParametricPoint.Init = new_instancemethod(_StepFEA.StepFEA_FeaParametricPoint_Init, None, StepFEA_FeaParametricPoint)
StepFEA_FeaParametricPoint.SetCoordinates = new_instancemethod(_StepFEA.StepFEA_FeaParametricPoint_SetCoordinates, None, StepFEA_FeaParametricPoint)
StepFEA_FeaParametricPoint_swigregister = _StepFEA.StepFEA_FeaParametricPoint_swigregister
StepFEA_FeaParametricPoint_swigregister(StepFEA_FeaParametricPoint)

class StepFEA_FeaRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaRepresentationItem_swiginit(self, _StepFEA.new_StepFEA_FeaRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaRepresentationItem
StepFEA_FeaRepresentationItem_swigregister = _StepFEA.StepFEA_FeaRepresentationItem_swigregister
StepFEA_FeaRepresentationItem_swigregister(StepFEA_FeaRepresentationItem)

class StepFEA_FeaSurfaceSectionGeometricRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aSectionRef:
        	:type aSectionRef: StepElement_SurfaceSection
        	:param aItem:
        	:type aItem: StepElement_AnalysisItemWithinRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_Init(self, *args)


    def Item(self, *args) -> "opencascade::handle< StepElement_AnalysisItemWithinRepresentation >":
        """
        * Returns field Item
        	:rtype: opencascade::handle<StepElement_AnalysisItemWithinRepresentation>
        """
        return _StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_Item(self, *args)


    def SectionRef(self, *args) -> "opencascade::handle< StepElement_SurfaceSection >":
        """
        * Returns field SectionRef
        	:rtype: opencascade::handle<StepElement_SurfaceSection>
        """
        return _StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_SectionRef(self, *args)


    def SetItem(self, *args) -> "void":
        """
        * Set field Item
        	:param Item:
        	:type Item: StepElement_AnalysisItemWithinRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_SetItem(self, *args)


    def SetSectionRef(self, *args) -> "void":
        """
        * Set field SectionRef
        	:param SectionRef:
        	:type SectionRef: StepElement_SurfaceSection
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_SetSectionRef(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_FeaSurfaceSectionGeometricRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaSurfaceSectionGeometricRelationship
StepFEA_FeaSurfaceSectionGeometricRelationship.Init = new_instancemethod(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_Init, None, StepFEA_FeaSurfaceSectionGeometricRelationship)
StepFEA_FeaSurfaceSectionGeometricRelationship.Item = new_instancemethod(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_Item, None, StepFEA_FeaSurfaceSectionGeometricRelationship)
StepFEA_FeaSurfaceSectionGeometricRelationship.SectionRef = new_instancemethod(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_SectionRef, None, StepFEA_FeaSurfaceSectionGeometricRelationship)
StepFEA_FeaSurfaceSectionGeometricRelationship.SetItem = new_instancemethod(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_SetItem, None, StepFEA_FeaSurfaceSectionGeometricRelationship)
StepFEA_FeaSurfaceSectionGeometricRelationship.SetSectionRef = new_instancemethod(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_SetSectionRef, None, StepFEA_FeaSurfaceSectionGeometricRelationship)
StepFEA_FeaSurfaceSectionGeometricRelationship_swigregister = _StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_swigregister
StepFEA_FeaSurfaceSectionGeometricRelationship_swigregister(StepFEA_FeaSurfaceSectionGeometricRelationship)

class StepFEA_FreedomAndCoefficient(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def A(self, *args) -> "StepElement_MeasureOrUnspecifiedValue":
        """
        * Returns field A
        	:rtype: StepElement_MeasureOrUnspecifiedValue
        """
        return _StepFEA.StepFEA_FreedomAndCoefficient_A(self, *args)


    def Freedom(self, *args) -> "StepFEA_DegreeOfFreedom":
        """
        * Returns field Freedom
        	:rtype: StepFEA_DegreeOfFreedom
        """
        return _StepFEA.StepFEA_FreedomAndCoefficient_Freedom(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aFreedom:
        	:type aFreedom: StepFEA_DegreeOfFreedom
        	:param aA:
        	:type aA: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepFEA.StepFEA_FreedomAndCoefficient_Init(self, *args)


    def SetA(self, *args) -> "void":
        """
        * Set field A
        	:param A:
        	:type A: StepElement_MeasureOrUnspecifiedValue
        	:rtype: None
        """
        return _StepFEA.StepFEA_FreedomAndCoefficient_SetA(self, *args)


    def SetFreedom(self, *args) -> "void":
        """
        * Set field Freedom
        	:param Freedom:
        	:type Freedom: StepFEA_DegreeOfFreedom
        	:rtype: None
        """
        return _StepFEA.StepFEA_FreedomAndCoefficient_SetFreedom(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FreedomAndCoefficient_swiginit(self, _StepFEA.new_StepFEA_FreedomAndCoefficient(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FreedomAndCoefficient_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FreedomAndCoefficient
StepFEA_FreedomAndCoefficient.A = new_instancemethod(_StepFEA.StepFEA_FreedomAndCoefficient_A, None, StepFEA_FreedomAndCoefficient)
StepFEA_FreedomAndCoefficient.Freedom = new_instancemethod(_StepFEA.StepFEA_FreedomAndCoefficient_Freedom, None, StepFEA_FreedomAndCoefficient)
StepFEA_FreedomAndCoefficient.Init = new_instancemethod(_StepFEA.StepFEA_FreedomAndCoefficient_Init, None, StepFEA_FreedomAndCoefficient)
StepFEA_FreedomAndCoefficient.SetA = new_instancemethod(_StepFEA.StepFEA_FreedomAndCoefficient_SetA, None, StepFEA_FreedomAndCoefficient)
StepFEA_FreedomAndCoefficient.SetFreedom = new_instancemethod(_StepFEA.StepFEA_FreedomAndCoefficient_SetFreedom, None, StepFEA_FreedomAndCoefficient)
StepFEA_FreedomAndCoefficient_swigregister = _StepFEA.StepFEA_FreedomAndCoefficient_swigregister
StepFEA_FreedomAndCoefficient_swigregister(StepFEA_FreedomAndCoefficient)

class StepFEA_FreedomsList(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Freedoms(self, *args) -> "opencascade::handle< StepFEA_HArray1OfDegreeOfFreedom >":
        """
        * Returns field Freedoms
        	:rtype: opencascade::handle<StepFEA_HArray1OfDegreeOfFreedom>
        """
        return _StepFEA.StepFEA_FreedomsList_Freedoms(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aFreedoms:
        	:type aFreedoms: StepFEA_HArray1OfDegreeOfFreedom
        	:rtype: None
        """
        return _StepFEA.StepFEA_FreedomsList_Init(self, *args)


    def SetFreedoms(self, *args) -> "void":
        """
        * Set field Freedoms
        	:param Freedoms:
        	:type Freedoms: StepFEA_HArray1OfDegreeOfFreedom
        	:rtype: None
        """
        return _StepFEA.StepFEA_FreedomsList_SetFreedoms(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FreedomsList_swiginit(self, _StepFEA.new_StepFEA_FreedomsList(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FreedomsList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FreedomsList
StepFEA_FreedomsList.Freedoms = new_instancemethod(_StepFEA.StepFEA_FreedomsList_Freedoms, None, StepFEA_FreedomsList)
StepFEA_FreedomsList.Init = new_instancemethod(_StepFEA.StepFEA_FreedomsList_Init, None, StepFEA_FreedomsList)
StepFEA_FreedomsList.SetFreedoms = new_instancemethod(_StepFEA.StepFEA_FreedomsList_SetFreedoms, None, StepFEA_FreedomsList)
StepFEA_FreedomsList_swigregister = _StepFEA.StepFEA_FreedomsList_swigregister
StepFEA_FreedomsList_swigregister(StepFEA_FreedomsList)

class StepFEA_NodeDefinition(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeDefinition_swiginit(self, _StepFEA.new_StepFEA_NodeDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeDefinition
StepFEA_NodeDefinition_swigregister = _StepFEA.StepFEA_NodeDefinition_swigregister
StepFEA_NodeDefinition_swigregister(StepFEA_NodeDefinition)

class StepFEA_NodeRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentation_Name:
        	:type aRepresentation_Name: TCollection_HAsciiString
        	:param aRepresentation_Items:
        	:type aRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        	:param aRepresentation_ContextOfItems:
        	:type aRepresentation_ContextOfItems: StepRepr_RepresentationContext
        	:param aModelRef:
        	:type aModelRef: StepFEA_FeaModel
        	:rtype: None
        """
        return _StepFEA.StepFEA_NodeRepresentation_Init(self, *args)


    def ModelRef(self, *args) -> "opencascade::handle< StepFEA_FeaModel >":
        """
        * Returns field ModelRef
        	:rtype: opencascade::handle<StepFEA_FeaModel>
        """
        return _StepFEA.StepFEA_NodeRepresentation_ModelRef(self, *args)


    def SetModelRef(self, *args) -> "void":
        """
        * Set field ModelRef
        	:param ModelRef:
        	:type ModelRef: StepFEA_FeaModel
        	:rtype: None
        """
        return _StepFEA.StepFEA_NodeRepresentation_SetModelRef(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_NodeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeRepresentation
StepFEA_NodeRepresentation.Init = new_instancemethod(_StepFEA.StepFEA_NodeRepresentation_Init, None, StepFEA_NodeRepresentation)
StepFEA_NodeRepresentation.ModelRef = new_instancemethod(_StepFEA.StepFEA_NodeRepresentation_ModelRef, None, StepFEA_NodeRepresentation)
StepFEA_NodeRepresentation.SetModelRef = new_instancemethod(_StepFEA.StepFEA_NodeRepresentation_SetModelRef, None, StepFEA_NodeRepresentation)
StepFEA_NodeRepresentation_swigregister = _StepFEA.StepFEA_NodeRepresentation_swigregister
StepFEA_NodeRepresentation_swigregister(StepFEA_NodeRepresentation)

class StepFEA_NodeSet(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aNodes:
        	:type aNodes: StepFEA_HArray1OfNodeRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_NodeSet_Init(self, *args)


    def Nodes(self, *args) -> "opencascade::handle< StepFEA_HArray1OfNodeRepresentation >":
        """
        * Returns field Nodes
        	:rtype: opencascade::handle<StepFEA_HArray1OfNodeRepresentation>
        """
        return _StepFEA.StepFEA_NodeSet_Nodes(self, *args)


    def SetNodes(self, *args) -> "void":
        """
        * Set field Nodes
        	:param Nodes:
        	:type Nodes: StepFEA_HArray1OfNodeRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_NodeSet_SetNodes(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeSet_swiginit(self, _StepFEA.new_StepFEA_NodeSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeSet
StepFEA_NodeSet.Init = new_instancemethod(_StepFEA.StepFEA_NodeSet_Init, None, StepFEA_NodeSet)
StepFEA_NodeSet.Nodes = new_instancemethod(_StepFEA.StepFEA_NodeSet_Nodes, None, StepFEA_NodeSet)
StepFEA_NodeSet.SetNodes = new_instancemethod(_StepFEA.StepFEA_NodeSet_SetNodes, None, StepFEA_NodeSet)
StepFEA_NodeSet_swigregister = _StepFEA.StepFEA_NodeSet_swigregister
StepFEA_NodeSet_swigregister(StepFEA_NodeSet)

class StepFEA_SymmetricTensor22d(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AnisotropicSymmetricTensor22d(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns Value as AnisotropicSymmetricTensor22d (or Null if another type)
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_SymmetricTensor22d_AnisotropicSymmetricTensor22d(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor22d_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor22d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor22d
StepFEA_SymmetricTensor22d.AnisotropicSymmetricTensor22d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor22d_AnisotropicSymmetricTensor22d, None, StepFEA_SymmetricTensor22d)
StepFEA_SymmetricTensor22d_swigregister = _StepFEA.StepFEA_SymmetricTensor22d_swigregister
StepFEA_SymmetricTensor22d_swigregister(StepFEA_SymmetricTensor22d)

class StepFEA_SymmetricTensor23d(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AnisotropicSymmetricTensor23d(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns Value as AnisotropicSymmetricTensor23d (or Null if another type)
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_SymmetricTensor23d_AnisotropicSymmetricTensor23d(self, *args)


    def IsotropicSymmetricTensor23d(self, *args) -> "Standard_Real":
        """
        * Returns Value as IsotropicSymmetricTensor23d (or Null if another type)
        	:rtype: float
        """
        return _StepFEA.StepFEA_SymmetricTensor23d_IsotropicSymmetricTensor23d(self, *args)


    def OrthotropicSymmetricTensor23d(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns Value as OrthotropicSymmetricTensor23d (or Null if another type)
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_SymmetricTensor23d_OrthotropicSymmetricTensor23d(self, *args)


    def SetAnisotropicSymmetricTensor23d(self, *args) -> "void":
        """
        * Set Value for AnisotropicSymmetricTensor23d
        	:param aVal:
        	:type aVal: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepFEA.StepFEA_SymmetricTensor23d_SetAnisotropicSymmetricTensor23d(self, *args)


    def SetIsotropicSymmetricTensor23d(self, *args) -> "void":
        """
        * Set Value for IsotropicSymmetricTensor23d
        	:param aVal:
        	:type aVal: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_SymmetricTensor23d_SetIsotropicSymmetricTensor23d(self, *args)


    def SetOrthotropicSymmetricTensor23d(self, *args) -> "void":
        """
        * Set Value for OrthotropicSymmetricTensor23d
        	:param aVal:
        	:type aVal: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepFEA.StepFEA_SymmetricTensor23d_SetOrthotropicSymmetricTensor23d(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor23d_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor23d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor23d
StepFEA_SymmetricTensor23d.AnisotropicSymmetricTensor23d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor23d_AnisotropicSymmetricTensor23d, None, StepFEA_SymmetricTensor23d)
StepFEA_SymmetricTensor23d.IsotropicSymmetricTensor23d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor23d_IsotropicSymmetricTensor23d, None, StepFEA_SymmetricTensor23d)
StepFEA_SymmetricTensor23d.OrthotropicSymmetricTensor23d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor23d_OrthotropicSymmetricTensor23d, None, StepFEA_SymmetricTensor23d)
StepFEA_SymmetricTensor23d.SetAnisotropicSymmetricTensor23d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor23d_SetAnisotropicSymmetricTensor23d, None, StepFEA_SymmetricTensor23d)
StepFEA_SymmetricTensor23d.SetIsotropicSymmetricTensor23d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor23d_SetIsotropicSymmetricTensor23d, None, StepFEA_SymmetricTensor23d)
StepFEA_SymmetricTensor23d.SetOrthotropicSymmetricTensor23d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor23d_SetOrthotropicSymmetricTensor23d, None, StepFEA_SymmetricTensor23d)
StepFEA_SymmetricTensor23d_swigregister = _StepFEA.StepFEA_SymmetricTensor23d_swigregister
StepFEA_SymmetricTensor23d_swigregister(StepFEA_SymmetricTensor23d)

class StepFEA_SymmetricTensor23dMember(OCC.Core.StepData.StepData_SelectArrReal):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor23dMember_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor23dMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_SymmetricTensor23dMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor23dMember
StepFEA_SymmetricTensor23dMember_swigregister = _StepFEA.StepFEA_SymmetricTensor23dMember_swigregister
StepFEA_SymmetricTensor23dMember_swigregister(StepFEA_SymmetricTensor23dMember)

class StepFEA_SymmetricTensor42d(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AnisotropicSymmetricTensor42d(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns Value as AnisotropicSymmetricTensor42d (or Null if another type)
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_SymmetricTensor42d_AnisotropicSymmetricTensor42d(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor42d_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor42d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor42d
StepFEA_SymmetricTensor42d.AnisotropicSymmetricTensor42d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor42d_AnisotropicSymmetricTensor42d, None, StepFEA_SymmetricTensor42d)
StepFEA_SymmetricTensor42d_swigregister = _StepFEA.StepFEA_SymmetricTensor42d_swigregister
StepFEA_SymmetricTensor42d_swigregister(StepFEA_SymmetricTensor42d)

class StepFEA_SymmetricTensor43d(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AnisotropicSymmetricTensor43d(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns Value as AnisotropicSymmetricTensor43d (or Null if another type)
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_SymmetricTensor43d_AnisotropicSymmetricTensor43d(self, *args)


    def FeaColumnNormalisedMonoclinicSymmetricTensor43d(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns Value as FeaColumnNormalisedMonoclinicSymmetricTensor43d (or Null if another type)
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_SymmetricTensor43d_FeaColumnNormalisedMonoclinicSymmetricTensor43d(self, *args)


    def FeaColumnNormalisedOrthotropicSymmetricTensor43d(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns Value as FeaColumnNormalisedOrthotropicSymmetricTensor43d (or Null if another type)
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_SymmetricTensor43d_FeaColumnNormalisedOrthotropicSymmetricTensor43d(self, *args)


    def FeaIsoOrthotropicSymmetricTensor43d(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns Value as FeaIsoOrthotropicSymmetricTensor43d (or Null if another type)
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_SymmetricTensor43d_FeaIsoOrthotropicSymmetricTensor43d(self, *args)


    def FeaTransverseIsotropicSymmetricTensor43d(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        * Returns Value as FeaTransverseIsotropicSymmetricTensor43d (or Null if another type)
        	:rtype: opencascade::handle<TColStd_HArray1OfReal>
        """
        return _StepFEA.StepFEA_SymmetricTensor43d_FeaTransverseIsotropicSymmetricTensor43d(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor43d_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor43d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor43d
StepFEA_SymmetricTensor43d.AnisotropicSymmetricTensor43d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor43d_AnisotropicSymmetricTensor43d, None, StepFEA_SymmetricTensor43d)
StepFEA_SymmetricTensor43d.FeaColumnNormalisedMonoclinicSymmetricTensor43d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor43d_FeaColumnNormalisedMonoclinicSymmetricTensor43d, None, StepFEA_SymmetricTensor43d)
StepFEA_SymmetricTensor43d.FeaColumnNormalisedOrthotropicSymmetricTensor43d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor43d_FeaColumnNormalisedOrthotropicSymmetricTensor43d, None, StepFEA_SymmetricTensor43d)
StepFEA_SymmetricTensor43d.FeaIsoOrthotropicSymmetricTensor43d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor43d_FeaIsoOrthotropicSymmetricTensor43d, None, StepFEA_SymmetricTensor43d)
StepFEA_SymmetricTensor43d.FeaTransverseIsotropicSymmetricTensor43d = new_instancemethod(_StepFEA.StepFEA_SymmetricTensor43d_FeaTransverseIsotropicSymmetricTensor43d, None, StepFEA_SymmetricTensor43d)
StepFEA_SymmetricTensor43d_swigregister = _StepFEA.StepFEA_SymmetricTensor43d_swigregister
StepFEA_SymmetricTensor43d_swigregister(StepFEA_SymmetricTensor43d)

class StepFEA_SymmetricTensor43dMember(OCC.Core.StepData.StepData_SelectArrReal):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor43dMember_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor43dMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_SymmetricTensor43dMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor43dMember
StepFEA_SymmetricTensor43dMember_swigregister = _StepFEA.StepFEA_SymmetricTensor43dMember_swigregister
StepFEA_SymmetricTensor43dMember_swigregister(StepFEA_SymmetricTensor43dMember)

class StepFEA_AlignedCurve3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordinateSystem(self, *args) -> "opencascade::handle< StepFEA_FeaAxis2Placement3d >":
        """
        * Returns field CoordinateSystem
        	:rtype: opencascade::handle<StepFEA_FeaAxis2Placement3d>
        """
        return _StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_CoordinateSystem(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aCoordinateSystem:
        	:type aCoordinateSystem: StepFEA_FeaAxis2Placement3d
        	:rtype: None
        """
        return _StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_Init(self, *args)


    def SetCoordinateSystem(self, *args) -> "void":
        """
        * Set field CoordinateSystem
        	:param CoordinateSystem:
        	:type CoordinateSystem: StepFEA_FeaAxis2Placement3d
        	:rtype: None
        """
        return _StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_SetCoordinateSystem(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_AlignedCurve3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_AlignedCurve3dElementCoordinateSystem
StepFEA_AlignedCurve3dElementCoordinateSystem.CoordinateSystem = new_instancemethod(_StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_CoordinateSystem, None, StepFEA_AlignedCurve3dElementCoordinateSystem)
StepFEA_AlignedCurve3dElementCoordinateSystem.Init = new_instancemethod(_StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_Init, None, StepFEA_AlignedCurve3dElementCoordinateSystem)
StepFEA_AlignedCurve3dElementCoordinateSystem.SetCoordinateSystem = new_instancemethod(_StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_SetCoordinateSystem, None, StepFEA_AlignedCurve3dElementCoordinateSystem)
StepFEA_AlignedCurve3dElementCoordinateSystem_swigregister = _StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_swigregister
StepFEA_AlignedCurve3dElementCoordinateSystem_swigregister(StepFEA_AlignedCurve3dElementCoordinateSystem)

class StepFEA_AlignedSurface3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordinateSystem(self, *args) -> "opencascade::handle< StepFEA_FeaAxis2Placement3d >":
        """
        * Returns field CoordinateSystem
        	:rtype: opencascade::handle<StepFEA_FeaAxis2Placement3d>
        """
        return _StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_CoordinateSystem(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aCoordinateSystem:
        	:type aCoordinateSystem: StepFEA_FeaAxis2Placement3d
        	:rtype: None
        """
        return _StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_Init(self, *args)


    def SetCoordinateSystem(self, *args) -> "void":
        """
        * Set field CoordinateSystem
        	:param CoordinateSystem:
        	:type CoordinateSystem: StepFEA_FeaAxis2Placement3d
        	:rtype: None
        """
        return _StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_SetCoordinateSystem(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_AlignedSurface3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_AlignedSurface3dElementCoordinateSystem
StepFEA_AlignedSurface3dElementCoordinateSystem.CoordinateSystem = new_instancemethod(_StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_CoordinateSystem, None, StepFEA_AlignedSurface3dElementCoordinateSystem)
StepFEA_AlignedSurface3dElementCoordinateSystem.Init = new_instancemethod(_StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_Init, None, StepFEA_AlignedSurface3dElementCoordinateSystem)
StepFEA_AlignedSurface3dElementCoordinateSystem.SetCoordinateSystem = new_instancemethod(_StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_SetCoordinateSystem, None, StepFEA_AlignedSurface3dElementCoordinateSystem)
StepFEA_AlignedSurface3dElementCoordinateSystem_swigregister = _StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_swigregister
StepFEA_AlignedSurface3dElementCoordinateSystem_swigregister(StepFEA_AlignedSurface3dElementCoordinateSystem)

class StepFEA_ArbitraryVolume3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordinateSystem(self, *args) -> "opencascade::handle< StepFEA_FeaAxis2Placement3d >":
        """
        * Returns field CoordinateSystem
        	:rtype: opencascade::handle<StepFEA_FeaAxis2Placement3d>
        """
        return _StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_CoordinateSystem(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aCoordinateSystem:
        	:type aCoordinateSystem: StepFEA_FeaAxis2Placement3d
        	:rtype: None
        """
        return _StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_Init(self, *args)


    def SetCoordinateSystem(self, *args) -> "void":
        """
        * Set field CoordinateSystem
        	:param CoordinateSystem:
        	:type CoordinateSystem: StepFEA_FeaAxis2Placement3d
        	:rtype: None
        """
        return _StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_SetCoordinateSystem(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_ArbitraryVolume3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ArbitraryVolume3dElementCoordinateSystem
StepFEA_ArbitraryVolume3dElementCoordinateSystem.CoordinateSystem = new_instancemethod(_StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_CoordinateSystem, None, StepFEA_ArbitraryVolume3dElementCoordinateSystem)
StepFEA_ArbitraryVolume3dElementCoordinateSystem.Init = new_instancemethod(_StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_Init, None, StepFEA_ArbitraryVolume3dElementCoordinateSystem)
StepFEA_ArbitraryVolume3dElementCoordinateSystem.SetCoordinateSystem = new_instancemethod(_StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_SetCoordinateSystem, None, StepFEA_ArbitraryVolume3dElementCoordinateSystem)
StepFEA_ArbitraryVolume3dElementCoordinateSystem_swigregister = _StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_swigregister
StepFEA_ArbitraryVolume3dElementCoordinateSystem_swigregister(StepFEA_ArbitraryVolume3dElementCoordinateSystem)

class StepFEA_ConstantSurface3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Angle(self, *args) -> "Standard_Real":
        """
        * Returns field Angle
        	:rtype: float
        """
        return _StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_Angle(self, *args)


    def Axis(self, *args) -> "Standard_Integer":
        """
        * Returns field Axis
        	:rtype: int
        """
        return _StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_Axis(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aAxis:
        	:type aAxis: int
        	:param aAngle:
        	:type aAngle: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_Init(self, *args)


    def SetAngle(self, *args) -> "void":
        """
        * Set field Angle
        	:param Angle:
        	:type Angle: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_SetAngle(self, *args)


    def SetAxis(self, *args) -> "void":
        """
        * Set field Axis
        	:param Axis:
        	:type Axis: int
        	:rtype: None
        """
        return _StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_SetAxis(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_ConstantSurface3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ConstantSurface3dElementCoordinateSystem
StepFEA_ConstantSurface3dElementCoordinateSystem.Angle = new_instancemethod(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_Angle, None, StepFEA_ConstantSurface3dElementCoordinateSystem)
StepFEA_ConstantSurface3dElementCoordinateSystem.Axis = new_instancemethod(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_Axis, None, StepFEA_ConstantSurface3dElementCoordinateSystem)
StepFEA_ConstantSurface3dElementCoordinateSystem.Init = new_instancemethod(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_Init, None, StepFEA_ConstantSurface3dElementCoordinateSystem)
StepFEA_ConstantSurface3dElementCoordinateSystem.SetAngle = new_instancemethod(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_SetAngle, None, StepFEA_ConstantSurface3dElementCoordinateSystem)
StepFEA_ConstantSurface3dElementCoordinateSystem.SetAxis = new_instancemethod(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_SetAxis, None, StepFEA_ConstantSurface3dElementCoordinateSystem)
StepFEA_ConstantSurface3dElementCoordinateSystem_swigregister = _StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_swigregister
StepFEA_ConstantSurface3dElementCoordinateSystem_swigregister(StepFEA_ConstantSurface3dElementCoordinateSystem)

class StepFEA_Curve3dElementRepresentation(StepFEA_ElementRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ElementDescriptor(self, *args) -> "opencascade::handle< StepElement_Curve3dElementDescriptor >":
        """
        * Returns field ElementDescriptor
        	:rtype: opencascade::handle<StepElement_Curve3dElementDescriptor>
        """
        return _StepFEA.StepFEA_Curve3dElementRepresentation_ElementDescriptor(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentation_Name:
        	:type aRepresentation_Name: TCollection_HAsciiString
        	:param aRepresentation_Items:
        	:type aRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        	:param aRepresentation_ContextOfItems:
        	:type aRepresentation_ContextOfItems: StepRepr_RepresentationContext
        	:param aElementRepresentation_NodeList:
        	:type aElementRepresentation_NodeList: StepFEA_HArray1OfNodeRepresentation
        	:param aModelRef:
        	:type aModelRef: StepFEA_FeaModel3d
        	:param aElementDescriptor:
        	:type aElementDescriptor: StepElement_Curve3dElementDescriptor
        	:param aProperty:
        	:type aProperty: StepFEA_Curve3dElementProperty
        	:param aMaterial:
        	:type aMaterial: StepElement_ElementMaterial
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementRepresentation_Init(self, *args)


    def Material(self, *args) -> "opencascade::handle< StepElement_ElementMaterial >":
        """
        * Returns field Material
        	:rtype: opencascade::handle<StepElement_ElementMaterial>
        """
        return _StepFEA.StepFEA_Curve3dElementRepresentation_Material(self, *args)


    def ModelRef(self, *args) -> "opencascade::handle< StepFEA_FeaModel3d >":
        """
        * Returns field ModelRef
        	:rtype: opencascade::handle<StepFEA_FeaModel3d>
        """
        return _StepFEA.StepFEA_Curve3dElementRepresentation_ModelRef(self, *args)


    def Property(self, *args) -> "opencascade::handle< StepFEA_Curve3dElementProperty >":
        """
        * Returns field Property
        	:rtype: opencascade::handle<StepFEA_Curve3dElementProperty>
        """
        return _StepFEA.StepFEA_Curve3dElementRepresentation_Property(self, *args)


    def SetElementDescriptor(self, *args) -> "void":
        """
        * Set field ElementDescriptor
        	:param ElementDescriptor:
        	:type ElementDescriptor: StepElement_Curve3dElementDescriptor
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementRepresentation_SetElementDescriptor(self, *args)


    def SetMaterial(self, *args) -> "void":
        """
        * Set field Material
        	:param Material:
        	:type Material: StepElement_ElementMaterial
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementRepresentation_SetMaterial(self, *args)


    def SetModelRef(self, *args) -> "void":
        """
        * Set field ModelRef
        	:param ModelRef:
        	:type ModelRef: StepFEA_FeaModel3d
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementRepresentation_SetModelRef(self, *args)


    def SetProperty(self, *args) -> "void":
        """
        * Set field Property
        	:param Property:
        	:type Property: StepFEA_Curve3dElementProperty
        	:rtype: None
        """
        return _StepFEA.StepFEA_Curve3dElementRepresentation_SetProperty(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Curve3dElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_Curve3dElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Curve3dElementRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Curve3dElementRepresentation
StepFEA_Curve3dElementRepresentation.ElementDescriptor = new_instancemethod(_StepFEA.StepFEA_Curve3dElementRepresentation_ElementDescriptor, None, StepFEA_Curve3dElementRepresentation)
StepFEA_Curve3dElementRepresentation.Init = new_instancemethod(_StepFEA.StepFEA_Curve3dElementRepresentation_Init, None, StepFEA_Curve3dElementRepresentation)
StepFEA_Curve3dElementRepresentation.Material = new_instancemethod(_StepFEA.StepFEA_Curve3dElementRepresentation_Material, None, StepFEA_Curve3dElementRepresentation)
StepFEA_Curve3dElementRepresentation.ModelRef = new_instancemethod(_StepFEA.StepFEA_Curve3dElementRepresentation_ModelRef, None, StepFEA_Curve3dElementRepresentation)
StepFEA_Curve3dElementRepresentation.Property = new_instancemethod(_StepFEA.StepFEA_Curve3dElementRepresentation_Property, None, StepFEA_Curve3dElementRepresentation)
StepFEA_Curve3dElementRepresentation.SetElementDescriptor = new_instancemethod(_StepFEA.StepFEA_Curve3dElementRepresentation_SetElementDescriptor, None, StepFEA_Curve3dElementRepresentation)
StepFEA_Curve3dElementRepresentation.SetMaterial = new_instancemethod(_StepFEA.StepFEA_Curve3dElementRepresentation_SetMaterial, None, StepFEA_Curve3dElementRepresentation)
StepFEA_Curve3dElementRepresentation.SetModelRef = new_instancemethod(_StepFEA.StepFEA_Curve3dElementRepresentation_SetModelRef, None, StepFEA_Curve3dElementRepresentation)
StepFEA_Curve3dElementRepresentation.SetProperty = new_instancemethod(_StepFEA.StepFEA_Curve3dElementRepresentation_SetProperty, None, StepFEA_Curve3dElementRepresentation)
StepFEA_Curve3dElementRepresentation_swigregister = _StepFEA.StepFEA_Curve3dElementRepresentation_swigregister
StepFEA_Curve3dElementRepresentation_swigregister(StepFEA_Curve3dElementRepresentation)

class StepFEA_CurveElementIntervalConstant(StepFEA_CurveElementInterval):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aCurveElementInterval_FinishPosition:
        	:type aCurveElementInterval_FinishPosition: StepFEA_CurveElementLocation
        	:param aCurveElementInterval_EuAngles:
        	:type aCurveElementInterval_EuAngles: StepBasic_EulerAngles
        	:param aSection:
        	:type aSection: StepElement_CurveElementSectionDefinition
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementIntervalConstant_Init(self, *args)


    def Section(self, *args) -> "opencascade::handle< StepElement_CurveElementSectionDefinition >":
        """
        * Returns field Section
        	:rtype: opencascade::handle<StepElement_CurveElementSectionDefinition>
        """
        return _StepFEA.StepFEA_CurveElementIntervalConstant_Section(self, *args)


    def SetSection(self, *args) -> "void":
        """
        * Set field Section
        	:param Section:
        	:type Section: StepElement_CurveElementSectionDefinition
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementIntervalConstant_SetSection(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementIntervalConstant_swiginit(self, _StepFEA.new_StepFEA_CurveElementIntervalConstant(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementIntervalConstant_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementIntervalConstant
StepFEA_CurveElementIntervalConstant.Init = new_instancemethod(_StepFEA.StepFEA_CurveElementIntervalConstant_Init, None, StepFEA_CurveElementIntervalConstant)
StepFEA_CurveElementIntervalConstant.Section = new_instancemethod(_StepFEA.StepFEA_CurveElementIntervalConstant_Section, None, StepFEA_CurveElementIntervalConstant)
StepFEA_CurveElementIntervalConstant.SetSection = new_instancemethod(_StepFEA.StepFEA_CurveElementIntervalConstant_SetSection, None, StepFEA_CurveElementIntervalConstant)
StepFEA_CurveElementIntervalConstant_swigregister = _StepFEA.StepFEA_CurveElementIntervalConstant_swigregister
StepFEA_CurveElementIntervalConstant_swigregister(StepFEA_CurveElementIntervalConstant)

class StepFEA_CurveElementIntervalLinearlyVarying(StepFEA_CurveElementInterval):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aCurveElementInterval_FinishPosition:
        	:type aCurveElementInterval_FinishPosition: StepFEA_CurveElementLocation
        	:param aCurveElementInterval_EuAngles:
        	:type aCurveElementInterval_EuAngles: StepBasic_EulerAngles
        	:param aSections:
        	:type aSections: StepElement_HArray1OfCurveElementSectionDefinition
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_Init(self, *args)


    def Sections(self, *args) -> "opencascade::handle< StepElement_HArray1OfCurveElementSectionDefinition >":
        """
        * Returns field Sections
        	:rtype: opencascade::handle<StepElement_HArray1OfCurveElementSectionDefinition>
        """
        return _StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_Sections(self, *args)


    def SetSections(self, *args) -> "void":
        """
        * Set field Sections
        	:param Sections:
        	:type Sections: StepElement_HArray1OfCurveElementSectionDefinition
        	:rtype: None
        """
        return _StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_SetSections(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_swiginit(self, _StepFEA.new_StepFEA_CurveElementIntervalLinearlyVarying(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementIntervalLinearlyVarying_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementIntervalLinearlyVarying
StepFEA_CurveElementIntervalLinearlyVarying.Init = new_instancemethod(_StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_Init, None, StepFEA_CurveElementIntervalLinearlyVarying)
StepFEA_CurveElementIntervalLinearlyVarying.Sections = new_instancemethod(_StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_Sections, None, StepFEA_CurveElementIntervalLinearlyVarying)
StepFEA_CurveElementIntervalLinearlyVarying.SetSections = new_instancemethod(_StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_SetSections, None, StepFEA_CurveElementIntervalLinearlyVarying)
StepFEA_CurveElementIntervalLinearlyVarying_swigregister = _StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_swigregister
StepFEA_CurveElementIntervalLinearlyVarying_swigregister(StepFEA_CurveElementIntervalLinearlyVarying)

class StepFEA_DummyNode(StepFEA_NodeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_DummyNode_swiginit(self, _StepFEA.new_StepFEA_DummyNode(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_DummyNode_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_DummyNode
StepFEA_DummyNode_swigregister = _StepFEA.StepFEA_DummyNode_swigregister
StepFEA_DummyNode_swigregister(StepFEA_DummyNode)

class StepFEA_ElementGroup(StepFEA_FeaGroup):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Elements(self, *args) -> "opencascade::handle< StepFEA_HArray1OfElementRepresentation >":
        """
        * Returns field Elements
        	:rtype: opencascade::handle<StepFEA_HArray1OfElementRepresentation>
        """
        return _StepFEA.StepFEA_ElementGroup_Elements(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aGroup_Name:
        	:type aGroup_Name: TCollection_HAsciiString
        	:param aGroup_Description:
        	:type aGroup_Description: TCollection_HAsciiString
        	:param aFeaGroup_ModelRef:
        	:type aFeaGroup_ModelRef: StepFEA_FeaModel
        	:param aElements:
        	:type aElements: StepFEA_HArray1OfElementRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_ElementGroup_Init(self, *args)


    def SetElements(self, *args) -> "void":
        """
        * Set field Elements
        	:param Elements:
        	:type Elements: StepFEA_HArray1OfElementRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_ElementGroup_SetElements(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ElementGroup_swiginit(self, _StepFEA.new_StepFEA_ElementGroup(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ElementGroup_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ElementGroup
StepFEA_ElementGroup.Elements = new_instancemethod(_StepFEA.StepFEA_ElementGroup_Elements, None, StepFEA_ElementGroup)
StepFEA_ElementGroup.Init = new_instancemethod(_StepFEA.StepFEA_ElementGroup_Init, None, StepFEA_ElementGroup)
StepFEA_ElementGroup.SetElements = new_instancemethod(_StepFEA.StepFEA_ElementGroup_SetElements, None, StepFEA_ElementGroup)
StepFEA_ElementGroup_swigregister = _StepFEA.StepFEA_ElementGroup_swigregister
StepFEA_ElementGroup_swigregister(StepFEA_ElementGroup)

class StepFEA_FeaAreaDensity(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstant(self, *args) -> "Standard_Real":
        """
        * Returns field FeaConstant
        	:rtype: float
        """
        return _StepFEA.StepFEA_FeaAreaDensity_FeaConstant(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstant:
        	:type aFeaConstant: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaAreaDensity_Init(self, *args)


    def SetFeaConstant(self, *args) -> "void":
        """
        * Set field FeaConstant
        	:param FeaConstant:
        	:type FeaConstant: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaAreaDensity_SetFeaConstant(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaAreaDensity_swiginit(self, _StepFEA.new_StepFEA_FeaAreaDensity(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaAreaDensity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaAreaDensity
StepFEA_FeaAreaDensity.FeaConstant = new_instancemethod(_StepFEA.StepFEA_FeaAreaDensity_FeaConstant, None, StepFEA_FeaAreaDensity)
StepFEA_FeaAreaDensity.Init = new_instancemethod(_StepFEA.StepFEA_FeaAreaDensity_Init, None, StepFEA_FeaAreaDensity)
StepFEA_FeaAreaDensity.SetFeaConstant = new_instancemethod(_StepFEA.StepFEA_FeaAreaDensity_SetFeaConstant, None, StepFEA_FeaAreaDensity)
StepFEA_FeaAreaDensity_swigregister = _StepFEA.StepFEA_FeaAreaDensity_swigregister
StepFEA_FeaAreaDensity_swigregister(StepFEA_FeaAreaDensity)

class StepFEA_FeaLinearElasticity(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstants(self, *args) -> "StepFEA_SymmetricTensor43d":
        """
        * Returns field FeaConstants
        	:rtype: StepFEA_SymmetricTensor43d
        """
        return _StepFEA.StepFEA_FeaLinearElasticity_FeaConstants(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstants:
        	:type aFeaConstants: StepFEA_SymmetricTensor43d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaLinearElasticity_Init(self, *args)


    def SetFeaConstants(self, *args) -> "void":
        """
        * Set field FeaConstants
        	:param FeaConstants:
        	:type FeaConstants: StepFEA_SymmetricTensor43d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaLinearElasticity_SetFeaConstants(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaLinearElasticity_swiginit(self, _StepFEA.new_StepFEA_FeaLinearElasticity(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaLinearElasticity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaLinearElasticity
StepFEA_FeaLinearElasticity.FeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaLinearElasticity_FeaConstants, None, StepFEA_FeaLinearElasticity)
StepFEA_FeaLinearElasticity.Init = new_instancemethod(_StepFEA.StepFEA_FeaLinearElasticity_Init, None, StepFEA_FeaLinearElasticity)
StepFEA_FeaLinearElasticity.SetFeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaLinearElasticity_SetFeaConstants, None, StepFEA_FeaLinearElasticity)
StepFEA_FeaLinearElasticity_swigregister = _StepFEA.StepFEA_FeaLinearElasticity_swigregister
StepFEA_FeaLinearElasticity_swigregister(StepFEA_FeaLinearElasticity)

class StepFEA_FeaMassDensity(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstant(self, *args) -> "Standard_Real":
        """
        * Returns field FeaConstant
        	:rtype: float
        """
        return _StepFEA.StepFEA_FeaMassDensity_FeaConstant(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstant:
        	:type aFeaConstant: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaMassDensity_Init(self, *args)


    def SetFeaConstant(self, *args) -> "void":
        """
        * Set field FeaConstant
        	:param FeaConstant:
        	:type FeaConstant: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaMassDensity_SetFeaConstant(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaMassDensity_swiginit(self, _StepFEA.new_StepFEA_FeaMassDensity(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaMassDensity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaMassDensity
StepFEA_FeaMassDensity.FeaConstant = new_instancemethod(_StepFEA.StepFEA_FeaMassDensity_FeaConstant, None, StepFEA_FeaMassDensity)
StepFEA_FeaMassDensity.Init = new_instancemethod(_StepFEA.StepFEA_FeaMassDensity_Init, None, StepFEA_FeaMassDensity)
StepFEA_FeaMassDensity.SetFeaConstant = new_instancemethod(_StepFEA.StepFEA_FeaMassDensity_SetFeaConstant, None, StepFEA_FeaMassDensity)
StepFEA_FeaMassDensity_swigregister = _StepFEA.StepFEA_FeaMassDensity_swigregister
StepFEA_FeaMassDensity_swigregister(StepFEA_FeaMassDensity)

class StepFEA_FeaModel3d(StepFEA_FeaModel):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaModel3d_swiginit(self, _StepFEA.new_StepFEA_FeaModel3d(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaModel3d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaModel3d
StepFEA_FeaModel3d_swigregister = _StepFEA.StepFEA_FeaModel3d_swigregister
StepFEA_FeaModel3d_swigregister(StepFEA_FeaModel3d)

class StepFEA_FeaMoistureAbsorption(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstants(self, *args) -> "StepFEA_SymmetricTensor23d":
        """
        * Returns field FeaConstants
        	:rtype: StepFEA_SymmetricTensor23d
        """
        return _StepFEA.StepFEA_FeaMoistureAbsorption_FeaConstants(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstants:
        	:type aFeaConstants: StepFEA_SymmetricTensor23d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaMoistureAbsorption_Init(self, *args)


    def SetFeaConstants(self, *args) -> "void":
        """
        * Set field FeaConstants
        	:param FeaConstants:
        	:type FeaConstants: StepFEA_SymmetricTensor23d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaMoistureAbsorption_SetFeaConstants(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaMoistureAbsorption_swiginit(self, _StepFEA.new_StepFEA_FeaMoistureAbsorption(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaMoistureAbsorption_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaMoistureAbsorption
StepFEA_FeaMoistureAbsorption.FeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaMoistureAbsorption_FeaConstants, None, StepFEA_FeaMoistureAbsorption)
StepFEA_FeaMoistureAbsorption.Init = new_instancemethod(_StepFEA.StepFEA_FeaMoistureAbsorption_Init, None, StepFEA_FeaMoistureAbsorption)
StepFEA_FeaMoistureAbsorption.SetFeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaMoistureAbsorption_SetFeaConstants, None, StepFEA_FeaMoistureAbsorption)
StepFEA_FeaMoistureAbsorption_swigregister = _StepFEA.StepFEA_FeaMoistureAbsorption_swigregister
StepFEA_FeaMoistureAbsorption_swigregister(StepFEA_FeaMoistureAbsorption)

class StepFEA_FeaSecantCoefficientOfLinearThermalExpansion(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstants(self, *args) -> "StepFEA_SymmetricTensor23d":
        """
        * Returns field FeaConstants
        	:rtype: StepFEA_SymmetricTensor23d
        """
        return _StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_FeaConstants(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstants:
        	:type aFeaConstants: StepFEA_SymmetricTensor23d
        	:param aReferenceTemperature:
        	:type aReferenceTemperature: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_Init(self, *args)


    def ReferenceTemperature(self, *args) -> "Standard_Real":
        """
        * Returns field ReferenceTemperature
        	:rtype: float
        """
        return _StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_ReferenceTemperature(self, *args)


    def SetFeaConstants(self, *args) -> "void":
        """
        * Set field FeaConstants
        	:param FeaConstants:
        	:type FeaConstants: StepFEA_SymmetricTensor23d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_SetFeaConstants(self, *args)


    def SetReferenceTemperature(self, *args) -> "void":
        """
        * Set field ReferenceTemperature
        	:param ReferenceTemperature:
        	:type ReferenceTemperature: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_SetReferenceTemperature(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_swiginit(self, _StepFEA.new_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion
StepFEA_FeaSecantCoefficientOfLinearThermalExpansion.FeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_FeaConstants, None, StepFEA_FeaSecantCoefficientOfLinearThermalExpansion)
StepFEA_FeaSecantCoefficientOfLinearThermalExpansion.Init = new_instancemethod(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_Init, None, StepFEA_FeaSecantCoefficientOfLinearThermalExpansion)
StepFEA_FeaSecantCoefficientOfLinearThermalExpansion.ReferenceTemperature = new_instancemethod(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_ReferenceTemperature, None, StepFEA_FeaSecantCoefficientOfLinearThermalExpansion)
StepFEA_FeaSecantCoefficientOfLinearThermalExpansion.SetFeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_SetFeaConstants, None, StepFEA_FeaSecantCoefficientOfLinearThermalExpansion)
StepFEA_FeaSecantCoefficientOfLinearThermalExpansion.SetReferenceTemperature = new_instancemethod(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_SetReferenceTemperature, None, StepFEA_FeaSecantCoefficientOfLinearThermalExpansion)
StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_swigregister = _StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_swigregister
StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_swigregister(StepFEA_FeaSecantCoefficientOfLinearThermalExpansion)

class StepFEA_FeaShellBendingStiffness(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstants(self, *args) -> "StepFEA_SymmetricTensor42d":
        """
        * Returns field FeaConstants
        	:rtype: StepFEA_SymmetricTensor42d
        """
        return _StepFEA.StepFEA_FeaShellBendingStiffness_FeaConstants(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstants:
        	:type aFeaConstants: StepFEA_SymmetricTensor42d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaShellBendingStiffness_Init(self, *args)


    def SetFeaConstants(self, *args) -> "void":
        """
        * Set field FeaConstants
        	:param FeaConstants:
        	:type FeaConstants: StepFEA_SymmetricTensor42d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaShellBendingStiffness_SetFeaConstants(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaShellBendingStiffness_swiginit(self, _StepFEA.new_StepFEA_FeaShellBendingStiffness(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaShellBendingStiffness_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaShellBendingStiffness
StepFEA_FeaShellBendingStiffness.FeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaShellBendingStiffness_FeaConstants, None, StepFEA_FeaShellBendingStiffness)
StepFEA_FeaShellBendingStiffness.Init = new_instancemethod(_StepFEA.StepFEA_FeaShellBendingStiffness_Init, None, StepFEA_FeaShellBendingStiffness)
StepFEA_FeaShellBendingStiffness.SetFeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaShellBendingStiffness_SetFeaConstants, None, StepFEA_FeaShellBendingStiffness)
StepFEA_FeaShellBendingStiffness_swigregister = _StepFEA.StepFEA_FeaShellBendingStiffness_swigregister
StepFEA_FeaShellBendingStiffness_swigregister(StepFEA_FeaShellBendingStiffness)

class StepFEA_FeaShellMembraneBendingCouplingStiffness(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstants(self, *args) -> "StepFEA_SymmetricTensor42d":
        """
        * Returns field FeaConstants
        	:rtype: StepFEA_SymmetricTensor42d
        """
        return _StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_FeaConstants(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstants:
        	:type aFeaConstants: StepFEA_SymmetricTensor42d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_Init(self, *args)


    def SetFeaConstants(self, *args) -> "void":
        """
        * Set field FeaConstants
        	:param FeaConstants:
        	:type FeaConstants: StepFEA_SymmetricTensor42d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_SetFeaConstants(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_swiginit(self, _StepFEA.new_StepFEA_FeaShellMembraneBendingCouplingStiffness(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaShellMembraneBendingCouplingStiffness
StepFEA_FeaShellMembraneBendingCouplingStiffness.FeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_FeaConstants, None, StepFEA_FeaShellMembraneBendingCouplingStiffness)
StepFEA_FeaShellMembraneBendingCouplingStiffness.Init = new_instancemethod(_StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_Init, None, StepFEA_FeaShellMembraneBendingCouplingStiffness)
StepFEA_FeaShellMembraneBendingCouplingStiffness.SetFeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_SetFeaConstants, None, StepFEA_FeaShellMembraneBendingCouplingStiffness)
StepFEA_FeaShellMembraneBendingCouplingStiffness_swigregister = _StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_swigregister
StepFEA_FeaShellMembraneBendingCouplingStiffness_swigregister(StepFEA_FeaShellMembraneBendingCouplingStiffness)

class StepFEA_FeaShellMembraneStiffness(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstants(self, *args) -> "StepFEA_SymmetricTensor42d":
        """
        * Returns field FeaConstants
        	:rtype: StepFEA_SymmetricTensor42d
        """
        return _StepFEA.StepFEA_FeaShellMembraneStiffness_FeaConstants(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstants:
        	:type aFeaConstants: StepFEA_SymmetricTensor42d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaShellMembraneStiffness_Init(self, *args)


    def SetFeaConstants(self, *args) -> "void":
        """
        * Set field FeaConstants
        	:param FeaConstants:
        	:type FeaConstants: StepFEA_SymmetricTensor42d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaShellMembraneStiffness_SetFeaConstants(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaShellMembraneStiffness_swiginit(self, _StepFEA.new_StepFEA_FeaShellMembraneStiffness(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaShellMembraneStiffness_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaShellMembraneStiffness
StepFEA_FeaShellMembraneStiffness.FeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaShellMembraneStiffness_FeaConstants, None, StepFEA_FeaShellMembraneStiffness)
StepFEA_FeaShellMembraneStiffness.Init = new_instancemethod(_StepFEA.StepFEA_FeaShellMembraneStiffness_Init, None, StepFEA_FeaShellMembraneStiffness)
StepFEA_FeaShellMembraneStiffness.SetFeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaShellMembraneStiffness_SetFeaConstants, None, StepFEA_FeaShellMembraneStiffness)
StepFEA_FeaShellMembraneStiffness_swigregister = _StepFEA.StepFEA_FeaShellMembraneStiffness_swigregister
StepFEA_FeaShellMembraneStiffness_swigregister(StepFEA_FeaShellMembraneStiffness)

class StepFEA_FeaShellShearStiffness(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstants(self, *args) -> "StepFEA_SymmetricTensor22d":
        """
        * Returns field FeaConstants
        	:rtype: StepFEA_SymmetricTensor22d
        """
        return _StepFEA.StepFEA_FeaShellShearStiffness_FeaConstants(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstants:
        	:type aFeaConstants: StepFEA_SymmetricTensor22d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaShellShearStiffness_Init(self, *args)


    def SetFeaConstants(self, *args) -> "void":
        """
        * Set field FeaConstants
        	:param FeaConstants:
        	:type FeaConstants: StepFEA_SymmetricTensor22d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaShellShearStiffness_SetFeaConstants(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaShellShearStiffness_swiginit(self, _StepFEA.new_StepFEA_FeaShellShearStiffness(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaShellShearStiffness_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaShellShearStiffness
StepFEA_FeaShellShearStiffness.FeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaShellShearStiffness_FeaConstants, None, StepFEA_FeaShellShearStiffness)
StepFEA_FeaShellShearStiffness.Init = new_instancemethod(_StepFEA.StepFEA_FeaShellShearStiffness_Init, None, StepFEA_FeaShellShearStiffness)
StepFEA_FeaShellShearStiffness.SetFeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaShellShearStiffness_SetFeaConstants, None, StepFEA_FeaShellShearStiffness)
StepFEA_FeaShellShearStiffness_swigregister = _StepFEA.StepFEA_FeaShellShearStiffness_swigregister
StepFEA_FeaShellShearStiffness_swigregister(StepFEA_FeaShellShearStiffness)

class StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FeaConstants(self, *args) -> "StepFEA_SymmetricTensor23d":
        """
        * Returns field FeaConstants
        	:rtype: StepFEA_SymmetricTensor23d
        """
        return _StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_FeaConstants(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFeaConstants:
        	:type aFeaConstants: StepFEA_SymmetricTensor23d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_Init(self, *args)


    def SetFeaConstants(self, *args) -> "void":
        """
        * Set field FeaConstants
        	:param FeaConstants:
        	:type FeaConstants: StepFEA_SymmetricTensor23d
        	:rtype: None
        """
        return _StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_SetFeaConstants(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_swiginit(self, _StepFEA.new_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion
StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion.FeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_FeaConstants, None, StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion)
StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion.Init = new_instancemethod(_StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_Init, None, StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion)
StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion.SetFeaConstants = new_instancemethod(_StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_SetFeaConstants, None, StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion)
StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_swigregister = _StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_swigregister
StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_swigregister(StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion)

class StepFEA_GeometricNode(StepFEA_NodeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_GeometricNode_swiginit(self, _StepFEA.new_StepFEA_GeometricNode(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_GeometricNode_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_GeometricNode
StepFEA_GeometricNode_swigregister = _StepFEA.StepFEA_GeometricNode_swigregister
StepFEA_GeometricNode_swigregister(StepFEA_GeometricNode)

class StepFEA_Node(StepFEA_NodeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Node_swiginit(self, _StepFEA.new_StepFEA_Node(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Node_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Node
StepFEA_Node_swigregister = _StepFEA.StepFEA_Node_swigregister
StepFEA_Node_swigregister(StepFEA_Node)

class StepFEA_NodeGroup(StepFEA_FeaGroup):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aGroup_Name:
        	:type aGroup_Name: TCollection_HAsciiString
        	:param aGroup_Description:
        	:type aGroup_Description: TCollection_HAsciiString
        	:param aFeaGroup_ModelRef:
        	:type aFeaGroup_ModelRef: StepFEA_FeaModel
        	:param aNodes:
        	:type aNodes: StepFEA_HArray1OfNodeRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_NodeGroup_Init(self, *args)


    def Nodes(self, *args) -> "opencascade::handle< StepFEA_HArray1OfNodeRepresentation >":
        """
        * Returns field Nodes
        	:rtype: opencascade::handle<StepFEA_HArray1OfNodeRepresentation>
        """
        return _StepFEA.StepFEA_NodeGroup_Nodes(self, *args)


    def SetNodes(self, *args) -> "void":
        """
        * Set field Nodes
        	:param Nodes:
        	:type Nodes: StepFEA_HArray1OfNodeRepresentation
        	:rtype: None
        """
        return _StepFEA.StepFEA_NodeGroup_SetNodes(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeGroup_swiginit(self, _StepFEA.new_StepFEA_NodeGroup(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeGroup_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeGroup
StepFEA_NodeGroup.Init = new_instancemethod(_StepFEA.StepFEA_NodeGroup_Init, None, StepFEA_NodeGroup)
StepFEA_NodeGroup.Nodes = new_instancemethod(_StepFEA.StepFEA_NodeGroup_Nodes, None, StepFEA_NodeGroup)
StepFEA_NodeGroup.SetNodes = new_instancemethod(_StepFEA.StepFEA_NodeGroup_SetNodes, None, StepFEA_NodeGroup)
StepFEA_NodeGroup_swigregister = _StepFEA.StepFEA_NodeGroup_swigregister
StepFEA_NodeGroup_swigregister(StepFEA_NodeGroup)

class StepFEA_ParametricCurve3dElementCoordinateDirection(StepFEA_FeaRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aOrientation:
        	:type aOrientation: StepGeom_Direction
        	:rtype: None
        """
        return _StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_Init(self, *args)


    def Orientation(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """
        * Returns field Orientation
        	:rtype: opencascade::handle<StepGeom_Direction>
        """
        return _StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_Orientation(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        * Set field Orientation
        	:param Orientation:
        	:type Orientation: StepGeom_Direction
        	:rtype: None
        """
        return _StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_SetOrientation(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_swiginit(self, _StepFEA.new_StepFEA_ParametricCurve3dElementCoordinateDirection(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ParametricCurve3dElementCoordinateDirection
StepFEA_ParametricCurve3dElementCoordinateDirection.Init = new_instancemethod(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_Init, None, StepFEA_ParametricCurve3dElementCoordinateDirection)
StepFEA_ParametricCurve3dElementCoordinateDirection.Orientation = new_instancemethod(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_Orientation, None, StepFEA_ParametricCurve3dElementCoordinateDirection)
StepFEA_ParametricCurve3dElementCoordinateDirection.SetOrientation = new_instancemethod(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_SetOrientation, None, StepFEA_ParametricCurve3dElementCoordinateDirection)
StepFEA_ParametricCurve3dElementCoordinateDirection_swigregister = _StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_swigregister
StepFEA_ParametricCurve3dElementCoordinateDirection_swigregister(StepFEA_ParametricCurve3dElementCoordinateDirection)

class StepFEA_ParametricCurve3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Direction(self, *args) -> "opencascade::handle< StepFEA_ParametricCurve3dElementCoordinateDirection >":
        """
        * Returns field Direction
        	:rtype: opencascade::handle<StepFEA_ParametricCurve3dElementCoordinateDirection>
        """
        return _StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_Direction(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aDirection:
        	:type aDirection: StepFEA_ParametricCurve3dElementCoordinateDirection
        	:rtype: None
        """
        return _StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_Init(self, *args)


    def SetDirection(self, *args) -> "void":
        """
        * Set field Direction
        	:param Direction:
        	:type Direction: StepFEA_ParametricCurve3dElementCoordinateDirection
        	:rtype: None
        """
        return _StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_SetDirection(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_ParametricCurve3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ParametricCurve3dElementCoordinateSystem
StepFEA_ParametricCurve3dElementCoordinateSystem.Direction = new_instancemethod(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_Direction, None, StepFEA_ParametricCurve3dElementCoordinateSystem)
StepFEA_ParametricCurve3dElementCoordinateSystem.Init = new_instancemethod(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_Init, None, StepFEA_ParametricCurve3dElementCoordinateSystem)
StepFEA_ParametricCurve3dElementCoordinateSystem.SetDirection = new_instancemethod(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_SetDirection, None, StepFEA_ParametricCurve3dElementCoordinateSystem)
StepFEA_ParametricCurve3dElementCoordinateSystem_swigregister = _StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_swigregister
StepFEA_ParametricCurve3dElementCoordinateSystem_swigregister(StepFEA_ParametricCurve3dElementCoordinateSystem)

class StepFEA_ParametricSurface3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Angle(self, *args) -> "Standard_Real":
        """
        * Returns field Angle
        	:rtype: float
        """
        return _StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_Angle(self, *args)


    def Axis(self, *args) -> "Standard_Integer":
        """
        * Returns field Axis
        	:rtype: int
        """
        return _StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_Axis(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aAxis:
        	:type aAxis: int
        	:param aAngle:
        	:type aAngle: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_Init(self, *args)


    def SetAngle(self, *args) -> "void":
        """
        * Set field Angle
        	:param Angle:
        	:type Angle: float
        	:rtype: None
        """
        return _StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_SetAngle(self, *args)


    def SetAxis(self, *args) -> "void":
        """
        * Set field Axis
        	:param Axis:
        	:type Axis: int
        	:rtype: None
        """
        return _StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_SetAxis(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_ParametricSurface3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ParametricSurface3dElementCoordinateSystem
StepFEA_ParametricSurface3dElementCoordinateSystem.Angle = new_instancemethod(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_Angle, None, StepFEA_ParametricSurface3dElementCoordinateSystem)
StepFEA_ParametricSurface3dElementCoordinateSystem.Axis = new_instancemethod(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_Axis, None, StepFEA_ParametricSurface3dElementCoordinateSystem)
StepFEA_ParametricSurface3dElementCoordinateSystem.Init = new_instancemethod(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_Init, None, StepFEA_ParametricSurface3dElementCoordinateSystem)
StepFEA_ParametricSurface3dElementCoordinateSystem.SetAngle = new_instancemethod(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_SetAngle, None, StepFEA_ParametricSurface3dElementCoordinateSystem)
StepFEA_ParametricSurface3dElementCoordinateSystem.SetAxis = new_instancemethod(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_SetAxis, None, StepFEA_ParametricSurface3dElementCoordinateSystem)
StepFEA_ParametricSurface3dElementCoordinateSystem_swigregister = _StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_swigregister
StepFEA_ParametricSurface3dElementCoordinateSystem_swigregister(StepFEA_ParametricSurface3dElementCoordinateSystem)

class StepFEA_Surface3dElementRepresentation(StepFEA_ElementRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ElementDescriptor(self, *args) -> "opencascade::handle< StepElement_Surface3dElementDescriptor >":
        """
        * Returns field ElementDescriptor
        	:rtype: opencascade::handle<StepElement_Surface3dElementDescriptor>
        """
        return _StepFEA.StepFEA_Surface3dElementRepresentation_ElementDescriptor(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentation_Name:
        	:type aRepresentation_Name: TCollection_HAsciiString
        	:param aRepresentation_Items:
        	:type aRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        	:param aRepresentation_ContextOfItems:
        	:type aRepresentation_ContextOfItems: StepRepr_RepresentationContext
        	:param aElementRepresentation_NodeList:
        	:type aElementRepresentation_NodeList: StepFEA_HArray1OfNodeRepresentation
        	:param aModelRef:
        	:type aModelRef: StepFEA_FeaModel3d
        	:param aElementDescriptor:
        	:type aElementDescriptor: StepElement_Surface3dElementDescriptor
        	:param aProperty:
        	:type aProperty: StepElement_SurfaceElementProperty
        	:param aMaterial:
        	:type aMaterial: StepElement_ElementMaterial
        	:rtype: None
        """
        return _StepFEA.StepFEA_Surface3dElementRepresentation_Init(self, *args)


    def Material(self, *args) -> "opencascade::handle< StepElement_ElementMaterial >":
        """
        * Returns field Material
        	:rtype: opencascade::handle<StepElement_ElementMaterial>
        """
        return _StepFEA.StepFEA_Surface3dElementRepresentation_Material(self, *args)


    def ModelRef(self, *args) -> "opencascade::handle< StepFEA_FeaModel3d >":
        """
        * Returns field ModelRef
        	:rtype: opencascade::handle<StepFEA_FeaModel3d>
        """
        return _StepFEA.StepFEA_Surface3dElementRepresentation_ModelRef(self, *args)


    def Property(self, *args) -> "opencascade::handle< StepElement_SurfaceElementProperty >":
        """
        * Returns field Property
        	:rtype: opencascade::handle<StepElement_SurfaceElementProperty>
        """
        return _StepFEA.StepFEA_Surface3dElementRepresentation_Property(self, *args)


    def SetElementDescriptor(self, *args) -> "void":
        """
        * Set field ElementDescriptor
        	:param ElementDescriptor:
        	:type ElementDescriptor: StepElement_Surface3dElementDescriptor
        	:rtype: None
        """
        return _StepFEA.StepFEA_Surface3dElementRepresentation_SetElementDescriptor(self, *args)


    def SetMaterial(self, *args) -> "void":
        """
        * Set field Material
        	:param Material:
        	:type Material: StepElement_ElementMaterial
        	:rtype: None
        """
        return _StepFEA.StepFEA_Surface3dElementRepresentation_SetMaterial(self, *args)


    def SetModelRef(self, *args) -> "void":
        """
        * Set field ModelRef
        	:param ModelRef:
        	:type ModelRef: StepFEA_FeaModel3d
        	:rtype: None
        """
        return _StepFEA.StepFEA_Surface3dElementRepresentation_SetModelRef(self, *args)


    def SetProperty(self, *args) -> "void":
        """
        * Set field Property
        	:param Property:
        	:type Property: StepElement_SurfaceElementProperty
        	:rtype: None
        """
        return _StepFEA.StepFEA_Surface3dElementRepresentation_SetProperty(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Surface3dElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_Surface3dElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Surface3dElementRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Surface3dElementRepresentation
StepFEA_Surface3dElementRepresentation.ElementDescriptor = new_instancemethod(_StepFEA.StepFEA_Surface3dElementRepresentation_ElementDescriptor, None, StepFEA_Surface3dElementRepresentation)
StepFEA_Surface3dElementRepresentation.Init = new_instancemethod(_StepFEA.StepFEA_Surface3dElementRepresentation_Init, None, StepFEA_Surface3dElementRepresentation)
StepFEA_Surface3dElementRepresentation.Material = new_instancemethod(_StepFEA.StepFEA_Surface3dElementRepresentation_Material, None, StepFEA_Surface3dElementRepresentation)
StepFEA_Surface3dElementRepresentation.ModelRef = new_instancemethod(_StepFEA.StepFEA_Surface3dElementRepresentation_ModelRef, None, StepFEA_Surface3dElementRepresentation)
StepFEA_Surface3dElementRepresentation.Property = new_instancemethod(_StepFEA.StepFEA_Surface3dElementRepresentation_Property, None, StepFEA_Surface3dElementRepresentation)
StepFEA_Surface3dElementRepresentation.SetElementDescriptor = new_instancemethod(_StepFEA.StepFEA_Surface3dElementRepresentation_SetElementDescriptor, None, StepFEA_Surface3dElementRepresentation)
StepFEA_Surface3dElementRepresentation.SetMaterial = new_instancemethod(_StepFEA.StepFEA_Surface3dElementRepresentation_SetMaterial, None, StepFEA_Surface3dElementRepresentation)
StepFEA_Surface3dElementRepresentation.SetModelRef = new_instancemethod(_StepFEA.StepFEA_Surface3dElementRepresentation_SetModelRef, None, StepFEA_Surface3dElementRepresentation)
StepFEA_Surface3dElementRepresentation.SetProperty = new_instancemethod(_StepFEA.StepFEA_Surface3dElementRepresentation_SetProperty, None, StepFEA_Surface3dElementRepresentation)
StepFEA_Surface3dElementRepresentation_swigregister = _StepFEA.StepFEA_Surface3dElementRepresentation_swigregister
StepFEA_Surface3dElementRepresentation_swigregister(StepFEA_Surface3dElementRepresentation)

class StepFEA_Volume3dElementRepresentation(StepFEA_ElementRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ElementDescriptor(self, *args) -> "opencascade::handle< StepElement_Volume3dElementDescriptor >":
        """
        * Returns field ElementDescriptor
        	:rtype: opencascade::handle<StepElement_Volume3dElementDescriptor>
        """
        return _StepFEA.StepFEA_Volume3dElementRepresentation_ElementDescriptor(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentation_Name:
        	:type aRepresentation_Name: TCollection_HAsciiString
        	:param aRepresentation_Items:
        	:type aRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        	:param aRepresentation_ContextOfItems:
        	:type aRepresentation_ContextOfItems: StepRepr_RepresentationContext
        	:param aElementRepresentation_NodeList:
        	:type aElementRepresentation_NodeList: StepFEA_HArray1OfNodeRepresentation
        	:param aModelRef:
        	:type aModelRef: StepFEA_FeaModel3d
        	:param aElementDescriptor:
        	:type aElementDescriptor: StepElement_Volume3dElementDescriptor
        	:param aMaterial:
        	:type aMaterial: StepElement_ElementMaterial
        	:rtype: None
        """
        return _StepFEA.StepFEA_Volume3dElementRepresentation_Init(self, *args)


    def Material(self, *args) -> "opencascade::handle< StepElement_ElementMaterial >":
        """
        * Returns field Material
        	:rtype: opencascade::handle<StepElement_ElementMaterial>
        """
        return _StepFEA.StepFEA_Volume3dElementRepresentation_Material(self, *args)


    def ModelRef(self, *args) -> "opencascade::handle< StepFEA_FeaModel3d >":
        """
        * Returns field ModelRef
        	:rtype: opencascade::handle<StepFEA_FeaModel3d>
        """
        return _StepFEA.StepFEA_Volume3dElementRepresentation_ModelRef(self, *args)


    def SetElementDescriptor(self, *args) -> "void":
        """
        * Set field ElementDescriptor
        	:param ElementDescriptor:
        	:type ElementDescriptor: StepElement_Volume3dElementDescriptor
        	:rtype: None
        """
        return _StepFEA.StepFEA_Volume3dElementRepresentation_SetElementDescriptor(self, *args)


    def SetMaterial(self, *args) -> "void":
        """
        * Set field Material
        	:param Material:
        	:type Material: StepElement_ElementMaterial
        	:rtype: None
        """
        return _StepFEA.StepFEA_Volume3dElementRepresentation_SetMaterial(self, *args)


    def SetModelRef(self, *args) -> "void":
        """
        * Set field ModelRef
        	:param ModelRef:
        	:type ModelRef: StepFEA_FeaModel3d
        	:rtype: None
        """
        return _StepFEA.StepFEA_Volume3dElementRepresentation_SetModelRef(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Volume3dElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_Volume3dElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Volume3dElementRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Volume3dElementRepresentation
StepFEA_Volume3dElementRepresentation.ElementDescriptor = new_instancemethod(_StepFEA.StepFEA_Volume3dElementRepresentation_ElementDescriptor, None, StepFEA_Volume3dElementRepresentation)
StepFEA_Volume3dElementRepresentation.Init = new_instancemethod(_StepFEA.StepFEA_Volume3dElementRepresentation_Init, None, StepFEA_Volume3dElementRepresentation)
StepFEA_Volume3dElementRepresentation.Material = new_instancemethod(_StepFEA.StepFEA_Volume3dElementRepresentation_Material, None, StepFEA_Volume3dElementRepresentation)
StepFEA_Volume3dElementRepresentation.ModelRef = new_instancemethod(_StepFEA.StepFEA_Volume3dElementRepresentation_ModelRef, None, StepFEA_Volume3dElementRepresentation)
StepFEA_Volume3dElementRepresentation.SetElementDescriptor = new_instancemethod(_StepFEA.StepFEA_Volume3dElementRepresentation_SetElementDescriptor, None, StepFEA_Volume3dElementRepresentation)
StepFEA_Volume3dElementRepresentation.SetMaterial = new_instancemethod(_StepFEA.StepFEA_Volume3dElementRepresentation_SetMaterial, None, StepFEA_Volume3dElementRepresentation)
StepFEA_Volume3dElementRepresentation.SetModelRef = new_instancemethod(_StepFEA.StepFEA_Volume3dElementRepresentation_SetModelRef, None, StepFEA_Volume3dElementRepresentation)
StepFEA_Volume3dElementRepresentation_swigregister = _StepFEA.StepFEA_Volume3dElementRepresentation_swigregister
StepFEA_Volume3dElementRepresentation_swigregister(StepFEA_Volume3dElementRepresentation)

class StepFEA_NodeWithSolutionCoordinateSystem(StepFEA_Node):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeWithSolutionCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_NodeWithSolutionCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeWithSolutionCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeWithSolutionCoordinateSystem
StepFEA_NodeWithSolutionCoordinateSystem_swigregister = _StepFEA.StepFEA_NodeWithSolutionCoordinateSystem_swigregister
StepFEA_NodeWithSolutionCoordinateSystem_swigregister(StepFEA_NodeWithSolutionCoordinateSystem)

class StepFEA_NodeWithVector(StepFEA_Node):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeWithVector_swiginit(self, _StepFEA.new_StepFEA_NodeWithVector(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeWithVector_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeWithVector
StepFEA_NodeWithVector_swigregister = _StepFEA.StepFEA_NodeWithVector_swigregister
StepFEA_NodeWithVector_swigregister(StepFEA_NodeWithVector)

class StepFEA_HArray1OfCurveElementInterval(StepFEA_Array1OfCurveElementInterval, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfCurveElementInterval_swiginit(self, _StepFEA.new_StepFEA_HArray1OfCurveElementInterval(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfCurveElementInterval_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfCurveElementInterval
StepFEA_HArray1OfCurveElementInterval.Array1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfCurveElementInterval_Array1, None, StepFEA_HArray1OfCurveElementInterval)
StepFEA_HArray1OfCurveElementInterval.ChangeArray1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfCurveElementInterval_ChangeArray1, None, StepFEA_HArray1OfCurveElementInterval)
StepFEA_HArray1OfCurveElementInterval_swigregister = _StepFEA.StepFEA_HArray1OfCurveElementInterval_swigregister
StepFEA_HArray1OfCurveElementInterval_swigregister(StepFEA_HArray1OfCurveElementInterval)

class StepFEA_HArray1OfCurveElementEndOffset(StepFEA_Array1OfCurveElementEndOffset, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfCurveElementEndOffset_swiginit(self, _StepFEA.new_StepFEA_HArray1OfCurveElementEndOffset(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfCurveElementEndOffset_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfCurveElementEndOffset
StepFEA_HArray1OfCurveElementEndOffset.Array1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfCurveElementEndOffset_Array1, None, StepFEA_HArray1OfCurveElementEndOffset)
StepFEA_HArray1OfCurveElementEndOffset.ChangeArray1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfCurveElementEndOffset_ChangeArray1, None, StepFEA_HArray1OfCurveElementEndOffset)
StepFEA_HArray1OfCurveElementEndOffset_swigregister = _StepFEA.StepFEA_HArray1OfCurveElementEndOffset_swigregister
StepFEA_HArray1OfCurveElementEndOffset_swigregister(StepFEA_HArray1OfCurveElementEndOffset)

class StepFEA_HArray1OfElementRepresentation(StepFEA_Array1OfElementRepresentation, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_HArray1OfElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfElementRepresentation_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfElementRepresentation
StepFEA_HArray1OfElementRepresentation.Array1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfElementRepresentation_Array1, None, StepFEA_HArray1OfElementRepresentation)
StepFEA_HArray1OfElementRepresentation.ChangeArray1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfElementRepresentation_ChangeArray1, None, StepFEA_HArray1OfElementRepresentation)
StepFEA_HArray1OfElementRepresentation_swigregister = _StepFEA.StepFEA_HArray1OfElementRepresentation_swigregister
StepFEA_HArray1OfElementRepresentation_swigregister(StepFEA_HArray1OfElementRepresentation)

class StepFEA_HArray1OfCurveElementEndRelease(StepFEA_Array1OfCurveElementEndRelease, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfCurveElementEndRelease_swiginit(self, _StepFEA.new_StepFEA_HArray1OfCurveElementEndRelease(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfCurveElementEndRelease_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfCurveElementEndRelease
StepFEA_HArray1OfCurveElementEndRelease.Array1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfCurveElementEndRelease_Array1, None, StepFEA_HArray1OfCurveElementEndRelease)
StepFEA_HArray1OfCurveElementEndRelease.ChangeArray1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfCurveElementEndRelease_ChangeArray1, None, StepFEA_HArray1OfCurveElementEndRelease)
StepFEA_HArray1OfCurveElementEndRelease_swigregister = _StepFEA.StepFEA_HArray1OfCurveElementEndRelease_swigregister
StepFEA_HArray1OfCurveElementEndRelease_swigregister(StepFEA_HArray1OfCurveElementEndRelease)

class StepFEA_HArray1OfDegreeOfFreedom(StepFEA_Array1OfDegreeOfFreedom, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfDegreeOfFreedom_swiginit(self, _StepFEA.new_StepFEA_HArray1OfDegreeOfFreedom(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfDegreeOfFreedom_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfDegreeOfFreedom
StepFEA_HArray1OfDegreeOfFreedom.Array1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfDegreeOfFreedom_Array1, None, StepFEA_HArray1OfDegreeOfFreedom)
StepFEA_HArray1OfDegreeOfFreedom.ChangeArray1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfDegreeOfFreedom_ChangeArray1, None, StepFEA_HArray1OfDegreeOfFreedom)
StepFEA_HArray1OfDegreeOfFreedom_swigregister = _StepFEA.StepFEA_HArray1OfDegreeOfFreedom_swigregister
StepFEA_HArray1OfDegreeOfFreedom_swigregister(StepFEA_HArray1OfDegreeOfFreedom)

class StepFEA_HArray1OfNodeRepresentation(StepFEA_Array1OfNodeRepresentation, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfNodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_HArray1OfNodeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfNodeRepresentation_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfNodeRepresentation
StepFEA_HArray1OfNodeRepresentation.Array1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfNodeRepresentation_Array1, None, StepFEA_HArray1OfNodeRepresentation)
StepFEA_HArray1OfNodeRepresentation.ChangeArray1 = new_instancemethod(_StepFEA.StepFEA_HArray1OfNodeRepresentation_ChangeArray1, None, StepFEA_HArray1OfNodeRepresentation)
StepFEA_HArray1OfNodeRepresentation_swigregister = _StepFEA.StepFEA_HArray1OfNodeRepresentation_swigregister
StepFEA_HArray1OfNodeRepresentation_swigregister(StepFEA_HArray1OfNodeRepresentation)

class StepFEA_HSequenceOfElementRepresentation(StepFEA_SequenceOfElementRepresentation, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HSequenceOfElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_HSequenceOfElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HSequenceOfElementRepresentation_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HSequenceOfElementRepresentation
StepFEA_HSequenceOfElementRepresentation.Sequence = new_instancemethod(_StepFEA.StepFEA_HSequenceOfElementRepresentation_Sequence, None, StepFEA_HSequenceOfElementRepresentation)
StepFEA_HSequenceOfElementRepresentation.Append = new_instancemethod(_StepFEA.StepFEA_HSequenceOfElementRepresentation_Append, None, StepFEA_HSequenceOfElementRepresentation)
StepFEA_HSequenceOfElementRepresentation.ChangeSequence = new_instancemethod(_StepFEA.StepFEA_HSequenceOfElementRepresentation_ChangeSequence, None, StepFEA_HSequenceOfElementRepresentation)
StepFEA_HSequenceOfElementRepresentation_swigregister = _StepFEA.StepFEA_HSequenceOfElementRepresentation_swigregister
StepFEA_HSequenceOfElementRepresentation_swigregister(StepFEA_HSequenceOfElementRepresentation)

class StepFEA_HSequenceOfElementGeometricRelationship(StepFEA_SequenceOfElementGeometricRelationship, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_HSequenceOfElementGeometricRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HSequenceOfElementGeometricRelationship_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HSequenceOfElementGeometricRelationship
StepFEA_HSequenceOfElementGeometricRelationship.Sequence = new_instancemethod(_StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_Sequence, None, StepFEA_HSequenceOfElementGeometricRelationship)
StepFEA_HSequenceOfElementGeometricRelationship.Append = new_instancemethod(_StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_Append, None, StepFEA_HSequenceOfElementGeometricRelationship)
StepFEA_HSequenceOfElementGeometricRelationship.ChangeSequence = new_instancemethod(_StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_ChangeSequence, None, StepFEA_HSequenceOfElementGeometricRelationship)
StepFEA_HSequenceOfElementGeometricRelationship_swigregister = _StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_swigregister
StepFEA_HSequenceOfElementGeometricRelationship_swigregister(StepFEA_HSequenceOfElementGeometricRelationship)

class StepFEA_HSequenceOfNodeRepresentation(StepFEA_SequenceOfNodeRepresentation, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HSequenceOfNodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_HSequenceOfNodeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HSequenceOfNodeRepresentation_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HSequenceOfNodeRepresentation
StepFEA_HSequenceOfNodeRepresentation.Sequence = new_instancemethod(_StepFEA.StepFEA_HSequenceOfNodeRepresentation_Sequence, None, StepFEA_HSequenceOfNodeRepresentation)
StepFEA_HSequenceOfNodeRepresentation.Append = new_instancemethod(_StepFEA.StepFEA_HSequenceOfNodeRepresentation_Append, None, StepFEA_HSequenceOfNodeRepresentation)
StepFEA_HSequenceOfNodeRepresentation.ChangeSequence = new_instancemethod(_StepFEA.StepFEA_HSequenceOfNodeRepresentation_ChangeSequence, None, StepFEA_HSequenceOfNodeRepresentation)
StepFEA_HSequenceOfNodeRepresentation_swigregister = _StepFEA.StepFEA_HSequenceOfNodeRepresentation_swigregister
StepFEA_HSequenceOfNodeRepresentation_swigregister(StepFEA_HSequenceOfNodeRepresentation)

class StepFEA_HSequenceOfCurve3dElementProperty(StepFEA_SequenceOfCurve3dElementProperty, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_swiginit(self, _StepFEA.new_StepFEA_HSequenceOfCurve3dElementProperty(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HSequenceOfCurve3dElementProperty_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HSequenceOfCurve3dElementProperty
StepFEA_HSequenceOfCurve3dElementProperty.Sequence = new_instancemethod(_StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_Sequence, None, StepFEA_HSequenceOfCurve3dElementProperty)
StepFEA_HSequenceOfCurve3dElementProperty.Append = new_instancemethod(_StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_Append, None, StepFEA_HSequenceOfCurve3dElementProperty)
StepFEA_HSequenceOfCurve3dElementProperty.ChangeSequence = new_instancemethod(_StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_ChangeSequence, None, StepFEA_HSequenceOfCurve3dElementProperty)
StepFEA_HSequenceOfCurve3dElementProperty_swigregister = _StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_swigregister
StepFEA_HSequenceOfCurve3dElementProperty_swigregister(StepFEA_HSequenceOfCurve3dElementProperty)



