# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepGeom module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepgeom.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StepGeom.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StepGeom')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StepGeom')
    _StepGeom = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepGeom', [dirname(__file__)])
        except ImportError:
            import _StepGeom
            return _StepGeom
        try:
            _mod = imp.load_module('_StepGeom', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _StepGeom = swig_import_helper()
    del swig_import_helper
else:
    import _StepGeom
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepGeom.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_StepGeom.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_StepGeom.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_StepGeom.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_StepGeom.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_StepGeom.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_StepGeom.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_StepGeom.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_StepGeom.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_StepGeom.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_StepGeom.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_StepGeom.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_StepGeom.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_StepGeom.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_StepGeom.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_StepGeom.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_StepGeom.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _StepGeom.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _StepGeom.process_exception(error, method_name, class_name)
process_exception = _StepGeom.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepRepr
import OCC.Core.StepBasic
StepGeom_ktUniformKnots = _StepGeom.StepGeom_ktUniformKnots
StepGeom_ktUnspecified = _StepGeom.StepGeom_ktUnspecified
StepGeom_ktQuasiUniformKnots = _StepGeom.StepGeom_ktQuasiUniformKnots
StepGeom_ktPiecewiseBezierKnots = _StepGeom.StepGeom_ktPiecewiseBezierKnots
StepGeom_bssfPlaneSurf = _StepGeom.StepGeom_bssfPlaneSurf
StepGeom_bssfCylindricalSurf = _StepGeom.StepGeom_bssfCylindricalSurf
StepGeom_bssfConicalSurf = _StepGeom.StepGeom_bssfConicalSurf
StepGeom_bssfSphericalSurf = _StepGeom.StepGeom_bssfSphericalSurf
StepGeom_bssfToroidalSurf = _StepGeom.StepGeom_bssfToroidalSurf
StepGeom_bssfSurfOfRevolution = _StepGeom.StepGeom_bssfSurfOfRevolution
StepGeom_bssfRuledSurf = _StepGeom.StepGeom_bssfRuledSurf
StepGeom_bssfGeneralisedCone = _StepGeom.StepGeom_bssfGeneralisedCone
StepGeom_bssfQuadricSurf = _StepGeom.StepGeom_bssfQuadricSurf
StepGeom_bssfSurfOfLinearExtrusion = _StepGeom.StepGeom_bssfSurfOfLinearExtrusion
StepGeom_bssfUnspecified = _StepGeom.StepGeom_bssfUnspecified
StepGeom_bscfPolylineForm = _StepGeom.StepGeom_bscfPolylineForm
StepGeom_bscfCircularArc = _StepGeom.StepGeom_bscfCircularArc
StepGeom_bscfEllipticArc = _StepGeom.StepGeom_bscfEllipticArc
StepGeom_bscfParabolicArc = _StepGeom.StepGeom_bscfParabolicArc
StepGeom_bscfHyperbolicArc = _StepGeom.StepGeom_bscfHyperbolicArc
StepGeom_bscfUnspecified = _StepGeom.StepGeom_bscfUnspecified
StepGeom_tpCartesian = _StepGeom.StepGeom_tpCartesian
StepGeom_tpParameter = _StepGeom.StepGeom_tpParameter
StepGeom_tpUnspecified = _StepGeom.StepGeom_tpUnspecified
StepGeom_pscrCurve3d = _StepGeom.StepGeom_pscrCurve3d
StepGeom_pscrPcurveS1 = _StepGeom.StepGeom_pscrPcurveS1
StepGeom_pscrPcurveS2 = _StepGeom.StepGeom_pscrPcurveS2
StepGeom_tcDiscontinuous = _StepGeom.StepGeom_tcDiscontinuous
StepGeom_tcContinuous = _StepGeom.StepGeom_tcContinuous
StepGeom_tcContSameGradient = _StepGeom.StepGeom_tcContSameGradient
StepGeom_tcContSameGradientSameCurvature = _StepGeom.StepGeom_tcContSameGradientSameCurvature

def Handle_StepGeom_CompositeCurveSegment_Create() -> "opencascade::handle< StepGeom_CompositeCurveSegment >":
    return _StepGeom.Handle_StepGeom_CompositeCurveSegment_Create()
Handle_StepGeom_CompositeCurveSegment_Create = _StepGeom.Handle_StepGeom_CompositeCurveSegment_Create

def Handle_StepGeom_CompositeCurveSegment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CompositeCurveSegment >":
    return _StepGeom.Handle_StepGeom_CompositeCurveSegment_DownCast(t)
Handle_StepGeom_CompositeCurveSegment_DownCast = _StepGeom.Handle_StepGeom_CompositeCurveSegment_DownCast

def Handle_StepGeom_CompositeCurveSegment_IsNull(t: 'opencascade::handle< StepGeom_CompositeCurveSegment > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CompositeCurveSegment_IsNull(t)
Handle_StepGeom_CompositeCurveSegment_IsNull = _StepGeom.Handle_StepGeom_CompositeCurveSegment_IsNull

def Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Create() -> "opencascade::handle< StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx >":
    return _StepGeom.Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Create()
Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Create = _StepGeom.Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Create

def Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx >":
    return _StepGeom.Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_DownCast(t)
Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_DownCast = _StepGeom.Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_DownCast

def Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_IsNull(t: 'opencascade::handle< StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_IsNull(t)
Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_IsNull = _StepGeom.Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_IsNull

def Handle_StepGeom_GeometricRepresentationContext_Create() -> "opencascade::handle< StepGeom_GeometricRepresentationContext >":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationContext_Create()
Handle_StepGeom_GeometricRepresentationContext_Create = _StepGeom.Handle_StepGeom_GeometricRepresentationContext_Create

def Handle_StepGeom_GeometricRepresentationContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_GeometricRepresentationContext >":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationContext_DownCast(t)
Handle_StepGeom_GeometricRepresentationContext_DownCast = _StepGeom.Handle_StepGeom_GeometricRepresentationContext_DownCast

def Handle_StepGeom_GeometricRepresentationContext_IsNull(t: 'opencascade::handle< StepGeom_GeometricRepresentationContext > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationContext_IsNull(t)
Handle_StepGeom_GeometricRepresentationContext_IsNull = _StepGeom.Handle_StepGeom_GeometricRepresentationContext_IsNull

def Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_Create() -> "opencascade::handle< StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext >":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_Create()
Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_Create = _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_Create

def Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext >":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_DownCast(t)
Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_DownCast = _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_DownCast

def Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_IsNull(t: 'opencascade::handle< StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_IsNull(t)
Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_IsNull = _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_IsNull

def Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_Create() -> "opencascade::handle< StepGeom_GeometricRepresentationContextAndParametricRepresentationContext >":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_Create()
Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_Create = _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_Create

def Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_GeometricRepresentationContextAndParametricRepresentationContext >":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_DownCast(t)
Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_DownCast = _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_DownCast

def Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_IsNull(t: 'opencascade::handle< StepGeom_GeometricRepresentationContextAndParametricRepresentationContext > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_IsNull(t)
Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_IsNull = _StepGeom.Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_IsNull

def Handle_StepGeom_GeometricRepresentationItem_Create() -> "opencascade::handle< StepGeom_GeometricRepresentationItem >":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationItem_Create()
Handle_StepGeom_GeometricRepresentationItem_Create = _StepGeom.Handle_StepGeom_GeometricRepresentationItem_Create

def Handle_StepGeom_GeometricRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_GeometricRepresentationItem >":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationItem_DownCast(t)
Handle_StepGeom_GeometricRepresentationItem_DownCast = _StepGeom.Handle_StepGeom_GeometricRepresentationItem_DownCast

def Handle_StepGeom_GeometricRepresentationItem_IsNull(t: 'opencascade::handle< StepGeom_GeometricRepresentationItem > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_GeometricRepresentationItem_IsNull(t)
Handle_StepGeom_GeometricRepresentationItem_IsNull = _StepGeom.Handle_StepGeom_GeometricRepresentationItem_IsNull

def Handle_StepGeom_SurfacePatch_Create() -> "opencascade::handle< StepGeom_SurfacePatch >":
    return _StepGeom.Handle_StepGeom_SurfacePatch_Create()
Handle_StepGeom_SurfacePatch_Create = _StepGeom.Handle_StepGeom_SurfacePatch_Create

def Handle_StepGeom_SurfacePatch_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_SurfacePatch >":
    return _StepGeom.Handle_StepGeom_SurfacePatch_DownCast(t)
Handle_StepGeom_SurfacePatch_DownCast = _StepGeom.Handle_StepGeom_SurfacePatch_DownCast

def Handle_StepGeom_SurfacePatch_IsNull(t: 'opencascade::handle< StepGeom_SurfacePatch > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_SurfacePatch_IsNull(t)
Handle_StepGeom_SurfacePatch_IsNull = _StepGeom.Handle_StepGeom_SurfacePatch_IsNull

def Handle_StepGeom_TrimmingMember_Create() -> "opencascade::handle< StepGeom_TrimmingMember >":
    return _StepGeom.Handle_StepGeom_TrimmingMember_Create()
Handle_StepGeom_TrimmingMember_Create = _StepGeom.Handle_StepGeom_TrimmingMember_Create

def Handle_StepGeom_TrimmingMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_TrimmingMember >":
    return _StepGeom.Handle_StepGeom_TrimmingMember_DownCast(t)
Handle_StepGeom_TrimmingMember_DownCast = _StepGeom.Handle_StepGeom_TrimmingMember_DownCast

def Handle_StepGeom_TrimmingMember_IsNull(t: 'opencascade::handle< StepGeom_TrimmingMember > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_TrimmingMember_IsNull(t)
Handle_StepGeom_TrimmingMember_IsNull = _StepGeom.Handle_StepGeom_TrimmingMember_IsNull

def Handle_StepGeom_CartesianTransformationOperator_Create() -> "opencascade::handle< StepGeom_CartesianTransformationOperator >":
    return _StepGeom.Handle_StepGeom_CartesianTransformationOperator_Create()
Handle_StepGeom_CartesianTransformationOperator_Create = _StepGeom.Handle_StepGeom_CartesianTransformationOperator_Create

def Handle_StepGeom_CartesianTransformationOperator_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CartesianTransformationOperator >":
    return _StepGeom.Handle_StepGeom_CartesianTransformationOperator_DownCast(t)
Handle_StepGeom_CartesianTransformationOperator_DownCast = _StepGeom.Handle_StepGeom_CartesianTransformationOperator_DownCast

def Handle_StepGeom_CartesianTransformationOperator_IsNull(t: 'opencascade::handle< StepGeom_CartesianTransformationOperator > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CartesianTransformationOperator_IsNull(t)
Handle_StepGeom_CartesianTransformationOperator_IsNull = _StepGeom.Handle_StepGeom_CartesianTransformationOperator_IsNull

def Handle_StepGeom_Curve_Create() -> "opencascade::handle< StepGeom_Curve >":
    return _StepGeom.Handle_StepGeom_Curve_Create()
Handle_StepGeom_Curve_Create = _StepGeom.Handle_StepGeom_Curve_Create

def Handle_StepGeom_Curve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Curve >":
    return _StepGeom.Handle_StepGeom_Curve_DownCast(t)
Handle_StepGeom_Curve_DownCast = _StepGeom.Handle_StepGeom_Curve_DownCast

def Handle_StepGeom_Curve_IsNull(t: 'opencascade::handle< StepGeom_Curve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Curve_IsNull(t)
Handle_StepGeom_Curve_IsNull = _StepGeom.Handle_StepGeom_Curve_IsNull

def Handle_StepGeom_Direction_Create() -> "opencascade::handle< StepGeom_Direction >":
    return _StepGeom.Handle_StepGeom_Direction_Create()
Handle_StepGeom_Direction_Create = _StepGeom.Handle_StepGeom_Direction_Create

def Handle_StepGeom_Direction_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Direction >":
    return _StepGeom.Handle_StepGeom_Direction_DownCast(t)
Handle_StepGeom_Direction_DownCast = _StepGeom.Handle_StepGeom_Direction_DownCast

def Handle_StepGeom_Direction_IsNull(t: 'opencascade::handle< StepGeom_Direction > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Direction_IsNull(t)
Handle_StepGeom_Direction_IsNull = _StepGeom.Handle_StepGeom_Direction_IsNull

def Handle_StepGeom_Placement_Create() -> "opencascade::handle< StepGeom_Placement >":
    return _StepGeom.Handle_StepGeom_Placement_Create()
Handle_StepGeom_Placement_Create = _StepGeom.Handle_StepGeom_Placement_Create

def Handle_StepGeom_Placement_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Placement >":
    return _StepGeom.Handle_StepGeom_Placement_DownCast(t)
Handle_StepGeom_Placement_DownCast = _StepGeom.Handle_StepGeom_Placement_DownCast

def Handle_StepGeom_Placement_IsNull(t: 'opencascade::handle< StepGeom_Placement > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Placement_IsNull(t)
Handle_StepGeom_Placement_IsNull = _StepGeom.Handle_StepGeom_Placement_IsNull

def Handle_StepGeom_Point_Create() -> "opencascade::handle< StepGeom_Point >":
    return _StepGeom.Handle_StepGeom_Point_Create()
Handle_StepGeom_Point_Create = _StepGeom.Handle_StepGeom_Point_Create

def Handle_StepGeom_Point_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Point >":
    return _StepGeom.Handle_StepGeom_Point_DownCast(t)
Handle_StepGeom_Point_DownCast = _StepGeom.Handle_StepGeom_Point_DownCast

def Handle_StepGeom_Point_IsNull(t: 'opencascade::handle< StepGeom_Point > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Point_IsNull(t)
Handle_StepGeom_Point_IsNull = _StepGeom.Handle_StepGeom_Point_IsNull

def Handle_StepGeom_ReparametrisedCompositeCurveSegment_Create() -> "opencascade::handle< StepGeom_ReparametrisedCompositeCurveSegment >":
    return _StepGeom.Handle_StepGeom_ReparametrisedCompositeCurveSegment_Create()
Handle_StepGeom_ReparametrisedCompositeCurveSegment_Create = _StepGeom.Handle_StepGeom_ReparametrisedCompositeCurveSegment_Create

def Handle_StepGeom_ReparametrisedCompositeCurveSegment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_ReparametrisedCompositeCurveSegment >":
    return _StepGeom.Handle_StepGeom_ReparametrisedCompositeCurveSegment_DownCast(t)
Handle_StepGeom_ReparametrisedCompositeCurveSegment_DownCast = _StepGeom.Handle_StepGeom_ReparametrisedCompositeCurveSegment_DownCast

def Handle_StepGeom_ReparametrisedCompositeCurveSegment_IsNull(t: 'opencascade::handle< StepGeom_ReparametrisedCompositeCurveSegment > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_ReparametrisedCompositeCurveSegment_IsNull(t)
Handle_StepGeom_ReparametrisedCompositeCurveSegment_IsNull = _StepGeom.Handle_StepGeom_ReparametrisedCompositeCurveSegment_IsNull

def Handle_StepGeom_Surface_Create() -> "opencascade::handle< StepGeom_Surface >":
    return _StepGeom.Handle_StepGeom_Surface_Create()
Handle_StepGeom_Surface_Create = _StepGeom.Handle_StepGeom_Surface_Create

def Handle_StepGeom_Surface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Surface >":
    return _StepGeom.Handle_StepGeom_Surface_DownCast(t)
Handle_StepGeom_Surface_DownCast = _StepGeom.Handle_StepGeom_Surface_DownCast

def Handle_StepGeom_Surface_IsNull(t: 'opencascade::handle< StepGeom_Surface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Surface_IsNull(t)
Handle_StepGeom_Surface_IsNull = _StepGeom.Handle_StepGeom_Surface_IsNull

def Handle_StepGeom_Vector_Create() -> "opencascade::handle< StepGeom_Vector >":
    return _StepGeom.Handle_StepGeom_Vector_Create()
Handle_StepGeom_Vector_Create = _StepGeom.Handle_StepGeom_Vector_Create

def Handle_StepGeom_Vector_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Vector >":
    return _StepGeom.Handle_StepGeom_Vector_DownCast(t)
Handle_StepGeom_Vector_DownCast = _StepGeom.Handle_StepGeom_Vector_DownCast

def Handle_StepGeom_Vector_IsNull(t: 'opencascade::handle< StepGeom_Vector > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Vector_IsNull(t)
Handle_StepGeom_Vector_IsNull = _StepGeom.Handle_StepGeom_Vector_IsNull

def Handle_StepGeom_Axis1Placement_Create() -> "opencascade::handle< StepGeom_Axis1Placement >":
    return _StepGeom.Handle_StepGeom_Axis1Placement_Create()
Handle_StepGeom_Axis1Placement_Create = _StepGeom.Handle_StepGeom_Axis1Placement_Create

def Handle_StepGeom_Axis1Placement_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Axis1Placement >":
    return _StepGeom.Handle_StepGeom_Axis1Placement_DownCast(t)
Handle_StepGeom_Axis1Placement_DownCast = _StepGeom.Handle_StepGeom_Axis1Placement_DownCast

def Handle_StepGeom_Axis1Placement_IsNull(t: 'opencascade::handle< StepGeom_Axis1Placement > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Axis1Placement_IsNull(t)
Handle_StepGeom_Axis1Placement_IsNull = _StepGeom.Handle_StepGeom_Axis1Placement_IsNull

def Handle_StepGeom_Axis2Placement2d_Create() -> "opencascade::handle< StepGeom_Axis2Placement2d >":
    return _StepGeom.Handle_StepGeom_Axis2Placement2d_Create()
Handle_StepGeom_Axis2Placement2d_Create = _StepGeom.Handle_StepGeom_Axis2Placement2d_Create

def Handle_StepGeom_Axis2Placement2d_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Axis2Placement2d >":
    return _StepGeom.Handle_StepGeom_Axis2Placement2d_DownCast(t)
Handle_StepGeom_Axis2Placement2d_DownCast = _StepGeom.Handle_StepGeom_Axis2Placement2d_DownCast

def Handle_StepGeom_Axis2Placement2d_IsNull(t: 'opencascade::handle< StepGeom_Axis2Placement2d > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Axis2Placement2d_IsNull(t)
Handle_StepGeom_Axis2Placement2d_IsNull = _StepGeom.Handle_StepGeom_Axis2Placement2d_IsNull

def Handle_StepGeom_Axis2Placement3d_Create() -> "opencascade::handle< StepGeom_Axis2Placement3d >":
    return _StepGeom.Handle_StepGeom_Axis2Placement3d_Create()
Handle_StepGeom_Axis2Placement3d_Create = _StepGeom.Handle_StepGeom_Axis2Placement3d_Create

def Handle_StepGeom_Axis2Placement3d_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Axis2Placement3d >":
    return _StepGeom.Handle_StepGeom_Axis2Placement3d_DownCast(t)
Handle_StepGeom_Axis2Placement3d_DownCast = _StepGeom.Handle_StepGeom_Axis2Placement3d_DownCast

def Handle_StepGeom_Axis2Placement3d_IsNull(t: 'opencascade::handle< StepGeom_Axis2Placement3d > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Axis2Placement3d_IsNull(t)
Handle_StepGeom_Axis2Placement3d_IsNull = _StepGeom.Handle_StepGeom_Axis2Placement3d_IsNull

def Handle_StepGeom_BoundedCurve_Create() -> "opencascade::handle< StepGeom_BoundedCurve >":
    return _StepGeom.Handle_StepGeom_BoundedCurve_Create()
Handle_StepGeom_BoundedCurve_Create = _StepGeom.Handle_StepGeom_BoundedCurve_Create

def Handle_StepGeom_BoundedCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BoundedCurve >":
    return _StepGeom.Handle_StepGeom_BoundedCurve_DownCast(t)
Handle_StepGeom_BoundedCurve_DownCast = _StepGeom.Handle_StepGeom_BoundedCurve_DownCast

def Handle_StepGeom_BoundedCurve_IsNull(t: 'opencascade::handle< StepGeom_BoundedCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BoundedCurve_IsNull(t)
Handle_StepGeom_BoundedCurve_IsNull = _StepGeom.Handle_StepGeom_BoundedCurve_IsNull

def Handle_StepGeom_BoundedSurface_Create() -> "opencascade::handle< StepGeom_BoundedSurface >":
    return _StepGeom.Handle_StepGeom_BoundedSurface_Create()
Handle_StepGeom_BoundedSurface_Create = _StepGeom.Handle_StepGeom_BoundedSurface_Create

def Handle_StepGeom_BoundedSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BoundedSurface >":
    return _StepGeom.Handle_StepGeom_BoundedSurface_DownCast(t)
Handle_StepGeom_BoundedSurface_DownCast = _StepGeom.Handle_StepGeom_BoundedSurface_DownCast

def Handle_StepGeom_BoundedSurface_IsNull(t: 'opencascade::handle< StepGeom_BoundedSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BoundedSurface_IsNull(t)
Handle_StepGeom_BoundedSurface_IsNull = _StepGeom.Handle_StepGeom_BoundedSurface_IsNull

def Handle_StepGeom_CartesianPoint_Create() -> "opencascade::handle< StepGeom_CartesianPoint >":
    return _StepGeom.Handle_StepGeom_CartesianPoint_Create()
Handle_StepGeom_CartesianPoint_Create = _StepGeom.Handle_StepGeom_CartesianPoint_Create

def Handle_StepGeom_CartesianPoint_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CartesianPoint >":
    return _StepGeom.Handle_StepGeom_CartesianPoint_DownCast(t)
Handle_StepGeom_CartesianPoint_DownCast = _StepGeom.Handle_StepGeom_CartesianPoint_DownCast

def Handle_StepGeom_CartesianPoint_IsNull(t: 'opencascade::handle< StepGeom_CartesianPoint > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CartesianPoint_IsNull(t)
Handle_StepGeom_CartesianPoint_IsNull = _StepGeom.Handle_StepGeom_CartesianPoint_IsNull

def Handle_StepGeom_CartesianTransformationOperator2d_Create() -> "opencascade::handle< StepGeom_CartesianTransformationOperator2d >":
    return _StepGeom.Handle_StepGeom_CartesianTransformationOperator2d_Create()
Handle_StepGeom_CartesianTransformationOperator2d_Create = _StepGeom.Handle_StepGeom_CartesianTransformationOperator2d_Create

def Handle_StepGeom_CartesianTransformationOperator2d_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CartesianTransformationOperator2d >":
    return _StepGeom.Handle_StepGeom_CartesianTransformationOperator2d_DownCast(t)
Handle_StepGeom_CartesianTransformationOperator2d_DownCast = _StepGeom.Handle_StepGeom_CartesianTransformationOperator2d_DownCast

def Handle_StepGeom_CartesianTransformationOperator2d_IsNull(t: 'opencascade::handle< StepGeom_CartesianTransformationOperator2d > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CartesianTransformationOperator2d_IsNull(t)
Handle_StepGeom_CartesianTransformationOperator2d_IsNull = _StepGeom.Handle_StepGeom_CartesianTransformationOperator2d_IsNull

def Handle_StepGeom_CartesianTransformationOperator3d_Create() -> "opencascade::handle< StepGeom_CartesianTransformationOperator3d >":
    return _StepGeom.Handle_StepGeom_CartesianTransformationOperator3d_Create()
Handle_StepGeom_CartesianTransformationOperator3d_Create = _StepGeom.Handle_StepGeom_CartesianTransformationOperator3d_Create

def Handle_StepGeom_CartesianTransformationOperator3d_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CartesianTransformationOperator3d >":
    return _StepGeom.Handle_StepGeom_CartesianTransformationOperator3d_DownCast(t)
Handle_StepGeom_CartesianTransformationOperator3d_DownCast = _StepGeom.Handle_StepGeom_CartesianTransformationOperator3d_DownCast

def Handle_StepGeom_CartesianTransformationOperator3d_IsNull(t: 'opencascade::handle< StepGeom_CartesianTransformationOperator3d > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CartesianTransformationOperator3d_IsNull(t)
Handle_StepGeom_CartesianTransformationOperator3d_IsNull = _StepGeom.Handle_StepGeom_CartesianTransformationOperator3d_IsNull

def Handle_StepGeom_Conic_Create() -> "opencascade::handle< StepGeom_Conic >":
    return _StepGeom.Handle_StepGeom_Conic_Create()
Handle_StepGeom_Conic_Create = _StepGeom.Handle_StepGeom_Conic_Create

def Handle_StepGeom_Conic_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Conic >":
    return _StepGeom.Handle_StepGeom_Conic_DownCast(t)
Handle_StepGeom_Conic_DownCast = _StepGeom.Handle_StepGeom_Conic_DownCast

def Handle_StepGeom_Conic_IsNull(t: 'opencascade::handle< StepGeom_Conic > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Conic_IsNull(t)
Handle_StepGeom_Conic_IsNull = _StepGeom.Handle_StepGeom_Conic_IsNull

def Handle_StepGeom_CurveReplica_Create() -> "opencascade::handle< StepGeom_CurveReplica >":
    return _StepGeom.Handle_StepGeom_CurveReplica_Create()
Handle_StepGeom_CurveReplica_Create = _StepGeom.Handle_StepGeom_CurveReplica_Create

def Handle_StepGeom_CurveReplica_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CurveReplica >":
    return _StepGeom.Handle_StepGeom_CurveReplica_DownCast(t)
Handle_StepGeom_CurveReplica_DownCast = _StepGeom.Handle_StepGeom_CurveReplica_DownCast

def Handle_StepGeom_CurveReplica_IsNull(t: 'opencascade::handle< StepGeom_CurveReplica > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CurveReplica_IsNull(t)
Handle_StepGeom_CurveReplica_IsNull = _StepGeom.Handle_StepGeom_CurveReplica_IsNull

def Handle_StepGeom_DegeneratePcurve_Create() -> "opencascade::handle< StepGeom_DegeneratePcurve >":
    return _StepGeom.Handle_StepGeom_DegeneratePcurve_Create()
Handle_StepGeom_DegeneratePcurve_Create = _StepGeom.Handle_StepGeom_DegeneratePcurve_Create

def Handle_StepGeom_DegeneratePcurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_DegeneratePcurve >":
    return _StepGeom.Handle_StepGeom_DegeneratePcurve_DownCast(t)
Handle_StepGeom_DegeneratePcurve_DownCast = _StepGeom.Handle_StepGeom_DegeneratePcurve_DownCast

def Handle_StepGeom_DegeneratePcurve_IsNull(t: 'opencascade::handle< StepGeom_DegeneratePcurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_DegeneratePcurve_IsNull(t)
Handle_StepGeom_DegeneratePcurve_IsNull = _StepGeom.Handle_StepGeom_DegeneratePcurve_IsNull

def Handle_StepGeom_ElementarySurface_Create() -> "opencascade::handle< StepGeom_ElementarySurface >":
    return _StepGeom.Handle_StepGeom_ElementarySurface_Create()
Handle_StepGeom_ElementarySurface_Create = _StepGeom.Handle_StepGeom_ElementarySurface_Create

def Handle_StepGeom_ElementarySurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_ElementarySurface >":
    return _StepGeom.Handle_StepGeom_ElementarySurface_DownCast(t)
Handle_StepGeom_ElementarySurface_DownCast = _StepGeom.Handle_StepGeom_ElementarySurface_DownCast

def Handle_StepGeom_ElementarySurface_IsNull(t: 'opencascade::handle< StepGeom_ElementarySurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_ElementarySurface_IsNull(t)
Handle_StepGeom_ElementarySurface_IsNull = _StepGeom.Handle_StepGeom_ElementarySurface_IsNull

def Handle_StepGeom_Line_Create() -> "opencascade::handle< StepGeom_Line >":
    return _StepGeom.Handle_StepGeom_Line_Create()
Handle_StepGeom_Line_Create = _StepGeom.Handle_StepGeom_Line_Create

def Handle_StepGeom_Line_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Line >":
    return _StepGeom.Handle_StepGeom_Line_DownCast(t)
Handle_StepGeom_Line_DownCast = _StepGeom.Handle_StepGeom_Line_DownCast

def Handle_StepGeom_Line_IsNull(t: 'opencascade::handle< StepGeom_Line > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Line_IsNull(t)
Handle_StepGeom_Line_IsNull = _StepGeom.Handle_StepGeom_Line_IsNull

def Handle_StepGeom_OffsetCurve3d_Create() -> "opencascade::handle< StepGeom_OffsetCurve3d >":
    return _StepGeom.Handle_StepGeom_OffsetCurve3d_Create()
Handle_StepGeom_OffsetCurve3d_Create = _StepGeom.Handle_StepGeom_OffsetCurve3d_Create

def Handle_StepGeom_OffsetCurve3d_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_OffsetCurve3d >":
    return _StepGeom.Handle_StepGeom_OffsetCurve3d_DownCast(t)
Handle_StepGeom_OffsetCurve3d_DownCast = _StepGeom.Handle_StepGeom_OffsetCurve3d_DownCast

def Handle_StepGeom_OffsetCurve3d_IsNull(t: 'opencascade::handle< StepGeom_OffsetCurve3d > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_OffsetCurve3d_IsNull(t)
Handle_StepGeom_OffsetCurve3d_IsNull = _StepGeom.Handle_StepGeom_OffsetCurve3d_IsNull

def Handle_StepGeom_OffsetSurface_Create() -> "opencascade::handle< StepGeom_OffsetSurface >":
    return _StepGeom.Handle_StepGeom_OffsetSurface_Create()
Handle_StepGeom_OffsetSurface_Create = _StepGeom.Handle_StepGeom_OffsetSurface_Create

def Handle_StepGeom_OffsetSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_OffsetSurface >":
    return _StepGeom.Handle_StepGeom_OffsetSurface_DownCast(t)
Handle_StepGeom_OffsetSurface_DownCast = _StepGeom.Handle_StepGeom_OffsetSurface_DownCast

def Handle_StepGeom_OffsetSurface_IsNull(t: 'opencascade::handle< StepGeom_OffsetSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_OffsetSurface_IsNull(t)
Handle_StepGeom_OffsetSurface_IsNull = _StepGeom.Handle_StepGeom_OffsetSurface_IsNull

def Handle_StepGeom_OrientedSurface_Create() -> "opencascade::handle< StepGeom_OrientedSurface >":
    return _StepGeom.Handle_StepGeom_OrientedSurface_Create()
Handle_StepGeom_OrientedSurface_Create = _StepGeom.Handle_StepGeom_OrientedSurface_Create

def Handle_StepGeom_OrientedSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_OrientedSurface >":
    return _StepGeom.Handle_StepGeom_OrientedSurface_DownCast(t)
Handle_StepGeom_OrientedSurface_DownCast = _StepGeom.Handle_StepGeom_OrientedSurface_DownCast

def Handle_StepGeom_OrientedSurface_IsNull(t: 'opencascade::handle< StepGeom_OrientedSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_OrientedSurface_IsNull(t)
Handle_StepGeom_OrientedSurface_IsNull = _StepGeom.Handle_StepGeom_OrientedSurface_IsNull

def Handle_StepGeom_Pcurve_Create() -> "opencascade::handle< StepGeom_Pcurve >":
    return _StepGeom.Handle_StepGeom_Pcurve_Create()
Handle_StepGeom_Pcurve_Create = _StepGeom.Handle_StepGeom_Pcurve_Create

def Handle_StepGeom_Pcurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Pcurve >":
    return _StepGeom.Handle_StepGeom_Pcurve_DownCast(t)
Handle_StepGeom_Pcurve_DownCast = _StepGeom.Handle_StepGeom_Pcurve_DownCast

def Handle_StepGeom_Pcurve_IsNull(t: 'opencascade::handle< StepGeom_Pcurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Pcurve_IsNull(t)
Handle_StepGeom_Pcurve_IsNull = _StepGeom.Handle_StepGeom_Pcurve_IsNull

def Handle_StepGeom_PointOnCurve_Create() -> "opencascade::handle< StepGeom_PointOnCurve >":
    return _StepGeom.Handle_StepGeom_PointOnCurve_Create()
Handle_StepGeom_PointOnCurve_Create = _StepGeom.Handle_StepGeom_PointOnCurve_Create

def Handle_StepGeom_PointOnCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_PointOnCurve >":
    return _StepGeom.Handle_StepGeom_PointOnCurve_DownCast(t)
Handle_StepGeom_PointOnCurve_DownCast = _StepGeom.Handle_StepGeom_PointOnCurve_DownCast

def Handle_StepGeom_PointOnCurve_IsNull(t: 'opencascade::handle< StepGeom_PointOnCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_PointOnCurve_IsNull(t)
Handle_StepGeom_PointOnCurve_IsNull = _StepGeom.Handle_StepGeom_PointOnCurve_IsNull

def Handle_StepGeom_PointOnSurface_Create() -> "opencascade::handle< StepGeom_PointOnSurface >":
    return _StepGeom.Handle_StepGeom_PointOnSurface_Create()
Handle_StepGeom_PointOnSurface_Create = _StepGeom.Handle_StepGeom_PointOnSurface_Create

def Handle_StepGeom_PointOnSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_PointOnSurface >":
    return _StepGeom.Handle_StepGeom_PointOnSurface_DownCast(t)
Handle_StepGeom_PointOnSurface_DownCast = _StepGeom.Handle_StepGeom_PointOnSurface_DownCast

def Handle_StepGeom_PointOnSurface_IsNull(t: 'opencascade::handle< StepGeom_PointOnSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_PointOnSurface_IsNull(t)
Handle_StepGeom_PointOnSurface_IsNull = _StepGeom.Handle_StepGeom_PointOnSurface_IsNull

def Handle_StepGeom_PointReplica_Create() -> "opencascade::handle< StepGeom_PointReplica >":
    return _StepGeom.Handle_StepGeom_PointReplica_Create()
Handle_StepGeom_PointReplica_Create = _StepGeom.Handle_StepGeom_PointReplica_Create

def Handle_StepGeom_PointReplica_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_PointReplica >":
    return _StepGeom.Handle_StepGeom_PointReplica_DownCast(t)
Handle_StepGeom_PointReplica_DownCast = _StepGeom.Handle_StepGeom_PointReplica_DownCast

def Handle_StepGeom_PointReplica_IsNull(t: 'opencascade::handle< StepGeom_PointReplica > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_PointReplica_IsNull(t)
Handle_StepGeom_PointReplica_IsNull = _StepGeom.Handle_StepGeom_PointReplica_IsNull

def Handle_StepGeom_SurfaceCurve_Create() -> "opencascade::handle< StepGeom_SurfaceCurve >":
    return _StepGeom.Handle_StepGeom_SurfaceCurve_Create()
Handle_StepGeom_SurfaceCurve_Create = _StepGeom.Handle_StepGeom_SurfaceCurve_Create

def Handle_StepGeom_SurfaceCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_SurfaceCurve >":
    return _StepGeom.Handle_StepGeom_SurfaceCurve_DownCast(t)
Handle_StepGeom_SurfaceCurve_DownCast = _StepGeom.Handle_StepGeom_SurfaceCurve_DownCast

def Handle_StepGeom_SurfaceCurve_IsNull(t: 'opencascade::handle< StepGeom_SurfaceCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_SurfaceCurve_IsNull(t)
Handle_StepGeom_SurfaceCurve_IsNull = _StepGeom.Handle_StepGeom_SurfaceCurve_IsNull

def Handle_StepGeom_SurfaceReplica_Create() -> "opencascade::handle< StepGeom_SurfaceReplica >":
    return _StepGeom.Handle_StepGeom_SurfaceReplica_Create()
Handle_StepGeom_SurfaceReplica_Create = _StepGeom.Handle_StepGeom_SurfaceReplica_Create

def Handle_StepGeom_SurfaceReplica_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_SurfaceReplica >":
    return _StepGeom.Handle_StepGeom_SurfaceReplica_DownCast(t)
Handle_StepGeom_SurfaceReplica_DownCast = _StepGeom.Handle_StepGeom_SurfaceReplica_DownCast

def Handle_StepGeom_SurfaceReplica_IsNull(t: 'opencascade::handle< StepGeom_SurfaceReplica > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_SurfaceReplica_IsNull(t)
Handle_StepGeom_SurfaceReplica_IsNull = _StepGeom.Handle_StepGeom_SurfaceReplica_IsNull

def Handle_StepGeom_SweptSurface_Create() -> "opencascade::handle< StepGeom_SweptSurface >":
    return _StepGeom.Handle_StepGeom_SweptSurface_Create()
Handle_StepGeom_SweptSurface_Create = _StepGeom.Handle_StepGeom_SweptSurface_Create

def Handle_StepGeom_SweptSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_SweptSurface >":
    return _StepGeom.Handle_StepGeom_SweptSurface_DownCast(t)
Handle_StepGeom_SweptSurface_DownCast = _StepGeom.Handle_StepGeom_SweptSurface_DownCast

def Handle_StepGeom_SweptSurface_IsNull(t: 'opencascade::handle< StepGeom_SweptSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_SweptSurface_IsNull(t)
Handle_StepGeom_SweptSurface_IsNull = _StepGeom.Handle_StepGeom_SweptSurface_IsNull

def Handle_StepGeom_BSplineCurve_Create() -> "opencascade::handle< StepGeom_BSplineCurve >":
    return _StepGeom.Handle_StepGeom_BSplineCurve_Create()
Handle_StepGeom_BSplineCurve_Create = _StepGeom.Handle_StepGeom_BSplineCurve_Create

def Handle_StepGeom_BSplineCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BSplineCurve >":
    return _StepGeom.Handle_StepGeom_BSplineCurve_DownCast(t)
Handle_StepGeom_BSplineCurve_DownCast = _StepGeom.Handle_StepGeom_BSplineCurve_DownCast

def Handle_StepGeom_BSplineCurve_IsNull(t: 'opencascade::handle< StepGeom_BSplineCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BSplineCurve_IsNull(t)
Handle_StepGeom_BSplineCurve_IsNull = _StepGeom.Handle_StepGeom_BSplineCurve_IsNull

def Handle_StepGeom_BSplineSurface_Create() -> "opencascade::handle< StepGeom_BSplineSurface >":
    return _StepGeom.Handle_StepGeom_BSplineSurface_Create()
Handle_StepGeom_BSplineSurface_Create = _StepGeom.Handle_StepGeom_BSplineSurface_Create

def Handle_StepGeom_BSplineSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BSplineSurface >":
    return _StepGeom.Handle_StepGeom_BSplineSurface_DownCast(t)
Handle_StepGeom_BSplineSurface_DownCast = _StepGeom.Handle_StepGeom_BSplineSurface_DownCast

def Handle_StepGeom_BSplineSurface_IsNull(t: 'opencascade::handle< StepGeom_BSplineSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BSplineSurface_IsNull(t)
Handle_StepGeom_BSplineSurface_IsNull = _StepGeom.Handle_StepGeom_BSplineSurface_IsNull

def Handle_StepGeom_Circle_Create() -> "opencascade::handle< StepGeom_Circle >":
    return _StepGeom.Handle_StepGeom_Circle_Create()
Handle_StepGeom_Circle_Create = _StepGeom.Handle_StepGeom_Circle_Create

def Handle_StepGeom_Circle_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Circle >":
    return _StepGeom.Handle_StepGeom_Circle_DownCast(t)
Handle_StepGeom_Circle_DownCast = _StepGeom.Handle_StepGeom_Circle_DownCast

def Handle_StepGeom_Circle_IsNull(t: 'opencascade::handle< StepGeom_Circle > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Circle_IsNull(t)
Handle_StepGeom_Circle_IsNull = _StepGeom.Handle_StepGeom_Circle_IsNull

def Handle_StepGeom_CompositeCurve_Create() -> "opencascade::handle< StepGeom_CompositeCurve >":
    return _StepGeom.Handle_StepGeom_CompositeCurve_Create()
Handle_StepGeom_CompositeCurve_Create = _StepGeom.Handle_StepGeom_CompositeCurve_Create

def Handle_StepGeom_CompositeCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CompositeCurve >":
    return _StepGeom.Handle_StepGeom_CompositeCurve_DownCast(t)
Handle_StepGeom_CompositeCurve_DownCast = _StepGeom.Handle_StepGeom_CompositeCurve_DownCast

def Handle_StepGeom_CompositeCurve_IsNull(t: 'opencascade::handle< StepGeom_CompositeCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CompositeCurve_IsNull(t)
Handle_StepGeom_CompositeCurve_IsNull = _StepGeom.Handle_StepGeom_CompositeCurve_IsNull

def Handle_StepGeom_ConicalSurface_Create() -> "opencascade::handle< StepGeom_ConicalSurface >":
    return _StepGeom.Handle_StepGeom_ConicalSurface_Create()
Handle_StepGeom_ConicalSurface_Create = _StepGeom.Handle_StepGeom_ConicalSurface_Create

def Handle_StepGeom_ConicalSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_ConicalSurface >":
    return _StepGeom.Handle_StepGeom_ConicalSurface_DownCast(t)
Handle_StepGeom_ConicalSurface_DownCast = _StepGeom.Handle_StepGeom_ConicalSurface_DownCast

def Handle_StepGeom_ConicalSurface_IsNull(t: 'opencascade::handle< StepGeom_ConicalSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_ConicalSurface_IsNull(t)
Handle_StepGeom_ConicalSurface_IsNull = _StepGeom.Handle_StepGeom_ConicalSurface_IsNull

def Handle_StepGeom_CurveBoundedSurface_Create() -> "opencascade::handle< StepGeom_CurveBoundedSurface >":
    return _StepGeom.Handle_StepGeom_CurveBoundedSurface_Create()
Handle_StepGeom_CurveBoundedSurface_Create = _StepGeom.Handle_StepGeom_CurveBoundedSurface_Create

def Handle_StepGeom_CurveBoundedSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CurveBoundedSurface >":
    return _StepGeom.Handle_StepGeom_CurveBoundedSurface_DownCast(t)
Handle_StepGeom_CurveBoundedSurface_DownCast = _StepGeom.Handle_StepGeom_CurveBoundedSurface_DownCast

def Handle_StepGeom_CurveBoundedSurface_IsNull(t: 'opencascade::handle< StepGeom_CurveBoundedSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CurveBoundedSurface_IsNull(t)
Handle_StepGeom_CurveBoundedSurface_IsNull = _StepGeom.Handle_StepGeom_CurveBoundedSurface_IsNull

def Handle_StepGeom_CylindricalSurface_Create() -> "opencascade::handle< StepGeom_CylindricalSurface >":
    return _StepGeom.Handle_StepGeom_CylindricalSurface_Create()
Handle_StepGeom_CylindricalSurface_Create = _StepGeom.Handle_StepGeom_CylindricalSurface_Create

def Handle_StepGeom_CylindricalSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CylindricalSurface >":
    return _StepGeom.Handle_StepGeom_CylindricalSurface_DownCast(t)
Handle_StepGeom_CylindricalSurface_DownCast = _StepGeom.Handle_StepGeom_CylindricalSurface_DownCast

def Handle_StepGeom_CylindricalSurface_IsNull(t: 'opencascade::handle< StepGeom_CylindricalSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CylindricalSurface_IsNull(t)
Handle_StepGeom_CylindricalSurface_IsNull = _StepGeom.Handle_StepGeom_CylindricalSurface_IsNull

def Handle_StepGeom_Ellipse_Create() -> "opencascade::handle< StepGeom_Ellipse >":
    return _StepGeom.Handle_StepGeom_Ellipse_Create()
Handle_StepGeom_Ellipse_Create = _StepGeom.Handle_StepGeom_Ellipse_Create

def Handle_StepGeom_Ellipse_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Ellipse >":
    return _StepGeom.Handle_StepGeom_Ellipse_DownCast(t)
Handle_StepGeom_Ellipse_DownCast = _StepGeom.Handle_StepGeom_Ellipse_DownCast

def Handle_StepGeom_Ellipse_IsNull(t: 'opencascade::handle< StepGeom_Ellipse > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Ellipse_IsNull(t)
Handle_StepGeom_Ellipse_IsNull = _StepGeom.Handle_StepGeom_Ellipse_IsNull

def Handle_StepGeom_EvaluatedDegeneratePcurve_Create() -> "opencascade::handle< StepGeom_EvaluatedDegeneratePcurve >":
    return _StepGeom.Handle_StepGeom_EvaluatedDegeneratePcurve_Create()
Handle_StepGeom_EvaluatedDegeneratePcurve_Create = _StepGeom.Handle_StepGeom_EvaluatedDegeneratePcurve_Create

def Handle_StepGeom_EvaluatedDegeneratePcurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_EvaluatedDegeneratePcurve >":
    return _StepGeom.Handle_StepGeom_EvaluatedDegeneratePcurve_DownCast(t)
Handle_StepGeom_EvaluatedDegeneratePcurve_DownCast = _StepGeom.Handle_StepGeom_EvaluatedDegeneratePcurve_DownCast

def Handle_StepGeom_EvaluatedDegeneratePcurve_IsNull(t: 'opencascade::handle< StepGeom_EvaluatedDegeneratePcurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_EvaluatedDegeneratePcurve_IsNull(t)
Handle_StepGeom_EvaluatedDegeneratePcurve_IsNull = _StepGeom.Handle_StepGeom_EvaluatedDegeneratePcurve_IsNull

def Handle_StepGeom_Hyperbola_Create() -> "opencascade::handle< StepGeom_Hyperbola >":
    return _StepGeom.Handle_StepGeom_Hyperbola_Create()
Handle_StepGeom_Hyperbola_Create = _StepGeom.Handle_StepGeom_Hyperbola_Create

def Handle_StepGeom_Hyperbola_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Hyperbola >":
    return _StepGeom.Handle_StepGeom_Hyperbola_DownCast(t)
Handle_StepGeom_Hyperbola_DownCast = _StepGeom.Handle_StepGeom_Hyperbola_DownCast

def Handle_StepGeom_Hyperbola_IsNull(t: 'opencascade::handle< StepGeom_Hyperbola > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Hyperbola_IsNull(t)
Handle_StepGeom_Hyperbola_IsNull = _StepGeom.Handle_StepGeom_Hyperbola_IsNull

def Handle_StepGeom_IntersectionCurve_Create() -> "opencascade::handle< StepGeom_IntersectionCurve >":
    return _StepGeom.Handle_StepGeom_IntersectionCurve_Create()
Handle_StepGeom_IntersectionCurve_Create = _StepGeom.Handle_StepGeom_IntersectionCurve_Create

def Handle_StepGeom_IntersectionCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_IntersectionCurve >":
    return _StepGeom.Handle_StepGeom_IntersectionCurve_DownCast(t)
Handle_StepGeom_IntersectionCurve_DownCast = _StepGeom.Handle_StepGeom_IntersectionCurve_DownCast

def Handle_StepGeom_IntersectionCurve_IsNull(t: 'opencascade::handle< StepGeom_IntersectionCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_IntersectionCurve_IsNull(t)
Handle_StepGeom_IntersectionCurve_IsNull = _StepGeom.Handle_StepGeom_IntersectionCurve_IsNull

def Handle_StepGeom_Parabola_Create() -> "opencascade::handle< StepGeom_Parabola >":
    return _StepGeom.Handle_StepGeom_Parabola_Create()
Handle_StepGeom_Parabola_Create = _StepGeom.Handle_StepGeom_Parabola_Create

def Handle_StepGeom_Parabola_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Parabola >":
    return _StepGeom.Handle_StepGeom_Parabola_DownCast(t)
Handle_StepGeom_Parabola_DownCast = _StepGeom.Handle_StepGeom_Parabola_DownCast

def Handle_StepGeom_Parabola_IsNull(t: 'opencascade::handle< StepGeom_Parabola > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Parabola_IsNull(t)
Handle_StepGeom_Parabola_IsNull = _StepGeom.Handle_StepGeom_Parabola_IsNull

def Handle_StepGeom_Plane_Create() -> "opencascade::handle< StepGeom_Plane >":
    return _StepGeom.Handle_StepGeom_Plane_Create()
Handle_StepGeom_Plane_Create = _StepGeom.Handle_StepGeom_Plane_Create

def Handle_StepGeom_Plane_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Plane >":
    return _StepGeom.Handle_StepGeom_Plane_DownCast(t)
Handle_StepGeom_Plane_DownCast = _StepGeom.Handle_StepGeom_Plane_DownCast

def Handle_StepGeom_Plane_IsNull(t: 'opencascade::handle< StepGeom_Plane > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Plane_IsNull(t)
Handle_StepGeom_Plane_IsNull = _StepGeom.Handle_StepGeom_Plane_IsNull

def Handle_StepGeom_Polyline_Create() -> "opencascade::handle< StepGeom_Polyline >":
    return _StepGeom.Handle_StepGeom_Polyline_Create()
Handle_StepGeom_Polyline_Create = _StepGeom.Handle_StepGeom_Polyline_Create

def Handle_StepGeom_Polyline_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_Polyline >":
    return _StepGeom.Handle_StepGeom_Polyline_DownCast(t)
Handle_StepGeom_Polyline_DownCast = _StepGeom.Handle_StepGeom_Polyline_DownCast

def Handle_StepGeom_Polyline_IsNull(t: 'opencascade::handle< StepGeom_Polyline > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_Polyline_IsNull(t)
Handle_StepGeom_Polyline_IsNull = _StepGeom.Handle_StepGeom_Polyline_IsNull

def Handle_StepGeom_RectangularCompositeSurface_Create() -> "opencascade::handle< StepGeom_RectangularCompositeSurface >":
    return _StepGeom.Handle_StepGeom_RectangularCompositeSurface_Create()
Handle_StepGeom_RectangularCompositeSurface_Create = _StepGeom.Handle_StepGeom_RectangularCompositeSurface_Create

def Handle_StepGeom_RectangularCompositeSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_RectangularCompositeSurface >":
    return _StepGeom.Handle_StepGeom_RectangularCompositeSurface_DownCast(t)
Handle_StepGeom_RectangularCompositeSurface_DownCast = _StepGeom.Handle_StepGeom_RectangularCompositeSurface_DownCast

def Handle_StepGeom_RectangularCompositeSurface_IsNull(t: 'opencascade::handle< StepGeom_RectangularCompositeSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_RectangularCompositeSurface_IsNull(t)
Handle_StepGeom_RectangularCompositeSurface_IsNull = _StepGeom.Handle_StepGeom_RectangularCompositeSurface_IsNull

def Handle_StepGeom_RectangularTrimmedSurface_Create() -> "opencascade::handle< StepGeom_RectangularTrimmedSurface >":
    return _StepGeom.Handle_StepGeom_RectangularTrimmedSurface_Create()
Handle_StepGeom_RectangularTrimmedSurface_Create = _StepGeom.Handle_StepGeom_RectangularTrimmedSurface_Create

def Handle_StepGeom_RectangularTrimmedSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_RectangularTrimmedSurface >":
    return _StepGeom.Handle_StepGeom_RectangularTrimmedSurface_DownCast(t)
Handle_StepGeom_RectangularTrimmedSurface_DownCast = _StepGeom.Handle_StepGeom_RectangularTrimmedSurface_DownCast

def Handle_StepGeom_RectangularTrimmedSurface_IsNull(t: 'opencascade::handle< StepGeom_RectangularTrimmedSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_RectangularTrimmedSurface_IsNull(t)
Handle_StepGeom_RectangularTrimmedSurface_IsNull = _StepGeom.Handle_StepGeom_RectangularTrimmedSurface_IsNull

def Handle_StepGeom_SeamCurve_Create() -> "opencascade::handle< StepGeom_SeamCurve >":
    return _StepGeom.Handle_StepGeom_SeamCurve_Create()
Handle_StepGeom_SeamCurve_Create = _StepGeom.Handle_StepGeom_SeamCurve_Create

def Handle_StepGeom_SeamCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_SeamCurve >":
    return _StepGeom.Handle_StepGeom_SeamCurve_DownCast(t)
Handle_StepGeom_SeamCurve_DownCast = _StepGeom.Handle_StepGeom_SeamCurve_DownCast

def Handle_StepGeom_SeamCurve_IsNull(t: 'opencascade::handle< StepGeom_SeamCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_SeamCurve_IsNull(t)
Handle_StepGeom_SeamCurve_IsNull = _StepGeom.Handle_StepGeom_SeamCurve_IsNull

def Handle_StepGeom_SphericalSurface_Create() -> "opencascade::handle< StepGeom_SphericalSurface >":
    return _StepGeom.Handle_StepGeom_SphericalSurface_Create()
Handle_StepGeom_SphericalSurface_Create = _StepGeom.Handle_StepGeom_SphericalSurface_Create

def Handle_StepGeom_SphericalSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_SphericalSurface >":
    return _StepGeom.Handle_StepGeom_SphericalSurface_DownCast(t)
Handle_StepGeom_SphericalSurface_DownCast = _StepGeom.Handle_StepGeom_SphericalSurface_DownCast

def Handle_StepGeom_SphericalSurface_IsNull(t: 'opencascade::handle< StepGeom_SphericalSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_SphericalSurface_IsNull(t)
Handle_StepGeom_SphericalSurface_IsNull = _StepGeom.Handle_StepGeom_SphericalSurface_IsNull

def Handle_StepGeom_SurfaceCurveAndBoundedCurve_Create() -> "opencascade::handle< StepGeom_SurfaceCurveAndBoundedCurve >":
    return _StepGeom.Handle_StepGeom_SurfaceCurveAndBoundedCurve_Create()
Handle_StepGeom_SurfaceCurveAndBoundedCurve_Create = _StepGeom.Handle_StepGeom_SurfaceCurveAndBoundedCurve_Create

def Handle_StepGeom_SurfaceCurveAndBoundedCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_SurfaceCurveAndBoundedCurve >":
    return _StepGeom.Handle_StepGeom_SurfaceCurveAndBoundedCurve_DownCast(t)
Handle_StepGeom_SurfaceCurveAndBoundedCurve_DownCast = _StepGeom.Handle_StepGeom_SurfaceCurveAndBoundedCurve_DownCast

def Handle_StepGeom_SurfaceCurveAndBoundedCurve_IsNull(t: 'opencascade::handle< StepGeom_SurfaceCurveAndBoundedCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_SurfaceCurveAndBoundedCurve_IsNull(t)
Handle_StepGeom_SurfaceCurveAndBoundedCurve_IsNull = _StepGeom.Handle_StepGeom_SurfaceCurveAndBoundedCurve_IsNull

def Handle_StepGeom_SurfaceOfLinearExtrusion_Create() -> "opencascade::handle< StepGeom_SurfaceOfLinearExtrusion >":
    return _StepGeom.Handle_StepGeom_SurfaceOfLinearExtrusion_Create()
Handle_StepGeom_SurfaceOfLinearExtrusion_Create = _StepGeom.Handle_StepGeom_SurfaceOfLinearExtrusion_Create

def Handle_StepGeom_SurfaceOfLinearExtrusion_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_SurfaceOfLinearExtrusion >":
    return _StepGeom.Handle_StepGeom_SurfaceOfLinearExtrusion_DownCast(t)
Handle_StepGeom_SurfaceOfLinearExtrusion_DownCast = _StepGeom.Handle_StepGeom_SurfaceOfLinearExtrusion_DownCast

def Handle_StepGeom_SurfaceOfLinearExtrusion_IsNull(t: 'opencascade::handle< StepGeom_SurfaceOfLinearExtrusion > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_SurfaceOfLinearExtrusion_IsNull(t)
Handle_StepGeom_SurfaceOfLinearExtrusion_IsNull = _StepGeom.Handle_StepGeom_SurfaceOfLinearExtrusion_IsNull

def Handle_StepGeom_SurfaceOfRevolution_Create() -> "opencascade::handle< StepGeom_SurfaceOfRevolution >":
    return _StepGeom.Handle_StepGeom_SurfaceOfRevolution_Create()
Handle_StepGeom_SurfaceOfRevolution_Create = _StepGeom.Handle_StepGeom_SurfaceOfRevolution_Create

def Handle_StepGeom_SurfaceOfRevolution_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_SurfaceOfRevolution >":
    return _StepGeom.Handle_StepGeom_SurfaceOfRevolution_DownCast(t)
Handle_StepGeom_SurfaceOfRevolution_DownCast = _StepGeom.Handle_StepGeom_SurfaceOfRevolution_DownCast

def Handle_StepGeom_SurfaceOfRevolution_IsNull(t: 'opencascade::handle< StepGeom_SurfaceOfRevolution > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_SurfaceOfRevolution_IsNull(t)
Handle_StepGeom_SurfaceOfRevolution_IsNull = _StepGeom.Handle_StepGeom_SurfaceOfRevolution_IsNull

def Handle_StepGeom_ToroidalSurface_Create() -> "opencascade::handle< StepGeom_ToroidalSurface >":
    return _StepGeom.Handle_StepGeom_ToroidalSurface_Create()
Handle_StepGeom_ToroidalSurface_Create = _StepGeom.Handle_StepGeom_ToroidalSurface_Create

def Handle_StepGeom_ToroidalSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_ToroidalSurface >":
    return _StepGeom.Handle_StepGeom_ToroidalSurface_DownCast(t)
Handle_StepGeom_ToroidalSurface_DownCast = _StepGeom.Handle_StepGeom_ToroidalSurface_DownCast

def Handle_StepGeom_ToroidalSurface_IsNull(t: 'opencascade::handle< StepGeom_ToroidalSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_ToroidalSurface_IsNull(t)
Handle_StepGeom_ToroidalSurface_IsNull = _StepGeom.Handle_StepGeom_ToroidalSurface_IsNull

def Handle_StepGeom_TrimmedCurve_Create() -> "opencascade::handle< StepGeom_TrimmedCurve >":
    return _StepGeom.Handle_StepGeom_TrimmedCurve_Create()
Handle_StepGeom_TrimmedCurve_Create = _StepGeom.Handle_StepGeom_TrimmedCurve_Create

def Handle_StepGeom_TrimmedCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_TrimmedCurve >":
    return _StepGeom.Handle_StepGeom_TrimmedCurve_DownCast(t)
Handle_StepGeom_TrimmedCurve_DownCast = _StepGeom.Handle_StepGeom_TrimmedCurve_DownCast

def Handle_StepGeom_TrimmedCurve_IsNull(t: 'opencascade::handle< StepGeom_TrimmedCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_TrimmedCurve_IsNull(t)
Handle_StepGeom_TrimmedCurve_IsNull = _StepGeom.Handle_StepGeom_TrimmedCurve_IsNull

def Handle_StepGeom_BSplineCurveWithKnots_Create() -> "opencascade::handle< StepGeom_BSplineCurveWithKnots >":
    return _StepGeom.Handle_StepGeom_BSplineCurveWithKnots_Create()
Handle_StepGeom_BSplineCurveWithKnots_Create = _StepGeom.Handle_StepGeom_BSplineCurveWithKnots_Create

def Handle_StepGeom_BSplineCurveWithKnots_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BSplineCurveWithKnots >":
    return _StepGeom.Handle_StepGeom_BSplineCurveWithKnots_DownCast(t)
Handle_StepGeom_BSplineCurveWithKnots_DownCast = _StepGeom.Handle_StepGeom_BSplineCurveWithKnots_DownCast

def Handle_StepGeom_BSplineCurveWithKnots_IsNull(t: 'opencascade::handle< StepGeom_BSplineCurveWithKnots > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BSplineCurveWithKnots_IsNull(t)
Handle_StepGeom_BSplineCurveWithKnots_IsNull = _StepGeom.Handle_StepGeom_BSplineCurveWithKnots_IsNull

def Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_Create() -> "opencascade::handle< StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_Create()
Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_Create = _StepGeom.Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_Create

def Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_DownCast(t)
Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_DownCast = _StepGeom.Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_DownCast

def Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_IsNull(t: 'opencascade::handle< StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_IsNull(t)
Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_IsNull = _StepGeom.Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_IsNull

def Handle_StepGeom_BSplineSurfaceWithKnots_Create() -> "opencascade::handle< StepGeom_BSplineSurfaceWithKnots >":
    return _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnots_Create()
Handle_StepGeom_BSplineSurfaceWithKnots_Create = _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnots_Create

def Handle_StepGeom_BSplineSurfaceWithKnots_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BSplineSurfaceWithKnots >":
    return _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnots_DownCast(t)
Handle_StepGeom_BSplineSurfaceWithKnots_DownCast = _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnots_DownCast

def Handle_StepGeom_BSplineSurfaceWithKnots_IsNull(t: 'opencascade::handle< StepGeom_BSplineSurfaceWithKnots > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnots_IsNull(t)
Handle_StepGeom_BSplineSurfaceWithKnots_IsNull = _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnots_IsNull

def Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_Create() -> "opencascade::handle< StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_Create()
Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_Create = _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_Create

def Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_DownCast(t)
Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_DownCast = _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_DownCast

def Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_IsNull(t: 'opencascade::handle< StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_IsNull(t)
Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_IsNull = _StepGeom.Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_IsNull

def Handle_StepGeom_BezierCurve_Create() -> "opencascade::handle< StepGeom_BezierCurve >":
    return _StepGeom.Handle_StepGeom_BezierCurve_Create()
Handle_StepGeom_BezierCurve_Create = _StepGeom.Handle_StepGeom_BezierCurve_Create

def Handle_StepGeom_BezierCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BezierCurve >":
    return _StepGeom.Handle_StepGeom_BezierCurve_DownCast(t)
Handle_StepGeom_BezierCurve_DownCast = _StepGeom.Handle_StepGeom_BezierCurve_DownCast

def Handle_StepGeom_BezierCurve_IsNull(t: 'opencascade::handle< StepGeom_BezierCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BezierCurve_IsNull(t)
Handle_StepGeom_BezierCurve_IsNull = _StepGeom.Handle_StepGeom_BezierCurve_IsNull

def Handle_StepGeom_BezierCurveAndRationalBSplineCurve_Create() -> "opencascade::handle< StepGeom_BezierCurveAndRationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_BezierCurveAndRationalBSplineCurve_Create()
Handle_StepGeom_BezierCurveAndRationalBSplineCurve_Create = _StepGeom.Handle_StepGeom_BezierCurveAndRationalBSplineCurve_Create

def Handle_StepGeom_BezierCurveAndRationalBSplineCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BezierCurveAndRationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_BezierCurveAndRationalBSplineCurve_DownCast(t)
Handle_StepGeom_BezierCurveAndRationalBSplineCurve_DownCast = _StepGeom.Handle_StepGeom_BezierCurveAndRationalBSplineCurve_DownCast

def Handle_StepGeom_BezierCurveAndRationalBSplineCurve_IsNull(t: 'opencascade::handle< StepGeom_BezierCurveAndRationalBSplineCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BezierCurveAndRationalBSplineCurve_IsNull(t)
Handle_StepGeom_BezierCurveAndRationalBSplineCurve_IsNull = _StepGeom.Handle_StepGeom_BezierCurveAndRationalBSplineCurve_IsNull

def Handle_StepGeom_BezierSurface_Create() -> "opencascade::handle< StepGeom_BezierSurface >":
    return _StepGeom.Handle_StepGeom_BezierSurface_Create()
Handle_StepGeom_BezierSurface_Create = _StepGeom.Handle_StepGeom_BezierSurface_Create

def Handle_StepGeom_BezierSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BezierSurface >":
    return _StepGeom.Handle_StepGeom_BezierSurface_DownCast(t)
Handle_StepGeom_BezierSurface_DownCast = _StepGeom.Handle_StepGeom_BezierSurface_DownCast

def Handle_StepGeom_BezierSurface_IsNull(t: 'opencascade::handle< StepGeom_BezierSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BezierSurface_IsNull(t)
Handle_StepGeom_BezierSurface_IsNull = _StepGeom.Handle_StepGeom_BezierSurface_IsNull

def Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_Create() -> "opencascade::handle< StepGeom_BezierSurfaceAndRationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_Create()
Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_Create = _StepGeom.Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_Create

def Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BezierSurfaceAndRationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_DownCast(t)
Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_DownCast = _StepGeom.Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_DownCast

def Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_IsNull(t: 'opencascade::handle< StepGeom_BezierSurfaceAndRationalBSplineSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_IsNull(t)
Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_IsNull = _StepGeom.Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_IsNull

def Handle_StepGeom_CompositeCurveOnSurface_Create() -> "opencascade::handle< StepGeom_CompositeCurveOnSurface >":
    return _StepGeom.Handle_StepGeom_CompositeCurveOnSurface_Create()
Handle_StepGeom_CompositeCurveOnSurface_Create = _StepGeom.Handle_StepGeom_CompositeCurveOnSurface_Create

def Handle_StepGeom_CompositeCurveOnSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_CompositeCurveOnSurface >":
    return _StepGeom.Handle_StepGeom_CompositeCurveOnSurface_DownCast(t)
Handle_StepGeom_CompositeCurveOnSurface_DownCast = _StepGeom.Handle_StepGeom_CompositeCurveOnSurface_DownCast

def Handle_StepGeom_CompositeCurveOnSurface_IsNull(t: 'opencascade::handle< StepGeom_CompositeCurveOnSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_CompositeCurveOnSurface_IsNull(t)
Handle_StepGeom_CompositeCurveOnSurface_IsNull = _StepGeom.Handle_StepGeom_CompositeCurveOnSurface_IsNull

def Handle_StepGeom_DegenerateToroidalSurface_Create() -> "opencascade::handle< StepGeom_DegenerateToroidalSurface >":
    return _StepGeom.Handle_StepGeom_DegenerateToroidalSurface_Create()
Handle_StepGeom_DegenerateToroidalSurface_Create = _StepGeom.Handle_StepGeom_DegenerateToroidalSurface_Create

def Handle_StepGeom_DegenerateToroidalSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_DegenerateToroidalSurface >":
    return _StepGeom.Handle_StepGeom_DegenerateToroidalSurface_DownCast(t)
Handle_StepGeom_DegenerateToroidalSurface_DownCast = _StepGeom.Handle_StepGeom_DegenerateToroidalSurface_DownCast

def Handle_StepGeom_DegenerateToroidalSurface_IsNull(t: 'opencascade::handle< StepGeom_DegenerateToroidalSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_DegenerateToroidalSurface_IsNull(t)
Handle_StepGeom_DegenerateToroidalSurface_IsNull = _StepGeom.Handle_StepGeom_DegenerateToroidalSurface_IsNull

def Handle_StepGeom_QuasiUniformCurve_Create() -> "opencascade::handle< StepGeom_QuasiUniformCurve >":
    return _StepGeom.Handle_StepGeom_QuasiUniformCurve_Create()
Handle_StepGeom_QuasiUniformCurve_Create = _StepGeom.Handle_StepGeom_QuasiUniformCurve_Create

def Handle_StepGeom_QuasiUniformCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_QuasiUniformCurve >":
    return _StepGeom.Handle_StepGeom_QuasiUniformCurve_DownCast(t)
Handle_StepGeom_QuasiUniformCurve_DownCast = _StepGeom.Handle_StepGeom_QuasiUniformCurve_DownCast

def Handle_StepGeom_QuasiUniformCurve_IsNull(t: 'opencascade::handle< StepGeom_QuasiUniformCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_QuasiUniformCurve_IsNull(t)
Handle_StepGeom_QuasiUniformCurve_IsNull = _StepGeom.Handle_StepGeom_QuasiUniformCurve_IsNull

def Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_Create() -> "opencascade::handle< StepGeom_QuasiUniformCurveAndRationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_Create()
Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_Create = _StepGeom.Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_Create

def Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_QuasiUniformCurveAndRationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_DownCast(t)
Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_DownCast = _StepGeom.Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_DownCast

def Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_IsNull(t: 'opencascade::handle< StepGeom_QuasiUniformCurveAndRationalBSplineCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_IsNull(t)
Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_IsNull = _StepGeom.Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_IsNull

def Handle_StepGeom_QuasiUniformSurface_Create() -> "opencascade::handle< StepGeom_QuasiUniformSurface >":
    return _StepGeom.Handle_StepGeom_QuasiUniformSurface_Create()
Handle_StepGeom_QuasiUniformSurface_Create = _StepGeom.Handle_StepGeom_QuasiUniformSurface_Create

def Handle_StepGeom_QuasiUniformSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_QuasiUniformSurface >":
    return _StepGeom.Handle_StepGeom_QuasiUniformSurface_DownCast(t)
Handle_StepGeom_QuasiUniformSurface_DownCast = _StepGeom.Handle_StepGeom_QuasiUniformSurface_DownCast

def Handle_StepGeom_QuasiUniformSurface_IsNull(t: 'opencascade::handle< StepGeom_QuasiUniformSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_QuasiUniformSurface_IsNull(t)
Handle_StepGeom_QuasiUniformSurface_IsNull = _StepGeom.Handle_StepGeom_QuasiUniformSurface_IsNull

def Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_Create() -> "opencascade::handle< StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_Create()
Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_Create = _StepGeom.Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_Create

def Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_DownCast(t)
Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_DownCast = _StepGeom.Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_DownCast

def Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_IsNull(t: 'opencascade::handle< StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_IsNull(t)
Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_IsNull = _StepGeom.Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_IsNull

def Handle_StepGeom_RationalBSplineCurve_Create() -> "opencascade::handle< StepGeom_RationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_RationalBSplineCurve_Create()
Handle_StepGeom_RationalBSplineCurve_Create = _StepGeom.Handle_StepGeom_RationalBSplineCurve_Create

def Handle_StepGeom_RationalBSplineCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_RationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_RationalBSplineCurve_DownCast(t)
Handle_StepGeom_RationalBSplineCurve_DownCast = _StepGeom.Handle_StepGeom_RationalBSplineCurve_DownCast

def Handle_StepGeom_RationalBSplineCurve_IsNull(t: 'opencascade::handle< StepGeom_RationalBSplineCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_RationalBSplineCurve_IsNull(t)
Handle_StepGeom_RationalBSplineCurve_IsNull = _StepGeom.Handle_StepGeom_RationalBSplineCurve_IsNull

def Handle_StepGeom_RationalBSplineSurface_Create() -> "opencascade::handle< StepGeom_RationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_RationalBSplineSurface_Create()
Handle_StepGeom_RationalBSplineSurface_Create = _StepGeom.Handle_StepGeom_RationalBSplineSurface_Create

def Handle_StepGeom_RationalBSplineSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_RationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_RationalBSplineSurface_DownCast(t)
Handle_StepGeom_RationalBSplineSurface_DownCast = _StepGeom.Handle_StepGeom_RationalBSplineSurface_DownCast

def Handle_StepGeom_RationalBSplineSurface_IsNull(t: 'opencascade::handle< StepGeom_RationalBSplineSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_RationalBSplineSurface_IsNull(t)
Handle_StepGeom_RationalBSplineSurface_IsNull = _StepGeom.Handle_StepGeom_RationalBSplineSurface_IsNull

def Handle_StepGeom_UniformCurve_Create() -> "opencascade::handle< StepGeom_UniformCurve >":
    return _StepGeom.Handle_StepGeom_UniformCurve_Create()
Handle_StepGeom_UniformCurve_Create = _StepGeom.Handle_StepGeom_UniformCurve_Create

def Handle_StepGeom_UniformCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_UniformCurve >":
    return _StepGeom.Handle_StepGeom_UniformCurve_DownCast(t)
Handle_StepGeom_UniformCurve_DownCast = _StepGeom.Handle_StepGeom_UniformCurve_DownCast

def Handle_StepGeom_UniformCurve_IsNull(t: 'opencascade::handle< StepGeom_UniformCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_UniformCurve_IsNull(t)
Handle_StepGeom_UniformCurve_IsNull = _StepGeom.Handle_StepGeom_UniformCurve_IsNull

def Handle_StepGeom_UniformCurveAndRationalBSplineCurve_Create() -> "opencascade::handle< StepGeom_UniformCurveAndRationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_UniformCurveAndRationalBSplineCurve_Create()
Handle_StepGeom_UniformCurveAndRationalBSplineCurve_Create = _StepGeom.Handle_StepGeom_UniformCurveAndRationalBSplineCurve_Create

def Handle_StepGeom_UniformCurveAndRationalBSplineCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_UniformCurveAndRationalBSplineCurve >":
    return _StepGeom.Handle_StepGeom_UniformCurveAndRationalBSplineCurve_DownCast(t)
Handle_StepGeom_UniformCurveAndRationalBSplineCurve_DownCast = _StepGeom.Handle_StepGeom_UniformCurveAndRationalBSplineCurve_DownCast

def Handle_StepGeom_UniformCurveAndRationalBSplineCurve_IsNull(t: 'opencascade::handle< StepGeom_UniformCurveAndRationalBSplineCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_UniformCurveAndRationalBSplineCurve_IsNull(t)
Handle_StepGeom_UniformCurveAndRationalBSplineCurve_IsNull = _StepGeom.Handle_StepGeom_UniformCurveAndRationalBSplineCurve_IsNull

def Handle_StepGeom_UniformSurface_Create() -> "opencascade::handle< StepGeom_UniformSurface >":
    return _StepGeom.Handle_StepGeom_UniformSurface_Create()
Handle_StepGeom_UniformSurface_Create = _StepGeom.Handle_StepGeom_UniformSurface_Create

def Handle_StepGeom_UniformSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_UniformSurface >":
    return _StepGeom.Handle_StepGeom_UniformSurface_DownCast(t)
Handle_StepGeom_UniformSurface_DownCast = _StepGeom.Handle_StepGeom_UniformSurface_DownCast

def Handle_StepGeom_UniformSurface_IsNull(t: 'opencascade::handle< StepGeom_UniformSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_UniformSurface_IsNull(t)
Handle_StepGeom_UniformSurface_IsNull = _StepGeom.Handle_StepGeom_UniformSurface_IsNull

def Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_Create() -> "opencascade::handle< StepGeom_UniformSurfaceAndRationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_Create()
Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_Create = _StepGeom.Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_Create

def Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_UniformSurfaceAndRationalBSplineSurface >":
    return _StepGeom.Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_DownCast(t)
Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_DownCast = _StepGeom.Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_DownCast

def Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_IsNull(t: 'opencascade::handle< StepGeom_UniformSurfaceAndRationalBSplineSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_IsNull(t)
Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_IsNull = _StepGeom.Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_IsNull

def Handle_StepGeom_BoundaryCurve_Create() -> "opencascade::handle< StepGeom_BoundaryCurve >":
    return _StepGeom.Handle_StepGeom_BoundaryCurve_Create()
Handle_StepGeom_BoundaryCurve_Create = _StepGeom.Handle_StepGeom_BoundaryCurve_Create

def Handle_StepGeom_BoundaryCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_BoundaryCurve >":
    return _StepGeom.Handle_StepGeom_BoundaryCurve_DownCast(t)
Handle_StepGeom_BoundaryCurve_DownCast = _StepGeom.Handle_StepGeom_BoundaryCurve_DownCast

def Handle_StepGeom_BoundaryCurve_IsNull(t: 'opencascade::handle< StepGeom_BoundaryCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_BoundaryCurve_IsNull(t)
Handle_StepGeom_BoundaryCurve_IsNull = _StepGeom.Handle_StepGeom_BoundaryCurve_IsNull

def Handle_StepGeom_OuterBoundaryCurve_Create() -> "opencascade::handle< StepGeom_OuterBoundaryCurve >":
    return _StepGeom.Handle_StepGeom_OuterBoundaryCurve_Create()
Handle_StepGeom_OuterBoundaryCurve_Create = _StepGeom.Handle_StepGeom_OuterBoundaryCurve_Create

def Handle_StepGeom_OuterBoundaryCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_OuterBoundaryCurve >":
    return _StepGeom.Handle_StepGeom_OuterBoundaryCurve_DownCast(t)
Handle_StepGeom_OuterBoundaryCurve_DownCast = _StepGeom.Handle_StepGeom_OuterBoundaryCurve_DownCast

def Handle_StepGeom_OuterBoundaryCurve_IsNull(t: 'opencascade::handle< StepGeom_OuterBoundaryCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_OuterBoundaryCurve_IsNull(t)
Handle_StepGeom_OuterBoundaryCurve_IsNull = _StepGeom.Handle_StepGeom_OuterBoundaryCurve_IsNull

def Handle_StepGeom_HArray1OfCartesianPoint_Create() -> "opencascade::handle< StepGeom_HArray1OfCartesianPoint >":
    return _StepGeom.Handle_StepGeom_HArray1OfCartesianPoint_Create()
Handle_StepGeom_HArray1OfCartesianPoint_Create = _StepGeom.Handle_StepGeom_HArray1OfCartesianPoint_Create

def Handle_StepGeom_HArray1OfCartesianPoint_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_HArray1OfCartesianPoint >":
    return _StepGeom.Handle_StepGeom_HArray1OfCartesianPoint_DownCast(t)
Handle_StepGeom_HArray1OfCartesianPoint_DownCast = _StepGeom.Handle_StepGeom_HArray1OfCartesianPoint_DownCast

def Handle_StepGeom_HArray1OfCartesianPoint_IsNull(t: 'opencascade::handle< StepGeom_HArray1OfCartesianPoint > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_HArray1OfCartesianPoint_IsNull(t)
Handle_StepGeom_HArray1OfCartesianPoint_IsNull = _StepGeom.Handle_StepGeom_HArray1OfCartesianPoint_IsNull

def Handle_StepGeom_HArray1OfPcurveOrSurface_Create() -> "opencascade::handle< StepGeom_HArray1OfPcurveOrSurface >":
    return _StepGeom.Handle_StepGeom_HArray1OfPcurveOrSurface_Create()
Handle_StepGeom_HArray1OfPcurveOrSurface_Create = _StepGeom.Handle_StepGeom_HArray1OfPcurveOrSurface_Create

def Handle_StepGeom_HArray1OfPcurveOrSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_HArray1OfPcurveOrSurface >":
    return _StepGeom.Handle_StepGeom_HArray1OfPcurveOrSurface_DownCast(t)
Handle_StepGeom_HArray1OfPcurveOrSurface_DownCast = _StepGeom.Handle_StepGeom_HArray1OfPcurveOrSurface_DownCast

def Handle_StepGeom_HArray1OfPcurveOrSurface_IsNull(t: 'opencascade::handle< StepGeom_HArray1OfPcurveOrSurface > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_HArray1OfPcurveOrSurface_IsNull(t)
Handle_StepGeom_HArray1OfPcurveOrSurface_IsNull = _StepGeom.Handle_StepGeom_HArray1OfPcurveOrSurface_IsNull

def Handle_StepGeom_HArray1OfSurfaceBoundary_Create() -> "opencascade::handle< StepGeom_HArray1OfSurfaceBoundary >":
    return _StepGeom.Handle_StepGeom_HArray1OfSurfaceBoundary_Create()
Handle_StepGeom_HArray1OfSurfaceBoundary_Create = _StepGeom.Handle_StepGeom_HArray1OfSurfaceBoundary_Create

def Handle_StepGeom_HArray1OfSurfaceBoundary_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_HArray1OfSurfaceBoundary >":
    return _StepGeom.Handle_StepGeom_HArray1OfSurfaceBoundary_DownCast(t)
Handle_StepGeom_HArray1OfSurfaceBoundary_DownCast = _StepGeom.Handle_StepGeom_HArray1OfSurfaceBoundary_DownCast

def Handle_StepGeom_HArray1OfSurfaceBoundary_IsNull(t: 'opencascade::handle< StepGeom_HArray1OfSurfaceBoundary > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_HArray1OfSurfaceBoundary_IsNull(t)
Handle_StepGeom_HArray1OfSurfaceBoundary_IsNull = _StepGeom.Handle_StepGeom_HArray1OfSurfaceBoundary_IsNull

def Handle_StepGeom_HArray1OfBoundaryCurve_Create() -> "opencascade::handle< StepGeom_HArray1OfBoundaryCurve >":
    return _StepGeom.Handle_StepGeom_HArray1OfBoundaryCurve_Create()
Handle_StepGeom_HArray1OfBoundaryCurve_Create = _StepGeom.Handle_StepGeom_HArray1OfBoundaryCurve_Create

def Handle_StepGeom_HArray1OfBoundaryCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_HArray1OfBoundaryCurve >":
    return _StepGeom.Handle_StepGeom_HArray1OfBoundaryCurve_DownCast(t)
Handle_StepGeom_HArray1OfBoundaryCurve_DownCast = _StepGeom.Handle_StepGeom_HArray1OfBoundaryCurve_DownCast

def Handle_StepGeom_HArray1OfBoundaryCurve_IsNull(t: 'opencascade::handle< StepGeom_HArray1OfBoundaryCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_HArray1OfBoundaryCurve_IsNull(t)
Handle_StepGeom_HArray1OfBoundaryCurve_IsNull = _StepGeom.Handle_StepGeom_HArray1OfBoundaryCurve_IsNull

def Handle_StepGeom_HArray1OfCompositeCurveSegment_Create() -> "opencascade::handle< StepGeom_HArray1OfCompositeCurveSegment >":
    return _StepGeom.Handle_StepGeom_HArray1OfCompositeCurveSegment_Create()
Handle_StepGeom_HArray1OfCompositeCurveSegment_Create = _StepGeom.Handle_StepGeom_HArray1OfCompositeCurveSegment_Create

def Handle_StepGeom_HArray1OfCompositeCurveSegment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_HArray1OfCompositeCurveSegment >":
    return _StepGeom.Handle_StepGeom_HArray1OfCompositeCurveSegment_DownCast(t)
Handle_StepGeom_HArray1OfCompositeCurveSegment_DownCast = _StepGeom.Handle_StepGeom_HArray1OfCompositeCurveSegment_DownCast

def Handle_StepGeom_HArray1OfCompositeCurveSegment_IsNull(t: 'opencascade::handle< StepGeom_HArray1OfCompositeCurveSegment > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_HArray1OfCompositeCurveSegment_IsNull(t)
Handle_StepGeom_HArray1OfCompositeCurveSegment_IsNull = _StepGeom.Handle_StepGeom_HArray1OfCompositeCurveSegment_IsNull

def Handle_StepGeom_HArray1OfCurve_Create() -> "opencascade::handle< StepGeom_HArray1OfCurve >":
    return _StepGeom.Handle_StepGeom_HArray1OfCurve_Create()
Handle_StepGeom_HArray1OfCurve_Create = _StepGeom.Handle_StepGeom_HArray1OfCurve_Create

def Handle_StepGeom_HArray1OfCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_HArray1OfCurve >":
    return _StepGeom.Handle_StepGeom_HArray1OfCurve_DownCast(t)
Handle_StepGeom_HArray1OfCurve_DownCast = _StepGeom.Handle_StepGeom_HArray1OfCurve_DownCast

def Handle_StepGeom_HArray1OfCurve_IsNull(t: 'opencascade::handle< StepGeom_HArray1OfCurve > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_HArray1OfCurve_IsNull(t)
Handle_StepGeom_HArray1OfCurve_IsNull = _StepGeom.Handle_StepGeom_HArray1OfCurve_IsNull

def Handle_StepGeom_HArray1OfTrimmingSelect_Create() -> "opencascade::handle< StepGeom_HArray1OfTrimmingSelect >":
    return _StepGeom.Handle_StepGeom_HArray1OfTrimmingSelect_Create()
Handle_StepGeom_HArray1OfTrimmingSelect_Create = _StepGeom.Handle_StepGeom_HArray1OfTrimmingSelect_Create

def Handle_StepGeom_HArray1OfTrimmingSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_HArray1OfTrimmingSelect >":
    return _StepGeom.Handle_StepGeom_HArray1OfTrimmingSelect_DownCast(t)
Handle_StepGeom_HArray1OfTrimmingSelect_DownCast = _StepGeom.Handle_StepGeom_HArray1OfTrimmingSelect_DownCast

def Handle_StepGeom_HArray1OfTrimmingSelect_IsNull(t: 'opencascade::handle< StepGeom_HArray1OfTrimmingSelect > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_HArray1OfTrimmingSelect_IsNull(t)
Handle_StepGeom_HArray1OfTrimmingSelect_IsNull = _StepGeom.Handle_StepGeom_HArray1OfTrimmingSelect_IsNull

def Handle_StepGeom_HArray2OfSurfacePatch_Create() -> "opencascade::handle< StepGeom_HArray2OfSurfacePatch >":
    return _StepGeom.Handle_StepGeom_HArray2OfSurfacePatch_Create()
Handle_StepGeom_HArray2OfSurfacePatch_Create = _StepGeom.Handle_StepGeom_HArray2OfSurfacePatch_Create

def Handle_StepGeom_HArray2OfSurfacePatch_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_HArray2OfSurfacePatch >":
    return _StepGeom.Handle_StepGeom_HArray2OfSurfacePatch_DownCast(t)
Handle_StepGeom_HArray2OfSurfacePatch_DownCast = _StepGeom.Handle_StepGeom_HArray2OfSurfacePatch_DownCast

def Handle_StepGeom_HArray2OfSurfacePatch_IsNull(t: 'opencascade::handle< StepGeom_HArray2OfSurfacePatch > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_HArray2OfSurfacePatch_IsNull(t)
Handle_StepGeom_HArray2OfSurfacePatch_IsNull = _StepGeom.Handle_StepGeom_HArray2OfSurfacePatch_IsNull

def Handle_StepGeom_HArray2OfCartesianPoint_Create() -> "opencascade::handle< StepGeom_HArray2OfCartesianPoint >":
    return _StepGeom.Handle_StepGeom_HArray2OfCartesianPoint_Create()
Handle_StepGeom_HArray2OfCartesianPoint_Create = _StepGeom.Handle_StepGeom_HArray2OfCartesianPoint_Create

def Handle_StepGeom_HArray2OfCartesianPoint_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepGeom_HArray2OfCartesianPoint >":
    return _StepGeom.Handle_StepGeom_HArray2OfCartesianPoint_DownCast(t)
Handle_StepGeom_HArray2OfCartesianPoint_DownCast = _StepGeom.Handle_StepGeom_HArray2OfCartesianPoint_DownCast

def Handle_StepGeom_HArray2OfCartesianPoint_IsNull(t: 'opencascade::handle< StepGeom_HArray2OfCartesianPoint > const &') -> "bool":
    return _StepGeom.Handle_StepGeom_HArray2OfCartesianPoint_IsNull(t)
Handle_StepGeom_HArray2OfCartesianPoint_IsNull = _StepGeom.Handle_StepGeom_HArray2OfCartesianPoint_IsNull
class StepGeom_Array1OfCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_Array1OfCurve_swiginit(self, _StepGeom.new_StepGeom_Array1OfCurve(*args))
    __swig_destroy__ = _StepGeom.delete_StepGeom_Array1OfCurve

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepGeom_Array1OfCurve.begin = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_begin, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.end = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_end, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.cbegin = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_cbegin, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.cend = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_cend, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Init = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Init, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Size = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Size, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Length = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Length, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.IsEmpty = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_IsEmpty, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Lower = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Lower, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Upper = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Upper, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.IsDeletable = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_IsDeletable, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.IsAllocated = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_IsAllocated, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Assign = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Assign, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Move = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Move, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Set = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Set, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.First = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_First, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.ChangeFirst = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_ChangeFirst, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Last = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Last, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.ChangeLast = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_ChangeLast, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Value = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Value, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.ChangeValue = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_ChangeValue, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.__call__ = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve___call__, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.SetValue = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_SetValue, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve.Resize = new_instancemethod(_StepGeom.StepGeom_Array1OfCurve_Resize, None, StepGeom_Array1OfCurve)
StepGeom_Array1OfCurve_swigregister = _StepGeom.StepGeom_Array1OfCurve_swigregister
StepGeom_Array1OfCurve_swigregister(StepGeom_Array1OfCurve)

class StepGeom_Array1OfPcurveOrSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_Array1OfPcurveOrSurface_swiginit(self, _StepGeom.new_StepGeom_Array1OfPcurveOrSurface(*args))
    __swig_destroy__ = _StepGeom.delete_StepGeom_Array1OfPcurveOrSurface

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepGeom_Array1OfPcurveOrSurface.begin = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_begin, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.end = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_end, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.cbegin = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_cbegin, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.cend = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_cend, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Init = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Init, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Size = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Size, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Length = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Length, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.IsEmpty = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_IsEmpty, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Lower = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Lower, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Upper = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Upper, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.IsDeletable = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_IsDeletable, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.IsAllocated = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_IsAllocated, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Assign = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Assign, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Move = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Move, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Set = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Set, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.First = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_First, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.ChangeFirst = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_ChangeFirst, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Last = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Last, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.ChangeLast = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_ChangeLast, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Value = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Value, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.ChangeValue = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_ChangeValue, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.__call__ = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface___call__, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.SetValue = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_SetValue, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface.Resize = new_instancemethod(_StepGeom.StepGeom_Array1OfPcurveOrSurface_Resize, None, StepGeom_Array1OfPcurveOrSurface)
StepGeom_Array1OfPcurveOrSurface_swigregister = _StepGeom.StepGeom_Array1OfPcurveOrSurface_swigregister
StepGeom_Array1OfPcurveOrSurface_swigregister(StepGeom_Array1OfPcurveOrSurface)

class StepGeom_Array1OfBoundaryCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_Array1OfBoundaryCurve_swiginit(self, _StepGeom.new_StepGeom_Array1OfBoundaryCurve(*args))
    __swig_destroy__ = _StepGeom.delete_StepGeom_Array1OfBoundaryCurve

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepGeom_Array1OfBoundaryCurve.begin = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_begin, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.end = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_end, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.cbegin = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_cbegin, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.cend = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_cend, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Init = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Init, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Size = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Size, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Length = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Length, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.IsEmpty = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_IsEmpty, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Lower = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Lower, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Upper = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Upper, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.IsDeletable = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_IsDeletable, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.IsAllocated = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_IsAllocated, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Assign = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Assign, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Move = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Move, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Set = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Set, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.First = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_First, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.ChangeFirst = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_ChangeFirst, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Last = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Last, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.ChangeLast = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_ChangeLast, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Value = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Value, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.ChangeValue = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_ChangeValue, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.__call__ = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve___call__, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.SetValue = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_SetValue, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve.Resize = new_instancemethod(_StepGeom.StepGeom_Array1OfBoundaryCurve_Resize, None, StepGeom_Array1OfBoundaryCurve)
StepGeom_Array1OfBoundaryCurve_swigregister = _StepGeom.StepGeom_Array1OfBoundaryCurve_swigregister
StepGeom_Array1OfBoundaryCurve_swigregister(StepGeom_Array1OfBoundaryCurve)

class StepGeom_Array2OfCartesianPoint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_Array2OfCartesianPoint_swiginit(self, _StepGeom.new_StepGeom_Array2OfCartesianPoint(*args))
    __swig_destroy__ = _StepGeom.delete_StepGeom_Array2OfCartesianPoint
StepGeom_Array2OfCartesianPoint.Init = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_Init, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.Size = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_Size, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.Length = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_Length, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.NbRows = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_NbRows, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.NbColumns = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_NbColumns, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.RowLength = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_RowLength, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.ColLength = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_ColLength, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.LowerRow = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_LowerRow, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.UpperRow = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_UpperRow, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.LowerCol = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_LowerCol, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.UpperCol = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_UpperCol, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.IsDeletable = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_IsDeletable, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.Assign = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_Assign, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.Move = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_Move, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.Set = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_Set, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.Value = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_Value, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.ChangeValue = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_ChangeValue, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.__call__ = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint___call__, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.SetValue = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_SetValue, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint.Resize = new_instancemethod(_StepGeom.StepGeom_Array2OfCartesianPoint_Resize, None, StepGeom_Array2OfCartesianPoint)
StepGeom_Array2OfCartesianPoint_swigregister = _StepGeom.StepGeom_Array2OfCartesianPoint_swigregister
StepGeom_Array2OfCartesianPoint_swigregister(StepGeom_Array2OfCartesianPoint)

class StepGeom_Array2OfSurfacePatch(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_Array2OfSurfacePatch_swiginit(self, _StepGeom.new_StepGeom_Array2OfSurfacePatch(*args))
    __swig_destroy__ = _StepGeom.delete_StepGeom_Array2OfSurfacePatch
StepGeom_Array2OfSurfacePatch.Init = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_Init, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.Size = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_Size, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.Length = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_Length, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.NbRows = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_NbRows, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.NbColumns = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_NbColumns, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.RowLength = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_RowLength, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.ColLength = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_ColLength, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.LowerRow = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_LowerRow, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.UpperRow = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_UpperRow, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.LowerCol = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_LowerCol, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.UpperCol = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_UpperCol, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.IsDeletable = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_IsDeletable, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.Assign = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_Assign, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.Move = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_Move, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.Set = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_Set, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.Value = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_Value, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.ChangeValue = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_ChangeValue, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.__call__ = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch___call__, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.SetValue = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_SetValue, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch.Resize = new_instancemethod(_StepGeom.StepGeom_Array2OfSurfacePatch_Resize, None, StepGeom_Array2OfSurfacePatch)
StepGeom_Array2OfSurfacePatch_swigregister = _StepGeom.StepGeom_Array2OfSurfacePatch_swigregister
StepGeom_Array2OfSurfacePatch_swigregister(StepGeom_Array2OfSurfacePatch)

class StepGeom_Array1OfSurfaceBoundary(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_Array1OfSurfaceBoundary_swiginit(self, _StepGeom.new_StepGeom_Array1OfSurfaceBoundary(*args))
    __swig_destroy__ = _StepGeom.delete_StepGeom_Array1OfSurfaceBoundary

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepGeom_Array1OfSurfaceBoundary.begin = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_begin, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.end = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_end, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.cbegin = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_cbegin, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.cend = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_cend, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Init = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Init, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Size = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Size, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Length = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Length, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.IsEmpty = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_IsEmpty, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Lower = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Lower, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Upper = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Upper, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.IsDeletable = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_IsDeletable, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.IsAllocated = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_IsAllocated, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Assign = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Assign, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Move = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Move, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Set = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Set, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.First = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_First, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.ChangeFirst = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_ChangeFirst, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Last = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Last, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.ChangeLast = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_ChangeLast, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Value = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Value, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.ChangeValue = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_ChangeValue, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.__call__ = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary___call__, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.SetValue = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_SetValue, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary.Resize = new_instancemethod(_StepGeom.StepGeom_Array1OfSurfaceBoundary_Resize, None, StepGeom_Array1OfSurfaceBoundary)
StepGeom_Array1OfSurfaceBoundary_swigregister = _StepGeom.StepGeom_Array1OfSurfaceBoundary_swigregister
StepGeom_Array1OfSurfaceBoundary_swigregister(StepGeom_Array1OfSurfaceBoundary)

class StepGeom_Array1OfCompositeCurveSegment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_Array1OfCompositeCurveSegment_swiginit(self, _StepGeom.new_StepGeom_Array1OfCompositeCurveSegment(*args))
    __swig_destroy__ = _StepGeom.delete_StepGeom_Array1OfCompositeCurveSegment

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepGeom_Array1OfCompositeCurveSegment.begin = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_begin, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.end = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_end, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.cbegin = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_cbegin, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.cend = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_cend, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Init = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Init, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Size = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Size, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Length = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Length, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.IsEmpty = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_IsEmpty, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Lower = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Lower, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Upper = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Upper, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.IsDeletable = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_IsDeletable, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.IsAllocated = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_IsAllocated, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Assign = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Assign, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Move = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Move, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Set = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Set, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.First = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_First, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.ChangeFirst = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_ChangeFirst, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Last = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Last, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.ChangeLast = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_ChangeLast, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Value = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Value, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.ChangeValue = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_ChangeValue, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.__call__ = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment___call__, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.SetValue = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_SetValue, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment.Resize = new_instancemethod(_StepGeom.StepGeom_Array1OfCompositeCurveSegment_Resize, None, StepGeom_Array1OfCompositeCurveSegment)
StepGeom_Array1OfCompositeCurveSegment_swigregister = _StepGeom.StepGeom_Array1OfCompositeCurveSegment_swigregister
StepGeom_Array1OfCompositeCurveSegment_swigregister(StepGeom_Array1OfCompositeCurveSegment)

class StepGeom_Array1OfTrimmingSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_Array1OfTrimmingSelect_swiginit(self, _StepGeom.new_StepGeom_Array1OfTrimmingSelect(*args))
    __swig_destroy__ = _StepGeom.delete_StepGeom_Array1OfTrimmingSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepGeom_Array1OfTrimmingSelect.begin = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_begin, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.end = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_end, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.cbegin = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_cbegin, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.cend = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_cend, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Init = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Init, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Size = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Size, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Length = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Length, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.IsEmpty = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_IsEmpty, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Lower = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Lower, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Upper = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Upper, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.IsDeletable = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_IsDeletable, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.IsAllocated = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_IsAllocated, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Assign = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Assign, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Move = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Move, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Set = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Set, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.First = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_First, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.ChangeFirst = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_ChangeFirst, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Last = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Last, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.ChangeLast = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_ChangeLast, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Value = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Value, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.ChangeValue = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_ChangeValue, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.__call__ = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect___call__, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.SetValue = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_SetValue, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect.Resize = new_instancemethod(_StepGeom.StepGeom_Array1OfTrimmingSelect_Resize, None, StepGeom_Array1OfTrimmingSelect)
StepGeom_Array1OfTrimmingSelect_swigregister = _StepGeom.StepGeom_Array1OfTrimmingSelect_swigregister
StepGeom_Array1OfTrimmingSelect_swigregister(StepGeom_Array1OfTrimmingSelect)

class StepGeom_Array1OfCartesianPoint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_Array1OfCartesianPoint_swiginit(self, _StepGeom.new_StepGeom_Array1OfCartesianPoint(*args))
    __swig_destroy__ = _StepGeom.delete_StepGeom_Array1OfCartesianPoint

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepGeom_Array1OfCartesianPoint.begin = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_begin, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.end = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_end, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.cbegin = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_cbegin, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.cend = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_cend, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Init = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Init, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Size = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Size, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Length = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Length, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.IsEmpty = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_IsEmpty, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Lower = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Lower, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Upper = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Upper, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.IsDeletable = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_IsDeletable, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.IsAllocated = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_IsAllocated, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Assign = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Assign, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Move = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Move, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Set = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Set, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.First = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_First, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.ChangeFirst = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_ChangeFirst, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Last = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Last, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.ChangeLast = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_ChangeLast, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Value = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Value, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.ChangeValue = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_ChangeValue, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.__call__ = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint___call__, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.SetValue = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_SetValue, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint.Resize = new_instancemethod(_StepGeom.StepGeom_Array1OfCartesianPoint_Resize, None, StepGeom_Array1OfCartesianPoint)
StepGeom_Array1OfCartesianPoint_swigregister = _StepGeom.StepGeom_Array1OfCartesianPoint_swigregister
StepGeom_Array1OfCartesianPoint_swigregister(StepGeom_Array1OfCartesianPoint)

class StepGeom_Axis2Placement(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Axis2Placement2d(self, *args) -> "opencascade::handle< StepGeom_Axis2Placement2d >":
        """
        * returns Value as a Axis2Placement2d (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Axis2Placement2d>
        """
        return _StepGeom.StepGeom_Axis2Placement_Axis2Placement2d(self, *args)


    def Axis2Placement3d(self, *args) -> "opencascade::handle< StepGeom_Axis2Placement3d >":
        """
        * returns Value as a Axis2Placement3d (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Axis2Placement3d>
        """
        return _StepGeom.StepGeom_Axis2Placement_Axis2Placement3d(self, *args)


    def __init__(self, *args):
        """
        * Returns a Axis2Placement SelectType
        	:rtype: None
        """
        _StepGeom.StepGeom_Axis2Placement_swiginit(self, _StepGeom.new_StepGeom_Axis2Placement(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Axis2Placement
StepGeom_Axis2Placement.Axis2Placement2d = new_instancemethod(_StepGeom.StepGeom_Axis2Placement_Axis2Placement2d, None, StepGeom_Axis2Placement)
StepGeom_Axis2Placement.Axis2Placement3d = new_instancemethod(_StepGeom.StepGeom_Axis2Placement_Axis2Placement3d, None, StepGeom_Axis2Placement)
StepGeom_Axis2Placement_swigregister = _StepGeom.StepGeom_Axis2Placement_swigregister
StepGeom_Axis2Placement_swigregister(StepGeom_Axis2Placement)

class StepGeom_CompositeCurveSegment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aTransition:
        	:type aTransition: StepGeom_TransitionCode
        	:param aSameSense:
        	:type aSameSense: bool
        	:param aParentCurve:
        	:type aParentCurve: StepGeom_Curve
        	:rtype: None
        """
        return _StepGeom.StepGeom_CompositeCurveSegment_Init(self, *args)


    def ParentCurve(self, *args) -> "opencascade::handle< StepGeom_Curve >":
        """:rtype: opencascade::handle<StepGeom_Curve>"""
        return _StepGeom.StepGeom_CompositeCurveSegment_ParentCurve(self, *args)


    def SameSense(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_CompositeCurveSegment_SameSense(self, *args)


    def SetParentCurve(self, *args) -> "void":
        """
        :param aParentCurve:
        	:type aParentCurve: StepGeom_Curve
        	:rtype: None
        """
        return _StepGeom.StepGeom_CompositeCurveSegment_SetParentCurve(self, *args)


    def SetSameSense(self, *args) -> "void":
        """
        :param aSameSense:
        	:type aSameSense: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_CompositeCurveSegment_SetSameSense(self, *args)


    def SetTransition(self, *args) -> "void":
        """
        :param aTransition:
        	:type aTransition: StepGeom_TransitionCode
        	:rtype: None
        """
        return _StepGeom.StepGeom_CompositeCurveSegment_SetTransition(self, *args)


    def __init__(self, *args):
        """
        * Returns a CompositeCurveSegment
        	:rtype: None
        """
        _StepGeom.StepGeom_CompositeCurveSegment_swiginit(self, _StepGeom.new_StepGeom_CompositeCurveSegment(*args))

    def Transition(self, *args) -> "StepGeom_TransitionCode":
        """:rtype: StepGeom_TransitionCode"""
        return _StepGeom.StepGeom_CompositeCurveSegment_Transition(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CompositeCurveSegment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CompositeCurveSegment
StepGeom_CompositeCurveSegment.Init = new_instancemethod(_StepGeom.StepGeom_CompositeCurveSegment_Init, None, StepGeom_CompositeCurveSegment)
StepGeom_CompositeCurveSegment.ParentCurve = new_instancemethod(_StepGeom.StepGeom_CompositeCurveSegment_ParentCurve, None, StepGeom_CompositeCurveSegment)
StepGeom_CompositeCurveSegment.SameSense = new_instancemethod(_StepGeom.StepGeom_CompositeCurveSegment_SameSense, None, StepGeom_CompositeCurveSegment)
StepGeom_CompositeCurveSegment.SetParentCurve = new_instancemethod(_StepGeom.StepGeom_CompositeCurveSegment_SetParentCurve, None, StepGeom_CompositeCurveSegment)
StepGeom_CompositeCurveSegment.SetSameSense = new_instancemethod(_StepGeom.StepGeom_CompositeCurveSegment_SetSameSense, None, StepGeom_CompositeCurveSegment)
StepGeom_CompositeCurveSegment.SetTransition = new_instancemethod(_StepGeom.StepGeom_CompositeCurveSegment_SetTransition, None, StepGeom_CompositeCurveSegment)
StepGeom_CompositeCurveSegment.Transition = new_instancemethod(_StepGeom.StepGeom_CompositeCurveSegment_Transition, None, StepGeom_CompositeCurveSegment)
StepGeom_CompositeCurveSegment_swigregister = _StepGeom.StepGeom_CompositeCurveSegment_swigregister
StepGeom_CompositeCurveSegment_swigregister(StepGeom_CompositeCurveSegment)

class StepGeom_CurveOnSurface(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CompositeCurveOnSurface(self, *args) -> "opencascade::handle< StepGeom_CompositeCurveOnSurface >":
        """
        * returns Value as a CompositeCurveOnSurface (Null if another type)
        	:rtype: opencascade::handle<StepGeom_CompositeCurveOnSurface>
        """
        return _StepGeom.StepGeom_CurveOnSurface_CompositeCurveOnSurface(self, *args)


    def Pcurve(self, *args) -> "opencascade::handle< StepGeom_Pcurve >":
        """
        * returns Value as a Pcurve (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Pcurve>
        """
        return _StepGeom.StepGeom_CurveOnSurface_Pcurve(self, *args)


    def __init__(self, *args):
        """
        * Returns a CurveOnSurface SelectType
        	:rtype: None
        """
        _StepGeom.StepGeom_CurveOnSurface_swiginit(self, _StepGeom.new_StepGeom_CurveOnSurface(*args))

    def SurfaceCurve(self, *args) -> "opencascade::handle< StepGeom_SurfaceCurve >":
        """
        * returns Value as a SurfaceCurve (Null if another type)
        	:rtype: opencascade::handle<StepGeom_SurfaceCurve>
        """
        return _StepGeom.StepGeom_CurveOnSurface_SurfaceCurve(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CurveOnSurface
StepGeom_CurveOnSurface.CompositeCurveOnSurface = new_instancemethod(_StepGeom.StepGeom_CurveOnSurface_CompositeCurveOnSurface, None, StepGeom_CurveOnSurface)
StepGeom_CurveOnSurface.Pcurve = new_instancemethod(_StepGeom.StepGeom_CurveOnSurface_Pcurve, None, StepGeom_CurveOnSurface)
StepGeom_CurveOnSurface.SurfaceCurve = new_instancemethod(_StepGeom.StepGeom_CurveOnSurface_SurfaceCurve, None, StepGeom_CurveOnSurface)
StepGeom_CurveOnSurface_swigregister = _StepGeom.StepGeom_CurveOnSurface_swigregister
StepGeom_CurveOnSurface_swigregister(StepGeom_CurveOnSurface)

class StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx(OCC.Core.StepRepr.StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordinateSpaceDimension(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_CoordinateSpaceDimension(self, *args)


    def GeometricRepresentationContext(self, *args) -> "opencascade::handle< StepGeom_GeometricRepresentationContext >":
        """:rtype: opencascade::handle<StepGeom_GeometricRepresentationContext>"""
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_GeometricRepresentationContext(self, *args)


    def GlobalUncertaintyAssignedContext(self, *args) -> "opencascade::handle< StepRepr_GlobalUncertaintyAssignedContext >":
        """:rtype: opencascade::handle<StepRepr_GlobalUncertaintyAssignedContext>"""
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_GlobalUncertaintyAssignedContext(self, *args)


    def GlobalUnitAssignedContext(self, *args) -> "opencascade::handle< StepRepr_GlobalUnitAssignedContext >":
        """:rtype: opencascade::handle<StepRepr_GlobalUnitAssignedContext>"""
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_GlobalUnitAssignedContext(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aContextIdentifier:
        	:type aContextIdentifier: TCollection_HAsciiString
        	:param aContextType:
        	:type aContextType: TCollection_HAsciiString
        	:param aGeometricRepresentationCtx:
        	:type aGeometricRepresentationCtx: StepGeom_GeometricRepresentationContext
        	:param aGlobalUnitAssignedCtx:
        	:type aGlobalUnitAssignedCtx: StepRepr_GlobalUnitAssignedContext
        	:param aGlobalUncertaintyAssignedCtx:
        	:type aGlobalUncertaintyAssignedCtx: StepRepr_GlobalUncertaintyAssignedContext
        	:rtype: None
        :param aContextIdentifier:
        	:type aContextIdentifier: TCollection_HAsciiString
        	:param aContextType:
        	:type aContextType: TCollection_HAsciiString
        	:param aCoordinateSpaceDimension:
        	:type aCoordinateSpaceDimension: int
        	:param aUnits:
        	:type aUnits: StepBasic_HArray1OfNamedUnit
        	:param anUncertainty:
        	:type anUncertainty: StepBasic_HArray1OfUncertaintyMeasureWithUnit
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Init(self, *args)


    def NbUncertainty(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_NbUncertainty(self, *args)


    def NbUnits(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_NbUnits(self, *args)


    def SetCoordinateSpaceDimension(self, *args) -> "void":
        """
        :param aCoordinateSpaceDimension:
        	:type aCoordinateSpaceDimension: int
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetCoordinateSpaceDimension(self, *args)


    def SetGeometricRepresentationContext(self, *args) -> "void":
        """
        :param aGeometricRepresentationContext:
        	:type aGeometricRepresentationContext: StepGeom_GeometricRepresentationContext
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetGeometricRepresentationContext(self, *args)


    def SetGlobalUncertaintyAssignedContext(self, *args) -> "void":
        """
        :param aGlobalUncertaintyAssignedCtx:
        	:type aGlobalUncertaintyAssignedCtx: StepRepr_GlobalUncertaintyAssignedContext
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetGlobalUncertaintyAssignedContext(self, *args)


    def SetGlobalUnitAssignedContext(self, *args) -> "void":
        """
        :param aGlobalUnitAssignedContext:
        	:type aGlobalUnitAssignedContext: StepRepr_GlobalUnitAssignedContext
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetGlobalUnitAssignedContext(self, *args)


    def SetUncertainty(self, *args) -> "void":
        """
        :param aUncertainty:
        	:type aUncertainty: StepBasic_HArray1OfUncertaintyMeasureWithUnit
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetUncertainty(self, *args)


    def SetUnits(self, *args) -> "void":
        """
        :param aUnits:
        	:type aUnits: StepBasic_HArray1OfNamedUnit
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetUnits(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_swiginit(self, _StepGeom.new_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx(*args))

    def Uncertainty(self, *args) -> "opencascade::handle< StepBasic_HArray1OfUncertaintyMeasureWithUnit >":
        """:rtype: opencascade::handle<StepBasic_HArray1OfUncertaintyMeasureWithUnit>"""
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Uncertainty(self, *args)


    def UncertaintyValue(self, *args) -> "opencascade::handle< StepBasic_UncertaintyMeasureWithUnit >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepBasic_UncertaintyMeasureWithUnit>
        """
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_UncertaintyValue(self, *args)


    def Units(self, *args) -> "opencascade::handle< StepBasic_HArray1OfNamedUnit >":
        """:rtype: opencascade::handle<StepBasic_HArray1OfNamedUnit>"""
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Units(self, *args)


    def UnitsValue(self, *args) -> "opencascade::handle< StepBasic_NamedUnit >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepBasic_NamedUnit>
        """
        return _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_UnitsValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.CoordinateSpaceDimension = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_CoordinateSpaceDimension, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.GeometricRepresentationContext = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_GeometricRepresentationContext, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.GlobalUncertaintyAssignedContext = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_GlobalUncertaintyAssignedContext, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.GlobalUnitAssignedContext = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_GlobalUnitAssignedContext, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.Init = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Init, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.NbUncertainty = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_NbUncertainty, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.NbUnits = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_NbUnits, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.SetCoordinateSpaceDimension = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetCoordinateSpaceDimension, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.SetGeometricRepresentationContext = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetGeometricRepresentationContext, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.SetGlobalUncertaintyAssignedContext = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetGlobalUncertaintyAssignedContext, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.SetGlobalUnitAssignedContext = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetGlobalUnitAssignedContext, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.SetUncertainty = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetUncertainty, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.SetUnits = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_SetUnits, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.Uncertainty = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Uncertainty, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.UncertaintyValue = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_UncertaintyValue, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.Units = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_Units, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx.UnitsValue = new_instancemethod(_StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_UnitsValue, None, StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_swigregister = _StepGeom.StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_swigregister
StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx_swigregister(StepGeom_GeomRepContextAndGlobUnitAssCtxAndGlobUncertaintyAssCtx)

class StepGeom_GeometricRepresentationContext(OCC.Core.StepRepr.StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordinateSpaceDimension(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_GeometricRepresentationContext_CoordinateSpaceDimension(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aContextIdentifier:
        	:type aContextIdentifier: TCollection_HAsciiString
        	:param aContextType:
        	:type aContextType: TCollection_HAsciiString
        	:param aCoordinateSpaceDimension:
        	:type aCoordinateSpaceDimension: int
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContext_Init(self, *args)


    def SetCoordinateSpaceDimension(self, *args) -> "void":
        """
        :param aCoordinateSpaceDimension:
        	:type aCoordinateSpaceDimension: int
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContext_SetCoordinateSpaceDimension(self, *args)


    def __init__(self, *args):
        """
        * Returns a GeometricRepresentationContext
        	:rtype: None
        """
        _StepGeom.StepGeom_GeometricRepresentationContext_swiginit(self, _StepGeom.new_StepGeom_GeometricRepresentationContext(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_GeometricRepresentationContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_GeometricRepresentationContext
StepGeom_GeometricRepresentationContext.CoordinateSpaceDimension = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContext_CoordinateSpaceDimension, None, StepGeom_GeometricRepresentationContext)
StepGeom_GeometricRepresentationContext.Init = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContext_Init, None, StepGeom_GeometricRepresentationContext)
StepGeom_GeometricRepresentationContext.SetCoordinateSpaceDimension = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContext_SetCoordinateSpaceDimension, None, StepGeom_GeometricRepresentationContext)
StepGeom_GeometricRepresentationContext_swigregister = _StepGeom.StepGeom_GeometricRepresentationContext_swigregister
StepGeom_GeometricRepresentationContext_swigregister(StepGeom_GeometricRepresentationContext)

class StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext(OCC.Core.StepRepr.StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordinateSpaceDimension(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_CoordinateSpaceDimension(self, *args)


    def GeometricRepresentationContext(self, *args) -> "opencascade::handle< StepGeom_GeometricRepresentationContext >":
        """:rtype: opencascade::handle<StepGeom_GeometricRepresentationContext>"""
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_GeometricRepresentationContext(self, *args)


    def GlobalUnitAssignedContext(self, *args) -> "opencascade::handle< StepRepr_GlobalUnitAssignedContext >":
        """:rtype: opencascade::handle<StepRepr_GlobalUnitAssignedContext>"""
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_GlobalUnitAssignedContext(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aContextIdentifier:
        	:type aContextIdentifier: TCollection_HAsciiString
        	:param aContextType:
        	:type aContextType: TCollection_HAsciiString
        	:param aGeometricRepresentationContext:
        	:type aGeometricRepresentationContext: StepGeom_GeometricRepresentationContext
        	:param aGlobalUnitAssignedContext:
        	:type aGlobalUnitAssignedContext: StepRepr_GlobalUnitAssignedContext
        	:rtype: None
        :param aContextIdentifier:
        	:type aContextIdentifier: TCollection_HAsciiString
        	:param aContextType:
        	:type aContextType: TCollection_HAsciiString
        	:param aCoordinateSpaceDimension:
        	:type aCoordinateSpaceDimension: int
        	:param aUnits:
        	:type aUnits: StepBasic_HArray1OfNamedUnit
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_Init(self, *args)


    def NbUnits(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_NbUnits(self, *args)


    def SetCoordinateSpaceDimension(self, *args) -> "void":
        """
        :param aCoordinateSpaceDimension:
        	:type aCoordinateSpaceDimension: int
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_SetCoordinateSpaceDimension(self, *args)


    def SetGeometricRepresentationContext(self, *args) -> "void":
        """
        :param aGeometricRepresentationContext:
        	:type aGeometricRepresentationContext: StepGeom_GeometricRepresentationContext
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_SetGeometricRepresentationContext(self, *args)


    def SetGlobalUnitAssignedContext(self, *args) -> "void":
        """
        :param aGlobalUnitAssignedContext:
        	:type aGlobalUnitAssignedContext: StepRepr_GlobalUnitAssignedContext
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_SetGlobalUnitAssignedContext(self, *args)


    def SetUnits(self, *args) -> "void":
        """
        :param aUnits:
        	:type aUnits: StepBasic_HArray1OfNamedUnit
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_SetUnits(self, *args)


    def __init__(self, *args):
        """
        * Returns a GeometricRepresentationContextAndGlobalUnitAssignedContext
        	:rtype: None
        """
        _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_swiginit(self, _StepGeom.new_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext(*args))

    def Units(self, *args) -> "opencascade::handle< StepBasic_HArray1OfNamedUnit >":
        """:rtype: opencascade::handle<StepBasic_HArray1OfNamedUnit>"""
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_Units(self, *args)


    def UnitsValue(self, *args) -> "opencascade::handle< StepBasic_NamedUnit >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepBasic_NamedUnit>
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_UnitsValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.CoordinateSpaceDimension = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_CoordinateSpaceDimension, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.GeometricRepresentationContext = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_GeometricRepresentationContext, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.GlobalUnitAssignedContext = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_GlobalUnitAssignedContext, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.Init = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_Init, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.NbUnits = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_NbUnits, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.SetCoordinateSpaceDimension = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_SetCoordinateSpaceDimension, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.SetGeometricRepresentationContext = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_SetGeometricRepresentationContext, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.SetGlobalUnitAssignedContext = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_SetGlobalUnitAssignedContext, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.SetUnits = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_SetUnits, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.Units = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_Units, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext.UnitsValue = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_UnitsValue, None, StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_swigregister = _StepGeom.StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_swigregister
StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext_swigregister(StepGeom_GeometricRepresentationContextAndGlobalUnitAssignedContext)

class StepGeom_GeometricRepresentationContextAndParametricRepresentationContext(OCC.Core.StepRepr.StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordinateSpaceDimension(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_CoordinateSpaceDimension(self, *args)


    def GeometricRepresentationContext(self, *args) -> "opencascade::handle< StepGeom_GeometricRepresentationContext >":
        """:rtype: opencascade::handle<StepGeom_GeometricRepresentationContext>"""
        return _StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_GeometricRepresentationContext(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aContextIdentifier:
        	:type aContextIdentifier: TCollection_HAsciiString
        	:param aContextType:
        	:type aContextType: TCollection_HAsciiString
        	:param aGeometricRepresentationContext:
        	:type aGeometricRepresentationContext: StepGeom_GeometricRepresentationContext
        	:param aParametricRepresentationContext:
        	:type aParametricRepresentationContext: StepRepr_ParametricRepresentationContext
        	:rtype: None
        :param aContextIdentifier:
        	:type aContextIdentifier: TCollection_HAsciiString
        	:param aContextType:
        	:type aContextType: TCollection_HAsciiString
        	:param aCoordinateSpaceDimension:
        	:type aCoordinateSpaceDimension: int
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_Init(self, *args)


    def ParametricRepresentationContext(self, *args) -> "opencascade::handle< StepRepr_ParametricRepresentationContext >":
        """:rtype: opencascade::handle<StepRepr_ParametricRepresentationContext>"""
        return _StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_ParametricRepresentationContext(self, *args)


    def SetCoordinateSpaceDimension(self, *args) -> "void":
        """
        :param aCoordinateSpaceDimension:
        	:type aCoordinateSpaceDimension: int
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_SetCoordinateSpaceDimension(self, *args)


    def SetGeometricRepresentationContext(self, *args) -> "void":
        """
        :param aGeometricRepresentationContext:
        	:type aGeometricRepresentationContext: StepGeom_GeometricRepresentationContext
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_SetGeometricRepresentationContext(self, *args)


    def SetParametricRepresentationContext(self, *args) -> "void":
        """
        :param aParametricRepresentationContext:
        	:type aParametricRepresentationContext: StepRepr_ParametricRepresentationContext
        	:rtype: None
        """
        return _StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_SetParametricRepresentationContext(self, *args)


    def __init__(self, *args):
        """
        * empty constructor
        	:rtype: None
        """
        _StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_swiginit(self, _StepGeom.new_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_GeometricRepresentationContextAndParametricRepresentationContext
StepGeom_GeometricRepresentationContextAndParametricRepresentationContext.CoordinateSpaceDimension = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_CoordinateSpaceDimension, None, StepGeom_GeometricRepresentationContextAndParametricRepresentationContext)
StepGeom_GeometricRepresentationContextAndParametricRepresentationContext.GeometricRepresentationContext = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_GeometricRepresentationContext, None, StepGeom_GeometricRepresentationContextAndParametricRepresentationContext)
StepGeom_GeometricRepresentationContextAndParametricRepresentationContext.Init = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_Init, None, StepGeom_GeometricRepresentationContextAndParametricRepresentationContext)
StepGeom_GeometricRepresentationContextAndParametricRepresentationContext.ParametricRepresentationContext = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_ParametricRepresentationContext, None, StepGeom_GeometricRepresentationContextAndParametricRepresentationContext)
StepGeom_GeometricRepresentationContextAndParametricRepresentationContext.SetCoordinateSpaceDimension = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_SetCoordinateSpaceDimension, None, StepGeom_GeometricRepresentationContextAndParametricRepresentationContext)
StepGeom_GeometricRepresentationContextAndParametricRepresentationContext.SetGeometricRepresentationContext = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_SetGeometricRepresentationContext, None, StepGeom_GeometricRepresentationContextAndParametricRepresentationContext)
StepGeom_GeometricRepresentationContextAndParametricRepresentationContext.SetParametricRepresentationContext = new_instancemethod(_StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_SetParametricRepresentationContext, None, StepGeom_GeometricRepresentationContextAndParametricRepresentationContext)
StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_swigregister = _StepGeom.StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_swigregister
StepGeom_GeometricRepresentationContextAndParametricRepresentationContext_swigregister(StepGeom_GeometricRepresentationContextAndParametricRepresentationContext)

class StepGeom_GeometricRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a GeometricRepresentationItem
        	:rtype: None
        """
        _StepGeom.StepGeom_GeometricRepresentationItem_swiginit(self, _StepGeom.new_StepGeom_GeometricRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_GeometricRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_GeometricRepresentationItem
StepGeom_GeometricRepresentationItem_swigregister = _StepGeom.StepGeom_GeometricRepresentationItem_swigregister
StepGeom_GeometricRepresentationItem_swigregister(StepGeom_GeometricRepresentationItem)

class StepGeom_PcurveOrSurface(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Pcurve(self, *args) -> "opencascade::handle< StepGeom_Pcurve >":
        """
        * returns Value as a Pcurve (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Pcurve>
        """
        return _StepGeom.StepGeom_PcurveOrSurface_Pcurve(self, *args)


    def __init__(self, *args):
        """
        * Returns a PcurveOrSurface SelectType
        	:rtype: None
        """
        _StepGeom.StepGeom_PcurveOrSurface_swiginit(self, _StepGeom.new_StepGeom_PcurveOrSurface(*args))

    def Surface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """
        * returns Value as a Surface (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Surface>
        """
        return _StepGeom.StepGeom_PcurveOrSurface_Surface(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_PcurveOrSurface
StepGeom_PcurveOrSurface.Pcurve = new_instancemethod(_StepGeom.StepGeom_PcurveOrSurface_Pcurve, None, StepGeom_PcurveOrSurface)
StepGeom_PcurveOrSurface.Surface = new_instancemethod(_StepGeom.StepGeom_PcurveOrSurface_Surface, None, StepGeom_PcurveOrSurface)
StepGeom_PcurveOrSurface_swigregister = _StepGeom.StepGeom_PcurveOrSurface_swigregister
StepGeom_PcurveOrSurface_swigregister(StepGeom_PcurveOrSurface)

class StepGeom_SurfaceBoundary(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BoundaryCurve(self, *args) -> "opencascade::handle< StepGeom_BoundaryCurve >":
        """
        * Returns Value as BoundaryCurve (or Null if another type)
        	:rtype: opencascade::handle<StepGeom_BoundaryCurve>
        """
        return _StepGeom.StepGeom_SurfaceBoundary_BoundaryCurve(self, *args)


    def DegeneratePcurve(self, *args) -> "opencascade::handle< StepGeom_DegeneratePcurve >":
        """
        * Returns Value as DegeneratePcurve (or Null if another type)
        	:rtype: opencascade::handle<StepGeom_DegeneratePcurve>
        """
        return _StepGeom.StepGeom_SurfaceBoundary_DegeneratePcurve(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepGeom.StepGeom_SurfaceBoundary_swiginit(self, _StepGeom.new_StepGeom_SurfaceBoundary(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SurfaceBoundary
StepGeom_SurfaceBoundary.BoundaryCurve = new_instancemethod(_StepGeom.StepGeom_SurfaceBoundary_BoundaryCurve, None, StepGeom_SurfaceBoundary)
StepGeom_SurfaceBoundary.DegeneratePcurve = new_instancemethod(_StepGeom.StepGeom_SurfaceBoundary_DegeneratePcurve, None, StepGeom_SurfaceBoundary)
StepGeom_SurfaceBoundary_swigregister = _StepGeom.StepGeom_SurfaceBoundary_swigregister
StepGeom_SurfaceBoundary_swigregister(StepGeom_SurfaceBoundary)

class StepGeom_SurfacePatch(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aParentSurface:
        	:type aParentSurface: StepGeom_BoundedSurface
        	:param aUTransition:
        	:type aUTransition: StepGeom_TransitionCode
        	:param aVTransition:
        	:type aVTransition: StepGeom_TransitionCode
        	:param aUSense:
        	:type aUSense: bool
        	:param aVSense:
        	:type aVSense: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfacePatch_Init(self, *args)


    def ParentSurface(self, *args) -> "opencascade::handle< StepGeom_BoundedSurface >":
        """:rtype: opencascade::handle<StepGeom_BoundedSurface>"""
        return _StepGeom.StepGeom_SurfacePatch_ParentSurface(self, *args)


    def SetParentSurface(self, *args) -> "void":
        """
        :param aParentSurface:
        	:type aParentSurface: StepGeom_BoundedSurface
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfacePatch_SetParentSurface(self, *args)


    def SetUSense(self, *args) -> "void":
        """
        :param aUSense:
        	:type aUSense: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfacePatch_SetUSense(self, *args)


    def SetUTransition(self, *args) -> "void":
        """
        :param aUTransition:
        	:type aUTransition: StepGeom_TransitionCode
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfacePatch_SetUTransition(self, *args)


    def SetVSense(self, *args) -> "void":
        """
        :param aVSense:
        	:type aVSense: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfacePatch_SetVSense(self, *args)


    def SetVTransition(self, *args) -> "void":
        """
        :param aVTransition:
        	:type aVTransition: StepGeom_TransitionCode
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfacePatch_SetVTransition(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfacePatch
        	:rtype: None
        """
        _StepGeom.StepGeom_SurfacePatch_swiginit(self, _StepGeom.new_StepGeom_SurfacePatch(*args))

    def USense(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_SurfacePatch_USense(self, *args)


    def UTransition(self, *args) -> "StepGeom_TransitionCode":
        """:rtype: StepGeom_TransitionCode"""
        return _StepGeom.StepGeom_SurfacePatch_UTransition(self, *args)


    def VSense(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_SurfacePatch_VSense(self, *args)


    def VTransition(self, *args) -> "StepGeom_TransitionCode":
        """:rtype: StepGeom_TransitionCode"""
        return _StepGeom.StepGeom_SurfacePatch_VTransition(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_SurfacePatch_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SurfacePatch
StepGeom_SurfacePatch.Init = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_Init, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.ParentSurface = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_ParentSurface, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.SetParentSurface = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_SetParentSurface, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.SetUSense = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_SetUSense, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.SetUTransition = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_SetUTransition, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.SetVSense = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_SetVSense, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.SetVTransition = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_SetVTransition, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.USense = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_USense, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.UTransition = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_UTransition, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.VSense = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_VSense, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch.VTransition = new_instancemethod(_StepGeom.StepGeom_SurfacePatch_VTransition, None, StepGeom_SurfacePatch)
StepGeom_SurfacePatch_swigregister = _StepGeom.StepGeom_SurfacePatch_swigregister
StepGeom_SurfacePatch_swigregister(StepGeom_SurfacePatch)

class StepGeom_TrimmingMember(OCC.Core.StepData.StepData_SelectReal):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepGeom.StepGeom_TrimmingMember_swiginit(self, _StepGeom.new_StepGeom_TrimmingMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_TrimmingMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_TrimmingMember
StepGeom_TrimmingMember_swigregister = _StepGeom.StepGeom_TrimmingMember_swigregister
StepGeom_TrimmingMember_swigregister(StepGeom_TrimmingMember)

class StepGeom_TrimmingSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CartesianPoint(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """
        * returns Value as a CartesianPoint (Null if another type)
        	:rtype: opencascade::handle<StepGeom_CartesianPoint>
        """
        return _StepGeom.StepGeom_TrimmingSelect_CartesianPoint(self, *args)


    def ParameterValue(self, *args) -> "Standard_Real":
        """
        * returns Value as a Real (0.0 if not a Real)
        	:rtype: float
        """
        return _StepGeom.StepGeom_TrimmingSelect_ParameterValue(self, *args)


    def SetParameterValue(self, *args) -> "void":
        """
        * sets the ParameterValue as Real
        	:param aParameterValue:
        	:type aParameterValue: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_TrimmingSelect_SetParameterValue(self, *args)


    def __init__(self, *args):
        """
        * Returns a TrimmingSelect SelectType
        	:rtype: None
        """
        _StepGeom.StepGeom_TrimmingSelect_swiginit(self, _StepGeom.new_StepGeom_TrimmingSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_TrimmingSelect
StepGeom_TrimmingSelect.CartesianPoint = new_instancemethod(_StepGeom.StepGeom_TrimmingSelect_CartesianPoint, None, StepGeom_TrimmingSelect)
StepGeom_TrimmingSelect.ParameterValue = new_instancemethod(_StepGeom.StepGeom_TrimmingSelect_ParameterValue, None, StepGeom_TrimmingSelect)
StepGeom_TrimmingSelect.SetParameterValue = new_instancemethod(_StepGeom.StepGeom_TrimmingSelect_SetParameterValue, None, StepGeom_TrimmingSelect)
StepGeom_TrimmingSelect_swigregister = _StepGeom.StepGeom_TrimmingSelect_swigregister
StepGeom_TrimmingSelect_swigregister(StepGeom_TrimmingSelect)

class StepGeom_VectorOrDirection(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Direction(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """
        * returns Value as a Direction (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Direction>
        """
        return _StepGeom.StepGeom_VectorOrDirection_Direction(self, *args)


    def __init__(self, *args):
        """
        * Returns a VectorOrDirection SelectType
        	:rtype: None
        """
        _StepGeom.StepGeom_VectorOrDirection_swiginit(self, _StepGeom.new_StepGeom_VectorOrDirection(*args))

    def Vector(self, *args) -> "opencascade::handle< StepGeom_Vector >":
        """
        * returns Value as a Vector (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Vector>
        """
        return _StepGeom.StepGeom_VectorOrDirection_Vector(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_VectorOrDirection
StepGeom_VectorOrDirection.Direction = new_instancemethod(_StepGeom.StepGeom_VectorOrDirection_Direction, None, StepGeom_VectorOrDirection)
StepGeom_VectorOrDirection.Vector = new_instancemethod(_StepGeom.StepGeom_VectorOrDirection_Vector, None, StepGeom_VectorOrDirection)
StepGeom_VectorOrDirection_swigregister = _StepGeom.StepGeom_VectorOrDirection_swigregister
StepGeom_VectorOrDirection_swigregister(StepGeom_VectorOrDirection)

class StepGeom_CartesianTransformationOperator(StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Axis1(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_Axis1(self, *args)


    def Axis2(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_Axis2(self, *args)


    def HasAxis1(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_HasAxis1(self, *args)


    def HasAxis2(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_HasAxis2(self, *args)


    def HasScale(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_HasScale(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasAaxis1:
        	:type hasAaxis1: bool
        	:param aAxis1:
        	:type aAxis1: StepGeom_Direction
        	:param hasAaxis2:
        	:type hasAaxis2: bool
        	:param aAxis2:
        	:type aAxis2: StepGeom_Direction
        	:param aLocalOrigin:
        	:type aLocalOrigin: StepGeom_CartesianPoint
        	:param hasAscale:
        	:type hasAscale: bool
        	:param aScale:
        	:type aScale: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianTransformationOperator_Init(self, *args)


    def LocalOrigin(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_CartesianPoint>"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_LocalOrigin(self, *args)


    def Scale(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_Scale(self, *args)


    def SetAxis1(self, *args) -> "void":
        """
        :param aAxis1:
        	:type aAxis1: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianTransformationOperator_SetAxis1(self, *args)


    def SetAxis2(self, *args) -> "void":
        """
        :param aAxis2:
        	:type aAxis2: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianTransformationOperator_SetAxis2(self, *args)


    def SetLocalOrigin(self, *args) -> "void":
        """
        :param aLocalOrigin:
        	:type aLocalOrigin: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianTransformationOperator_SetLocalOrigin(self, *args)


    def SetScale(self, *args) -> "void":
        """
        :param aScale:
        	:type aScale: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianTransformationOperator_SetScale(self, *args)


    def __init__(self, *args):
        """
        * Returns a CartesianTransformationOperator
        	:rtype: None
        """
        _StepGeom.StepGeom_CartesianTransformationOperator_swiginit(self, _StepGeom.new_StepGeom_CartesianTransformationOperator(*args))

    def UnSetAxis1(self, *args) -> "void":
        """:rtype: None"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_UnSetAxis1(self, *args)


    def UnSetAxis2(self, *args) -> "void":
        """:rtype: None"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_UnSetAxis2(self, *args)


    def UnSetScale(self, *args) -> "void":
        """:rtype: None"""
        return _StepGeom.StepGeom_CartesianTransformationOperator_UnSetScale(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CartesianTransformationOperator_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CartesianTransformationOperator
StepGeom_CartesianTransformationOperator.Axis1 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_Axis1, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.Axis2 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_Axis2, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.HasAxis1 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_HasAxis1, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.HasAxis2 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_HasAxis2, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.HasScale = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_HasScale, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.Init = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_Init, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.LocalOrigin = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_LocalOrigin, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.Scale = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_Scale, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.SetAxis1 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_SetAxis1, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.SetAxis2 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_SetAxis2, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.SetLocalOrigin = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_SetLocalOrigin, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.SetScale = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_SetScale, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.UnSetAxis1 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_UnSetAxis1, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.UnSetAxis2 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_UnSetAxis2, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator.UnSetScale = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator_UnSetScale, None, StepGeom_CartesianTransformationOperator)
StepGeom_CartesianTransformationOperator_swigregister = _StepGeom.StepGeom_CartesianTransformationOperator_swigregister
StepGeom_CartesianTransformationOperator_swigregister(StepGeom_CartesianTransformationOperator)

class StepGeom_Curve(StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Curve
        	:rtype: None
        """
        _StepGeom.StepGeom_Curve_swiginit(self, _StepGeom.new_StepGeom_Curve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Curve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Curve
StepGeom_Curve_swigregister = _StepGeom.StepGeom_Curve_swigregister
StepGeom_Curve_swigregister(StepGeom_Curve)

class StepGeom_Direction(StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DirectionRatios(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_Direction_DirectionRatios(self, *args)


    def DirectionRatiosValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_Direction_DirectionRatiosValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDirectionRatios:
        	:type aDirectionRatios: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_Direction_Init(self, *args)


    def NbDirectionRatios(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_Direction_NbDirectionRatios(self, *args)


    def SetDirectionRatios(self, *args) -> "void":
        """
        :param aDirectionRatios:
        	:type aDirectionRatios: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_Direction_SetDirectionRatios(self, *args)


    def __init__(self, *args):
        """
        * Returns a Direction
        	:rtype: None
        """
        _StepGeom.StepGeom_Direction_swiginit(self, _StepGeom.new_StepGeom_Direction(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Direction_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Direction
StepGeom_Direction.DirectionRatios = new_instancemethod(_StepGeom.StepGeom_Direction_DirectionRatios, None, StepGeom_Direction)
StepGeom_Direction.DirectionRatiosValue = new_instancemethod(_StepGeom.StepGeom_Direction_DirectionRatiosValue, None, StepGeom_Direction)
StepGeom_Direction.Init = new_instancemethod(_StepGeom.StepGeom_Direction_Init, None, StepGeom_Direction)
StepGeom_Direction.NbDirectionRatios = new_instancemethod(_StepGeom.StepGeom_Direction_NbDirectionRatios, None, StepGeom_Direction)
StepGeom_Direction.SetDirectionRatios = new_instancemethod(_StepGeom.StepGeom_Direction_SetDirectionRatios, None, StepGeom_Direction)
StepGeom_Direction_swigregister = _StepGeom.StepGeom_Direction_swigregister
StepGeom_Direction_swigregister(StepGeom_Direction)

class StepGeom_Placement(StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aLocation:
        	:type aLocation: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_Placement_Init(self, *args)


    def Location(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_CartesianPoint>"""
        return _StepGeom.StepGeom_Placement_Location(self, *args)


    def SetLocation(self, *args) -> "void":
        """
        :param aLocation:
        	:type aLocation: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_Placement_SetLocation(self, *args)


    def __init__(self, *args):
        """
        * Returns a Placement
        	:rtype: None
        """
        _StepGeom.StepGeom_Placement_swiginit(self, _StepGeom.new_StepGeom_Placement(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Placement_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Placement
StepGeom_Placement.Init = new_instancemethod(_StepGeom.StepGeom_Placement_Init, None, StepGeom_Placement)
StepGeom_Placement.Location = new_instancemethod(_StepGeom.StepGeom_Placement_Location, None, StepGeom_Placement)
StepGeom_Placement.SetLocation = new_instancemethod(_StepGeom.StepGeom_Placement_SetLocation, None, StepGeom_Placement)
StepGeom_Placement_swigregister = _StepGeom.StepGeom_Placement_swigregister
StepGeom_Placement_swigregister(StepGeom_Placement)

class StepGeom_Point(StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Point
        	:rtype: None
        """
        _StepGeom.StepGeom_Point_swiginit(self, _StepGeom.new_StepGeom_Point(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Point_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Point
StepGeom_Point_swigregister = _StepGeom.StepGeom_Point_swigregister
StepGeom_Point_swigregister(StepGeom_Point)

class StepGeom_ReparametrisedCompositeCurveSegment(StepGeom_CompositeCurveSegment):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aTransition:
        	:type aTransition: StepGeom_TransitionCode
        	:param aSameSense:
        	:type aSameSense: bool
        	:param aParentCurve:
        	:type aParentCurve: StepGeom_Curve
        	:param aParamLength:
        	:type aParamLength: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_ReparametrisedCompositeCurveSegment_Init(self, *args)


    def ParamLength(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_ReparametrisedCompositeCurveSegment_ParamLength(self, *args)


    def SetParamLength(self, *args) -> "void":
        """
        :param aParamLength:
        	:type aParamLength: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_ReparametrisedCompositeCurveSegment_SetParamLength(self, *args)


    def __init__(self, *args):
        """
        * Returns a ReparametrisedCompositeCurveSegment
        	:rtype: None
        """
        _StepGeom.StepGeom_ReparametrisedCompositeCurveSegment_swiginit(self, _StepGeom.new_StepGeom_ReparametrisedCompositeCurveSegment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_ReparametrisedCompositeCurveSegment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_ReparametrisedCompositeCurveSegment
StepGeom_ReparametrisedCompositeCurveSegment.Init = new_instancemethod(_StepGeom.StepGeom_ReparametrisedCompositeCurveSegment_Init, None, StepGeom_ReparametrisedCompositeCurveSegment)
StepGeom_ReparametrisedCompositeCurveSegment.ParamLength = new_instancemethod(_StepGeom.StepGeom_ReparametrisedCompositeCurveSegment_ParamLength, None, StepGeom_ReparametrisedCompositeCurveSegment)
StepGeom_ReparametrisedCompositeCurveSegment.SetParamLength = new_instancemethod(_StepGeom.StepGeom_ReparametrisedCompositeCurveSegment_SetParamLength, None, StepGeom_ReparametrisedCompositeCurveSegment)
StepGeom_ReparametrisedCompositeCurveSegment_swigregister = _StepGeom.StepGeom_ReparametrisedCompositeCurveSegment_swigregister
StepGeom_ReparametrisedCompositeCurveSegment_swigregister(StepGeom_ReparametrisedCompositeCurveSegment)

class StepGeom_Surface(StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Surface
        	:rtype: None
        """
        _StepGeom.StepGeom_Surface_swiginit(self, _StepGeom.new_StepGeom_Surface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Surface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Surface
StepGeom_Surface_swigregister = _StepGeom.StepGeom_Surface_swigregister
StepGeom_Surface_swigregister(StepGeom_Surface)

class StepGeom_Vector(StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aOrientation:
        	:type aOrientation: StepGeom_Direction
        	:param aMagnitude:
        	:type aMagnitude: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Vector_Init(self, *args)


    def Magnitude(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_Vector_Magnitude(self, *args)


    def Orientation(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepGeom.StepGeom_Vector_Orientation(self, *args)


    def SetMagnitude(self, *args) -> "void":
        """
        :param aMagnitude:
        	:type aMagnitude: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Vector_SetMagnitude(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        :param aOrientation:
        	:type aOrientation: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_Vector_SetOrientation(self, *args)


    def __init__(self, *args):
        """
        * Returns a Vector
        	:rtype: None
        """
        _StepGeom.StepGeom_Vector_swiginit(self, _StepGeom.new_StepGeom_Vector(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Vector_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Vector
StepGeom_Vector.Init = new_instancemethod(_StepGeom.StepGeom_Vector_Init, None, StepGeom_Vector)
StepGeom_Vector.Magnitude = new_instancemethod(_StepGeom.StepGeom_Vector_Magnitude, None, StepGeom_Vector)
StepGeom_Vector.Orientation = new_instancemethod(_StepGeom.StepGeom_Vector_Orientation, None, StepGeom_Vector)
StepGeom_Vector.SetMagnitude = new_instancemethod(_StepGeom.StepGeom_Vector_SetMagnitude, None, StepGeom_Vector)
StepGeom_Vector.SetOrientation = new_instancemethod(_StepGeom.StepGeom_Vector_SetOrientation, None, StepGeom_Vector)
StepGeom_Vector_swigregister = _StepGeom.StepGeom_Vector_swigregister
StepGeom_Vector_swigregister(StepGeom_Vector)

class StepGeom_Axis1Placement(StepGeom_Placement):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Axis(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepGeom.StepGeom_Axis1Placement_Axis(self, *args)


    def HasAxis(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_Axis1Placement_HasAxis(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aLocation:
        	:type aLocation: StepGeom_CartesianPoint
        	:param hasAaxis:
        	:type hasAaxis: bool
        	:param aAxis:
        	:type aAxis: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_Axis1Placement_Init(self, *args)


    def SetAxis(self, *args) -> "void":
        """
        :param aAxis:
        	:type aAxis: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_Axis1Placement_SetAxis(self, *args)


    def __init__(self, *args):
        """
        * Returns a Axis1Placement
        	:rtype: None
        """
        _StepGeom.StepGeom_Axis1Placement_swiginit(self, _StepGeom.new_StepGeom_Axis1Placement(*args))

    def UnSetAxis(self, *args) -> "void":
        """:rtype: None"""
        return _StepGeom.StepGeom_Axis1Placement_UnSetAxis(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Axis1Placement_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Axis1Placement
StepGeom_Axis1Placement.Axis = new_instancemethod(_StepGeom.StepGeom_Axis1Placement_Axis, None, StepGeom_Axis1Placement)
StepGeom_Axis1Placement.HasAxis = new_instancemethod(_StepGeom.StepGeom_Axis1Placement_HasAxis, None, StepGeom_Axis1Placement)
StepGeom_Axis1Placement.Init = new_instancemethod(_StepGeom.StepGeom_Axis1Placement_Init, None, StepGeom_Axis1Placement)
StepGeom_Axis1Placement.SetAxis = new_instancemethod(_StepGeom.StepGeom_Axis1Placement_SetAxis, None, StepGeom_Axis1Placement)
StepGeom_Axis1Placement.UnSetAxis = new_instancemethod(_StepGeom.StepGeom_Axis1Placement_UnSetAxis, None, StepGeom_Axis1Placement)
StepGeom_Axis1Placement_swigregister = _StepGeom.StepGeom_Axis1Placement_swigregister
StepGeom_Axis1Placement_swigregister(StepGeom_Axis1Placement)

class StepGeom_Axis2Placement2d(StepGeom_Placement):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def HasRefDirection(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_Axis2Placement2d_HasRefDirection(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aLocation:
        	:type aLocation: StepGeom_CartesianPoint
        	:param hasArefDirection:
        	:type hasArefDirection: bool
        	:param aRefDirection:
        	:type aRefDirection: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_Axis2Placement2d_Init(self, *args)


    def RefDirection(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepGeom.StepGeom_Axis2Placement2d_RefDirection(self, *args)


    def SetRefDirection(self, *args) -> "void":
        """
        :param aRefDirection:
        	:type aRefDirection: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_Axis2Placement2d_SetRefDirection(self, *args)


    def __init__(self, *args):
        """
        * Returns a Axis2Placement2d
        	:rtype: None
        """
        _StepGeom.StepGeom_Axis2Placement2d_swiginit(self, _StepGeom.new_StepGeom_Axis2Placement2d(*args))

    def UnSetRefDirection(self, *args) -> "void":
        """:rtype: None"""
        return _StepGeom.StepGeom_Axis2Placement2d_UnSetRefDirection(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Axis2Placement2d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Axis2Placement2d
StepGeom_Axis2Placement2d.HasRefDirection = new_instancemethod(_StepGeom.StepGeom_Axis2Placement2d_HasRefDirection, None, StepGeom_Axis2Placement2d)
StepGeom_Axis2Placement2d.Init = new_instancemethod(_StepGeom.StepGeom_Axis2Placement2d_Init, None, StepGeom_Axis2Placement2d)
StepGeom_Axis2Placement2d.RefDirection = new_instancemethod(_StepGeom.StepGeom_Axis2Placement2d_RefDirection, None, StepGeom_Axis2Placement2d)
StepGeom_Axis2Placement2d.SetRefDirection = new_instancemethod(_StepGeom.StepGeom_Axis2Placement2d_SetRefDirection, None, StepGeom_Axis2Placement2d)
StepGeom_Axis2Placement2d.UnSetRefDirection = new_instancemethod(_StepGeom.StepGeom_Axis2Placement2d_UnSetRefDirection, None, StepGeom_Axis2Placement2d)
StepGeom_Axis2Placement2d_swigregister = _StepGeom.StepGeom_Axis2Placement2d_swigregister
StepGeom_Axis2Placement2d_swigregister(StepGeom_Axis2Placement2d)

class StepGeom_Axis2Placement3d(StepGeom_Placement):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Axis(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepGeom.StepGeom_Axis2Placement3d_Axis(self, *args)


    def HasAxis(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_Axis2Placement3d_HasAxis(self, *args)


    def HasRefDirection(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_Axis2Placement3d_HasRefDirection(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aLocation:
        	:type aLocation: StepGeom_CartesianPoint
        	:param hasAaxis:
        	:type hasAaxis: bool
        	:param aAxis:
        	:type aAxis: StepGeom_Direction
        	:param hasArefDirection:
        	:type hasArefDirection: bool
        	:param aRefDirection:
        	:type aRefDirection: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_Axis2Placement3d_Init(self, *args)


    def RefDirection(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepGeom.StepGeom_Axis2Placement3d_RefDirection(self, *args)


    def SetAxis(self, *args) -> "void":
        """
        :param aAxis:
        	:type aAxis: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_Axis2Placement3d_SetAxis(self, *args)


    def SetRefDirection(self, *args) -> "void":
        """
        :param aRefDirection:
        	:type aRefDirection: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_Axis2Placement3d_SetRefDirection(self, *args)


    def __init__(self, *args):
        """
        * Returns a Axis2Placement3d
        	:rtype: None
        """
        _StepGeom.StepGeom_Axis2Placement3d_swiginit(self, _StepGeom.new_StepGeom_Axis2Placement3d(*args))

    def UnSetAxis(self, *args) -> "void":
        """:rtype: None"""
        return _StepGeom.StepGeom_Axis2Placement3d_UnSetAxis(self, *args)


    def UnSetRefDirection(self, *args) -> "void":
        """:rtype: None"""
        return _StepGeom.StepGeom_Axis2Placement3d_UnSetRefDirection(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Axis2Placement3d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Axis2Placement3d
StepGeom_Axis2Placement3d.Axis = new_instancemethod(_StepGeom.StepGeom_Axis2Placement3d_Axis, None, StepGeom_Axis2Placement3d)
StepGeom_Axis2Placement3d.HasAxis = new_instancemethod(_StepGeom.StepGeom_Axis2Placement3d_HasAxis, None, StepGeom_Axis2Placement3d)
StepGeom_Axis2Placement3d.HasRefDirection = new_instancemethod(_StepGeom.StepGeom_Axis2Placement3d_HasRefDirection, None, StepGeom_Axis2Placement3d)
StepGeom_Axis2Placement3d.Init = new_instancemethod(_StepGeom.StepGeom_Axis2Placement3d_Init, None, StepGeom_Axis2Placement3d)
StepGeom_Axis2Placement3d.RefDirection = new_instancemethod(_StepGeom.StepGeom_Axis2Placement3d_RefDirection, None, StepGeom_Axis2Placement3d)
StepGeom_Axis2Placement3d.SetAxis = new_instancemethod(_StepGeom.StepGeom_Axis2Placement3d_SetAxis, None, StepGeom_Axis2Placement3d)
StepGeom_Axis2Placement3d.SetRefDirection = new_instancemethod(_StepGeom.StepGeom_Axis2Placement3d_SetRefDirection, None, StepGeom_Axis2Placement3d)
StepGeom_Axis2Placement3d.UnSetAxis = new_instancemethod(_StepGeom.StepGeom_Axis2Placement3d_UnSetAxis, None, StepGeom_Axis2Placement3d)
StepGeom_Axis2Placement3d.UnSetRefDirection = new_instancemethod(_StepGeom.StepGeom_Axis2Placement3d_UnSetRefDirection, None, StepGeom_Axis2Placement3d)
StepGeom_Axis2Placement3d_swigregister = _StepGeom.StepGeom_Axis2Placement3d_swigregister
StepGeom_Axis2Placement3d_swigregister(StepGeom_Axis2Placement3d)

class StepGeom_BoundedCurve(StepGeom_Curve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a BoundedCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_BoundedCurve_swiginit(self, _StepGeom.new_StepGeom_BoundedCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BoundedCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BoundedCurve
StepGeom_BoundedCurve_swigregister = _StepGeom.StepGeom_BoundedCurve_swigregister
StepGeom_BoundedCurve_swigregister(StepGeom_BoundedCurve)

class StepGeom_BoundedSurface(StepGeom_Surface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a BoundedSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_BoundedSurface_swiginit(self, _StepGeom.new_StepGeom_BoundedSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BoundedSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BoundedSurface
StepGeom_BoundedSurface_swigregister = _StepGeom.StepGeom_BoundedSurface_swigregister
StepGeom_BoundedSurface_swigregister(StepGeom_BoundedSurface)

class StepGeom_CartesianPoint(StepGeom_Point):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Coordinates(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_CartesianPoint_Coordinates(self, *args)


    def CoordinatesValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_CartesianPoint_CoordinatesValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aCoordinates:
        	:type aCoordinates: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianPoint_Init(self, *args)


    def Init2D(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param X:
        	:type X: float
        	:param Y:
        	:type Y: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianPoint_Init2D(self, *args)


    def Init3D(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param X:
        	:type X: float
        	:param Y:
        	:type Y: float
        	:param Z:
        	:type Z: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianPoint_Init3D(self, *args)


    def NbCoordinates(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_CartesianPoint_NbCoordinates(self, *args)


    def SetCoordinates(self, *args) -> "void":
        """
        :param aCoordinates:
        	:type aCoordinates: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianPoint_SetCoordinates(self, *args)


    def __init__(self, *args):
        """
        * Returns a CartesianPoint
        	:rtype: None
        """
        _StepGeom.StepGeom_CartesianPoint_swiginit(self, _StepGeom.new_StepGeom_CartesianPoint(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CartesianPoint_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CartesianPoint
StepGeom_CartesianPoint.Coordinates = new_instancemethod(_StepGeom.StepGeom_CartesianPoint_Coordinates, None, StepGeom_CartesianPoint)
StepGeom_CartesianPoint.CoordinatesValue = new_instancemethod(_StepGeom.StepGeom_CartesianPoint_CoordinatesValue, None, StepGeom_CartesianPoint)
StepGeom_CartesianPoint.Init = new_instancemethod(_StepGeom.StepGeom_CartesianPoint_Init, None, StepGeom_CartesianPoint)
StepGeom_CartesianPoint.Init2D = new_instancemethod(_StepGeom.StepGeom_CartesianPoint_Init2D, None, StepGeom_CartesianPoint)
StepGeom_CartesianPoint.Init3D = new_instancemethod(_StepGeom.StepGeom_CartesianPoint_Init3D, None, StepGeom_CartesianPoint)
StepGeom_CartesianPoint.NbCoordinates = new_instancemethod(_StepGeom.StepGeom_CartesianPoint_NbCoordinates, None, StepGeom_CartesianPoint)
StepGeom_CartesianPoint.SetCoordinates = new_instancemethod(_StepGeom.StepGeom_CartesianPoint_SetCoordinates, None, StepGeom_CartesianPoint)
StepGeom_CartesianPoint_swigregister = _StepGeom.StepGeom_CartesianPoint_swigregister
StepGeom_CartesianPoint_swigregister(StepGeom_CartesianPoint)

class StepGeom_CartesianTransformationOperator2d(StepGeom_CartesianTransformationOperator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepGeom.StepGeom_CartesianTransformationOperator2d_swiginit(self, _StepGeom.new_StepGeom_CartesianTransformationOperator2d(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CartesianTransformationOperator2d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CartesianTransformationOperator2d
StepGeom_CartesianTransformationOperator2d_swigregister = _StepGeom.StepGeom_CartesianTransformationOperator2d_swigregister
StepGeom_CartesianTransformationOperator2d_swigregister(StepGeom_CartesianTransformationOperator2d)

class StepGeom_CartesianTransformationOperator3d(StepGeom_CartesianTransformationOperator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Axis3(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepGeom.StepGeom_CartesianTransformationOperator3d_Axis3(self, *args)


    def HasAxis3(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_CartesianTransformationOperator3d_HasAxis3(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param hasAaxis1:
        	:type hasAaxis1: bool
        	:param aAxis1:
        	:type aAxis1: StepGeom_Direction
        	:param hasAaxis2:
        	:type hasAaxis2: bool
        	:param aAxis2:
        	:type aAxis2: StepGeom_Direction
        	:param aLocalOrigin:
        	:type aLocalOrigin: StepGeom_CartesianPoint
        	:param hasAscale:
        	:type hasAscale: bool
        	:param aScale:
        	:type aScale: float
        	:param hasAaxis3:
        	:type hasAaxis3: bool
        	:param aAxis3:
        	:type aAxis3: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianTransformationOperator3d_Init(self, *args)


    def SetAxis3(self, *args) -> "void":
        """
        :param aAxis3:
        	:type aAxis3: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_CartesianTransformationOperator3d_SetAxis3(self, *args)


    def __init__(self, *args):
        """
        * Returns a CartesianTransformationOperator3d
        	:rtype: None
        """
        _StepGeom.StepGeom_CartesianTransformationOperator3d_swiginit(self, _StepGeom.new_StepGeom_CartesianTransformationOperator3d(*args))

    def UnSetAxis3(self, *args) -> "void":
        """:rtype: None"""
        return _StepGeom.StepGeom_CartesianTransformationOperator3d_UnSetAxis3(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CartesianTransformationOperator3d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CartesianTransformationOperator3d
StepGeom_CartesianTransformationOperator3d.Axis3 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator3d_Axis3, None, StepGeom_CartesianTransformationOperator3d)
StepGeom_CartesianTransformationOperator3d.HasAxis3 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator3d_HasAxis3, None, StepGeom_CartesianTransformationOperator3d)
StepGeom_CartesianTransformationOperator3d.Init = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator3d_Init, None, StepGeom_CartesianTransformationOperator3d)
StepGeom_CartesianTransformationOperator3d.SetAxis3 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator3d_SetAxis3, None, StepGeom_CartesianTransformationOperator3d)
StepGeom_CartesianTransformationOperator3d.UnSetAxis3 = new_instancemethod(_StepGeom.StepGeom_CartesianTransformationOperator3d_UnSetAxis3, None, StepGeom_CartesianTransformationOperator3d)
StepGeom_CartesianTransformationOperator3d_swigregister = _StepGeom.StepGeom_CartesianTransformationOperator3d_swigregister
StepGeom_CartesianTransformationOperator3d_swigregister(StepGeom_CartesianTransformationOperator3d)

class StepGeom_Conic(StepGeom_Curve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement
        	:rtype: None
        """
        return _StepGeom.StepGeom_Conic_Init(self, *args)


    def Position(self, *args) -> "StepGeom_Axis2Placement":
        """:rtype: StepGeom_Axis2Placement"""
        return _StepGeom.StepGeom_Conic_Position(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        :param aPosition:
        	:type aPosition: StepGeom_Axis2Placement
        	:rtype: None
        """
        return _StepGeom.StepGeom_Conic_SetPosition(self, *args)


    def __init__(self, *args):
        """
        * Returns a Conic
        	:rtype: None
        """
        _StepGeom.StepGeom_Conic_swiginit(self, _StepGeom.new_StepGeom_Conic(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Conic_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Conic
StepGeom_Conic.Init = new_instancemethod(_StepGeom.StepGeom_Conic_Init, None, StepGeom_Conic)
StepGeom_Conic.Position = new_instancemethod(_StepGeom.StepGeom_Conic_Position, None, StepGeom_Conic)
StepGeom_Conic.SetPosition = new_instancemethod(_StepGeom.StepGeom_Conic_SetPosition, None, StepGeom_Conic)
StepGeom_Conic_swigregister = _StepGeom.StepGeom_Conic_swigregister
StepGeom_Conic_swigregister(StepGeom_Conic)

class StepGeom_CurveReplica(StepGeom_Curve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aParentCurve:
        	:type aParentCurve: StepGeom_Curve
        	:param aTransformation:
        	:type aTransformation: StepGeom_CartesianTransformationOperator
        	:rtype: None
        """
        return _StepGeom.StepGeom_CurveReplica_Init(self, *args)


    def ParentCurve(self, *args) -> "opencascade::handle< StepGeom_Curve >":
        """:rtype: opencascade::handle<StepGeom_Curve>"""
        return _StepGeom.StepGeom_CurveReplica_ParentCurve(self, *args)


    def SetParentCurve(self, *args) -> "void":
        """
        :param aParentCurve:
        	:type aParentCurve: StepGeom_Curve
        	:rtype: None
        """
        return _StepGeom.StepGeom_CurveReplica_SetParentCurve(self, *args)


    def SetTransformation(self, *args) -> "void":
        """
        :param aTransformation:
        	:type aTransformation: StepGeom_CartesianTransformationOperator
        	:rtype: None
        """
        return _StepGeom.StepGeom_CurveReplica_SetTransformation(self, *args)


    def __init__(self, *args):
        """
        * Returns a CurveReplica
        	:rtype: None
        """
        _StepGeom.StepGeom_CurveReplica_swiginit(self, _StepGeom.new_StepGeom_CurveReplica(*args))

    def Transformation(self, *args) -> "opencascade::handle< StepGeom_CartesianTransformationOperator >":
        """:rtype: opencascade::handle<StepGeom_CartesianTransformationOperator>"""
        return _StepGeom.StepGeom_CurveReplica_Transformation(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CurveReplica_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CurveReplica
StepGeom_CurveReplica.Init = new_instancemethod(_StepGeom.StepGeom_CurveReplica_Init, None, StepGeom_CurveReplica)
StepGeom_CurveReplica.ParentCurve = new_instancemethod(_StepGeom.StepGeom_CurveReplica_ParentCurve, None, StepGeom_CurveReplica)
StepGeom_CurveReplica.SetParentCurve = new_instancemethod(_StepGeom.StepGeom_CurveReplica_SetParentCurve, None, StepGeom_CurveReplica)
StepGeom_CurveReplica.SetTransformation = new_instancemethod(_StepGeom.StepGeom_CurveReplica_SetTransformation, None, StepGeom_CurveReplica)
StepGeom_CurveReplica.Transformation = new_instancemethod(_StepGeom.StepGeom_CurveReplica_Transformation, None, StepGeom_CurveReplica)
StepGeom_CurveReplica_swigregister = _StepGeom.StepGeom_CurveReplica_swigregister
StepGeom_CurveReplica_swigregister(StepGeom_CurveReplica)

class StepGeom_DegeneratePcurve(StepGeom_Point):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BasisSurface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """:rtype: opencascade::handle<StepGeom_Surface>"""
        return _StepGeom.StepGeom_DegeneratePcurve_BasisSurface(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:param aReferenceToCurve:
        	:type aReferenceToCurve: StepRepr_DefinitionalRepresentation
        	:rtype: None
        """
        return _StepGeom.StepGeom_DegeneratePcurve_Init(self, *args)


    def ReferenceToCurve(self, *args) -> "opencascade::handle< StepRepr_DefinitionalRepresentation >":
        """:rtype: opencascade::handle<StepRepr_DefinitionalRepresentation>"""
        return _StepGeom.StepGeom_DegeneratePcurve_ReferenceToCurve(self, *args)


    def SetBasisSurface(self, *args) -> "void":
        """
        :param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:rtype: None
        """
        return _StepGeom.StepGeom_DegeneratePcurve_SetBasisSurface(self, *args)


    def SetReferenceToCurve(self, *args) -> "void":
        """
        :param aReferenceToCurve:
        	:type aReferenceToCurve: StepRepr_DefinitionalRepresentation
        	:rtype: None
        """
        return _StepGeom.StepGeom_DegeneratePcurve_SetReferenceToCurve(self, *args)


    def __init__(self, *args):
        """
        * Returns a DegeneratePcurve
        	:rtype: None
        """
        _StepGeom.StepGeom_DegeneratePcurve_swiginit(self, _StepGeom.new_StepGeom_DegeneratePcurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_DegeneratePcurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_DegeneratePcurve
StepGeom_DegeneratePcurve.BasisSurface = new_instancemethod(_StepGeom.StepGeom_DegeneratePcurve_BasisSurface, None, StepGeom_DegeneratePcurve)
StepGeom_DegeneratePcurve.Init = new_instancemethod(_StepGeom.StepGeom_DegeneratePcurve_Init, None, StepGeom_DegeneratePcurve)
StepGeom_DegeneratePcurve.ReferenceToCurve = new_instancemethod(_StepGeom.StepGeom_DegeneratePcurve_ReferenceToCurve, None, StepGeom_DegeneratePcurve)
StepGeom_DegeneratePcurve.SetBasisSurface = new_instancemethod(_StepGeom.StepGeom_DegeneratePcurve_SetBasisSurface, None, StepGeom_DegeneratePcurve)
StepGeom_DegeneratePcurve.SetReferenceToCurve = new_instancemethod(_StepGeom.StepGeom_DegeneratePcurve_SetReferenceToCurve, None, StepGeom_DegeneratePcurve)
StepGeom_DegeneratePcurve_swigregister = _StepGeom.StepGeom_DegeneratePcurve_swigregister
StepGeom_DegeneratePcurve_swigregister(StepGeom_DegeneratePcurve)

class StepGeom_ElementarySurface(StepGeom_Surface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:rtype: None
        """
        return _StepGeom.StepGeom_ElementarySurface_Init(self, *args)


    def Position(self, *args) -> "opencascade::handle< StepGeom_Axis2Placement3d >":
        """:rtype: opencascade::handle<StepGeom_Axis2Placement3d>"""
        return _StepGeom.StepGeom_ElementarySurface_Position(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        :param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:rtype: None
        """
        return _StepGeom.StepGeom_ElementarySurface_SetPosition(self, *args)


    def __init__(self, *args):
        """
        * Returns a ElementarySurface
        	:rtype: None
        """
        _StepGeom.StepGeom_ElementarySurface_swiginit(self, _StepGeom.new_StepGeom_ElementarySurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_ElementarySurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_ElementarySurface
StepGeom_ElementarySurface.Init = new_instancemethod(_StepGeom.StepGeom_ElementarySurface_Init, None, StepGeom_ElementarySurface)
StepGeom_ElementarySurface.Position = new_instancemethod(_StepGeom.StepGeom_ElementarySurface_Position, None, StepGeom_ElementarySurface)
StepGeom_ElementarySurface.SetPosition = new_instancemethod(_StepGeom.StepGeom_ElementarySurface_SetPosition, None, StepGeom_ElementarySurface)
StepGeom_ElementarySurface_swigregister = _StepGeom.StepGeom_ElementarySurface_swigregister
StepGeom_ElementarySurface_swigregister(StepGeom_ElementarySurface)

class StepGeom_Line(StepGeom_Curve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Dir(self, *args) -> "opencascade::handle< StepGeom_Vector >":
        """:rtype: opencascade::handle<StepGeom_Vector>"""
        return _StepGeom.StepGeom_Line_Dir(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPnt:
        	:type aPnt: StepGeom_CartesianPoint
        	:param aDir:
        	:type aDir: StepGeom_Vector
        	:rtype: None
        """
        return _StepGeom.StepGeom_Line_Init(self, *args)


    def Pnt(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_CartesianPoint>"""
        return _StepGeom.StepGeom_Line_Pnt(self, *args)


    def SetDir(self, *args) -> "void":
        """
        :param aDir:
        	:type aDir: StepGeom_Vector
        	:rtype: None
        """
        return _StepGeom.StepGeom_Line_SetDir(self, *args)


    def SetPnt(self, *args) -> "void":
        """
        :param aPnt:
        	:type aPnt: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_Line_SetPnt(self, *args)


    def __init__(self, *args):
        """
        * Returns a Line
        	:rtype: None
        """
        _StepGeom.StepGeom_Line_swiginit(self, _StepGeom.new_StepGeom_Line(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Line_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Line
StepGeom_Line.Dir = new_instancemethod(_StepGeom.StepGeom_Line_Dir, None, StepGeom_Line)
StepGeom_Line.Init = new_instancemethod(_StepGeom.StepGeom_Line_Init, None, StepGeom_Line)
StepGeom_Line.Pnt = new_instancemethod(_StepGeom.StepGeom_Line_Pnt, None, StepGeom_Line)
StepGeom_Line.SetDir = new_instancemethod(_StepGeom.StepGeom_Line_SetDir, None, StepGeom_Line)
StepGeom_Line.SetPnt = new_instancemethod(_StepGeom.StepGeom_Line_SetPnt, None, StepGeom_Line)
StepGeom_Line_swigregister = _StepGeom.StepGeom_Line_swigregister
StepGeom_Line_swigregister(StepGeom_Line)

class StepGeom_OffsetCurve3d(StepGeom_Curve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BasisCurve(self, *args) -> "opencascade::handle< StepGeom_Curve >":
        """:rtype: opencascade::handle<StepGeom_Curve>"""
        return _StepGeom.StepGeom_OffsetCurve3d_BasisCurve(self, *args)


    def Distance(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_OffsetCurve3d_Distance(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBasisCurve:
        	:type aBasisCurve: StepGeom_Curve
        	:param aDistance:
        	:type aDistance: float
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aRefDirection:
        	:type aRefDirection: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_OffsetCurve3d_Init(self, *args)


    def RefDirection(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepGeom.StepGeom_OffsetCurve3d_RefDirection(self, *args)


    def SelfIntersect(self, *args) -> "StepData_Logical":
        """:rtype: StepData_Logical"""
        return _StepGeom.StepGeom_OffsetCurve3d_SelfIntersect(self, *args)


    def SetBasisCurve(self, *args) -> "void":
        """
        :param aBasisCurve:
        	:type aBasisCurve: StepGeom_Curve
        	:rtype: None
        """
        return _StepGeom.StepGeom_OffsetCurve3d_SetBasisCurve(self, *args)


    def SetDistance(self, *args) -> "void":
        """
        :param aDistance:
        	:type aDistance: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_OffsetCurve3d_SetDistance(self, *args)


    def SetRefDirection(self, *args) -> "void":
        """
        :param aRefDirection:
        	:type aRefDirection: StepGeom_Direction
        	:rtype: None
        """
        return _StepGeom.StepGeom_OffsetCurve3d_SetRefDirection(self, *args)


    def SetSelfIntersect(self, *args) -> "void":
        """
        :param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_OffsetCurve3d_SetSelfIntersect(self, *args)


    def __init__(self, *args):
        """
        * Returns a OffsetCurve3d
        	:rtype: None
        """
        _StepGeom.StepGeom_OffsetCurve3d_swiginit(self, _StepGeom.new_StepGeom_OffsetCurve3d(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_OffsetCurve3d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_OffsetCurve3d
StepGeom_OffsetCurve3d.BasisCurve = new_instancemethod(_StepGeom.StepGeom_OffsetCurve3d_BasisCurve, None, StepGeom_OffsetCurve3d)
StepGeom_OffsetCurve3d.Distance = new_instancemethod(_StepGeom.StepGeom_OffsetCurve3d_Distance, None, StepGeom_OffsetCurve3d)
StepGeom_OffsetCurve3d.Init = new_instancemethod(_StepGeom.StepGeom_OffsetCurve3d_Init, None, StepGeom_OffsetCurve3d)
StepGeom_OffsetCurve3d.RefDirection = new_instancemethod(_StepGeom.StepGeom_OffsetCurve3d_RefDirection, None, StepGeom_OffsetCurve3d)
StepGeom_OffsetCurve3d.SelfIntersect = new_instancemethod(_StepGeom.StepGeom_OffsetCurve3d_SelfIntersect, None, StepGeom_OffsetCurve3d)
StepGeom_OffsetCurve3d.SetBasisCurve = new_instancemethod(_StepGeom.StepGeom_OffsetCurve3d_SetBasisCurve, None, StepGeom_OffsetCurve3d)
StepGeom_OffsetCurve3d.SetDistance = new_instancemethod(_StepGeom.StepGeom_OffsetCurve3d_SetDistance, None, StepGeom_OffsetCurve3d)
StepGeom_OffsetCurve3d.SetRefDirection = new_instancemethod(_StepGeom.StepGeom_OffsetCurve3d_SetRefDirection, None, StepGeom_OffsetCurve3d)
StepGeom_OffsetCurve3d.SetSelfIntersect = new_instancemethod(_StepGeom.StepGeom_OffsetCurve3d_SetSelfIntersect, None, StepGeom_OffsetCurve3d)
StepGeom_OffsetCurve3d_swigregister = _StepGeom.StepGeom_OffsetCurve3d_swigregister
StepGeom_OffsetCurve3d_swigregister(StepGeom_OffsetCurve3d)

class StepGeom_OffsetSurface(StepGeom_Surface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BasisSurface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """:rtype: opencascade::handle<StepGeom_Surface>"""
        return _StepGeom.StepGeom_OffsetSurface_BasisSurface(self, *args)


    def Distance(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_OffsetSurface_Distance(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:param aDistance:
        	:type aDistance: float
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_OffsetSurface_Init(self, *args)


    def SelfIntersect(self, *args) -> "StepData_Logical":
        """:rtype: StepData_Logical"""
        return _StepGeom.StepGeom_OffsetSurface_SelfIntersect(self, *args)


    def SetBasisSurface(self, *args) -> "void":
        """
        :param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:rtype: None
        """
        return _StepGeom.StepGeom_OffsetSurface_SetBasisSurface(self, *args)


    def SetDistance(self, *args) -> "void":
        """
        :param aDistance:
        	:type aDistance: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_OffsetSurface_SetDistance(self, *args)


    def SetSelfIntersect(self, *args) -> "void":
        """
        :param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_OffsetSurface_SetSelfIntersect(self, *args)


    def __init__(self, *args):
        """
        * Returns a OffsetSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_OffsetSurface_swiginit(self, _StepGeom.new_StepGeom_OffsetSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_OffsetSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_OffsetSurface
StepGeom_OffsetSurface.BasisSurface = new_instancemethod(_StepGeom.StepGeom_OffsetSurface_BasisSurface, None, StepGeom_OffsetSurface)
StepGeom_OffsetSurface.Distance = new_instancemethod(_StepGeom.StepGeom_OffsetSurface_Distance, None, StepGeom_OffsetSurface)
StepGeom_OffsetSurface.Init = new_instancemethod(_StepGeom.StepGeom_OffsetSurface_Init, None, StepGeom_OffsetSurface)
StepGeom_OffsetSurface.SelfIntersect = new_instancemethod(_StepGeom.StepGeom_OffsetSurface_SelfIntersect, None, StepGeom_OffsetSurface)
StepGeom_OffsetSurface.SetBasisSurface = new_instancemethod(_StepGeom.StepGeom_OffsetSurface_SetBasisSurface, None, StepGeom_OffsetSurface)
StepGeom_OffsetSurface.SetDistance = new_instancemethod(_StepGeom.StepGeom_OffsetSurface_SetDistance, None, StepGeom_OffsetSurface)
StepGeom_OffsetSurface.SetSelfIntersect = new_instancemethod(_StepGeom.StepGeom_OffsetSurface_SetSelfIntersect, None, StepGeom_OffsetSurface)
StepGeom_OffsetSurface_swigregister = _StepGeom.StepGeom_OffsetSurface_swigregister
StepGeom_OffsetSurface_swigregister(StepGeom_OffsetSurface)

class StepGeom_OrientedSurface(StepGeom_Surface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_OrientedSurface_Init(self, *args)


    def Orientation(self, *args) -> "Standard_Boolean":
        """
        * Returns field Orientation
        	:rtype: bool
        """
        return _StepGeom.StepGeom_OrientedSurface_Orientation(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        * Set field Orientation
        	:param Orientation:
        	:type Orientation: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_OrientedSurface_SetOrientation(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepGeom.StepGeom_OrientedSurface_swiginit(self, _StepGeom.new_StepGeom_OrientedSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_OrientedSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_OrientedSurface
StepGeom_OrientedSurface.Init = new_instancemethod(_StepGeom.StepGeom_OrientedSurface_Init, None, StepGeom_OrientedSurface)
StepGeom_OrientedSurface.Orientation = new_instancemethod(_StepGeom.StepGeom_OrientedSurface_Orientation, None, StepGeom_OrientedSurface)
StepGeom_OrientedSurface.SetOrientation = new_instancemethod(_StepGeom.StepGeom_OrientedSurface_SetOrientation, None, StepGeom_OrientedSurface)
StepGeom_OrientedSurface_swigregister = _StepGeom.StepGeom_OrientedSurface_swigregister
StepGeom_OrientedSurface_swigregister(StepGeom_OrientedSurface)

class StepGeom_Pcurve(StepGeom_Curve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BasisSurface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """:rtype: opencascade::handle<StepGeom_Surface>"""
        return _StepGeom.StepGeom_Pcurve_BasisSurface(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:param aReferenceToCurve:
        	:type aReferenceToCurve: StepRepr_DefinitionalRepresentation
        	:rtype: None
        """
        return _StepGeom.StepGeom_Pcurve_Init(self, *args)


    def ReferenceToCurve(self, *args) -> "opencascade::handle< StepRepr_DefinitionalRepresentation >":
        """:rtype: opencascade::handle<StepRepr_DefinitionalRepresentation>"""
        return _StepGeom.StepGeom_Pcurve_ReferenceToCurve(self, *args)


    def SetBasisSurface(self, *args) -> "void":
        """
        :param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:rtype: None
        """
        return _StepGeom.StepGeom_Pcurve_SetBasisSurface(self, *args)


    def SetReferenceToCurve(self, *args) -> "void":
        """
        :param aReferenceToCurve:
        	:type aReferenceToCurve: StepRepr_DefinitionalRepresentation
        	:rtype: None
        """
        return _StepGeom.StepGeom_Pcurve_SetReferenceToCurve(self, *args)


    def __init__(self, *args):
        """
        * Returns a Pcurve
        	:rtype: None
        """
        _StepGeom.StepGeom_Pcurve_swiginit(self, _StepGeom.new_StepGeom_Pcurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Pcurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Pcurve
StepGeom_Pcurve.BasisSurface = new_instancemethod(_StepGeom.StepGeom_Pcurve_BasisSurface, None, StepGeom_Pcurve)
StepGeom_Pcurve.Init = new_instancemethod(_StepGeom.StepGeom_Pcurve_Init, None, StepGeom_Pcurve)
StepGeom_Pcurve.ReferenceToCurve = new_instancemethod(_StepGeom.StepGeom_Pcurve_ReferenceToCurve, None, StepGeom_Pcurve)
StepGeom_Pcurve.SetBasisSurface = new_instancemethod(_StepGeom.StepGeom_Pcurve_SetBasisSurface, None, StepGeom_Pcurve)
StepGeom_Pcurve.SetReferenceToCurve = new_instancemethod(_StepGeom.StepGeom_Pcurve_SetReferenceToCurve, None, StepGeom_Pcurve)
StepGeom_Pcurve_swigregister = _StepGeom.StepGeom_Pcurve_swigregister
StepGeom_Pcurve_swigregister(StepGeom_Pcurve)

class StepGeom_PointOnCurve(StepGeom_Point):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BasisCurve(self, *args) -> "opencascade::handle< StepGeom_Curve >":
        """:rtype: opencascade::handle<StepGeom_Curve>"""
        return _StepGeom.StepGeom_PointOnCurve_BasisCurve(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBasisCurve:
        	:type aBasisCurve: StepGeom_Curve
        	:param aPointParameter:
        	:type aPointParameter: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointOnCurve_Init(self, *args)


    def PointParameter(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_PointOnCurve_PointParameter(self, *args)


    def SetBasisCurve(self, *args) -> "void":
        """
        :param aBasisCurve:
        	:type aBasisCurve: StepGeom_Curve
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointOnCurve_SetBasisCurve(self, *args)


    def SetPointParameter(self, *args) -> "void":
        """
        :param aPointParameter:
        	:type aPointParameter: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointOnCurve_SetPointParameter(self, *args)


    def __init__(self, *args):
        """
        * Returns a PointOnCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_PointOnCurve_swiginit(self, _StepGeom.new_StepGeom_PointOnCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_PointOnCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_PointOnCurve
StepGeom_PointOnCurve.BasisCurve = new_instancemethod(_StepGeom.StepGeom_PointOnCurve_BasisCurve, None, StepGeom_PointOnCurve)
StepGeom_PointOnCurve.Init = new_instancemethod(_StepGeom.StepGeom_PointOnCurve_Init, None, StepGeom_PointOnCurve)
StepGeom_PointOnCurve.PointParameter = new_instancemethod(_StepGeom.StepGeom_PointOnCurve_PointParameter, None, StepGeom_PointOnCurve)
StepGeom_PointOnCurve.SetBasisCurve = new_instancemethod(_StepGeom.StepGeom_PointOnCurve_SetBasisCurve, None, StepGeom_PointOnCurve)
StepGeom_PointOnCurve.SetPointParameter = new_instancemethod(_StepGeom.StepGeom_PointOnCurve_SetPointParameter, None, StepGeom_PointOnCurve)
StepGeom_PointOnCurve_swigregister = _StepGeom.StepGeom_PointOnCurve_swigregister
StepGeom_PointOnCurve_swigregister(StepGeom_PointOnCurve)

class StepGeom_PointOnSurface(StepGeom_Point):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BasisSurface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """:rtype: opencascade::handle<StepGeom_Surface>"""
        return _StepGeom.StepGeom_PointOnSurface_BasisSurface(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:param aPointParameterU:
        	:type aPointParameterU: float
        	:param aPointParameterV:
        	:type aPointParameterV: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointOnSurface_Init(self, *args)


    def PointParameterU(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_PointOnSurface_PointParameterU(self, *args)


    def PointParameterV(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_PointOnSurface_PointParameterV(self, *args)


    def SetBasisSurface(self, *args) -> "void":
        """
        :param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointOnSurface_SetBasisSurface(self, *args)


    def SetPointParameterU(self, *args) -> "void":
        """
        :param aPointParameterU:
        	:type aPointParameterU: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointOnSurface_SetPointParameterU(self, *args)


    def SetPointParameterV(self, *args) -> "void":
        """
        :param aPointParameterV:
        	:type aPointParameterV: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointOnSurface_SetPointParameterV(self, *args)


    def __init__(self, *args):
        """
        * Returns a PointOnSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_PointOnSurface_swiginit(self, _StepGeom.new_StepGeom_PointOnSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_PointOnSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_PointOnSurface
StepGeom_PointOnSurface.BasisSurface = new_instancemethod(_StepGeom.StepGeom_PointOnSurface_BasisSurface, None, StepGeom_PointOnSurface)
StepGeom_PointOnSurface.Init = new_instancemethod(_StepGeom.StepGeom_PointOnSurface_Init, None, StepGeom_PointOnSurface)
StepGeom_PointOnSurface.PointParameterU = new_instancemethod(_StepGeom.StepGeom_PointOnSurface_PointParameterU, None, StepGeom_PointOnSurface)
StepGeom_PointOnSurface.PointParameterV = new_instancemethod(_StepGeom.StepGeom_PointOnSurface_PointParameterV, None, StepGeom_PointOnSurface)
StepGeom_PointOnSurface.SetBasisSurface = new_instancemethod(_StepGeom.StepGeom_PointOnSurface_SetBasisSurface, None, StepGeom_PointOnSurface)
StepGeom_PointOnSurface.SetPointParameterU = new_instancemethod(_StepGeom.StepGeom_PointOnSurface_SetPointParameterU, None, StepGeom_PointOnSurface)
StepGeom_PointOnSurface.SetPointParameterV = new_instancemethod(_StepGeom.StepGeom_PointOnSurface_SetPointParameterV, None, StepGeom_PointOnSurface)
StepGeom_PointOnSurface_swigregister = _StepGeom.StepGeom_PointOnSurface_swigregister
StepGeom_PointOnSurface_swigregister(StepGeom_PointOnSurface)

class StepGeom_PointReplica(StepGeom_Point):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aParentPt:
        	:type aParentPt: StepGeom_Point
        	:param aTransformation:
        	:type aTransformation: StepGeom_CartesianTransformationOperator
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointReplica_Init(self, *args)


    def ParentPt(self, *args) -> "opencascade::handle< StepGeom_Point >":
        """:rtype: opencascade::handle<StepGeom_Point>"""
        return _StepGeom.StepGeom_PointReplica_ParentPt(self, *args)


    def SetParentPt(self, *args) -> "void":
        """
        :param aParentPt:
        	:type aParentPt: StepGeom_Point
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointReplica_SetParentPt(self, *args)


    def SetTransformation(self, *args) -> "void":
        """
        :param aTransformation:
        	:type aTransformation: StepGeom_CartesianTransformationOperator
        	:rtype: None
        """
        return _StepGeom.StepGeom_PointReplica_SetTransformation(self, *args)


    def __init__(self, *args):
        """
        * Returns a PointReplica
        	:rtype: None
        """
        _StepGeom.StepGeom_PointReplica_swiginit(self, _StepGeom.new_StepGeom_PointReplica(*args))

    def Transformation(self, *args) -> "opencascade::handle< StepGeom_CartesianTransformationOperator >":
        """:rtype: opencascade::handle<StepGeom_CartesianTransformationOperator>"""
        return _StepGeom.StepGeom_PointReplica_Transformation(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_PointReplica_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_PointReplica
StepGeom_PointReplica.Init = new_instancemethod(_StepGeom.StepGeom_PointReplica_Init, None, StepGeom_PointReplica)
StepGeom_PointReplica.ParentPt = new_instancemethod(_StepGeom.StepGeom_PointReplica_ParentPt, None, StepGeom_PointReplica)
StepGeom_PointReplica.SetParentPt = new_instancemethod(_StepGeom.StepGeom_PointReplica_SetParentPt, None, StepGeom_PointReplica)
StepGeom_PointReplica.SetTransformation = new_instancemethod(_StepGeom.StepGeom_PointReplica_SetTransformation, None, StepGeom_PointReplica)
StepGeom_PointReplica.Transformation = new_instancemethod(_StepGeom.StepGeom_PointReplica_Transformation, None, StepGeom_PointReplica)
StepGeom_PointReplica_swigregister = _StepGeom.StepGeom_PointReplica_swigregister
StepGeom_PointReplica_swigregister(StepGeom_PointReplica)

class StepGeom_SurfaceCurve(StepGeom_Curve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssociatedGeometry(self, *args) -> "opencascade::handle< StepGeom_HArray1OfPcurveOrSurface >":
        """:rtype: opencascade::handle<StepGeom_HArray1OfPcurveOrSurface>"""
        return _StepGeom.StepGeom_SurfaceCurve_AssociatedGeometry(self, *args)


    def AssociatedGeometryValue(self, *args) -> "StepGeom_PcurveOrSurface":
        """
        :param num:
        	:type num: int
        	:rtype: StepGeom_PcurveOrSurface
        """
        return _StepGeom.StepGeom_SurfaceCurve_AssociatedGeometryValue(self, *args)


    def Curve3d(self, *args) -> "opencascade::handle< StepGeom_Curve >":
        """:rtype: opencascade::handle<StepGeom_Curve>"""
        return _StepGeom.StepGeom_SurfaceCurve_Curve3d(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aCurve3d:
        	:type aCurve3d: StepGeom_Curve
        	:param aAssociatedGeometry:
        	:type aAssociatedGeometry: StepGeom_HArray1OfPcurveOrSurface
        	:param aMasterRepresentation:
        	:type aMasterRepresentation: StepGeom_PreferredSurfaceCurveRepresentation
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceCurve_Init(self, *args)


    def MasterRepresentation(self, *args) -> "StepGeom_PreferredSurfaceCurveRepresentation":
        """:rtype: StepGeom_PreferredSurfaceCurveRepresentation"""
        return _StepGeom.StepGeom_SurfaceCurve_MasterRepresentation(self, *args)


    def NbAssociatedGeometry(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_SurfaceCurve_NbAssociatedGeometry(self, *args)


    def SetAssociatedGeometry(self, *args) -> "void":
        """
        :param aAssociatedGeometry:
        	:type aAssociatedGeometry: StepGeom_HArray1OfPcurveOrSurface
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceCurve_SetAssociatedGeometry(self, *args)


    def SetCurve3d(self, *args) -> "void":
        """
        :param aCurve3d:
        	:type aCurve3d: StepGeom_Curve
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceCurve_SetCurve3d(self, *args)


    def SetMasterRepresentation(self, *args) -> "void":
        """
        :param aMasterRepresentation:
        	:type aMasterRepresentation: StepGeom_PreferredSurfaceCurveRepresentation
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceCurve_SetMasterRepresentation(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_SurfaceCurve_swiginit(self, _StepGeom.new_StepGeom_SurfaceCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_SurfaceCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SurfaceCurve
StepGeom_SurfaceCurve.AssociatedGeometry = new_instancemethod(_StepGeom.StepGeom_SurfaceCurve_AssociatedGeometry, None, StepGeom_SurfaceCurve)
StepGeom_SurfaceCurve.AssociatedGeometryValue = new_instancemethod(_StepGeom.StepGeom_SurfaceCurve_AssociatedGeometryValue, None, StepGeom_SurfaceCurve)
StepGeom_SurfaceCurve.Curve3d = new_instancemethod(_StepGeom.StepGeom_SurfaceCurve_Curve3d, None, StepGeom_SurfaceCurve)
StepGeom_SurfaceCurve.Init = new_instancemethod(_StepGeom.StepGeom_SurfaceCurve_Init, None, StepGeom_SurfaceCurve)
StepGeom_SurfaceCurve.MasterRepresentation = new_instancemethod(_StepGeom.StepGeom_SurfaceCurve_MasterRepresentation, None, StepGeom_SurfaceCurve)
StepGeom_SurfaceCurve.NbAssociatedGeometry = new_instancemethod(_StepGeom.StepGeom_SurfaceCurve_NbAssociatedGeometry, None, StepGeom_SurfaceCurve)
StepGeom_SurfaceCurve.SetAssociatedGeometry = new_instancemethod(_StepGeom.StepGeom_SurfaceCurve_SetAssociatedGeometry, None, StepGeom_SurfaceCurve)
StepGeom_SurfaceCurve.SetCurve3d = new_instancemethod(_StepGeom.StepGeom_SurfaceCurve_SetCurve3d, None, StepGeom_SurfaceCurve)
StepGeom_SurfaceCurve.SetMasterRepresentation = new_instancemethod(_StepGeom.StepGeom_SurfaceCurve_SetMasterRepresentation, None, StepGeom_SurfaceCurve)
StepGeom_SurfaceCurve_swigregister = _StepGeom.StepGeom_SurfaceCurve_swigregister
StepGeom_SurfaceCurve_swigregister(StepGeom_SurfaceCurve)

class StepGeom_SurfaceReplica(StepGeom_Surface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aParentSurface:
        	:type aParentSurface: StepGeom_Surface
        	:param aTransformation:
        	:type aTransformation: StepGeom_CartesianTransformationOperator3d
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceReplica_Init(self, *args)


    def ParentSurface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """:rtype: opencascade::handle<StepGeom_Surface>"""
        return _StepGeom.StepGeom_SurfaceReplica_ParentSurface(self, *args)


    def SetParentSurface(self, *args) -> "void":
        """
        :param aParentSurface:
        	:type aParentSurface: StepGeom_Surface
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceReplica_SetParentSurface(self, *args)


    def SetTransformation(self, *args) -> "void":
        """
        :param aTransformation:
        	:type aTransformation: StepGeom_CartesianTransformationOperator3d
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceReplica_SetTransformation(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceReplica
        	:rtype: None
        """
        _StepGeom.StepGeom_SurfaceReplica_swiginit(self, _StepGeom.new_StepGeom_SurfaceReplica(*args))

    def Transformation(self, *args) -> "opencascade::handle< StepGeom_CartesianTransformationOperator3d >":
        """:rtype: opencascade::handle<StepGeom_CartesianTransformationOperator3d>"""
        return _StepGeom.StepGeom_SurfaceReplica_Transformation(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_SurfaceReplica_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SurfaceReplica
StepGeom_SurfaceReplica.Init = new_instancemethod(_StepGeom.StepGeom_SurfaceReplica_Init, None, StepGeom_SurfaceReplica)
StepGeom_SurfaceReplica.ParentSurface = new_instancemethod(_StepGeom.StepGeom_SurfaceReplica_ParentSurface, None, StepGeom_SurfaceReplica)
StepGeom_SurfaceReplica.SetParentSurface = new_instancemethod(_StepGeom.StepGeom_SurfaceReplica_SetParentSurface, None, StepGeom_SurfaceReplica)
StepGeom_SurfaceReplica.SetTransformation = new_instancemethod(_StepGeom.StepGeom_SurfaceReplica_SetTransformation, None, StepGeom_SurfaceReplica)
StepGeom_SurfaceReplica.Transformation = new_instancemethod(_StepGeom.StepGeom_SurfaceReplica_Transformation, None, StepGeom_SurfaceReplica)
StepGeom_SurfaceReplica_swigregister = _StepGeom.StepGeom_SurfaceReplica_swigregister
StepGeom_SurfaceReplica_swigregister(StepGeom_SurfaceReplica)

class StepGeom_SweptSurface(StepGeom_Surface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptCurve:
        	:type aSweptCurve: StepGeom_Curve
        	:rtype: None
        """
        return _StepGeom.StepGeom_SweptSurface_Init(self, *args)


    def SetSweptCurve(self, *args) -> "void":
        """
        :param aSweptCurve:
        	:type aSweptCurve: StepGeom_Curve
        	:rtype: None
        """
        return _StepGeom.StepGeom_SweptSurface_SetSweptCurve(self, *args)


    def __init__(self, *args):
        """
        * Returns a SweptSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_SweptSurface_swiginit(self, _StepGeom.new_StepGeom_SweptSurface(*args))

    def SweptCurve(self, *args) -> "opencascade::handle< StepGeom_Curve >":
        """:rtype: opencascade::handle<StepGeom_Curve>"""
        return _StepGeom.StepGeom_SweptSurface_SweptCurve(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_SweptSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SweptSurface
StepGeom_SweptSurface.Init = new_instancemethod(_StepGeom.StepGeom_SweptSurface_Init, None, StepGeom_SweptSurface)
StepGeom_SweptSurface.SetSweptCurve = new_instancemethod(_StepGeom.StepGeom_SweptSurface_SetSweptCurve, None, StepGeom_SweptSurface)
StepGeom_SweptSurface.SweptCurve = new_instancemethod(_StepGeom.StepGeom_SweptSurface_SweptCurve, None, StepGeom_SweptSurface)
StepGeom_SweptSurface_swigregister = _StepGeom.StepGeom_SweptSurface_swigregister
StepGeom_SweptSurface_swigregister(StepGeom_SweptSurface)

class StepGeom_BSplineCurve(StepGeom_BoundedCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ClosedCurve(self, *args) -> "StepData_Logical":
        """:rtype: StepData_Logical"""
        return _StepGeom.StepGeom_BSplineCurve_ClosedCurve(self, *args)


    def ControlPointsList(self, *args) -> "opencascade::handle< StepGeom_HArray1OfCartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_HArray1OfCartesianPoint>"""
        return _StepGeom.StepGeom_BSplineCurve_ControlPointsList(self, *args)


    def ControlPointsListValue(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepGeom_CartesianPoint>
        """
        return _StepGeom.StepGeom_BSplineCurve_ControlPointsListValue(self, *args)


    def CurveForm(self, *args) -> "StepGeom_BSplineCurveForm":
        """:rtype: StepGeom_BSplineCurveForm"""
        return _StepGeom.StepGeom_BSplineCurve_CurveForm(self, *args)


    def Degree(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineCurve_Degree(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurve_Init(self, *args)


    def NbControlPointsList(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineCurve_NbControlPointsList(self, *args)


    def SelfIntersect(self, *args) -> "StepData_Logical":
        """:rtype: StepData_Logical"""
        return _StepGeom.StepGeom_BSplineCurve_SelfIntersect(self, *args)


    def SetClosedCurve(self, *args) -> "void":
        """
        :param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurve_SetClosedCurve(self, *args)


    def SetControlPointsList(self, *args) -> "void":
        """
        :param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurve_SetControlPointsList(self, *args)


    def SetCurveForm(self, *args) -> "void":
        """
        :param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurve_SetCurveForm(self, *args)


    def SetDegree(self, *args) -> "void":
        """
        :param aDegree:
        	:type aDegree: int
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurve_SetDegree(self, *args)


    def SetSelfIntersect(self, *args) -> "void":
        """
        :param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurve_SetSelfIntersect(self, *args)


    def __init__(self, *args):
        """
        * Returns a BSplineCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_BSplineCurve_swiginit(self, _StepGeom.new_StepGeom_BSplineCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BSplineCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BSplineCurve
StepGeom_BSplineCurve.ClosedCurve = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_ClosedCurve, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.ControlPointsList = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_ControlPointsList, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.ControlPointsListValue = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_ControlPointsListValue, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.CurveForm = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_CurveForm, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.Degree = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_Degree, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.Init = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_Init, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.NbControlPointsList = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_NbControlPointsList, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.SelfIntersect = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_SelfIntersect, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.SetClosedCurve = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_SetClosedCurve, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.SetControlPointsList = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_SetControlPointsList, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.SetCurveForm = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_SetCurveForm, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.SetDegree = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_SetDegree, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve.SetSelfIntersect = new_instancemethod(_StepGeom.StepGeom_BSplineCurve_SetSelfIntersect, None, StepGeom_BSplineCurve)
StepGeom_BSplineCurve_swigregister = _StepGeom.StepGeom_BSplineCurve_swigregister
StepGeom_BSplineCurve_swigregister(StepGeom_BSplineCurve)

class StepGeom_BSplineSurface(StepGeom_BoundedSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ControlPointsList(self, *args) -> "opencascade::handle< StepGeom_HArray2OfCartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_HArray2OfCartesianPoint>"""
        return _StepGeom.StepGeom_BSplineSurface_ControlPointsList(self, *args)


    def ControlPointsListValue(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """
        :param num1:
        	:type num1: int
        	:param num2:
        	:type num2: int
        	:rtype: opencascade::handle<StepGeom_CartesianPoint>
        """
        return _StepGeom.StepGeom_BSplineSurface_ControlPointsListValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurface_Init(self, *args)


    def NbControlPointsListI(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurface_NbControlPointsListI(self, *args)


    def NbControlPointsListJ(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurface_NbControlPointsListJ(self, *args)


    def SelfIntersect(self, *args) -> "StepData_Logical":
        """:rtype: StepData_Logical"""
        return _StepGeom.StepGeom_BSplineSurface_SelfIntersect(self, *args)


    def SetControlPointsList(self, *args) -> "void":
        """
        :param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurface_SetControlPointsList(self, *args)


    def SetSelfIntersect(self, *args) -> "void":
        """
        :param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurface_SetSelfIntersect(self, *args)


    def SetSurfaceForm(self, *args) -> "void":
        """
        :param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurface_SetSurfaceForm(self, *args)


    def SetUClosed(self, *args) -> "void":
        """
        :param aUClosed:
        	:type aUClosed: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurface_SetUClosed(self, *args)


    def SetUDegree(self, *args) -> "void":
        """
        :param aUDegree:
        	:type aUDegree: int
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurface_SetUDegree(self, *args)


    def SetVClosed(self, *args) -> "void":
        """
        :param aVClosed:
        	:type aVClosed: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurface_SetVClosed(self, *args)


    def SetVDegree(self, *args) -> "void":
        """
        :param aVDegree:
        	:type aVDegree: int
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurface_SetVDegree(self, *args)


    def __init__(self, *args):
        """
        * Returns a BSplineSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_BSplineSurface_swiginit(self, _StepGeom.new_StepGeom_BSplineSurface(*args))

    def SurfaceForm(self, *args) -> "StepGeom_BSplineSurfaceForm":
        """:rtype: StepGeom_BSplineSurfaceForm"""
        return _StepGeom.StepGeom_BSplineSurface_SurfaceForm(self, *args)


    def UClosed(self, *args) -> "StepData_Logical":
        """:rtype: StepData_Logical"""
        return _StepGeom.StepGeom_BSplineSurface_UClosed(self, *args)


    def UDegree(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurface_UDegree(self, *args)


    def VClosed(self, *args) -> "StepData_Logical":
        """:rtype: StepData_Logical"""
        return _StepGeom.StepGeom_BSplineSurface_VClosed(self, *args)


    def VDegree(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurface_VDegree(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BSplineSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BSplineSurface
StepGeom_BSplineSurface.ControlPointsList = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_ControlPointsList, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.ControlPointsListValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_ControlPointsListValue, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.Init = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_Init, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.NbControlPointsListI = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_NbControlPointsListI, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.NbControlPointsListJ = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_NbControlPointsListJ, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.SelfIntersect = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_SelfIntersect, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.SetControlPointsList = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_SetControlPointsList, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.SetSelfIntersect = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_SetSelfIntersect, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.SetSurfaceForm = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_SetSurfaceForm, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.SetUClosed = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_SetUClosed, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.SetUDegree = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_SetUDegree, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.SetVClosed = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_SetVClosed, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.SetVDegree = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_SetVDegree, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.SurfaceForm = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_SurfaceForm, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.UClosed = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_UClosed, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.UDegree = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_UDegree, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.VClosed = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_VClosed, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface.VDegree = new_instancemethod(_StepGeom.StepGeom_BSplineSurface_VDegree, None, StepGeom_BSplineSurface)
StepGeom_BSplineSurface_swigregister = _StepGeom.StepGeom_BSplineSurface_swigregister
StepGeom_BSplineSurface_swigregister(StepGeom_BSplineSurface)

class StepGeom_Circle(StepGeom_Conic):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement
        	:param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Circle_Init(self, *args)


    def Radius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_Circle_Radius(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        :param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Circle_SetRadius(self, *args)


    def __init__(self, *args):
        """
        * Returns a Circle
        	:rtype: None
        """
        _StepGeom.StepGeom_Circle_swiginit(self, _StepGeom.new_StepGeom_Circle(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Circle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Circle
StepGeom_Circle.Init = new_instancemethod(_StepGeom.StepGeom_Circle_Init, None, StepGeom_Circle)
StepGeom_Circle.Radius = new_instancemethod(_StepGeom.StepGeom_Circle_Radius, None, StepGeom_Circle)
StepGeom_Circle.SetRadius = new_instancemethod(_StepGeom.StepGeom_Circle_SetRadius, None, StepGeom_Circle)
StepGeom_Circle_swigregister = _StepGeom.StepGeom_Circle_swigregister
StepGeom_Circle_swigregister(StepGeom_Circle)

class StepGeom_CompositeCurve(StepGeom_BoundedCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSegments:
        	:type aSegments: StepGeom_HArray1OfCompositeCurveSegment
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_CompositeCurve_Init(self, *args)


    def NbSegments(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_CompositeCurve_NbSegments(self, *args)


    def Segments(self, *args) -> "opencascade::handle< StepGeom_HArray1OfCompositeCurveSegment >":
        """:rtype: opencascade::handle<StepGeom_HArray1OfCompositeCurveSegment>"""
        return _StepGeom.StepGeom_CompositeCurve_Segments(self, *args)


    def SegmentsValue(self, *args) -> "opencascade::handle< StepGeom_CompositeCurveSegment >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepGeom_CompositeCurveSegment>
        """
        return _StepGeom.StepGeom_CompositeCurve_SegmentsValue(self, *args)


    def SelfIntersect(self, *args) -> "StepData_Logical":
        """:rtype: StepData_Logical"""
        return _StepGeom.StepGeom_CompositeCurve_SelfIntersect(self, *args)


    def SetSegments(self, *args) -> "void":
        """
        :param aSegments:
        	:type aSegments: StepGeom_HArray1OfCompositeCurveSegment
        	:rtype: None
        """
        return _StepGeom.StepGeom_CompositeCurve_SetSegments(self, *args)


    def SetSelfIntersect(self, *args) -> "void":
        """
        :param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:rtype: None
        """
        return _StepGeom.StepGeom_CompositeCurve_SetSelfIntersect(self, *args)


    def __init__(self, *args):
        """
        * Returns a CompositeCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_CompositeCurve_swiginit(self, _StepGeom.new_StepGeom_CompositeCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CompositeCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CompositeCurve
StepGeom_CompositeCurve.Init = new_instancemethod(_StepGeom.StepGeom_CompositeCurve_Init, None, StepGeom_CompositeCurve)
StepGeom_CompositeCurve.NbSegments = new_instancemethod(_StepGeom.StepGeom_CompositeCurve_NbSegments, None, StepGeom_CompositeCurve)
StepGeom_CompositeCurve.Segments = new_instancemethod(_StepGeom.StepGeom_CompositeCurve_Segments, None, StepGeom_CompositeCurve)
StepGeom_CompositeCurve.SegmentsValue = new_instancemethod(_StepGeom.StepGeom_CompositeCurve_SegmentsValue, None, StepGeom_CompositeCurve)
StepGeom_CompositeCurve.SelfIntersect = new_instancemethod(_StepGeom.StepGeom_CompositeCurve_SelfIntersect, None, StepGeom_CompositeCurve)
StepGeom_CompositeCurve.SetSegments = new_instancemethod(_StepGeom.StepGeom_CompositeCurve_SetSegments, None, StepGeom_CompositeCurve)
StepGeom_CompositeCurve.SetSelfIntersect = new_instancemethod(_StepGeom.StepGeom_CompositeCurve_SetSelfIntersect, None, StepGeom_CompositeCurve)
StepGeom_CompositeCurve_swigregister = _StepGeom.StepGeom_CompositeCurve_swigregister
StepGeom_CompositeCurve_swigregister(StepGeom_CompositeCurve)

class StepGeom_ConicalSurface(StepGeom_ElementarySurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:param aRadius:
        	:type aRadius: float
        	:param aSemiAngle:
        	:type aSemiAngle: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_ConicalSurface_Init(self, *args)


    def Radius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_ConicalSurface_Radius(self, *args)


    def SemiAngle(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_ConicalSurface_SemiAngle(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        :param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_ConicalSurface_SetRadius(self, *args)


    def SetSemiAngle(self, *args) -> "void":
        """
        :param aSemiAngle:
        	:type aSemiAngle: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_ConicalSurface_SetSemiAngle(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConicalSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_ConicalSurface_swiginit(self, _StepGeom.new_StepGeom_ConicalSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_ConicalSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_ConicalSurface
StepGeom_ConicalSurface.Init = new_instancemethod(_StepGeom.StepGeom_ConicalSurface_Init, None, StepGeom_ConicalSurface)
StepGeom_ConicalSurface.Radius = new_instancemethod(_StepGeom.StepGeom_ConicalSurface_Radius, None, StepGeom_ConicalSurface)
StepGeom_ConicalSurface.SemiAngle = new_instancemethod(_StepGeom.StepGeom_ConicalSurface_SemiAngle, None, StepGeom_ConicalSurface)
StepGeom_ConicalSurface.SetRadius = new_instancemethod(_StepGeom.StepGeom_ConicalSurface_SetRadius, None, StepGeom_ConicalSurface)
StepGeom_ConicalSurface.SetSemiAngle = new_instancemethod(_StepGeom.StepGeom_ConicalSurface_SetSemiAngle, None, StepGeom_ConicalSurface)
StepGeom_ConicalSurface_swigregister = _StepGeom.StepGeom_ConicalSurface_swigregister
StepGeom_ConicalSurface_swigregister(StepGeom_ConicalSurface)

class StepGeom_CurveBoundedSurface(StepGeom_BoundedSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BasisSurface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """
        * Returns field BasisSurface
        	:rtype: opencascade::handle<StepGeom_Surface>
        """
        return _StepGeom.StepGeom_CurveBoundedSurface_BasisSurface(self, *args)


    def Boundaries(self, *args) -> "opencascade::handle< StepGeom_HArray1OfSurfaceBoundary >":
        """
        * Returns field Boundaries
        	:rtype: opencascade::handle<StepGeom_HArray1OfSurfaceBoundary>
        """
        return _StepGeom.StepGeom_CurveBoundedSurface_Boundaries(self, *args)


    def ImplicitOuter(self, *args) -> "Standard_Boolean":
        """
        * Returns field ImplicitOuter
        	:rtype: bool
        """
        return _StepGeom.StepGeom_CurveBoundedSurface_ImplicitOuter(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:param aBoundaries:
        	:type aBoundaries: StepGeom_HArray1OfSurfaceBoundary
        	:param aImplicitOuter:
        	:type aImplicitOuter: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_CurveBoundedSurface_Init(self, *args)


    def SetBasisSurface(self, *args) -> "void":
        """
        * Set field BasisSurface
        	:param BasisSurface:
        	:type BasisSurface: StepGeom_Surface
        	:rtype: None
        """
        return _StepGeom.StepGeom_CurveBoundedSurface_SetBasisSurface(self, *args)


    def SetBoundaries(self, *args) -> "void":
        """
        * Set field Boundaries
        	:param Boundaries:
        	:type Boundaries: StepGeom_HArray1OfSurfaceBoundary
        	:rtype: None
        """
        return _StepGeom.StepGeom_CurveBoundedSurface_SetBoundaries(self, *args)


    def SetImplicitOuter(self, *args) -> "void":
        """
        * Set field ImplicitOuter
        	:param ImplicitOuter:
        	:type ImplicitOuter: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_CurveBoundedSurface_SetImplicitOuter(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepGeom.StepGeom_CurveBoundedSurface_swiginit(self, _StepGeom.new_StepGeom_CurveBoundedSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CurveBoundedSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CurveBoundedSurface
StepGeom_CurveBoundedSurface.BasisSurface = new_instancemethod(_StepGeom.StepGeom_CurveBoundedSurface_BasisSurface, None, StepGeom_CurveBoundedSurface)
StepGeom_CurveBoundedSurface.Boundaries = new_instancemethod(_StepGeom.StepGeom_CurveBoundedSurface_Boundaries, None, StepGeom_CurveBoundedSurface)
StepGeom_CurveBoundedSurface.ImplicitOuter = new_instancemethod(_StepGeom.StepGeom_CurveBoundedSurface_ImplicitOuter, None, StepGeom_CurveBoundedSurface)
StepGeom_CurveBoundedSurface.Init = new_instancemethod(_StepGeom.StepGeom_CurveBoundedSurface_Init, None, StepGeom_CurveBoundedSurface)
StepGeom_CurveBoundedSurface.SetBasisSurface = new_instancemethod(_StepGeom.StepGeom_CurveBoundedSurface_SetBasisSurface, None, StepGeom_CurveBoundedSurface)
StepGeom_CurveBoundedSurface.SetBoundaries = new_instancemethod(_StepGeom.StepGeom_CurveBoundedSurface_SetBoundaries, None, StepGeom_CurveBoundedSurface)
StepGeom_CurveBoundedSurface.SetImplicitOuter = new_instancemethod(_StepGeom.StepGeom_CurveBoundedSurface_SetImplicitOuter, None, StepGeom_CurveBoundedSurface)
StepGeom_CurveBoundedSurface_swigregister = _StepGeom.StepGeom_CurveBoundedSurface_swigregister
StepGeom_CurveBoundedSurface_swigregister(StepGeom_CurveBoundedSurface)

class StepGeom_CylindricalSurface(StepGeom_ElementarySurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_CylindricalSurface_Init(self, *args)


    def Radius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_CylindricalSurface_Radius(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        :param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_CylindricalSurface_SetRadius(self, *args)


    def __init__(self, *args):
        """
        * Returns a CylindricalSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_CylindricalSurface_swiginit(self, _StepGeom.new_StepGeom_CylindricalSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CylindricalSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CylindricalSurface
StepGeom_CylindricalSurface.Init = new_instancemethod(_StepGeom.StepGeom_CylindricalSurface_Init, None, StepGeom_CylindricalSurface)
StepGeom_CylindricalSurface.Radius = new_instancemethod(_StepGeom.StepGeom_CylindricalSurface_Radius, None, StepGeom_CylindricalSurface)
StepGeom_CylindricalSurface.SetRadius = new_instancemethod(_StepGeom.StepGeom_CylindricalSurface_SetRadius, None, StepGeom_CylindricalSurface)
StepGeom_CylindricalSurface_swigregister = _StepGeom.StepGeom_CylindricalSurface_swigregister
StepGeom_CylindricalSurface_swigregister(StepGeom_CylindricalSurface)

class StepGeom_Ellipse(StepGeom_Conic):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement
        	:param aSemiAxis1:
        	:type aSemiAxis1: float
        	:param aSemiAxis2:
        	:type aSemiAxis2: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Ellipse_Init(self, *args)


    def SemiAxis1(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_Ellipse_SemiAxis1(self, *args)


    def SemiAxis2(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_Ellipse_SemiAxis2(self, *args)


    def SetSemiAxis1(self, *args) -> "void":
        """
        :param aSemiAxis1:
        	:type aSemiAxis1: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Ellipse_SetSemiAxis1(self, *args)


    def SetSemiAxis2(self, *args) -> "void":
        """
        :param aSemiAxis2:
        	:type aSemiAxis2: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Ellipse_SetSemiAxis2(self, *args)


    def __init__(self, *args):
        """
        * Returns a Ellipse
        	:rtype: None
        """
        _StepGeom.StepGeom_Ellipse_swiginit(self, _StepGeom.new_StepGeom_Ellipse(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Ellipse_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Ellipse
StepGeom_Ellipse.Init = new_instancemethod(_StepGeom.StepGeom_Ellipse_Init, None, StepGeom_Ellipse)
StepGeom_Ellipse.SemiAxis1 = new_instancemethod(_StepGeom.StepGeom_Ellipse_SemiAxis1, None, StepGeom_Ellipse)
StepGeom_Ellipse.SemiAxis2 = new_instancemethod(_StepGeom.StepGeom_Ellipse_SemiAxis2, None, StepGeom_Ellipse)
StepGeom_Ellipse.SetSemiAxis1 = new_instancemethod(_StepGeom.StepGeom_Ellipse_SetSemiAxis1, None, StepGeom_Ellipse)
StepGeom_Ellipse.SetSemiAxis2 = new_instancemethod(_StepGeom.StepGeom_Ellipse_SetSemiAxis2, None, StepGeom_Ellipse)
StepGeom_Ellipse_swigregister = _StepGeom.StepGeom_Ellipse_swigregister
StepGeom_Ellipse_swigregister(StepGeom_Ellipse)

class StepGeom_EvaluatedDegeneratePcurve(StepGeom_DegeneratePcurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EquivalentPoint(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_CartesianPoint>"""
        return _StepGeom.StepGeom_EvaluatedDegeneratePcurve_EquivalentPoint(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:param aReferenceToCurve:
        	:type aReferenceToCurve: StepRepr_DefinitionalRepresentation
        	:param aEquivalentPoint:
        	:type aEquivalentPoint: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_EvaluatedDegeneratePcurve_Init(self, *args)


    def SetEquivalentPoint(self, *args) -> "void":
        """
        :param aEquivalentPoint:
        	:type aEquivalentPoint: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_EvaluatedDegeneratePcurve_SetEquivalentPoint(self, *args)


    def __init__(self, *args):
        """
        * Returns a EvaluatedDegeneratePcurve
        	:rtype: None
        """
        _StepGeom.StepGeom_EvaluatedDegeneratePcurve_swiginit(self, _StepGeom.new_StepGeom_EvaluatedDegeneratePcurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_EvaluatedDegeneratePcurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_EvaluatedDegeneratePcurve
StepGeom_EvaluatedDegeneratePcurve.EquivalentPoint = new_instancemethod(_StepGeom.StepGeom_EvaluatedDegeneratePcurve_EquivalentPoint, None, StepGeom_EvaluatedDegeneratePcurve)
StepGeom_EvaluatedDegeneratePcurve.Init = new_instancemethod(_StepGeom.StepGeom_EvaluatedDegeneratePcurve_Init, None, StepGeom_EvaluatedDegeneratePcurve)
StepGeom_EvaluatedDegeneratePcurve.SetEquivalentPoint = new_instancemethod(_StepGeom.StepGeom_EvaluatedDegeneratePcurve_SetEquivalentPoint, None, StepGeom_EvaluatedDegeneratePcurve)
StepGeom_EvaluatedDegeneratePcurve_swigregister = _StepGeom.StepGeom_EvaluatedDegeneratePcurve_swigregister
StepGeom_EvaluatedDegeneratePcurve_swigregister(StepGeom_EvaluatedDegeneratePcurve)

class StepGeom_Hyperbola(StepGeom_Conic):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement
        	:param aSemiAxis:
        	:type aSemiAxis: float
        	:param aSemiImagAxis:
        	:type aSemiImagAxis: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Hyperbola_Init(self, *args)


    def SemiAxis(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_Hyperbola_SemiAxis(self, *args)


    def SemiImagAxis(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_Hyperbola_SemiImagAxis(self, *args)


    def SetSemiAxis(self, *args) -> "void":
        """
        :param aSemiAxis:
        	:type aSemiAxis: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Hyperbola_SetSemiAxis(self, *args)


    def SetSemiImagAxis(self, *args) -> "void":
        """
        :param aSemiImagAxis:
        	:type aSemiImagAxis: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Hyperbola_SetSemiImagAxis(self, *args)


    def __init__(self, *args):
        """
        * Returns a Hyperbola
        	:rtype: None
        """
        _StepGeom.StepGeom_Hyperbola_swiginit(self, _StepGeom.new_StepGeom_Hyperbola(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Hyperbola_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Hyperbola
StepGeom_Hyperbola.Init = new_instancemethod(_StepGeom.StepGeom_Hyperbola_Init, None, StepGeom_Hyperbola)
StepGeom_Hyperbola.SemiAxis = new_instancemethod(_StepGeom.StepGeom_Hyperbola_SemiAxis, None, StepGeom_Hyperbola)
StepGeom_Hyperbola.SemiImagAxis = new_instancemethod(_StepGeom.StepGeom_Hyperbola_SemiImagAxis, None, StepGeom_Hyperbola)
StepGeom_Hyperbola.SetSemiAxis = new_instancemethod(_StepGeom.StepGeom_Hyperbola_SetSemiAxis, None, StepGeom_Hyperbola)
StepGeom_Hyperbola.SetSemiImagAxis = new_instancemethod(_StepGeom.StepGeom_Hyperbola_SetSemiImagAxis, None, StepGeom_Hyperbola)
StepGeom_Hyperbola_swigregister = _StepGeom.StepGeom_Hyperbola_swigregister
StepGeom_Hyperbola_swigregister(StepGeom_Hyperbola)

class StepGeom_IntersectionCurve(StepGeom_SurfaceCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a IntersectionCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_IntersectionCurve_swiginit(self, _StepGeom.new_StepGeom_IntersectionCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_IntersectionCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_IntersectionCurve
StepGeom_IntersectionCurve_swigregister = _StepGeom.StepGeom_IntersectionCurve_swigregister
StepGeom_IntersectionCurve_swigregister(StepGeom_IntersectionCurve)

class StepGeom_Parabola(StepGeom_Conic):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FocalDist(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_Parabola_FocalDist(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement
        	:param aFocalDist:
        	:type aFocalDist: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Parabola_Init(self, *args)


    def SetFocalDist(self, *args) -> "void":
        """
        :param aFocalDist:
        	:type aFocalDist: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_Parabola_SetFocalDist(self, *args)


    def __init__(self, *args):
        """
        * Returns a Parabola
        	:rtype: None
        """
        _StepGeom.StepGeom_Parabola_swiginit(self, _StepGeom.new_StepGeom_Parabola(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Parabola_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Parabola
StepGeom_Parabola.FocalDist = new_instancemethod(_StepGeom.StepGeom_Parabola_FocalDist, None, StepGeom_Parabola)
StepGeom_Parabola.Init = new_instancemethod(_StepGeom.StepGeom_Parabola_Init, None, StepGeom_Parabola)
StepGeom_Parabola.SetFocalDist = new_instancemethod(_StepGeom.StepGeom_Parabola_SetFocalDist, None, StepGeom_Parabola)
StepGeom_Parabola_swigregister = _StepGeom.StepGeom_Parabola_swigregister
StepGeom_Parabola_swigregister(StepGeom_Parabola)

class StepGeom_Plane(StepGeom_ElementarySurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Plane
        	:rtype: None
        """
        _StepGeom.StepGeom_Plane_swiginit(self, _StepGeom.new_StepGeom_Plane(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Plane_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Plane
StepGeom_Plane_swigregister = _StepGeom.StepGeom_Plane_swigregister
StepGeom_Plane_swigregister(StepGeom_Plane)

class StepGeom_Polyline(StepGeom_BoundedCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPoints:
        	:type aPoints: StepGeom_HArray1OfCartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_Polyline_Init(self, *args)


    def NbPoints(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_Polyline_NbPoints(self, *args)


    def Points(self, *args) -> "opencascade::handle< StepGeom_HArray1OfCartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_HArray1OfCartesianPoint>"""
        return _StepGeom.StepGeom_Polyline_Points(self, *args)


    def PointsValue(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepGeom_CartesianPoint>
        """
        return _StepGeom.StepGeom_Polyline_PointsValue(self, *args)


    def SetPoints(self, *args) -> "void":
        """
        :param aPoints:
        	:type aPoints: StepGeom_HArray1OfCartesianPoint
        	:rtype: None
        """
        return _StepGeom.StepGeom_Polyline_SetPoints(self, *args)


    def __init__(self, *args):
        """
        * Returns a Polyline
        	:rtype: None
        """
        _StepGeom.StepGeom_Polyline_swiginit(self, _StepGeom.new_StepGeom_Polyline(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_Polyline_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_Polyline
StepGeom_Polyline.Init = new_instancemethod(_StepGeom.StepGeom_Polyline_Init, None, StepGeom_Polyline)
StepGeom_Polyline.NbPoints = new_instancemethod(_StepGeom.StepGeom_Polyline_NbPoints, None, StepGeom_Polyline)
StepGeom_Polyline.Points = new_instancemethod(_StepGeom.StepGeom_Polyline_Points, None, StepGeom_Polyline)
StepGeom_Polyline.PointsValue = new_instancemethod(_StepGeom.StepGeom_Polyline_PointsValue, None, StepGeom_Polyline)
StepGeom_Polyline.SetPoints = new_instancemethod(_StepGeom.StepGeom_Polyline_SetPoints, None, StepGeom_Polyline)
StepGeom_Polyline_swigregister = _StepGeom.StepGeom_Polyline_swigregister
StepGeom_Polyline_swigregister(StepGeom_Polyline)

class StepGeom_RectangularCompositeSurface(StepGeom_BoundedSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSegments:
        	:type aSegments: StepGeom_HArray2OfSurfacePatch
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularCompositeSurface_Init(self, *args)


    def NbSegmentsI(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_RectangularCompositeSurface_NbSegmentsI(self, *args)


    def NbSegmentsJ(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_RectangularCompositeSurface_NbSegmentsJ(self, *args)


    def Segments(self, *args) -> "opencascade::handle< StepGeom_HArray2OfSurfacePatch >":
        """:rtype: opencascade::handle<StepGeom_HArray2OfSurfacePatch>"""
        return _StepGeom.StepGeom_RectangularCompositeSurface_Segments(self, *args)


    def SegmentsValue(self, *args) -> "opencascade::handle< StepGeom_SurfacePatch >":
        """
        :param num1:
        	:type num1: int
        	:param num2:
        	:type num2: int
        	:rtype: opencascade::handle<StepGeom_SurfacePatch>
        """
        return _StepGeom.StepGeom_RectangularCompositeSurface_SegmentsValue(self, *args)


    def SetSegments(self, *args) -> "void":
        """
        :param aSegments:
        	:type aSegments: StepGeom_HArray2OfSurfacePatch
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularCompositeSurface_SetSegments(self, *args)


    def __init__(self, *args):
        """
        * Returns a RectangularCompositeSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_RectangularCompositeSurface_swiginit(self, _StepGeom.new_StepGeom_RectangularCompositeSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_RectangularCompositeSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_RectangularCompositeSurface
StepGeom_RectangularCompositeSurface.Init = new_instancemethod(_StepGeom.StepGeom_RectangularCompositeSurface_Init, None, StepGeom_RectangularCompositeSurface)
StepGeom_RectangularCompositeSurface.NbSegmentsI = new_instancemethod(_StepGeom.StepGeom_RectangularCompositeSurface_NbSegmentsI, None, StepGeom_RectangularCompositeSurface)
StepGeom_RectangularCompositeSurface.NbSegmentsJ = new_instancemethod(_StepGeom.StepGeom_RectangularCompositeSurface_NbSegmentsJ, None, StepGeom_RectangularCompositeSurface)
StepGeom_RectangularCompositeSurface.Segments = new_instancemethod(_StepGeom.StepGeom_RectangularCompositeSurface_Segments, None, StepGeom_RectangularCompositeSurface)
StepGeom_RectangularCompositeSurface.SegmentsValue = new_instancemethod(_StepGeom.StepGeom_RectangularCompositeSurface_SegmentsValue, None, StepGeom_RectangularCompositeSurface)
StepGeom_RectangularCompositeSurface.SetSegments = new_instancemethod(_StepGeom.StepGeom_RectangularCompositeSurface_SetSegments, None, StepGeom_RectangularCompositeSurface)
StepGeom_RectangularCompositeSurface_swigregister = _StepGeom.StepGeom_RectangularCompositeSurface_swigregister
StepGeom_RectangularCompositeSurface_swigregister(StepGeom_RectangularCompositeSurface)

class StepGeom_RectangularTrimmedSurface(StepGeom_BoundedSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BasisSurface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """:rtype: opencascade::handle<StepGeom_Surface>"""
        return _StepGeom.StepGeom_RectangularTrimmedSurface_BasisSurface(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:param aU1:
        	:type aU1: float
        	:param aU2:
        	:type aU2: float
        	:param aV1:
        	:type aV1: float
        	:param aV2:
        	:type aV2: float
        	:param aUsense:
        	:type aUsense: bool
        	:param aVsense:
        	:type aVsense: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularTrimmedSurface_Init(self, *args)


    def SetBasisSurface(self, *args) -> "void":
        """
        :param aBasisSurface:
        	:type aBasisSurface: StepGeom_Surface
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularTrimmedSurface_SetBasisSurface(self, *args)


    def SetU1(self, *args) -> "void":
        """
        :param aU1:
        	:type aU1: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularTrimmedSurface_SetU1(self, *args)


    def SetU2(self, *args) -> "void":
        """
        :param aU2:
        	:type aU2: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularTrimmedSurface_SetU2(self, *args)


    def SetUsense(self, *args) -> "void":
        """
        :param aUsense:
        	:type aUsense: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularTrimmedSurface_SetUsense(self, *args)


    def SetV1(self, *args) -> "void":
        """
        :param aV1:
        	:type aV1: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularTrimmedSurface_SetV1(self, *args)


    def SetV2(self, *args) -> "void":
        """
        :param aV2:
        	:type aV2: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularTrimmedSurface_SetV2(self, *args)


    def SetVsense(self, *args) -> "void":
        """
        :param aVsense:
        	:type aVsense: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_RectangularTrimmedSurface_SetVsense(self, *args)


    def __init__(self, *args):
        """
        * Returns a RectangularTrimmedSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_RectangularTrimmedSurface_swiginit(self, _StepGeom.new_StepGeom_RectangularTrimmedSurface(*args))

    def U1(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_RectangularTrimmedSurface_U1(self, *args)


    def U2(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_RectangularTrimmedSurface_U2(self, *args)


    def Usense(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_RectangularTrimmedSurface_Usense(self, *args)


    def V1(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_RectangularTrimmedSurface_V1(self, *args)


    def V2(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_RectangularTrimmedSurface_V2(self, *args)


    def Vsense(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_RectangularTrimmedSurface_Vsense(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_RectangularTrimmedSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_RectangularTrimmedSurface
StepGeom_RectangularTrimmedSurface.BasisSurface = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_BasisSurface, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.Init = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_Init, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.SetBasisSurface = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_SetBasisSurface, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.SetU1 = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_SetU1, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.SetU2 = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_SetU2, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.SetUsense = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_SetUsense, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.SetV1 = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_SetV1, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.SetV2 = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_SetV2, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.SetVsense = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_SetVsense, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.U1 = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_U1, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.U2 = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_U2, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.Usense = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_Usense, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.V1 = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_V1, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.V2 = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_V2, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface.Vsense = new_instancemethod(_StepGeom.StepGeom_RectangularTrimmedSurface_Vsense, None, StepGeom_RectangularTrimmedSurface)
StepGeom_RectangularTrimmedSurface_swigregister = _StepGeom.StepGeom_RectangularTrimmedSurface_swigregister
StepGeom_RectangularTrimmedSurface_swigregister(StepGeom_RectangularTrimmedSurface)

class StepGeom_SeamCurve(StepGeom_SurfaceCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a SeamCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_SeamCurve_swiginit(self, _StepGeom.new_StepGeom_SeamCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_SeamCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SeamCurve
StepGeom_SeamCurve_swigregister = _StepGeom.StepGeom_SeamCurve_swigregister
StepGeom_SeamCurve_swigregister(StepGeom_SeamCurve)

class StepGeom_SphericalSurface(StepGeom_ElementarySurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_SphericalSurface_Init(self, *args)


    def Radius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_SphericalSurface_Radius(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        :param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_SphericalSurface_SetRadius(self, *args)


    def __init__(self, *args):
        """
        * Returns a SphericalSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_SphericalSurface_swiginit(self, _StepGeom.new_StepGeom_SphericalSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_SphericalSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SphericalSurface
StepGeom_SphericalSurface.Init = new_instancemethod(_StepGeom.StepGeom_SphericalSurface_Init, None, StepGeom_SphericalSurface)
StepGeom_SphericalSurface.Radius = new_instancemethod(_StepGeom.StepGeom_SphericalSurface_Radius, None, StepGeom_SphericalSurface)
StepGeom_SphericalSurface.SetRadius = new_instancemethod(_StepGeom.StepGeom_SphericalSurface_SetRadius, None, StepGeom_SphericalSurface)
StepGeom_SphericalSurface_swigregister = _StepGeom.StepGeom_SphericalSurface_swigregister
StepGeom_SphericalSurface_swigregister(StepGeom_SphericalSurface)

class StepGeom_SurfaceCurveAndBoundedCurve(StepGeom_SurfaceCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BoundedCurve(self, *args) -> "opencascade::handle< StepGeom_BoundedCurve > &":
        """
        * returns field BoundedCurve
        	:rtype: opencascade::handle<StepGeom_BoundedCurve>
        """
        return _StepGeom.StepGeom_SurfaceCurveAndBoundedCurve_BoundedCurve(self, *args)


    def __init__(self, *args):
        """
        * creates empty object
        	:rtype: None
        """
        _StepGeom.StepGeom_SurfaceCurveAndBoundedCurve_swiginit(self, _StepGeom.new_StepGeom_SurfaceCurveAndBoundedCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_SurfaceCurveAndBoundedCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SurfaceCurveAndBoundedCurve
StepGeom_SurfaceCurveAndBoundedCurve.BoundedCurve = new_instancemethod(_StepGeom.StepGeom_SurfaceCurveAndBoundedCurve_BoundedCurve, None, StepGeom_SurfaceCurveAndBoundedCurve)
StepGeom_SurfaceCurveAndBoundedCurve_swigregister = _StepGeom.StepGeom_SurfaceCurveAndBoundedCurve_swigregister
StepGeom_SurfaceCurveAndBoundedCurve_swigregister(StepGeom_SurfaceCurveAndBoundedCurve)

class StepGeom_SurfaceOfLinearExtrusion(StepGeom_SweptSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ExtrusionAxis(self, *args) -> "opencascade::handle< StepGeom_Vector >":
        """:rtype: opencascade::handle<StepGeom_Vector>"""
        return _StepGeom.StepGeom_SurfaceOfLinearExtrusion_ExtrusionAxis(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptCurve:
        	:type aSweptCurve: StepGeom_Curve
        	:param aExtrusionAxis:
        	:type aExtrusionAxis: StepGeom_Vector
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceOfLinearExtrusion_Init(self, *args)


    def SetExtrusionAxis(self, *args) -> "void":
        """
        :param aExtrusionAxis:
        	:type aExtrusionAxis: StepGeom_Vector
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceOfLinearExtrusion_SetExtrusionAxis(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceOfLinearExtrusion
        	:rtype: None
        """
        _StepGeom.StepGeom_SurfaceOfLinearExtrusion_swiginit(self, _StepGeom.new_StepGeom_SurfaceOfLinearExtrusion(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_SurfaceOfLinearExtrusion_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SurfaceOfLinearExtrusion
StepGeom_SurfaceOfLinearExtrusion.ExtrusionAxis = new_instancemethod(_StepGeom.StepGeom_SurfaceOfLinearExtrusion_ExtrusionAxis, None, StepGeom_SurfaceOfLinearExtrusion)
StepGeom_SurfaceOfLinearExtrusion.Init = new_instancemethod(_StepGeom.StepGeom_SurfaceOfLinearExtrusion_Init, None, StepGeom_SurfaceOfLinearExtrusion)
StepGeom_SurfaceOfLinearExtrusion.SetExtrusionAxis = new_instancemethod(_StepGeom.StepGeom_SurfaceOfLinearExtrusion_SetExtrusionAxis, None, StepGeom_SurfaceOfLinearExtrusion)
StepGeom_SurfaceOfLinearExtrusion_swigregister = _StepGeom.StepGeom_SurfaceOfLinearExtrusion_swigregister
StepGeom_SurfaceOfLinearExtrusion_swigregister(StepGeom_SurfaceOfLinearExtrusion)

class StepGeom_SurfaceOfRevolution(StepGeom_SweptSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AxisPosition(self, *args) -> "opencascade::handle< StepGeom_Axis1Placement >":
        """:rtype: opencascade::handle<StepGeom_Axis1Placement>"""
        return _StepGeom.StepGeom_SurfaceOfRevolution_AxisPosition(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptCurve:
        	:type aSweptCurve: StepGeom_Curve
        	:param aAxisPosition:
        	:type aAxisPosition: StepGeom_Axis1Placement
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceOfRevolution_Init(self, *args)


    def SetAxisPosition(self, *args) -> "void":
        """
        :param aAxisPosition:
        	:type aAxisPosition: StepGeom_Axis1Placement
        	:rtype: None
        """
        return _StepGeom.StepGeom_SurfaceOfRevolution_SetAxisPosition(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceOfRevolution
        	:rtype: None
        """
        _StepGeom.StepGeom_SurfaceOfRevolution_swiginit(self, _StepGeom.new_StepGeom_SurfaceOfRevolution(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_SurfaceOfRevolution_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_SurfaceOfRevolution
StepGeom_SurfaceOfRevolution.AxisPosition = new_instancemethod(_StepGeom.StepGeom_SurfaceOfRevolution_AxisPosition, None, StepGeom_SurfaceOfRevolution)
StepGeom_SurfaceOfRevolution.Init = new_instancemethod(_StepGeom.StepGeom_SurfaceOfRevolution_Init, None, StepGeom_SurfaceOfRevolution)
StepGeom_SurfaceOfRevolution.SetAxisPosition = new_instancemethod(_StepGeom.StepGeom_SurfaceOfRevolution_SetAxisPosition, None, StepGeom_SurfaceOfRevolution)
StepGeom_SurfaceOfRevolution_swigregister = _StepGeom.StepGeom_SurfaceOfRevolution_swigregister
StepGeom_SurfaceOfRevolution_swigregister(StepGeom_SurfaceOfRevolution)

class StepGeom_ToroidalSurface(StepGeom_ElementarySurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:param aMajorRadius:
        	:type aMajorRadius: float
        	:param aMinorRadius:
        	:type aMinorRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_ToroidalSurface_Init(self, *args)


    def MajorRadius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_ToroidalSurface_MajorRadius(self, *args)


    def MinorRadius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepGeom.StepGeom_ToroidalSurface_MinorRadius(self, *args)


    def SetMajorRadius(self, *args) -> "void":
        """
        :param aMajorRadius:
        	:type aMajorRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_ToroidalSurface_SetMajorRadius(self, *args)


    def SetMinorRadius(self, *args) -> "void":
        """
        :param aMinorRadius:
        	:type aMinorRadius: float
        	:rtype: None
        """
        return _StepGeom.StepGeom_ToroidalSurface_SetMinorRadius(self, *args)


    def __init__(self, *args):
        """
        * Returns a ToroidalSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_ToroidalSurface_swiginit(self, _StepGeom.new_StepGeom_ToroidalSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_ToroidalSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_ToroidalSurface
StepGeom_ToroidalSurface.Init = new_instancemethod(_StepGeom.StepGeom_ToroidalSurface_Init, None, StepGeom_ToroidalSurface)
StepGeom_ToroidalSurface.MajorRadius = new_instancemethod(_StepGeom.StepGeom_ToroidalSurface_MajorRadius, None, StepGeom_ToroidalSurface)
StepGeom_ToroidalSurface.MinorRadius = new_instancemethod(_StepGeom.StepGeom_ToroidalSurface_MinorRadius, None, StepGeom_ToroidalSurface)
StepGeom_ToroidalSurface.SetMajorRadius = new_instancemethod(_StepGeom.StepGeom_ToroidalSurface_SetMajorRadius, None, StepGeom_ToroidalSurface)
StepGeom_ToroidalSurface.SetMinorRadius = new_instancemethod(_StepGeom.StepGeom_ToroidalSurface_SetMinorRadius, None, StepGeom_ToroidalSurface)
StepGeom_ToroidalSurface_swigregister = _StepGeom.StepGeom_ToroidalSurface_swigregister
StepGeom_ToroidalSurface_swigregister(StepGeom_ToroidalSurface)

class StepGeom_TrimmedCurve(StepGeom_BoundedCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BasisCurve(self, *args) -> "opencascade::handle< StepGeom_Curve >":
        """:rtype: opencascade::handle<StepGeom_Curve>"""
        return _StepGeom.StepGeom_TrimmedCurve_BasisCurve(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBasisCurve:
        	:type aBasisCurve: StepGeom_Curve
        	:param aTrim1:
        	:type aTrim1: StepGeom_HArray1OfTrimmingSelect
        	:param aTrim2:
        	:type aTrim2: StepGeom_HArray1OfTrimmingSelect
        	:param aSenseAgreement:
        	:type aSenseAgreement: bool
        	:param aMasterRepresentation:
        	:type aMasterRepresentation: StepGeom_TrimmingPreference
        	:rtype: None
        """
        return _StepGeom.StepGeom_TrimmedCurve_Init(self, *args)


    def MasterRepresentation(self, *args) -> "StepGeom_TrimmingPreference":
        """:rtype: StepGeom_TrimmingPreference"""
        return _StepGeom.StepGeom_TrimmedCurve_MasterRepresentation(self, *args)


    def NbTrim1(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_TrimmedCurve_NbTrim1(self, *args)


    def NbTrim2(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_TrimmedCurve_NbTrim2(self, *args)


    def SenseAgreement(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_TrimmedCurve_SenseAgreement(self, *args)


    def SetBasisCurve(self, *args) -> "void":
        """
        :param aBasisCurve:
        	:type aBasisCurve: StepGeom_Curve
        	:rtype: None
        """
        return _StepGeom.StepGeom_TrimmedCurve_SetBasisCurve(self, *args)


    def SetMasterRepresentation(self, *args) -> "void":
        """
        :param aMasterRepresentation:
        	:type aMasterRepresentation: StepGeom_TrimmingPreference
        	:rtype: None
        """
        return _StepGeom.StepGeom_TrimmedCurve_SetMasterRepresentation(self, *args)


    def SetSenseAgreement(self, *args) -> "void":
        """
        :param aSenseAgreement:
        	:type aSenseAgreement: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_TrimmedCurve_SetSenseAgreement(self, *args)


    def SetTrim1(self, *args) -> "void":
        """
        :param aTrim1:
        	:type aTrim1: StepGeom_HArray1OfTrimmingSelect
        	:rtype: None
        """
        return _StepGeom.StepGeom_TrimmedCurve_SetTrim1(self, *args)


    def SetTrim2(self, *args) -> "void":
        """
        :param aTrim2:
        	:type aTrim2: StepGeom_HArray1OfTrimmingSelect
        	:rtype: None
        """
        return _StepGeom.StepGeom_TrimmedCurve_SetTrim2(self, *args)


    def __init__(self, *args):
        """
        * Returns a TrimmedCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_TrimmedCurve_swiginit(self, _StepGeom.new_StepGeom_TrimmedCurve(*args))

    def Trim1(self, *args) -> "opencascade::handle< StepGeom_HArray1OfTrimmingSelect >":
        """:rtype: opencascade::handle<StepGeom_HArray1OfTrimmingSelect>"""
        return _StepGeom.StepGeom_TrimmedCurve_Trim1(self, *args)


    def Trim1Value(self, *args) -> "StepGeom_TrimmingSelect":
        """
        :param num:
        	:type num: int
        	:rtype: StepGeom_TrimmingSelect
        """
        return _StepGeom.StepGeom_TrimmedCurve_Trim1Value(self, *args)


    def Trim2(self, *args) -> "opencascade::handle< StepGeom_HArray1OfTrimmingSelect >":
        """:rtype: opencascade::handle<StepGeom_HArray1OfTrimmingSelect>"""
        return _StepGeom.StepGeom_TrimmedCurve_Trim2(self, *args)


    def Trim2Value(self, *args) -> "StepGeom_TrimmingSelect":
        """
        :param num:
        	:type num: int
        	:rtype: StepGeom_TrimmingSelect
        """
        return _StepGeom.StepGeom_TrimmedCurve_Trim2Value(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_TrimmedCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_TrimmedCurve
StepGeom_TrimmedCurve.BasisCurve = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_BasisCurve, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.Init = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_Init, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.MasterRepresentation = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_MasterRepresentation, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.NbTrim1 = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_NbTrim1, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.NbTrim2 = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_NbTrim2, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.SenseAgreement = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_SenseAgreement, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.SetBasisCurve = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_SetBasisCurve, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.SetMasterRepresentation = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_SetMasterRepresentation, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.SetSenseAgreement = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_SetSenseAgreement, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.SetTrim1 = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_SetTrim1, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.SetTrim2 = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_SetTrim2, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.Trim1 = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_Trim1, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.Trim1Value = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_Trim1Value, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.Trim2 = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_Trim2, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve.Trim2Value = new_instancemethod(_StepGeom.StepGeom_TrimmedCurve_Trim2Value, None, StepGeom_TrimmedCurve)
StepGeom_TrimmedCurve_swigregister = _StepGeom.StepGeom_TrimmedCurve_swigregister
StepGeom_TrimmedCurve_swigregister(StepGeom_TrimmedCurve)

class StepGeom_BSplineCurveWithKnots(StepGeom_BSplineCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aKnotMultiplicities:
        	:type aKnotMultiplicities: TColStd_HArray1OfInteger
        	:param aKnots:
        	:type aKnots: TColStd_HArray1OfReal
        	:param aKnotSpec:
        	:type aKnotSpec: StepGeom_KnotType
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnots_Init(self, *args)


    def KnotMultiplicities(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _StepGeom.StepGeom_BSplineCurveWithKnots_KnotMultiplicities(self, *args)


    def KnotMultiplicitiesValue(self, *args) -> "Standard_Integer":
        """
        :param num:
        	:type num: int
        	:rtype: int
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnots_KnotMultiplicitiesValue(self, *args)


    def KnotSpec(self, *args) -> "StepGeom_KnotType":
        """:rtype: StepGeom_KnotType"""
        return _StepGeom.StepGeom_BSplineCurveWithKnots_KnotSpec(self, *args)


    def Knots(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_BSplineCurveWithKnots_Knots(self, *args)


    def KnotsValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnots_KnotsValue(self, *args)


    def NbKnotMultiplicities(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineCurveWithKnots_NbKnotMultiplicities(self, *args)


    def NbKnots(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineCurveWithKnots_NbKnots(self, *args)


    def SetKnotMultiplicities(self, *args) -> "void":
        """
        :param aKnotMultiplicities:
        	:type aKnotMultiplicities: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnots_SetKnotMultiplicities(self, *args)


    def SetKnotSpec(self, *args) -> "void":
        """
        :param aKnotSpec:
        	:type aKnotSpec: StepGeom_KnotType
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnots_SetKnotSpec(self, *args)


    def SetKnots(self, *args) -> "void":
        """
        :param aKnots:
        	:type aKnots: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnots_SetKnots(self, *args)


    def __init__(self, *args):
        """
        * Returns a BSplineCurveWithKnots
        	:rtype: None
        """
        _StepGeom.StepGeom_BSplineCurveWithKnots_swiginit(self, _StepGeom.new_StepGeom_BSplineCurveWithKnots(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BSplineCurveWithKnots_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BSplineCurveWithKnots
StepGeom_BSplineCurveWithKnots.Init = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_Init, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.KnotMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_KnotMultiplicities, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.KnotMultiplicitiesValue = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_KnotMultiplicitiesValue, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.KnotSpec = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_KnotSpec, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.Knots = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_Knots, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.KnotsValue = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_KnotsValue, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.NbKnotMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_NbKnotMultiplicities, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.NbKnots = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_NbKnots, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.SetKnotMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_SetKnotMultiplicities, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.SetKnotSpec = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_SetKnotSpec, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots.SetKnots = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnots_SetKnots, None, StepGeom_BSplineCurveWithKnots)
StepGeom_BSplineCurveWithKnots_swigregister = _StepGeom.StepGeom_BSplineCurveWithKnots_swigregister
StepGeom_BSplineCurveWithKnots_swigregister(StepGeom_BSplineCurveWithKnots)

class StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve(StepGeom_BSplineCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BSplineCurveWithKnots(self, *args) -> "opencascade::handle< StepGeom_BSplineCurveWithKnots >":
        """:rtype: opencascade::handle<StepGeom_BSplineCurveWithKnots>"""
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_BSplineCurveWithKnots(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aBSplineCurveWithKnots:
        	:type aBSplineCurveWithKnots: StepGeom_BSplineCurveWithKnots
        	:param aRationalBSplineCurve:
        	:type aRationalBSplineCurve: StepGeom_RationalBSplineCurve
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aKnotMultiplicities:
        	:type aKnotMultiplicities: TColStd_HArray1OfInteger
        	:param aKnots:
        	:type aKnots: TColStd_HArray1OfReal
        	:param aKnotSpec:
        	:type aKnotSpec: StepGeom_KnotType
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_Init(self, *args)


    def KnotMultiplicities(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_KnotMultiplicities(self, *args)


    def KnotMultiplicitiesValue(self, *args) -> "Standard_Integer":
        """
        :param num:
        	:type num: int
        	:rtype: int
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_KnotMultiplicitiesValue(self, *args)


    def KnotSpec(self, *args) -> "StepGeom_KnotType":
        """:rtype: StepGeom_KnotType"""
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_KnotSpec(self, *args)


    def Knots(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_Knots(self, *args)


    def KnotsValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_KnotsValue(self, *args)


    def NbKnotMultiplicities(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_NbKnotMultiplicities(self, *args)


    def NbKnots(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_NbKnots(self, *args)


    def NbWeightsData(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_NbWeightsData(self, *args)


    def RationalBSplineCurve(self, *args) -> "opencascade::handle< StepGeom_RationalBSplineCurve >":
        """:rtype: opencascade::handle<StepGeom_RationalBSplineCurve>"""
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_RationalBSplineCurve(self, *args)


    def SetBSplineCurveWithKnots(self, *args) -> "void":
        """
        :param aBSplineCurveWithKnots:
        	:type aBSplineCurveWithKnots: StepGeom_BSplineCurveWithKnots
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetBSplineCurveWithKnots(self, *args)


    def SetKnotMultiplicities(self, *args) -> "void":
        """
        :param aKnotMultiplicities:
        	:type aKnotMultiplicities: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetKnotMultiplicities(self, *args)


    def SetKnotSpec(self, *args) -> "void":
        """
        :param aKnotSpec:
        	:type aKnotSpec: StepGeom_KnotType
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetKnotSpec(self, *args)


    def SetKnots(self, *args) -> "void":
        """
        :param aKnots:
        	:type aKnots: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetKnots(self, *args)


    def SetRationalBSplineCurve(self, *args) -> "void":
        """
        :param aRationalBSplineCurve:
        	:type aRationalBSplineCurve: StepGeom_RationalBSplineCurve
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetRationalBSplineCurve(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a BSplineCurveWithKnotsAndRationalBSplineCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_swiginit(self, _StepGeom.new_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve(*args))

    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.BSplineCurveWithKnots = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_BSplineCurveWithKnots, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.Init = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_Init, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.KnotMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_KnotMultiplicities, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.KnotMultiplicitiesValue = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_KnotMultiplicitiesValue, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.KnotSpec = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_KnotSpec, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.Knots = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_Knots, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.KnotsValue = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_KnotsValue, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.NbKnotMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_NbKnotMultiplicities, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.NbKnots = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_NbKnots, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.NbWeightsData = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_NbWeightsData, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.RationalBSplineCurve = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_RationalBSplineCurve, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.SetBSplineCurveWithKnots = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetBSplineCurveWithKnots, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.SetKnotMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetKnotMultiplicities, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.SetKnotSpec = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetKnotSpec, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.SetKnots = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetKnots, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.SetRationalBSplineCurve = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetRationalBSplineCurve, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_SetWeightsData, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.WeightsData = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_WeightsData, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_WeightsDataValue, None, StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_swigregister = _StepGeom.StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_swigregister
StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve_swigregister(StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve)

class StepGeom_BSplineSurfaceWithKnots(StepGeom_BSplineSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aUMultiplicities:
        	:type aUMultiplicities: TColStd_HArray1OfInteger
        	:param aVMultiplicities:
        	:type aVMultiplicities: TColStd_HArray1OfInteger
        	:param aUKnots:
        	:type aUKnots: TColStd_HArray1OfReal
        	:param aVKnots:
        	:type aVKnots: TColStd_HArray1OfReal
        	:param aKnotSpec:
        	:type aKnotSpec: StepGeom_KnotType
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_Init(self, *args)


    def KnotSpec(self, *args) -> "StepGeom_KnotType":
        """:rtype: StepGeom_KnotType"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_KnotSpec(self, *args)


    def NbUKnots(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_NbUKnots(self, *args)


    def NbUMultiplicities(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_NbUMultiplicities(self, *args)


    def NbVKnots(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_NbVKnots(self, *args)


    def NbVMultiplicities(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_NbVMultiplicities(self, *args)


    def SetKnotSpec(self, *args) -> "void":
        """
        :param aKnotSpec:
        	:type aKnotSpec: StepGeom_KnotType
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_SetKnotSpec(self, *args)


    def SetUKnots(self, *args) -> "void":
        """
        :param aUKnots:
        	:type aUKnots: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_SetUKnots(self, *args)


    def SetUMultiplicities(self, *args) -> "void":
        """
        :param aUMultiplicities:
        	:type aUMultiplicities: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_SetUMultiplicities(self, *args)


    def SetVKnots(self, *args) -> "void":
        """
        :param aVKnots:
        	:type aVKnots: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_SetVKnots(self, *args)


    def SetVMultiplicities(self, *args) -> "void":
        """
        :param aVMultiplicities:
        	:type aVMultiplicities: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_SetVMultiplicities(self, *args)


    def __init__(self, *args):
        """
        * Returns a BSplineSurfaceWithKnots
        	:rtype: None
        """
        _StepGeom.StepGeom_BSplineSurfaceWithKnots_swiginit(self, _StepGeom.new_StepGeom_BSplineSurfaceWithKnots(*args))

    def UKnots(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_UKnots(self, *args)


    def UKnotsValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_UKnotsValue(self, *args)


    def UMultiplicities(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_UMultiplicities(self, *args)


    def UMultiplicitiesValue(self, *args) -> "Standard_Integer":
        """
        :param num:
        	:type num: int
        	:rtype: int
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_UMultiplicitiesValue(self, *args)


    def VKnots(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_VKnots(self, *args)


    def VKnotsValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_VKnotsValue(self, *args)


    def VMultiplicities(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_VMultiplicities(self, *args)


    def VMultiplicitiesValue(self, *args) -> "Standard_Integer":
        """
        :param num:
        	:type num: int
        	:rtype: int
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnots_VMultiplicitiesValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BSplineSurfaceWithKnots_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BSplineSurfaceWithKnots
StepGeom_BSplineSurfaceWithKnots.Init = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_Init, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.KnotSpec = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_KnotSpec, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.NbUKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_NbUKnots, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.NbUMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_NbUMultiplicities, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.NbVKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_NbVKnots, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.NbVMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_NbVMultiplicities, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.SetKnotSpec = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_SetKnotSpec, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.SetUKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_SetUKnots, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.SetUMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_SetUMultiplicities, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.SetVKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_SetVKnots, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.SetVMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_SetVMultiplicities, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.UKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_UKnots, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.UKnotsValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_UKnotsValue, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.UMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_UMultiplicities, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.UMultiplicitiesValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_UMultiplicitiesValue, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.VKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_VKnots, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.VKnotsValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_VKnotsValue, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.VMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_VMultiplicities, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots.VMultiplicitiesValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnots_VMultiplicitiesValue, None, StepGeom_BSplineSurfaceWithKnots)
StepGeom_BSplineSurfaceWithKnots_swigregister = _StepGeom.StepGeom_BSplineSurfaceWithKnots_swigregister
StepGeom_BSplineSurfaceWithKnots_swigregister(StepGeom_BSplineSurfaceWithKnots)

class StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface(StepGeom_BSplineSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BSplineSurfaceWithKnots(self, *args) -> "opencascade::handle< StepGeom_BSplineSurfaceWithKnots >":
        """:rtype: opencascade::handle<StepGeom_BSplineSurfaceWithKnots>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_BSplineSurfaceWithKnots(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aBSplineSurfaceWithKnots:
        	:type aBSplineSurfaceWithKnots: StepGeom_BSplineSurfaceWithKnots
        	:param aRationalBSplineSurface:
        	:type aRationalBSplineSurface: StepGeom_RationalBSplineSurface
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aUMultiplicities:
        	:type aUMultiplicities: TColStd_HArray1OfInteger
        	:param aVMultiplicities:
        	:type aVMultiplicities: TColStd_HArray1OfInteger
        	:param aUKnots:
        	:type aUKnots: TColStd_HArray1OfReal
        	:param aVKnots:
        	:type aVKnots: TColStd_HArray1OfReal
        	:param aKnotSpec:
        	:type aKnotSpec: StepGeom_KnotType
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_Init(self, *args)


    def KnotSpec(self, *args) -> "StepGeom_KnotType":
        """:rtype: StepGeom_KnotType"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_KnotSpec(self, *args)


    def NbUKnots(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbUKnots(self, *args)


    def NbUMultiplicities(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbUMultiplicities(self, *args)


    def NbVKnots(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbVKnots(self, *args)


    def NbVMultiplicities(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbVMultiplicities(self, *args)


    def NbWeightsDataI(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbWeightsDataI(self, *args)


    def NbWeightsDataJ(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbWeightsDataJ(self, *args)


    def RationalBSplineSurface(self, *args) -> "opencascade::handle< StepGeom_RationalBSplineSurface >":
        """:rtype: opencascade::handle<StepGeom_RationalBSplineSurface>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_RationalBSplineSurface(self, *args)


    def SetBSplineSurfaceWithKnots(self, *args) -> "void":
        """
        :param aBSplineSurfaceWithKnots:
        	:type aBSplineSurfaceWithKnots: StepGeom_BSplineSurfaceWithKnots
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetBSplineSurfaceWithKnots(self, *args)


    def SetKnotSpec(self, *args) -> "void":
        """
        :param aKnotSpec:
        	:type aKnotSpec: StepGeom_KnotType
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetKnotSpec(self, *args)


    def SetRationalBSplineSurface(self, *args) -> "void":
        """
        :param aRationalBSplineSurface:
        	:type aRationalBSplineSurface: StepGeom_RationalBSplineSurface
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetRationalBSplineSurface(self, *args)


    def SetUKnots(self, *args) -> "void":
        """
        :param aUKnots:
        	:type aUKnots: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetUKnots(self, *args)


    def SetUMultiplicities(self, *args) -> "void":
        """
        :param aUMultiplicities:
        	:type aUMultiplicities: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetUMultiplicities(self, *args)


    def SetVKnots(self, *args) -> "void":
        """
        :param aVKnots:
        	:type aVKnots: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetVKnots(self, *args)


    def SetVMultiplicities(self, *args) -> "void":
        """
        :param aVMultiplicities:
        	:type aVMultiplicities: TColStd_HArray1OfInteger
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetVMultiplicities(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a BSplineSurfaceWithKnotsAndRationalBSplineSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_swiginit(self, _StepGeom.new_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface(*args))

    def UKnots(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_UKnots(self, *args)


    def UKnotsValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_UKnotsValue(self, *args)


    def UMultiplicities(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_UMultiplicities(self, *args)


    def UMultiplicitiesValue(self, *args) -> "Standard_Integer":
        """
        :param num:
        	:type num: int
        	:rtype: int
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_UMultiplicitiesValue(self, *args)


    def VKnots(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_VKnots(self, *args)


    def VKnotsValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_VKnotsValue(self, *args)


    def VMultiplicities(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """:rtype: opencascade::handle<TColStd_HArray1OfInteger>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_VMultiplicities(self, *args)


    def VMultiplicitiesValue(self, *args) -> "Standard_Integer":
        """
        :param num:
        	:type num: int
        	:rtype: int
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_VMultiplicitiesValue(self, *args)


    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray2OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray2OfReal>"""
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num1:
        	:type num1: int
        	:param num2:
        	:type num2: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.BSplineSurfaceWithKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_BSplineSurfaceWithKnots, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.Init = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_Init, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.KnotSpec = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_KnotSpec, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.NbUKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbUKnots, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.NbUMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbUMultiplicities, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.NbVKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbVKnots, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.NbVMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbVMultiplicities, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.NbWeightsDataI = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbWeightsDataI, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.NbWeightsDataJ = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_NbWeightsDataJ, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.RationalBSplineSurface = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_RationalBSplineSurface, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.SetBSplineSurfaceWithKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetBSplineSurfaceWithKnots, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.SetKnotSpec = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetKnotSpec, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.SetRationalBSplineSurface = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetRationalBSplineSurface, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.SetUKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetUKnots, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.SetUMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetUMultiplicities, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.SetVKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetVKnots, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.SetVMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetVMultiplicities, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_SetWeightsData, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.UKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_UKnots, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.UKnotsValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_UKnotsValue, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.UMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_UMultiplicities, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.UMultiplicitiesValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_UMultiplicitiesValue, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.VKnots = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_VKnots, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.VKnotsValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_VKnotsValue, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.VMultiplicities = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_VMultiplicities, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.VMultiplicitiesValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_VMultiplicitiesValue, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.WeightsData = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_WeightsData, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_WeightsDataValue, None, StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_swigregister = _StepGeom.StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_swigregister
StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface_swigregister(StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface)

class StepGeom_BezierCurve(StepGeom_BSplineCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a BezierCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_BezierCurve_swiginit(self, _StepGeom.new_StepGeom_BezierCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BezierCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BezierCurve
StepGeom_BezierCurve_swigregister = _StepGeom.StepGeom_BezierCurve_swigregister
StepGeom_BezierCurve_swigregister(StepGeom_BezierCurve)

class StepGeom_BezierCurveAndRationalBSplineCurve(StepGeom_BSplineCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BezierCurve(self, *args) -> "opencascade::handle< StepGeom_BezierCurve >":
        """:rtype: opencascade::handle<StepGeom_BezierCurve>"""
        return _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_BezierCurve(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aBezierCurve:
        	:type aBezierCurve: StepGeom_BezierCurve
        	:param aRationalBSplineCurve:
        	:type aRationalBSplineCurve: StepGeom_RationalBSplineCurve
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_Init(self, *args)


    def NbWeightsData(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_NbWeightsData(self, *args)


    def RationalBSplineCurve(self, *args) -> "opencascade::handle< StepGeom_RationalBSplineCurve >":
        """:rtype: opencascade::handle<StepGeom_RationalBSplineCurve>"""
        return _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_RationalBSplineCurve(self, *args)


    def SetBezierCurve(self, *args) -> "void":
        """
        :param aBezierCurve:
        	:type aBezierCurve: StepGeom_BezierCurve
        	:rtype: None
        """
        return _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_SetBezierCurve(self, *args)


    def SetRationalBSplineCurve(self, *args) -> "void":
        """
        :param aRationalBSplineCurve:
        	:type aRationalBSplineCurve: StepGeom_RationalBSplineCurve
        	:rtype: None
        """
        return _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_SetRationalBSplineCurve(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a BezierCurveAndRationalBSplineCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_swiginit(self, _StepGeom.new_StepGeom_BezierCurveAndRationalBSplineCurve(*args))

    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BezierCurveAndRationalBSplineCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BezierCurveAndRationalBSplineCurve
StepGeom_BezierCurveAndRationalBSplineCurve.BezierCurve = new_instancemethod(_StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_BezierCurve, None, StepGeom_BezierCurveAndRationalBSplineCurve)
StepGeom_BezierCurveAndRationalBSplineCurve.Init = new_instancemethod(_StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_Init, None, StepGeom_BezierCurveAndRationalBSplineCurve)
StepGeom_BezierCurveAndRationalBSplineCurve.NbWeightsData = new_instancemethod(_StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_NbWeightsData, None, StepGeom_BezierCurveAndRationalBSplineCurve)
StepGeom_BezierCurveAndRationalBSplineCurve.RationalBSplineCurve = new_instancemethod(_StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_RationalBSplineCurve, None, StepGeom_BezierCurveAndRationalBSplineCurve)
StepGeom_BezierCurveAndRationalBSplineCurve.SetBezierCurve = new_instancemethod(_StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_SetBezierCurve, None, StepGeom_BezierCurveAndRationalBSplineCurve)
StepGeom_BezierCurveAndRationalBSplineCurve.SetRationalBSplineCurve = new_instancemethod(_StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_SetRationalBSplineCurve, None, StepGeom_BezierCurveAndRationalBSplineCurve)
StepGeom_BezierCurveAndRationalBSplineCurve.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_SetWeightsData, None, StepGeom_BezierCurveAndRationalBSplineCurve)
StepGeom_BezierCurveAndRationalBSplineCurve.WeightsData = new_instancemethod(_StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_WeightsData, None, StepGeom_BezierCurveAndRationalBSplineCurve)
StepGeom_BezierCurveAndRationalBSplineCurve.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_WeightsDataValue, None, StepGeom_BezierCurveAndRationalBSplineCurve)
StepGeom_BezierCurveAndRationalBSplineCurve_swigregister = _StepGeom.StepGeom_BezierCurveAndRationalBSplineCurve_swigregister
StepGeom_BezierCurveAndRationalBSplineCurve_swigregister(StepGeom_BezierCurveAndRationalBSplineCurve)

class StepGeom_BezierSurface(StepGeom_BSplineSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a BezierSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_BezierSurface_swiginit(self, _StepGeom.new_StepGeom_BezierSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BezierSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BezierSurface
StepGeom_BezierSurface_swigregister = _StepGeom.StepGeom_BezierSurface_swigregister
StepGeom_BezierSurface_swigregister(StepGeom_BezierSurface)

class StepGeom_BezierSurfaceAndRationalBSplineSurface(StepGeom_BSplineSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BezierSurface(self, *args) -> "opencascade::handle< StepGeom_BezierSurface >":
        """:rtype: opencascade::handle<StepGeom_BezierSurface>"""
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_BezierSurface(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aBezierSurface:
        	:type aBezierSurface: StepGeom_BezierSurface
        	:param aRationalBSplineSurface:
        	:type aRationalBSplineSurface: StepGeom_RationalBSplineSurface
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_Init(self, *args)


    def NbWeightsDataI(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_NbWeightsDataI(self, *args)


    def NbWeightsDataJ(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_NbWeightsDataJ(self, *args)


    def RationalBSplineSurface(self, *args) -> "opencascade::handle< StepGeom_RationalBSplineSurface >":
        """:rtype: opencascade::handle<StepGeom_RationalBSplineSurface>"""
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_RationalBSplineSurface(self, *args)


    def SetBezierSurface(self, *args) -> "void":
        """
        :param aBezierSurface:
        	:type aBezierSurface: StepGeom_BezierSurface
        	:rtype: None
        """
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_SetBezierSurface(self, *args)


    def SetRationalBSplineSurface(self, *args) -> "void":
        """
        :param aRationalBSplineSurface:
        	:type aRationalBSplineSurface: StepGeom_RationalBSplineSurface
        	:rtype: None
        """
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_SetRationalBSplineSurface(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a BezierSurfaceAndRationalBSplineSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_swiginit(self, _StepGeom.new_StepGeom_BezierSurfaceAndRationalBSplineSurface(*args))

    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray2OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray2OfReal>"""
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num1:
        	:type num1: int
        	:param num2:
        	:type num2: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BezierSurfaceAndRationalBSplineSurface
StepGeom_BezierSurfaceAndRationalBSplineSurface.BezierSurface = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_BezierSurface, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface.Init = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_Init, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface.NbWeightsDataI = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_NbWeightsDataI, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface.NbWeightsDataJ = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_NbWeightsDataJ, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface.RationalBSplineSurface = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_RationalBSplineSurface, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface.SetBezierSurface = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_SetBezierSurface, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface.SetRationalBSplineSurface = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_SetRationalBSplineSurface, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_SetWeightsData, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface.WeightsData = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_WeightsData, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_WeightsDataValue, None, StepGeom_BezierSurfaceAndRationalBSplineSurface)
StepGeom_BezierSurfaceAndRationalBSplineSurface_swigregister = _StepGeom.StepGeom_BezierSurfaceAndRationalBSplineSurface_swigregister
StepGeom_BezierSurfaceAndRationalBSplineSurface_swigregister(StepGeom_BezierSurfaceAndRationalBSplineSurface)

class StepGeom_CompositeCurveOnSurface(StepGeom_CompositeCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a CompositeCurveOnSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_CompositeCurveOnSurface_swiginit(self, _StepGeom.new_StepGeom_CompositeCurveOnSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_CompositeCurveOnSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_CompositeCurveOnSurface
StepGeom_CompositeCurveOnSurface_swigregister = _StepGeom.StepGeom_CompositeCurveOnSurface_swigregister
StepGeom_CompositeCurveOnSurface_swigregister(StepGeom_CompositeCurveOnSurface)

class StepGeom_DegenerateToroidalSurface(StepGeom_ToroidalSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:param aMajorRadius:
        	:type aMajorRadius: float
        	:param aMinorRadius:
        	:type aMinorRadius: float
        	:param aSelectOuter:
        	:type aSelectOuter: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_DegenerateToroidalSurface_Init(self, *args)


    def SelectOuter(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepGeom.StepGeom_DegenerateToroidalSurface_SelectOuter(self, *args)


    def SetSelectOuter(self, *args) -> "void":
        """
        :param aSelectOuter:
        	:type aSelectOuter: bool
        	:rtype: None
        """
        return _StepGeom.StepGeom_DegenerateToroidalSurface_SetSelectOuter(self, *args)


    def __init__(self, *args):
        """
        * Returns a DegenerateToroidalSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_DegenerateToroidalSurface_swiginit(self, _StepGeom.new_StepGeom_DegenerateToroidalSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_DegenerateToroidalSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_DegenerateToroidalSurface
StepGeom_DegenerateToroidalSurface.Init = new_instancemethod(_StepGeom.StepGeom_DegenerateToroidalSurface_Init, None, StepGeom_DegenerateToroidalSurface)
StepGeom_DegenerateToroidalSurface.SelectOuter = new_instancemethod(_StepGeom.StepGeom_DegenerateToroidalSurface_SelectOuter, None, StepGeom_DegenerateToroidalSurface)
StepGeom_DegenerateToroidalSurface.SetSelectOuter = new_instancemethod(_StepGeom.StepGeom_DegenerateToroidalSurface_SetSelectOuter, None, StepGeom_DegenerateToroidalSurface)
StepGeom_DegenerateToroidalSurface_swigregister = _StepGeom.StepGeom_DegenerateToroidalSurface_swigregister
StepGeom_DegenerateToroidalSurface_swigregister(StepGeom_DegenerateToroidalSurface)

class StepGeom_QuasiUniformCurve(StepGeom_BSplineCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a QuasiUniformCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_QuasiUniformCurve_swiginit(self, _StepGeom.new_StepGeom_QuasiUniformCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_QuasiUniformCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_QuasiUniformCurve
StepGeom_QuasiUniformCurve_swigregister = _StepGeom.StepGeom_QuasiUniformCurve_swigregister
StepGeom_QuasiUniformCurve_swigregister(StepGeom_QuasiUniformCurve)

class StepGeom_QuasiUniformCurveAndRationalBSplineCurve(StepGeom_BSplineCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aQuasiUniformCurve:
        	:type aQuasiUniformCurve: StepGeom_QuasiUniformCurve
        	:param aRationalBSplineCurve:
        	:type aRationalBSplineCurve: StepGeom_RationalBSplineCurve
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_Init(self, *args)


    def NbWeightsData(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_NbWeightsData(self, *args)


    def QuasiUniformCurve(self, *args) -> "opencascade::handle< StepGeom_QuasiUniformCurve >":
        """:rtype: opencascade::handle<StepGeom_QuasiUniformCurve>"""
        return _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_QuasiUniformCurve(self, *args)


    def RationalBSplineCurve(self, *args) -> "opencascade::handle< StepGeom_RationalBSplineCurve >":
        """:rtype: opencascade::handle<StepGeom_RationalBSplineCurve>"""
        return _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_RationalBSplineCurve(self, *args)


    def SetQuasiUniformCurve(self, *args) -> "void":
        """
        :param aQuasiUniformCurve:
        	:type aQuasiUniformCurve: StepGeom_QuasiUniformCurve
        	:rtype: None
        """
        return _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_SetQuasiUniformCurve(self, *args)


    def SetRationalBSplineCurve(self, *args) -> "void":
        """
        :param aRationalBSplineCurve:
        	:type aRationalBSplineCurve: StepGeom_RationalBSplineCurve
        	:rtype: None
        """
        return _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_SetRationalBSplineCurve(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a QuasiUniformCurveAndRationalBSplineCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_swiginit(self, _StepGeom.new_StepGeom_QuasiUniformCurveAndRationalBSplineCurve(*args))

    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_QuasiUniformCurveAndRationalBSplineCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_QuasiUniformCurveAndRationalBSplineCurve
StepGeom_QuasiUniformCurveAndRationalBSplineCurve.Init = new_instancemethod(_StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_Init, None, StepGeom_QuasiUniformCurveAndRationalBSplineCurve)
StepGeom_QuasiUniformCurveAndRationalBSplineCurve.NbWeightsData = new_instancemethod(_StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_NbWeightsData, None, StepGeom_QuasiUniformCurveAndRationalBSplineCurve)
StepGeom_QuasiUniformCurveAndRationalBSplineCurve.QuasiUniformCurve = new_instancemethod(_StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_QuasiUniformCurve, None, StepGeom_QuasiUniformCurveAndRationalBSplineCurve)
StepGeom_QuasiUniformCurveAndRationalBSplineCurve.RationalBSplineCurve = new_instancemethod(_StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_RationalBSplineCurve, None, StepGeom_QuasiUniformCurveAndRationalBSplineCurve)
StepGeom_QuasiUniformCurveAndRationalBSplineCurve.SetQuasiUniformCurve = new_instancemethod(_StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_SetQuasiUniformCurve, None, StepGeom_QuasiUniformCurveAndRationalBSplineCurve)
StepGeom_QuasiUniformCurveAndRationalBSplineCurve.SetRationalBSplineCurve = new_instancemethod(_StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_SetRationalBSplineCurve, None, StepGeom_QuasiUniformCurveAndRationalBSplineCurve)
StepGeom_QuasiUniformCurveAndRationalBSplineCurve.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_SetWeightsData, None, StepGeom_QuasiUniformCurveAndRationalBSplineCurve)
StepGeom_QuasiUniformCurveAndRationalBSplineCurve.WeightsData = new_instancemethod(_StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_WeightsData, None, StepGeom_QuasiUniformCurveAndRationalBSplineCurve)
StepGeom_QuasiUniformCurveAndRationalBSplineCurve.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_WeightsDataValue, None, StepGeom_QuasiUniformCurveAndRationalBSplineCurve)
StepGeom_QuasiUniformCurveAndRationalBSplineCurve_swigregister = _StepGeom.StepGeom_QuasiUniformCurveAndRationalBSplineCurve_swigregister
StepGeom_QuasiUniformCurveAndRationalBSplineCurve_swigregister(StepGeom_QuasiUniformCurveAndRationalBSplineCurve)

class StepGeom_QuasiUniformSurface(StepGeom_BSplineSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a QuasiUniformSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_QuasiUniformSurface_swiginit(self, _StepGeom.new_StepGeom_QuasiUniformSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_QuasiUniformSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_QuasiUniformSurface
StepGeom_QuasiUniformSurface_swigregister = _StepGeom.StepGeom_QuasiUniformSurface_swigregister
StepGeom_QuasiUniformSurface_swigregister(StepGeom_QuasiUniformSurface)

class StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface(StepGeom_BSplineSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aQuasiUniformSurface:
        	:type aQuasiUniformSurface: StepGeom_QuasiUniformSurface
        	:param aRationalBSplineSurface:
        	:type aRationalBSplineSurface: StepGeom_RationalBSplineSurface
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_Init(self, *args)


    def NbWeightsDataI(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_NbWeightsDataI(self, *args)


    def NbWeightsDataJ(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_NbWeightsDataJ(self, *args)


    def QuasiUniformSurface(self, *args) -> "opencascade::handle< StepGeom_QuasiUniformSurface >":
        """:rtype: opencascade::handle<StepGeom_QuasiUniformSurface>"""
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_QuasiUniformSurface(self, *args)


    def RationalBSplineSurface(self, *args) -> "opencascade::handle< StepGeom_RationalBSplineSurface >":
        """:rtype: opencascade::handle<StepGeom_RationalBSplineSurface>"""
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_RationalBSplineSurface(self, *args)


    def SetQuasiUniformSurface(self, *args) -> "void":
        """
        :param aQuasiUniformSurface:
        	:type aQuasiUniformSurface: StepGeom_QuasiUniformSurface
        	:rtype: None
        """
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_SetQuasiUniformSurface(self, *args)


    def SetRationalBSplineSurface(self, *args) -> "void":
        """
        :param aRationalBSplineSurface:
        	:type aRationalBSplineSurface: StepGeom_RationalBSplineSurface
        	:rtype: None
        """
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_SetRationalBSplineSurface(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a QuasiUniformSurfaceAndRationalBSplineSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_swiginit(self, _StepGeom.new_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface(*args))

    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray2OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray2OfReal>"""
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num1:
        	:type num1: int
        	:param num2:
        	:type num2: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.Init = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_Init, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.NbWeightsDataI = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_NbWeightsDataI, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.NbWeightsDataJ = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_NbWeightsDataJ, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.QuasiUniformSurface = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_QuasiUniformSurface, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.RationalBSplineSurface = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_RationalBSplineSurface, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.SetQuasiUniformSurface = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_SetQuasiUniformSurface, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.SetRationalBSplineSurface = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_SetRationalBSplineSurface, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_SetWeightsData, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.WeightsData = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_WeightsData, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_WeightsDataValue, None, StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_swigregister = _StepGeom.StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_swigregister
StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface_swigregister(StepGeom_QuasiUniformSurfaceAndRationalBSplineSurface)

class StepGeom_RationalBSplineCurve(StepGeom_BSplineCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_RationalBSplineCurve_Init(self, *args)


    def NbWeightsData(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_RationalBSplineCurve_NbWeightsData(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_RationalBSplineCurve_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a RationalBSplineCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_RationalBSplineCurve_swiginit(self, _StepGeom.new_StepGeom_RationalBSplineCurve(*args))

    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_RationalBSplineCurve_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_RationalBSplineCurve_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_RationalBSplineCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_RationalBSplineCurve
StepGeom_RationalBSplineCurve.Init = new_instancemethod(_StepGeom.StepGeom_RationalBSplineCurve_Init, None, StepGeom_RationalBSplineCurve)
StepGeom_RationalBSplineCurve.NbWeightsData = new_instancemethod(_StepGeom.StepGeom_RationalBSplineCurve_NbWeightsData, None, StepGeom_RationalBSplineCurve)
StepGeom_RationalBSplineCurve.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_RationalBSplineCurve_SetWeightsData, None, StepGeom_RationalBSplineCurve)
StepGeom_RationalBSplineCurve.WeightsData = new_instancemethod(_StepGeom.StepGeom_RationalBSplineCurve_WeightsData, None, StepGeom_RationalBSplineCurve)
StepGeom_RationalBSplineCurve.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_RationalBSplineCurve_WeightsDataValue, None, StepGeom_RationalBSplineCurve)
StepGeom_RationalBSplineCurve_swigregister = _StepGeom.StepGeom_RationalBSplineCurve_swigregister
StepGeom_RationalBSplineCurve_swigregister(StepGeom_RationalBSplineCurve)

class StepGeom_RationalBSplineSurface(StepGeom_BSplineSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_RationalBSplineSurface_Init(self, *args)


    def NbWeightsDataI(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_RationalBSplineSurface_NbWeightsDataI(self, *args)


    def NbWeightsDataJ(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_RationalBSplineSurface_NbWeightsDataJ(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_RationalBSplineSurface_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a RationalBSplineSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_RationalBSplineSurface_swiginit(self, _StepGeom.new_StepGeom_RationalBSplineSurface(*args))

    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray2OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray2OfReal>"""
        return _StepGeom.StepGeom_RationalBSplineSurface_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num1:
        	:type num1: int
        	:param num2:
        	:type num2: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_RationalBSplineSurface_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_RationalBSplineSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_RationalBSplineSurface
StepGeom_RationalBSplineSurface.Init = new_instancemethod(_StepGeom.StepGeom_RationalBSplineSurface_Init, None, StepGeom_RationalBSplineSurface)
StepGeom_RationalBSplineSurface.NbWeightsDataI = new_instancemethod(_StepGeom.StepGeom_RationalBSplineSurface_NbWeightsDataI, None, StepGeom_RationalBSplineSurface)
StepGeom_RationalBSplineSurface.NbWeightsDataJ = new_instancemethod(_StepGeom.StepGeom_RationalBSplineSurface_NbWeightsDataJ, None, StepGeom_RationalBSplineSurface)
StepGeom_RationalBSplineSurface.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_RationalBSplineSurface_SetWeightsData, None, StepGeom_RationalBSplineSurface)
StepGeom_RationalBSplineSurface.WeightsData = new_instancemethod(_StepGeom.StepGeom_RationalBSplineSurface_WeightsData, None, StepGeom_RationalBSplineSurface)
StepGeom_RationalBSplineSurface.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_RationalBSplineSurface_WeightsDataValue, None, StepGeom_RationalBSplineSurface)
StepGeom_RationalBSplineSurface_swigregister = _StepGeom.StepGeom_RationalBSplineSurface_swigregister
StepGeom_RationalBSplineSurface_swigregister(StepGeom_RationalBSplineSurface)

class StepGeom_UniformCurve(StepGeom_BSplineCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a UniformCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_UniformCurve_swiginit(self, _StepGeom.new_StepGeom_UniformCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_UniformCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_UniformCurve
StepGeom_UniformCurve_swigregister = _StepGeom.StepGeom_UniformCurve_swigregister
StepGeom_UniformCurve_swigregister(StepGeom_UniformCurve)

class StepGeom_UniformCurveAndRationalBSplineCurve(StepGeom_BSplineCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aUniformCurve:
        	:type aUniformCurve: StepGeom_UniformCurve
        	:param aRationalBSplineCurve:
        	:type aRationalBSplineCurve: StepGeom_RationalBSplineCurve
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDegree:
        	:type aDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray1OfCartesianPoint
        	:param aCurveForm:
        	:type aCurveForm: StepGeom_BSplineCurveForm
        	:param aClosedCurve:
        	:type aClosedCurve: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_Init(self, *args)


    def NbWeightsData(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_NbWeightsData(self, *args)


    def RationalBSplineCurve(self, *args) -> "opencascade::handle< StepGeom_RationalBSplineCurve >":
        """:rtype: opencascade::handle<StepGeom_RationalBSplineCurve>"""
        return _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_RationalBSplineCurve(self, *args)


    def SetRationalBSplineCurve(self, *args) -> "void":
        """
        :param aRationalBSplineCurve:
        	:type aRationalBSplineCurve: StepGeom_RationalBSplineCurve
        	:rtype: None
        """
        return _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_SetRationalBSplineCurve(self, *args)


    def SetUniformCurve(self, *args) -> "void":
        """
        :param aUniformCurve:
        	:type aUniformCurve: StepGeom_UniformCurve
        	:rtype: None
        """
        return _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_SetUniformCurve(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray1OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a UniformCurveAndRationalBSplineCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_swiginit(self, _StepGeom.new_StepGeom_UniformCurveAndRationalBSplineCurve(*args))

    def UniformCurve(self, *args) -> "opencascade::handle< StepGeom_UniformCurve >":
        """:rtype: opencascade::handle<StepGeom_UniformCurve>"""
        return _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_UniformCurve(self, *args)


    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray1OfReal>"""
        return _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num:
        	:type num: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_UniformCurveAndRationalBSplineCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_UniformCurveAndRationalBSplineCurve
StepGeom_UniformCurveAndRationalBSplineCurve.Init = new_instancemethod(_StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_Init, None, StepGeom_UniformCurveAndRationalBSplineCurve)
StepGeom_UniformCurveAndRationalBSplineCurve.NbWeightsData = new_instancemethod(_StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_NbWeightsData, None, StepGeom_UniformCurveAndRationalBSplineCurve)
StepGeom_UniformCurveAndRationalBSplineCurve.RationalBSplineCurve = new_instancemethod(_StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_RationalBSplineCurve, None, StepGeom_UniformCurveAndRationalBSplineCurve)
StepGeom_UniformCurveAndRationalBSplineCurve.SetRationalBSplineCurve = new_instancemethod(_StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_SetRationalBSplineCurve, None, StepGeom_UniformCurveAndRationalBSplineCurve)
StepGeom_UniformCurveAndRationalBSplineCurve.SetUniformCurve = new_instancemethod(_StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_SetUniformCurve, None, StepGeom_UniformCurveAndRationalBSplineCurve)
StepGeom_UniformCurveAndRationalBSplineCurve.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_SetWeightsData, None, StepGeom_UniformCurveAndRationalBSplineCurve)
StepGeom_UniformCurveAndRationalBSplineCurve.UniformCurve = new_instancemethod(_StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_UniformCurve, None, StepGeom_UniformCurveAndRationalBSplineCurve)
StepGeom_UniformCurveAndRationalBSplineCurve.WeightsData = new_instancemethod(_StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_WeightsData, None, StepGeom_UniformCurveAndRationalBSplineCurve)
StepGeom_UniformCurveAndRationalBSplineCurve.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_WeightsDataValue, None, StepGeom_UniformCurveAndRationalBSplineCurve)
StepGeom_UniformCurveAndRationalBSplineCurve_swigregister = _StepGeom.StepGeom_UniformCurveAndRationalBSplineCurve_swigregister
StepGeom_UniformCurveAndRationalBSplineCurve_swigregister(StepGeom_UniformCurveAndRationalBSplineCurve)

class StepGeom_UniformSurface(StepGeom_BSplineSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a UniformSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_UniformSurface_swiginit(self, _StepGeom.new_StepGeom_UniformSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_UniformSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_UniformSurface
StepGeom_UniformSurface_swigregister = _StepGeom.StepGeom_UniformSurface_swigregister
StepGeom_UniformSurface_swigregister(StepGeom_UniformSurface)

class StepGeom_UniformSurfaceAndRationalBSplineSurface(StepGeom_BSplineSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aUniformSurface:
        	:type aUniformSurface: StepGeom_UniformSurface
        	:param aRationalBSplineSurface:
        	:type aRationalBSplineSurface: StepGeom_RationalBSplineSurface
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aUDegree:
        	:type aUDegree: int
        	:param aVDegree:
        	:type aVDegree: int
        	:param aControlPointsList:
        	:type aControlPointsList: StepGeom_HArray2OfCartesianPoint
        	:param aSurfaceForm:
        	:type aSurfaceForm: StepGeom_BSplineSurfaceForm
        	:param aUClosed:
        	:type aUClosed: StepData_Logical
        	:param aVClosed:
        	:type aVClosed: StepData_Logical
        	:param aSelfIntersect:
        	:type aSelfIntersect: StepData_Logical
        	:param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_Init(self, *args)


    def NbWeightsDataI(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_NbWeightsDataI(self, *args)


    def NbWeightsDataJ(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_NbWeightsDataJ(self, *args)


    def RationalBSplineSurface(self, *args) -> "opencascade::handle< StepGeom_RationalBSplineSurface >":
        """:rtype: opencascade::handle<StepGeom_RationalBSplineSurface>"""
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_RationalBSplineSurface(self, *args)


    def SetRationalBSplineSurface(self, *args) -> "void":
        """
        :param aRationalBSplineSurface:
        	:type aRationalBSplineSurface: StepGeom_RationalBSplineSurface
        	:rtype: None
        """
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_SetRationalBSplineSurface(self, *args)


    def SetUniformSurface(self, *args) -> "void":
        """
        :param aUniformSurface:
        	:type aUniformSurface: StepGeom_UniformSurface
        	:rtype: None
        """
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_SetUniformSurface(self, *args)


    def SetWeightsData(self, *args) -> "void":
        """
        :param aWeightsData:
        	:type aWeightsData: TColStd_HArray2OfReal
        	:rtype: None
        """
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_SetWeightsData(self, *args)


    def __init__(self, *args):
        """
        * Returns a UniformSurfaceAndRationalBSplineSurface
        	:rtype: None
        """
        _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_swiginit(self, _StepGeom.new_StepGeom_UniformSurfaceAndRationalBSplineSurface(*args))

    def UniformSurface(self, *args) -> "opencascade::handle< StepGeom_UniformSurface >":
        """:rtype: opencascade::handle<StepGeom_UniformSurface>"""
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_UniformSurface(self, *args)


    def WeightsData(self, *args) -> "opencascade::handle< TColStd_HArray2OfReal >":
        """:rtype: opencascade::handle<TColStd_HArray2OfReal>"""
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_WeightsData(self, *args)


    def WeightsDataValue(self, *args) -> "Standard_Real":
        """
        :param num1:
        	:type num1: int
        	:param num2:
        	:type num2: int
        	:rtype: float
        """
        return _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_WeightsDataValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_UniformSurfaceAndRationalBSplineSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_UniformSurfaceAndRationalBSplineSurface
StepGeom_UniformSurfaceAndRationalBSplineSurface.Init = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_Init, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface.NbWeightsDataI = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_NbWeightsDataI, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface.NbWeightsDataJ = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_NbWeightsDataJ, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface.RationalBSplineSurface = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_RationalBSplineSurface, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface.SetRationalBSplineSurface = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_SetRationalBSplineSurface, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface.SetUniformSurface = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_SetUniformSurface, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface.SetWeightsData = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_SetWeightsData, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface.UniformSurface = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_UniformSurface, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface.WeightsData = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_WeightsData, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface.WeightsDataValue = new_instancemethod(_StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_WeightsDataValue, None, StepGeom_UniformSurfaceAndRationalBSplineSurface)
StepGeom_UniformSurfaceAndRationalBSplineSurface_swigregister = _StepGeom.StepGeom_UniformSurfaceAndRationalBSplineSurface_swigregister
StepGeom_UniformSurfaceAndRationalBSplineSurface_swigregister(StepGeom_UniformSurfaceAndRationalBSplineSurface)

class StepGeom_BoundaryCurve(StepGeom_CompositeCurveOnSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a BoundaryCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_BoundaryCurve_swiginit(self, _StepGeom.new_StepGeom_BoundaryCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_BoundaryCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_BoundaryCurve
StepGeom_BoundaryCurve_swigregister = _StepGeom.StepGeom_BoundaryCurve_swigregister
StepGeom_BoundaryCurve_swigregister(StepGeom_BoundaryCurve)

class StepGeom_OuterBoundaryCurve(StepGeom_BoundaryCurve):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a OuterBoundaryCurve
        	:rtype: None
        """
        _StepGeom.StepGeom_OuterBoundaryCurve_swiginit(self, _StepGeom.new_StepGeom_OuterBoundaryCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_OuterBoundaryCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepGeom.delete_StepGeom_OuterBoundaryCurve
StepGeom_OuterBoundaryCurve_swigregister = _StepGeom.StepGeom_OuterBoundaryCurve_swigregister
StepGeom_OuterBoundaryCurve_swigregister(StepGeom_OuterBoundaryCurve)

class StepGeom_HArray1OfCartesianPoint(StepGeom_Array1OfCartesianPoint, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_HArray1OfCartesianPoint_swiginit(self, _StepGeom.new_StepGeom_HArray1OfCartesianPoint(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_HArray1OfCartesianPoint_DownCast(t)

    __swig_destroy__ = _StepGeom.delete_StepGeom_HArray1OfCartesianPoint
StepGeom_HArray1OfCartesianPoint.Array1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfCartesianPoint_Array1, None, StepGeom_HArray1OfCartesianPoint)
StepGeom_HArray1OfCartesianPoint.ChangeArray1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfCartesianPoint_ChangeArray1, None, StepGeom_HArray1OfCartesianPoint)
StepGeom_HArray1OfCartesianPoint_swigregister = _StepGeom.StepGeom_HArray1OfCartesianPoint_swigregister
StepGeom_HArray1OfCartesianPoint_swigregister(StepGeom_HArray1OfCartesianPoint)

class StepGeom_HArray1OfPcurveOrSurface(StepGeom_Array1OfPcurveOrSurface, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_HArray1OfPcurveOrSurface_swiginit(self, _StepGeom.new_StepGeom_HArray1OfPcurveOrSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_HArray1OfPcurveOrSurface_DownCast(t)

    __swig_destroy__ = _StepGeom.delete_StepGeom_HArray1OfPcurveOrSurface
StepGeom_HArray1OfPcurveOrSurface.Array1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfPcurveOrSurface_Array1, None, StepGeom_HArray1OfPcurveOrSurface)
StepGeom_HArray1OfPcurveOrSurface.ChangeArray1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfPcurveOrSurface_ChangeArray1, None, StepGeom_HArray1OfPcurveOrSurface)
StepGeom_HArray1OfPcurveOrSurface_swigregister = _StepGeom.StepGeom_HArray1OfPcurveOrSurface_swigregister
StepGeom_HArray1OfPcurveOrSurface_swigregister(StepGeom_HArray1OfPcurveOrSurface)

class StepGeom_HArray1OfSurfaceBoundary(StepGeom_Array1OfSurfaceBoundary, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_HArray1OfSurfaceBoundary_swiginit(self, _StepGeom.new_StepGeom_HArray1OfSurfaceBoundary(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_HArray1OfSurfaceBoundary_DownCast(t)

    __swig_destroy__ = _StepGeom.delete_StepGeom_HArray1OfSurfaceBoundary
StepGeom_HArray1OfSurfaceBoundary.Array1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfSurfaceBoundary_Array1, None, StepGeom_HArray1OfSurfaceBoundary)
StepGeom_HArray1OfSurfaceBoundary.ChangeArray1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfSurfaceBoundary_ChangeArray1, None, StepGeom_HArray1OfSurfaceBoundary)
StepGeom_HArray1OfSurfaceBoundary_swigregister = _StepGeom.StepGeom_HArray1OfSurfaceBoundary_swigregister
StepGeom_HArray1OfSurfaceBoundary_swigregister(StepGeom_HArray1OfSurfaceBoundary)

class StepGeom_HArray1OfBoundaryCurve(StepGeom_Array1OfBoundaryCurve, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_HArray1OfBoundaryCurve_swiginit(self, _StepGeom.new_StepGeom_HArray1OfBoundaryCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_HArray1OfBoundaryCurve_DownCast(t)

    __swig_destroy__ = _StepGeom.delete_StepGeom_HArray1OfBoundaryCurve
StepGeom_HArray1OfBoundaryCurve.Array1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfBoundaryCurve_Array1, None, StepGeom_HArray1OfBoundaryCurve)
StepGeom_HArray1OfBoundaryCurve.ChangeArray1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfBoundaryCurve_ChangeArray1, None, StepGeom_HArray1OfBoundaryCurve)
StepGeom_HArray1OfBoundaryCurve_swigregister = _StepGeom.StepGeom_HArray1OfBoundaryCurve_swigregister
StepGeom_HArray1OfBoundaryCurve_swigregister(StepGeom_HArray1OfBoundaryCurve)

class StepGeom_HArray1OfCompositeCurveSegment(StepGeom_Array1OfCompositeCurveSegment, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_HArray1OfCompositeCurveSegment_swiginit(self, _StepGeom.new_StepGeom_HArray1OfCompositeCurveSegment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_HArray1OfCompositeCurveSegment_DownCast(t)

    __swig_destroy__ = _StepGeom.delete_StepGeom_HArray1OfCompositeCurveSegment
StepGeom_HArray1OfCompositeCurveSegment.Array1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfCompositeCurveSegment_Array1, None, StepGeom_HArray1OfCompositeCurveSegment)
StepGeom_HArray1OfCompositeCurveSegment.ChangeArray1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfCompositeCurveSegment_ChangeArray1, None, StepGeom_HArray1OfCompositeCurveSegment)
StepGeom_HArray1OfCompositeCurveSegment_swigregister = _StepGeom.StepGeom_HArray1OfCompositeCurveSegment_swigregister
StepGeom_HArray1OfCompositeCurveSegment_swigregister(StepGeom_HArray1OfCompositeCurveSegment)

class StepGeom_HArray1OfCurve(StepGeom_Array1OfCurve, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_HArray1OfCurve_swiginit(self, _StepGeom.new_StepGeom_HArray1OfCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_HArray1OfCurve_DownCast(t)

    __swig_destroy__ = _StepGeom.delete_StepGeom_HArray1OfCurve
StepGeom_HArray1OfCurve.Array1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfCurve_Array1, None, StepGeom_HArray1OfCurve)
StepGeom_HArray1OfCurve.ChangeArray1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfCurve_ChangeArray1, None, StepGeom_HArray1OfCurve)
StepGeom_HArray1OfCurve_swigregister = _StepGeom.StepGeom_HArray1OfCurve_swigregister
StepGeom_HArray1OfCurve_swigregister(StepGeom_HArray1OfCurve)

class StepGeom_HArray1OfTrimmingSelect(StepGeom_Array1OfTrimmingSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_HArray1OfTrimmingSelect_swiginit(self, _StepGeom.new_StepGeom_HArray1OfTrimmingSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_HArray1OfTrimmingSelect_DownCast(t)

    __swig_destroy__ = _StepGeom.delete_StepGeom_HArray1OfTrimmingSelect
StepGeom_HArray1OfTrimmingSelect.Array1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfTrimmingSelect_Array1, None, StepGeom_HArray1OfTrimmingSelect)
StepGeom_HArray1OfTrimmingSelect.ChangeArray1 = new_instancemethod(_StepGeom.StepGeom_HArray1OfTrimmingSelect_ChangeArray1, None, StepGeom_HArray1OfTrimmingSelect)
StepGeom_HArray1OfTrimmingSelect_swigregister = _StepGeom.StepGeom_HArray1OfTrimmingSelect_swigregister
StepGeom_HArray1OfTrimmingSelect_swigregister(StepGeom_HArray1OfTrimmingSelect)

class StepGeom_HArray2OfSurfacePatch(StepGeom_Array2OfSurfacePatch, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_HArray2OfSurfacePatch_swiginit(self, _StepGeom.new_StepGeom_HArray2OfSurfacePatch(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_HArray2OfSurfacePatch_DownCast(t)

    __swig_destroy__ = _StepGeom.delete_StepGeom_HArray2OfSurfacePatch
StepGeom_HArray2OfSurfacePatch.Array2 = new_instancemethod(_StepGeom.StepGeom_HArray2OfSurfacePatch_Array2, None, StepGeom_HArray2OfSurfacePatch)
StepGeom_HArray2OfSurfacePatch.ChangeArray2 = new_instancemethod(_StepGeom.StepGeom_HArray2OfSurfacePatch_ChangeArray2, None, StepGeom_HArray2OfSurfacePatch)
StepGeom_HArray2OfSurfacePatch_swigregister = _StepGeom.StepGeom_HArray2OfSurfacePatch_swigregister
StepGeom_HArray2OfSurfacePatch_swigregister(StepGeom_HArray2OfSurfacePatch)

class StepGeom_HArray2OfCartesianPoint(StepGeom_Array2OfCartesianPoint, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepGeom.StepGeom_HArray2OfCartesianPoint_swiginit(self, _StepGeom.new_StepGeom_HArray2OfCartesianPoint(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepGeom_HArray2OfCartesianPoint_DownCast(t)

    __swig_destroy__ = _StepGeom.delete_StepGeom_HArray2OfCartesianPoint
StepGeom_HArray2OfCartesianPoint.Array2 = new_instancemethod(_StepGeom.StepGeom_HArray2OfCartesianPoint_Array2, None, StepGeom_HArray2OfCartesianPoint)
StepGeom_HArray2OfCartesianPoint.ChangeArray2 = new_instancemethod(_StepGeom.StepGeom_HArray2OfCartesianPoint_ChangeArray2, None, StepGeom_HArray2OfCartesianPoint)
StepGeom_HArray2OfCartesianPoint_swigregister = _StepGeom.StepGeom_HArray2OfCartesianPoint_swigregister
StepGeom_HArray2OfCartesianPoint_swigregister(StepGeom_HArray2OfCartesianPoint)



