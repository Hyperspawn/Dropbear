# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepShape module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepshape.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StepShape.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StepShape')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StepShape')
    _StepShape = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepShape', [dirname(__file__)])
        except ImportError:
            import _StepShape
            return _StepShape
        try:
            _mod = imp.load_module('_StepShape', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _StepShape = swig_import_helper()
    del swig_import_helper
else:
    import _StepShape
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepShape.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_StepShape.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_StepShape.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_StepShape.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_StepShape.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_StepShape.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_StepShape.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_StepShape.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_StepShape.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_StepShape.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_StepShape.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_StepShape.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_StepShape.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_StepShape.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_StepShape.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_StepShape.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_StepShape.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _StepShape.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _StepShape.process_exception(error, method_name, class_name)
process_exception = _StepShape.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepGeom
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepRepr
import OCC.Core.StepBasic
StepShape_Equal = _StepShape.StepShape_Equal
StepShape_Large = _StepShape.StepShape_Large
StepShape_Small = _StepShape.StepShape_Small
StepShape_boDifference = _StepShape.StepShape_boDifference
StepShape_boIntersection = _StepShape.StepShape_boIntersection
StepShape_boUnion = _StepShape.StepShape_boUnion

def Handle_StepShape_Block_Create() -> "opencascade::handle< StepShape_Block >":
    return _StepShape.Handle_StepShape_Block_Create()
Handle_StepShape_Block_Create = _StepShape.Handle_StepShape_Block_Create

def Handle_StepShape_Block_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Block >":
    return _StepShape.Handle_StepShape_Block_DownCast(t)
Handle_StepShape_Block_DownCast = _StepShape.Handle_StepShape_Block_DownCast

def Handle_StepShape_Block_IsNull(t: 'opencascade::handle< StepShape_Block > const &') -> "bool":
    return _StepShape.Handle_StepShape_Block_IsNull(t)
Handle_StepShape_Block_IsNull = _StepShape.Handle_StepShape_Block_IsNull

def Handle_StepShape_BooleanResult_Create() -> "opencascade::handle< StepShape_BooleanResult >":
    return _StepShape.Handle_StepShape_BooleanResult_Create()
Handle_StepShape_BooleanResult_Create = _StepShape.Handle_StepShape_BooleanResult_Create

def Handle_StepShape_BooleanResult_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_BooleanResult >":
    return _StepShape.Handle_StepShape_BooleanResult_DownCast(t)
Handle_StepShape_BooleanResult_DownCast = _StepShape.Handle_StepShape_BooleanResult_DownCast

def Handle_StepShape_BooleanResult_IsNull(t: 'opencascade::handle< StepShape_BooleanResult > const &') -> "bool":
    return _StepShape.Handle_StepShape_BooleanResult_IsNull(t)
Handle_StepShape_BooleanResult_IsNull = _StepShape.Handle_StepShape_BooleanResult_IsNull

def Handle_StepShape_BoxDomain_Create() -> "opencascade::handle< StepShape_BoxDomain >":
    return _StepShape.Handle_StepShape_BoxDomain_Create()
Handle_StepShape_BoxDomain_Create = _StepShape.Handle_StepShape_BoxDomain_Create

def Handle_StepShape_BoxDomain_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_BoxDomain >":
    return _StepShape.Handle_StepShape_BoxDomain_DownCast(t)
Handle_StepShape_BoxDomain_DownCast = _StepShape.Handle_StepShape_BoxDomain_DownCast

def Handle_StepShape_BoxDomain_IsNull(t: 'opencascade::handle< StepShape_BoxDomain > const &') -> "bool":
    return _StepShape.Handle_StepShape_BoxDomain_IsNull(t)
Handle_StepShape_BoxDomain_IsNull = _StepShape.Handle_StepShape_BoxDomain_IsNull

def Handle_StepShape_ConnectedFaceShapeRepresentation_Create() -> "opencascade::handle< StepShape_ConnectedFaceShapeRepresentation >":
    return _StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation_Create()
Handle_StepShape_ConnectedFaceShapeRepresentation_Create = _StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation_Create

def Handle_StepShape_ConnectedFaceShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ConnectedFaceShapeRepresentation >":
    return _StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation_DownCast(t)
Handle_StepShape_ConnectedFaceShapeRepresentation_DownCast = _StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation_DownCast

def Handle_StepShape_ConnectedFaceShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_ConnectedFaceShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation_IsNull(t)
Handle_StepShape_ConnectedFaceShapeRepresentation_IsNull = _StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation_IsNull

def Handle_StepShape_ContextDependentShapeRepresentation_Create() -> "opencascade::handle< StepShape_ContextDependentShapeRepresentation >":
    return _StepShape.Handle_StepShape_ContextDependentShapeRepresentation_Create()
Handle_StepShape_ContextDependentShapeRepresentation_Create = _StepShape.Handle_StepShape_ContextDependentShapeRepresentation_Create

def Handle_StepShape_ContextDependentShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ContextDependentShapeRepresentation >":
    return _StepShape.Handle_StepShape_ContextDependentShapeRepresentation_DownCast(t)
Handle_StepShape_ContextDependentShapeRepresentation_DownCast = _StepShape.Handle_StepShape_ContextDependentShapeRepresentation_DownCast

def Handle_StepShape_ContextDependentShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_ContextDependentShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_ContextDependentShapeRepresentation_IsNull(t)
Handle_StepShape_ContextDependentShapeRepresentation_IsNull = _StepShape.Handle_StepShape_ContextDependentShapeRepresentation_IsNull

def Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_Create() -> "opencascade::handle< StepShape_DefinitionalRepresentationAndShapeRepresentation >":
    return _StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_Create()
Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_Create = _StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_Create

def Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_DefinitionalRepresentationAndShapeRepresentation >":
    return _StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_DownCast(t)
Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_DownCast = _StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_DownCast

def Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_DefinitionalRepresentationAndShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_IsNull(t)
Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_IsNull = _StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_IsNull

def Handle_StepShape_DimensionalCharacteristicRepresentation_Create() -> "opencascade::handle< StepShape_DimensionalCharacteristicRepresentation >":
    return _StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation_Create()
Handle_StepShape_DimensionalCharacteristicRepresentation_Create = _StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation_Create

def Handle_StepShape_DimensionalCharacteristicRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_DimensionalCharacteristicRepresentation >":
    return _StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation_DownCast(t)
Handle_StepShape_DimensionalCharacteristicRepresentation_DownCast = _StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation_DownCast

def Handle_StepShape_DimensionalCharacteristicRepresentation_IsNull(t: 'opencascade::handle< StepShape_DimensionalCharacteristicRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation_IsNull(t)
Handle_StepShape_DimensionalCharacteristicRepresentation_IsNull = _StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation_IsNull

def Handle_StepShape_DimensionalLocation_Create() -> "opencascade::handle< StepShape_DimensionalLocation >":
    return _StepShape.Handle_StepShape_DimensionalLocation_Create()
Handle_StepShape_DimensionalLocation_Create = _StepShape.Handle_StepShape_DimensionalLocation_Create

def Handle_StepShape_DimensionalLocation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_DimensionalLocation >":
    return _StepShape.Handle_StepShape_DimensionalLocation_DownCast(t)
Handle_StepShape_DimensionalLocation_DownCast = _StepShape.Handle_StepShape_DimensionalLocation_DownCast

def Handle_StepShape_DimensionalLocation_IsNull(t: 'opencascade::handle< StepShape_DimensionalLocation > const &') -> "bool":
    return _StepShape.Handle_StepShape_DimensionalLocation_IsNull(t)
Handle_StepShape_DimensionalLocation_IsNull = _StepShape.Handle_StepShape_DimensionalLocation_IsNull

def Handle_StepShape_DimensionalSize_Create() -> "opencascade::handle< StepShape_DimensionalSize >":
    return _StepShape.Handle_StepShape_DimensionalSize_Create()
Handle_StepShape_DimensionalSize_Create = _StepShape.Handle_StepShape_DimensionalSize_Create

def Handle_StepShape_DimensionalSize_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_DimensionalSize >":
    return _StepShape.Handle_StepShape_DimensionalSize_DownCast(t)
Handle_StepShape_DimensionalSize_DownCast = _StepShape.Handle_StepShape_DimensionalSize_DownCast

def Handle_StepShape_DimensionalSize_IsNull(t: 'opencascade::handle< StepShape_DimensionalSize > const &') -> "bool":
    return _StepShape.Handle_StepShape_DimensionalSize_IsNull(t)
Handle_StepShape_DimensionalSize_IsNull = _StepShape.Handle_StepShape_DimensionalSize_IsNull

def Handle_StepShape_EdgeBasedWireframeModel_Create() -> "opencascade::handle< StepShape_EdgeBasedWireframeModel >":
    return _StepShape.Handle_StepShape_EdgeBasedWireframeModel_Create()
Handle_StepShape_EdgeBasedWireframeModel_Create = _StepShape.Handle_StepShape_EdgeBasedWireframeModel_Create

def Handle_StepShape_EdgeBasedWireframeModel_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_EdgeBasedWireframeModel >":
    return _StepShape.Handle_StepShape_EdgeBasedWireframeModel_DownCast(t)
Handle_StepShape_EdgeBasedWireframeModel_DownCast = _StepShape.Handle_StepShape_EdgeBasedWireframeModel_DownCast

def Handle_StepShape_EdgeBasedWireframeModel_IsNull(t: 'opencascade::handle< StepShape_EdgeBasedWireframeModel > const &') -> "bool":
    return _StepShape.Handle_StepShape_EdgeBasedWireframeModel_IsNull(t)
Handle_StepShape_EdgeBasedWireframeModel_IsNull = _StepShape.Handle_StepShape_EdgeBasedWireframeModel_IsNull

def Handle_StepShape_FaceBasedSurfaceModel_Create() -> "opencascade::handle< StepShape_FaceBasedSurfaceModel >":
    return _StepShape.Handle_StepShape_FaceBasedSurfaceModel_Create()
Handle_StepShape_FaceBasedSurfaceModel_Create = _StepShape.Handle_StepShape_FaceBasedSurfaceModel_Create

def Handle_StepShape_FaceBasedSurfaceModel_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_FaceBasedSurfaceModel >":
    return _StepShape.Handle_StepShape_FaceBasedSurfaceModel_DownCast(t)
Handle_StepShape_FaceBasedSurfaceModel_DownCast = _StepShape.Handle_StepShape_FaceBasedSurfaceModel_DownCast

def Handle_StepShape_FaceBasedSurfaceModel_IsNull(t: 'opencascade::handle< StepShape_FaceBasedSurfaceModel > const &') -> "bool":
    return _StepShape.Handle_StepShape_FaceBasedSurfaceModel_IsNull(t)
Handle_StepShape_FaceBasedSurfaceModel_IsNull = _StepShape.Handle_StepShape_FaceBasedSurfaceModel_IsNull

def Handle_StepShape_GeometricSet_Create() -> "opencascade::handle< StepShape_GeometricSet >":
    return _StepShape.Handle_StepShape_GeometricSet_Create()
Handle_StepShape_GeometricSet_Create = _StepShape.Handle_StepShape_GeometricSet_Create

def Handle_StepShape_GeometricSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_GeometricSet >":
    return _StepShape.Handle_StepShape_GeometricSet_DownCast(t)
Handle_StepShape_GeometricSet_DownCast = _StepShape.Handle_StepShape_GeometricSet_DownCast

def Handle_StepShape_GeometricSet_IsNull(t: 'opencascade::handle< StepShape_GeometricSet > const &') -> "bool":
    return _StepShape.Handle_StepShape_GeometricSet_IsNull(t)
Handle_StepShape_GeometricSet_IsNull = _StepShape.Handle_StepShape_GeometricSet_IsNull

def Handle_StepShape_HalfSpaceSolid_Create() -> "opencascade::handle< StepShape_HalfSpaceSolid >":
    return _StepShape.Handle_StepShape_HalfSpaceSolid_Create()
Handle_StepShape_HalfSpaceSolid_Create = _StepShape.Handle_StepShape_HalfSpaceSolid_Create

def Handle_StepShape_HalfSpaceSolid_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HalfSpaceSolid >":
    return _StepShape.Handle_StepShape_HalfSpaceSolid_DownCast(t)
Handle_StepShape_HalfSpaceSolid_DownCast = _StepShape.Handle_StepShape_HalfSpaceSolid_DownCast

def Handle_StepShape_HalfSpaceSolid_IsNull(t: 'opencascade::handle< StepShape_HalfSpaceSolid > const &') -> "bool":
    return _StepShape.Handle_StepShape_HalfSpaceSolid_IsNull(t)
Handle_StepShape_HalfSpaceSolid_IsNull = _StepShape.Handle_StepShape_HalfSpaceSolid_IsNull

def Handle_StepShape_LimitsAndFits_Create() -> "opencascade::handle< StepShape_LimitsAndFits >":
    return _StepShape.Handle_StepShape_LimitsAndFits_Create()
Handle_StepShape_LimitsAndFits_Create = _StepShape.Handle_StepShape_LimitsAndFits_Create

def Handle_StepShape_LimitsAndFits_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_LimitsAndFits >":
    return _StepShape.Handle_StepShape_LimitsAndFits_DownCast(t)
Handle_StepShape_LimitsAndFits_DownCast = _StepShape.Handle_StepShape_LimitsAndFits_DownCast

def Handle_StepShape_LimitsAndFits_IsNull(t: 'opencascade::handle< StepShape_LimitsAndFits > const &') -> "bool":
    return _StepShape.Handle_StepShape_LimitsAndFits_IsNull(t)
Handle_StepShape_LimitsAndFits_IsNull = _StepShape.Handle_StepShape_LimitsAndFits_IsNull

def Handle_StepShape_MeasureQualification_Create() -> "opencascade::handle< StepShape_MeasureQualification >":
    return _StepShape.Handle_StepShape_MeasureQualification_Create()
Handle_StepShape_MeasureQualification_Create = _StepShape.Handle_StepShape_MeasureQualification_Create

def Handle_StepShape_MeasureQualification_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_MeasureQualification >":
    return _StepShape.Handle_StepShape_MeasureQualification_DownCast(t)
Handle_StepShape_MeasureQualification_DownCast = _StepShape.Handle_StepShape_MeasureQualification_DownCast

def Handle_StepShape_MeasureQualification_IsNull(t: 'opencascade::handle< StepShape_MeasureQualification > const &') -> "bool":
    return _StepShape.Handle_StepShape_MeasureQualification_IsNull(t)
Handle_StepShape_MeasureQualification_IsNull = _StepShape.Handle_StepShape_MeasureQualification_IsNull

def Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Create() -> "opencascade::handle< StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem >":
    return _StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Create()
Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Create = _StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Create

def Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem >":
    return _StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_DownCast(t)
Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_DownCast = _StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_DownCast

def Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_IsNull(t: 'opencascade::handle< StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem > const &') -> "bool":
    return _StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_IsNull(t)
Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_IsNull = _StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_IsNull

def Handle_StepShape_PlusMinusTolerance_Create() -> "opencascade::handle< StepShape_PlusMinusTolerance >":
    return _StepShape.Handle_StepShape_PlusMinusTolerance_Create()
Handle_StepShape_PlusMinusTolerance_Create = _StepShape.Handle_StepShape_PlusMinusTolerance_Create

def Handle_StepShape_PlusMinusTolerance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_PlusMinusTolerance >":
    return _StepShape.Handle_StepShape_PlusMinusTolerance_DownCast(t)
Handle_StepShape_PlusMinusTolerance_DownCast = _StepShape.Handle_StepShape_PlusMinusTolerance_DownCast

def Handle_StepShape_PlusMinusTolerance_IsNull(t: 'opencascade::handle< StepShape_PlusMinusTolerance > const &') -> "bool":
    return _StepShape.Handle_StepShape_PlusMinusTolerance_IsNull(t)
Handle_StepShape_PlusMinusTolerance_IsNull = _StepShape.Handle_StepShape_PlusMinusTolerance_IsNull

def Handle_StepShape_PrecisionQualifier_Create() -> "opencascade::handle< StepShape_PrecisionQualifier >":
    return _StepShape.Handle_StepShape_PrecisionQualifier_Create()
Handle_StepShape_PrecisionQualifier_Create = _StepShape.Handle_StepShape_PrecisionQualifier_Create

def Handle_StepShape_PrecisionQualifier_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_PrecisionQualifier >":
    return _StepShape.Handle_StepShape_PrecisionQualifier_DownCast(t)
Handle_StepShape_PrecisionQualifier_DownCast = _StepShape.Handle_StepShape_PrecisionQualifier_DownCast

def Handle_StepShape_PrecisionQualifier_IsNull(t: 'opencascade::handle< StepShape_PrecisionQualifier > const &') -> "bool":
    return _StepShape.Handle_StepShape_PrecisionQualifier_IsNull(t)
Handle_StepShape_PrecisionQualifier_IsNull = _StepShape.Handle_StepShape_PrecisionQualifier_IsNull

def Handle_StepShape_QualifiedRepresentationItem_Create() -> "opencascade::handle< StepShape_QualifiedRepresentationItem >":
    return _StepShape.Handle_StepShape_QualifiedRepresentationItem_Create()
Handle_StepShape_QualifiedRepresentationItem_Create = _StepShape.Handle_StepShape_QualifiedRepresentationItem_Create

def Handle_StepShape_QualifiedRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_QualifiedRepresentationItem >":
    return _StepShape.Handle_StepShape_QualifiedRepresentationItem_DownCast(t)
Handle_StepShape_QualifiedRepresentationItem_DownCast = _StepShape.Handle_StepShape_QualifiedRepresentationItem_DownCast

def Handle_StepShape_QualifiedRepresentationItem_IsNull(t: 'opencascade::handle< StepShape_QualifiedRepresentationItem > const &') -> "bool":
    return _StepShape.Handle_StepShape_QualifiedRepresentationItem_IsNull(t)
Handle_StepShape_QualifiedRepresentationItem_IsNull = _StepShape.Handle_StepShape_QualifiedRepresentationItem_IsNull

def Handle_StepShape_RightAngularWedge_Create() -> "opencascade::handle< StepShape_RightAngularWedge >":
    return _StepShape.Handle_StepShape_RightAngularWedge_Create()
Handle_StepShape_RightAngularWedge_Create = _StepShape.Handle_StepShape_RightAngularWedge_Create

def Handle_StepShape_RightAngularWedge_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_RightAngularWedge >":
    return _StepShape.Handle_StepShape_RightAngularWedge_DownCast(t)
Handle_StepShape_RightAngularWedge_DownCast = _StepShape.Handle_StepShape_RightAngularWedge_DownCast

def Handle_StepShape_RightAngularWedge_IsNull(t: 'opencascade::handle< StepShape_RightAngularWedge > const &') -> "bool":
    return _StepShape.Handle_StepShape_RightAngularWedge_IsNull(t)
Handle_StepShape_RightAngularWedge_IsNull = _StepShape.Handle_StepShape_RightAngularWedge_IsNull

def Handle_StepShape_RightCircularCone_Create() -> "opencascade::handle< StepShape_RightCircularCone >":
    return _StepShape.Handle_StepShape_RightCircularCone_Create()
Handle_StepShape_RightCircularCone_Create = _StepShape.Handle_StepShape_RightCircularCone_Create

def Handle_StepShape_RightCircularCone_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_RightCircularCone >":
    return _StepShape.Handle_StepShape_RightCircularCone_DownCast(t)
Handle_StepShape_RightCircularCone_DownCast = _StepShape.Handle_StepShape_RightCircularCone_DownCast

def Handle_StepShape_RightCircularCone_IsNull(t: 'opencascade::handle< StepShape_RightCircularCone > const &') -> "bool":
    return _StepShape.Handle_StepShape_RightCircularCone_IsNull(t)
Handle_StepShape_RightCircularCone_IsNull = _StepShape.Handle_StepShape_RightCircularCone_IsNull

def Handle_StepShape_RightCircularCylinder_Create() -> "opencascade::handle< StepShape_RightCircularCylinder >":
    return _StepShape.Handle_StepShape_RightCircularCylinder_Create()
Handle_StepShape_RightCircularCylinder_Create = _StepShape.Handle_StepShape_RightCircularCylinder_Create

def Handle_StepShape_RightCircularCylinder_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_RightCircularCylinder >":
    return _StepShape.Handle_StepShape_RightCircularCylinder_DownCast(t)
Handle_StepShape_RightCircularCylinder_DownCast = _StepShape.Handle_StepShape_RightCircularCylinder_DownCast

def Handle_StepShape_RightCircularCylinder_IsNull(t: 'opencascade::handle< StepShape_RightCircularCylinder > const &') -> "bool":
    return _StepShape.Handle_StepShape_RightCircularCylinder_IsNull(t)
Handle_StepShape_RightCircularCylinder_IsNull = _StepShape.Handle_StepShape_RightCircularCylinder_IsNull

def Handle_StepShape_ShapeDefinitionRepresentation_Create() -> "opencascade::handle< StepShape_ShapeDefinitionRepresentation >":
    return _StepShape.Handle_StepShape_ShapeDefinitionRepresentation_Create()
Handle_StepShape_ShapeDefinitionRepresentation_Create = _StepShape.Handle_StepShape_ShapeDefinitionRepresentation_Create

def Handle_StepShape_ShapeDefinitionRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ShapeDefinitionRepresentation >":
    return _StepShape.Handle_StepShape_ShapeDefinitionRepresentation_DownCast(t)
Handle_StepShape_ShapeDefinitionRepresentation_DownCast = _StepShape.Handle_StepShape_ShapeDefinitionRepresentation_DownCast

def Handle_StepShape_ShapeDefinitionRepresentation_IsNull(t: 'opencascade::handle< StepShape_ShapeDefinitionRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_ShapeDefinitionRepresentation_IsNull(t)
Handle_StepShape_ShapeDefinitionRepresentation_IsNull = _StepShape.Handle_StepShape_ShapeDefinitionRepresentation_IsNull

def Handle_StepShape_ShapeRepresentation_Create() -> "opencascade::handle< StepShape_ShapeRepresentation >":
    return _StepShape.Handle_StepShape_ShapeRepresentation_Create()
Handle_StepShape_ShapeRepresentation_Create = _StepShape.Handle_StepShape_ShapeRepresentation_Create

def Handle_StepShape_ShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ShapeRepresentation >":
    return _StepShape.Handle_StepShape_ShapeRepresentation_DownCast(t)
Handle_StepShape_ShapeRepresentation_DownCast = _StepShape.Handle_StepShape_ShapeRepresentation_DownCast

def Handle_StepShape_ShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_ShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_ShapeRepresentation_IsNull(t)
Handle_StepShape_ShapeRepresentation_IsNull = _StepShape.Handle_StepShape_ShapeRepresentation_IsNull

def Handle_StepShape_ShellBasedSurfaceModel_Create() -> "opencascade::handle< StepShape_ShellBasedSurfaceModel >":
    return _StepShape.Handle_StepShape_ShellBasedSurfaceModel_Create()
Handle_StepShape_ShellBasedSurfaceModel_Create = _StepShape.Handle_StepShape_ShellBasedSurfaceModel_Create

def Handle_StepShape_ShellBasedSurfaceModel_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ShellBasedSurfaceModel >":
    return _StepShape.Handle_StepShape_ShellBasedSurfaceModel_DownCast(t)
Handle_StepShape_ShellBasedSurfaceModel_DownCast = _StepShape.Handle_StepShape_ShellBasedSurfaceModel_DownCast

def Handle_StepShape_ShellBasedSurfaceModel_IsNull(t: 'opencascade::handle< StepShape_ShellBasedSurfaceModel > const &') -> "bool":
    return _StepShape.Handle_StepShape_ShellBasedSurfaceModel_IsNull(t)
Handle_StepShape_ShellBasedSurfaceModel_IsNull = _StepShape.Handle_StepShape_ShellBasedSurfaceModel_IsNull

def Handle_StepShape_SolidModel_Create() -> "opencascade::handle< StepShape_SolidModel >":
    return _StepShape.Handle_StepShape_SolidModel_Create()
Handle_StepShape_SolidModel_Create = _StepShape.Handle_StepShape_SolidModel_Create

def Handle_StepShape_SolidModel_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_SolidModel >":
    return _StepShape.Handle_StepShape_SolidModel_DownCast(t)
Handle_StepShape_SolidModel_DownCast = _StepShape.Handle_StepShape_SolidModel_DownCast

def Handle_StepShape_SolidModel_IsNull(t: 'opencascade::handle< StepShape_SolidModel > const &') -> "bool":
    return _StepShape.Handle_StepShape_SolidModel_IsNull(t)
Handle_StepShape_SolidModel_IsNull = _StepShape.Handle_StepShape_SolidModel_IsNull

def Handle_StepShape_Sphere_Create() -> "opencascade::handle< StepShape_Sphere >":
    return _StepShape.Handle_StepShape_Sphere_Create()
Handle_StepShape_Sphere_Create = _StepShape.Handle_StepShape_Sphere_Create

def Handle_StepShape_Sphere_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Sphere >":
    return _StepShape.Handle_StepShape_Sphere_DownCast(t)
Handle_StepShape_Sphere_DownCast = _StepShape.Handle_StepShape_Sphere_DownCast

def Handle_StepShape_Sphere_IsNull(t: 'opencascade::handle< StepShape_Sphere > const &') -> "bool":
    return _StepShape.Handle_StepShape_Sphere_IsNull(t)
Handle_StepShape_Sphere_IsNull = _StepShape.Handle_StepShape_Sphere_IsNull

def Handle_StepShape_ToleranceValue_Create() -> "opencascade::handle< StepShape_ToleranceValue >":
    return _StepShape.Handle_StepShape_ToleranceValue_Create()
Handle_StepShape_ToleranceValue_Create = _StepShape.Handle_StepShape_ToleranceValue_Create

def Handle_StepShape_ToleranceValue_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ToleranceValue >":
    return _StepShape.Handle_StepShape_ToleranceValue_DownCast(t)
Handle_StepShape_ToleranceValue_DownCast = _StepShape.Handle_StepShape_ToleranceValue_DownCast

def Handle_StepShape_ToleranceValue_IsNull(t: 'opencascade::handle< StepShape_ToleranceValue > const &') -> "bool":
    return _StepShape.Handle_StepShape_ToleranceValue_IsNull(t)
Handle_StepShape_ToleranceValue_IsNull = _StepShape.Handle_StepShape_ToleranceValue_IsNull

def Handle_StepShape_TopologicalRepresentationItem_Create() -> "opencascade::handle< StepShape_TopologicalRepresentationItem >":
    return _StepShape.Handle_StepShape_TopologicalRepresentationItem_Create()
Handle_StepShape_TopologicalRepresentationItem_Create = _StepShape.Handle_StepShape_TopologicalRepresentationItem_Create

def Handle_StepShape_TopologicalRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_TopologicalRepresentationItem >":
    return _StepShape.Handle_StepShape_TopologicalRepresentationItem_DownCast(t)
Handle_StepShape_TopologicalRepresentationItem_DownCast = _StepShape.Handle_StepShape_TopologicalRepresentationItem_DownCast

def Handle_StepShape_TopologicalRepresentationItem_IsNull(t: 'opencascade::handle< StepShape_TopologicalRepresentationItem > const &') -> "bool":
    return _StepShape.Handle_StepShape_TopologicalRepresentationItem_IsNull(t)
Handle_StepShape_TopologicalRepresentationItem_IsNull = _StepShape.Handle_StepShape_TopologicalRepresentationItem_IsNull

def Handle_StepShape_Torus_Create() -> "opencascade::handle< StepShape_Torus >":
    return _StepShape.Handle_StepShape_Torus_Create()
Handle_StepShape_Torus_Create = _StepShape.Handle_StepShape_Torus_Create

def Handle_StepShape_Torus_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Torus >":
    return _StepShape.Handle_StepShape_Torus_DownCast(t)
Handle_StepShape_Torus_DownCast = _StepShape.Handle_StepShape_Torus_DownCast

def Handle_StepShape_Torus_IsNull(t: 'opencascade::handle< StepShape_Torus > const &') -> "bool":
    return _StepShape.Handle_StepShape_Torus_IsNull(t)
Handle_StepShape_Torus_IsNull = _StepShape.Handle_StepShape_Torus_IsNull

def Handle_StepShape_TypeQualifier_Create() -> "opencascade::handle< StepShape_TypeQualifier >":
    return _StepShape.Handle_StepShape_TypeQualifier_Create()
Handle_StepShape_TypeQualifier_Create = _StepShape.Handle_StepShape_TypeQualifier_Create

def Handle_StepShape_TypeQualifier_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_TypeQualifier >":
    return _StepShape.Handle_StepShape_TypeQualifier_DownCast(t)
Handle_StepShape_TypeQualifier_DownCast = _StepShape.Handle_StepShape_TypeQualifier_DownCast

def Handle_StepShape_TypeQualifier_IsNull(t: 'opencascade::handle< StepShape_TypeQualifier > const &') -> "bool":
    return _StepShape.Handle_StepShape_TypeQualifier_IsNull(t)
Handle_StepShape_TypeQualifier_IsNull = _StepShape.Handle_StepShape_TypeQualifier_IsNull

def Handle_StepShape_ValueFormatTypeQualifier_Create() -> "opencascade::handle< StepShape_ValueFormatTypeQualifier >":
    return _StepShape.Handle_StepShape_ValueFormatTypeQualifier_Create()
Handle_StepShape_ValueFormatTypeQualifier_Create = _StepShape.Handle_StepShape_ValueFormatTypeQualifier_Create

def Handle_StepShape_ValueFormatTypeQualifier_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ValueFormatTypeQualifier >":
    return _StepShape.Handle_StepShape_ValueFormatTypeQualifier_DownCast(t)
Handle_StepShape_ValueFormatTypeQualifier_DownCast = _StepShape.Handle_StepShape_ValueFormatTypeQualifier_DownCast

def Handle_StepShape_ValueFormatTypeQualifier_IsNull(t: 'opencascade::handle< StepShape_ValueFormatTypeQualifier > const &') -> "bool":
    return _StepShape.Handle_StepShape_ValueFormatTypeQualifier_IsNull(t)
Handle_StepShape_ValueFormatTypeQualifier_IsNull = _StepShape.Handle_StepShape_ValueFormatTypeQualifier_IsNull

def Handle_StepShape_AdvancedBrepShapeRepresentation_Create() -> "opencascade::handle< StepShape_AdvancedBrepShapeRepresentation >":
    return _StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation_Create()
Handle_StepShape_AdvancedBrepShapeRepresentation_Create = _StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation_Create

def Handle_StepShape_AdvancedBrepShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_AdvancedBrepShapeRepresentation >":
    return _StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation_DownCast(t)
Handle_StepShape_AdvancedBrepShapeRepresentation_DownCast = _StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation_DownCast

def Handle_StepShape_AdvancedBrepShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_AdvancedBrepShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation_IsNull(t)
Handle_StepShape_AdvancedBrepShapeRepresentation_IsNull = _StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation_IsNull

def Handle_StepShape_AngularLocation_Create() -> "opencascade::handle< StepShape_AngularLocation >":
    return _StepShape.Handle_StepShape_AngularLocation_Create()
Handle_StepShape_AngularLocation_Create = _StepShape.Handle_StepShape_AngularLocation_Create

def Handle_StepShape_AngularLocation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_AngularLocation >":
    return _StepShape.Handle_StepShape_AngularLocation_DownCast(t)
Handle_StepShape_AngularLocation_DownCast = _StepShape.Handle_StepShape_AngularLocation_DownCast

def Handle_StepShape_AngularLocation_IsNull(t: 'opencascade::handle< StepShape_AngularLocation > const &') -> "bool":
    return _StepShape.Handle_StepShape_AngularLocation_IsNull(t)
Handle_StepShape_AngularLocation_IsNull = _StepShape.Handle_StepShape_AngularLocation_IsNull

def Handle_StepShape_AngularSize_Create() -> "opencascade::handle< StepShape_AngularSize >":
    return _StepShape.Handle_StepShape_AngularSize_Create()
Handle_StepShape_AngularSize_Create = _StepShape.Handle_StepShape_AngularSize_Create

def Handle_StepShape_AngularSize_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_AngularSize >":
    return _StepShape.Handle_StepShape_AngularSize_DownCast(t)
Handle_StepShape_AngularSize_DownCast = _StepShape.Handle_StepShape_AngularSize_DownCast

def Handle_StepShape_AngularSize_IsNull(t: 'opencascade::handle< StepShape_AngularSize > const &') -> "bool":
    return _StepShape.Handle_StepShape_AngularSize_IsNull(t)
Handle_StepShape_AngularSize_IsNull = _StepShape.Handle_StepShape_AngularSize_IsNull

def Handle_StepShape_BoxedHalfSpace_Create() -> "opencascade::handle< StepShape_BoxedHalfSpace >":
    return _StepShape.Handle_StepShape_BoxedHalfSpace_Create()
Handle_StepShape_BoxedHalfSpace_Create = _StepShape.Handle_StepShape_BoxedHalfSpace_Create

def Handle_StepShape_BoxedHalfSpace_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_BoxedHalfSpace >":
    return _StepShape.Handle_StepShape_BoxedHalfSpace_DownCast(t)
Handle_StepShape_BoxedHalfSpace_DownCast = _StepShape.Handle_StepShape_BoxedHalfSpace_DownCast

def Handle_StepShape_BoxedHalfSpace_IsNull(t: 'opencascade::handle< StepShape_BoxedHalfSpace > const &') -> "bool":
    return _StepShape.Handle_StepShape_BoxedHalfSpace_IsNull(t)
Handle_StepShape_BoxedHalfSpace_IsNull = _StepShape.Handle_StepShape_BoxedHalfSpace_IsNull

def Handle_StepShape_CompoundShapeRepresentation_Create() -> "opencascade::handle< StepShape_CompoundShapeRepresentation >":
    return _StepShape.Handle_StepShape_CompoundShapeRepresentation_Create()
Handle_StepShape_CompoundShapeRepresentation_Create = _StepShape.Handle_StepShape_CompoundShapeRepresentation_Create

def Handle_StepShape_CompoundShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_CompoundShapeRepresentation >":
    return _StepShape.Handle_StepShape_CompoundShapeRepresentation_DownCast(t)
Handle_StepShape_CompoundShapeRepresentation_DownCast = _StepShape.Handle_StepShape_CompoundShapeRepresentation_DownCast

def Handle_StepShape_CompoundShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_CompoundShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_CompoundShapeRepresentation_IsNull(t)
Handle_StepShape_CompoundShapeRepresentation_IsNull = _StepShape.Handle_StepShape_CompoundShapeRepresentation_IsNull

def Handle_StepShape_ConnectedEdgeSet_Create() -> "opencascade::handle< StepShape_ConnectedEdgeSet >":
    return _StepShape.Handle_StepShape_ConnectedEdgeSet_Create()
Handle_StepShape_ConnectedEdgeSet_Create = _StepShape.Handle_StepShape_ConnectedEdgeSet_Create

def Handle_StepShape_ConnectedEdgeSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ConnectedEdgeSet >":
    return _StepShape.Handle_StepShape_ConnectedEdgeSet_DownCast(t)
Handle_StepShape_ConnectedEdgeSet_DownCast = _StepShape.Handle_StepShape_ConnectedEdgeSet_DownCast

def Handle_StepShape_ConnectedEdgeSet_IsNull(t: 'opencascade::handle< StepShape_ConnectedEdgeSet > const &') -> "bool":
    return _StepShape.Handle_StepShape_ConnectedEdgeSet_IsNull(t)
Handle_StepShape_ConnectedEdgeSet_IsNull = _StepShape.Handle_StepShape_ConnectedEdgeSet_IsNull

def Handle_StepShape_ConnectedFaceSet_Create() -> "opencascade::handle< StepShape_ConnectedFaceSet >":
    return _StepShape.Handle_StepShape_ConnectedFaceSet_Create()
Handle_StepShape_ConnectedFaceSet_Create = _StepShape.Handle_StepShape_ConnectedFaceSet_Create

def Handle_StepShape_ConnectedFaceSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ConnectedFaceSet >":
    return _StepShape.Handle_StepShape_ConnectedFaceSet_DownCast(t)
Handle_StepShape_ConnectedFaceSet_DownCast = _StepShape.Handle_StepShape_ConnectedFaceSet_DownCast

def Handle_StepShape_ConnectedFaceSet_IsNull(t: 'opencascade::handle< StepShape_ConnectedFaceSet > const &') -> "bool":
    return _StepShape.Handle_StepShape_ConnectedFaceSet_IsNull(t)
Handle_StepShape_ConnectedFaceSet_IsNull = _StepShape.Handle_StepShape_ConnectedFaceSet_IsNull

def Handle_StepShape_CsgShapeRepresentation_Create() -> "opencascade::handle< StepShape_CsgShapeRepresentation >":
    return _StepShape.Handle_StepShape_CsgShapeRepresentation_Create()
Handle_StepShape_CsgShapeRepresentation_Create = _StepShape.Handle_StepShape_CsgShapeRepresentation_Create

def Handle_StepShape_CsgShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_CsgShapeRepresentation >":
    return _StepShape.Handle_StepShape_CsgShapeRepresentation_DownCast(t)
Handle_StepShape_CsgShapeRepresentation_DownCast = _StepShape.Handle_StepShape_CsgShapeRepresentation_DownCast

def Handle_StepShape_CsgShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_CsgShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_CsgShapeRepresentation_IsNull(t)
Handle_StepShape_CsgShapeRepresentation_IsNull = _StepShape.Handle_StepShape_CsgShapeRepresentation_IsNull

def Handle_StepShape_CsgSolid_Create() -> "opencascade::handle< StepShape_CsgSolid >":
    return _StepShape.Handle_StepShape_CsgSolid_Create()
Handle_StepShape_CsgSolid_Create = _StepShape.Handle_StepShape_CsgSolid_Create

def Handle_StepShape_CsgSolid_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_CsgSolid >":
    return _StepShape.Handle_StepShape_CsgSolid_DownCast(t)
Handle_StepShape_CsgSolid_DownCast = _StepShape.Handle_StepShape_CsgSolid_DownCast

def Handle_StepShape_CsgSolid_IsNull(t: 'opencascade::handle< StepShape_CsgSolid > const &') -> "bool":
    return _StepShape.Handle_StepShape_CsgSolid_IsNull(t)
Handle_StepShape_CsgSolid_IsNull = _StepShape.Handle_StepShape_CsgSolid_IsNull

def Handle_StepShape_DimensionalLocationWithPath_Create() -> "opencascade::handle< StepShape_DimensionalLocationWithPath >":
    return _StepShape.Handle_StepShape_DimensionalLocationWithPath_Create()
Handle_StepShape_DimensionalLocationWithPath_Create = _StepShape.Handle_StepShape_DimensionalLocationWithPath_Create

def Handle_StepShape_DimensionalLocationWithPath_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_DimensionalLocationWithPath >":
    return _StepShape.Handle_StepShape_DimensionalLocationWithPath_DownCast(t)
Handle_StepShape_DimensionalLocationWithPath_DownCast = _StepShape.Handle_StepShape_DimensionalLocationWithPath_DownCast

def Handle_StepShape_DimensionalLocationWithPath_IsNull(t: 'opencascade::handle< StepShape_DimensionalLocationWithPath > const &') -> "bool":
    return _StepShape.Handle_StepShape_DimensionalLocationWithPath_IsNull(t)
Handle_StepShape_DimensionalLocationWithPath_IsNull = _StepShape.Handle_StepShape_DimensionalLocationWithPath_IsNull

def Handle_StepShape_DimensionalSizeWithPath_Create() -> "opencascade::handle< StepShape_DimensionalSizeWithPath >":
    return _StepShape.Handle_StepShape_DimensionalSizeWithPath_Create()
Handle_StepShape_DimensionalSizeWithPath_Create = _StepShape.Handle_StepShape_DimensionalSizeWithPath_Create

def Handle_StepShape_DimensionalSizeWithPath_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_DimensionalSizeWithPath >":
    return _StepShape.Handle_StepShape_DimensionalSizeWithPath_DownCast(t)
Handle_StepShape_DimensionalSizeWithPath_DownCast = _StepShape.Handle_StepShape_DimensionalSizeWithPath_DownCast

def Handle_StepShape_DimensionalSizeWithPath_IsNull(t: 'opencascade::handle< StepShape_DimensionalSizeWithPath > const &') -> "bool":
    return _StepShape.Handle_StepShape_DimensionalSizeWithPath_IsNull(t)
Handle_StepShape_DimensionalSizeWithPath_IsNull = _StepShape.Handle_StepShape_DimensionalSizeWithPath_IsNull

def Handle_StepShape_DirectedDimensionalLocation_Create() -> "opencascade::handle< StepShape_DirectedDimensionalLocation >":
    return _StepShape.Handle_StepShape_DirectedDimensionalLocation_Create()
Handle_StepShape_DirectedDimensionalLocation_Create = _StepShape.Handle_StepShape_DirectedDimensionalLocation_Create

def Handle_StepShape_DirectedDimensionalLocation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_DirectedDimensionalLocation >":
    return _StepShape.Handle_StepShape_DirectedDimensionalLocation_DownCast(t)
Handle_StepShape_DirectedDimensionalLocation_DownCast = _StepShape.Handle_StepShape_DirectedDimensionalLocation_DownCast

def Handle_StepShape_DirectedDimensionalLocation_IsNull(t: 'opencascade::handle< StepShape_DirectedDimensionalLocation > const &') -> "bool":
    return _StepShape.Handle_StepShape_DirectedDimensionalLocation_IsNull(t)
Handle_StepShape_DirectedDimensionalLocation_IsNull = _StepShape.Handle_StepShape_DirectedDimensionalLocation_IsNull

def Handle_StepShape_Edge_Create() -> "opencascade::handle< StepShape_Edge >":
    return _StepShape.Handle_StepShape_Edge_Create()
Handle_StepShape_Edge_Create = _StepShape.Handle_StepShape_Edge_Create

def Handle_StepShape_Edge_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Edge >":
    return _StepShape.Handle_StepShape_Edge_DownCast(t)
Handle_StepShape_Edge_DownCast = _StepShape.Handle_StepShape_Edge_DownCast

def Handle_StepShape_Edge_IsNull(t: 'opencascade::handle< StepShape_Edge > const &') -> "bool":
    return _StepShape.Handle_StepShape_Edge_IsNull(t)
Handle_StepShape_Edge_IsNull = _StepShape.Handle_StepShape_Edge_IsNull

def Handle_StepShape_EdgeBasedWireframeShapeRepresentation_Create() -> "opencascade::handle< StepShape_EdgeBasedWireframeShapeRepresentation >":
    return _StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation_Create()
Handle_StepShape_EdgeBasedWireframeShapeRepresentation_Create = _StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation_Create

def Handle_StepShape_EdgeBasedWireframeShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_EdgeBasedWireframeShapeRepresentation >":
    return _StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation_DownCast(t)
Handle_StepShape_EdgeBasedWireframeShapeRepresentation_DownCast = _StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation_DownCast

def Handle_StepShape_EdgeBasedWireframeShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_EdgeBasedWireframeShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation_IsNull(t)
Handle_StepShape_EdgeBasedWireframeShapeRepresentation_IsNull = _StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation_IsNull

def Handle_StepShape_Face_Create() -> "opencascade::handle< StepShape_Face >":
    return _StepShape.Handle_StepShape_Face_Create()
Handle_StepShape_Face_Create = _StepShape.Handle_StepShape_Face_Create

def Handle_StepShape_Face_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Face >":
    return _StepShape.Handle_StepShape_Face_DownCast(t)
Handle_StepShape_Face_DownCast = _StepShape.Handle_StepShape_Face_DownCast

def Handle_StepShape_Face_IsNull(t: 'opencascade::handle< StepShape_Face > const &') -> "bool":
    return _StepShape.Handle_StepShape_Face_IsNull(t)
Handle_StepShape_Face_IsNull = _StepShape.Handle_StepShape_Face_IsNull

def Handle_StepShape_FaceBound_Create() -> "opencascade::handle< StepShape_FaceBound >":
    return _StepShape.Handle_StepShape_FaceBound_Create()
Handle_StepShape_FaceBound_Create = _StepShape.Handle_StepShape_FaceBound_Create

def Handle_StepShape_FaceBound_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_FaceBound >":
    return _StepShape.Handle_StepShape_FaceBound_DownCast(t)
Handle_StepShape_FaceBound_DownCast = _StepShape.Handle_StepShape_FaceBound_DownCast

def Handle_StepShape_FaceBound_IsNull(t: 'opencascade::handle< StepShape_FaceBound > const &') -> "bool":
    return _StepShape.Handle_StepShape_FaceBound_IsNull(t)
Handle_StepShape_FaceBound_IsNull = _StepShape.Handle_StepShape_FaceBound_IsNull

def Handle_StepShape_FacetedBrepShapeRepresentation_Create() -> "opencascade::handle< StepShape_FacetedBrepShapeRepresentation >":
    return _StepShape.Handle_StepShape_FacetedBrepShapeRepresentation_Create()
Handle_StepShape_FacetedBrepShapeRepresentation_Create = _StepShape.Handle_StepShape_FacetedBrepShapeRepresentation_Create

def Handle_StepShape_FacetedBrepShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_FacetedBrepShapeRepresentation >":
    return _StepShape.Handle_StepShape_FacetedBrepShapeRepresentation_DownCast(t)
Handle_StepShape_FacetedBrepShapeRepresentation_DownCast = _StepShape.Handle_StepShape_FacetedBrepShapeRepresentation_DownCast

def Handle_StepShape_FacetedBrepShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_FacetedBrepShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_FacetedBrepShapeRepresentation_IsNull(t)
Handle_StepShape_FacetedBrepShapeRepresentation_IsNull = _StepShape.Handle_StepShape_FacetedBrepShapeRepresentation_IsNull

def Handle_StepShape_GeometricCurveSet_Create() -> "opencascade::handle< StepShape_GeometricCurveSet >":
    return _StepShape.Handle_StepShape_GeometricCurveSet_Create()
Handle_StepShape_GeometricCurveSet_Create = _StepShape.Handle_StepShape_GeometricCurveSet_Create

def Handle_StepShape_GeometricCurveSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_GeometricCurveSet >":
    return _StepShape.Handle_StepShape_GeometricCurveSet_DownCast(t)
Handle_StepShape_GeometricCurveSet_DownCast = _StepShape.Handle_StepShape_GeometricCurveSet_DownCast

def Handle_StepShape_GeometricCurveSet_IsNull(t: 'opencascade::handle< StepShape_GeometricCurveSet > const &') -> "bool":
    return _StepShape.Handle_StepShape_GeometricCurveSet_IsNull(t)
Handle_StepShape_GeometricCurveSet_IsNull = _StepShape.Handle_StepShape_GeometricCurveSet_IsNull

def Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_Create() -> "opencascade::handle< StepShape_GeometricallyBoundedSurfaceShapeRepresentation >":
    return _StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_Create()
Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_Create = _StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_Create

def Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_GeometricallyBoundedSurfaceShapeRepresentation >":
    return _StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_DownCast(t)
Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_DownCast = _StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_DownCast

def Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_GeometricallyBoundedSurfaceShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_IsNull(t)
Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_IsNull = _StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_IsNull

def Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_Create() -> "opencascade::handle< StepShape_GeometricallyBoundedWireframeShapeRepresentation >":
    return _StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_Create()
Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_Create = _StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_Create

def Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_GeometricallyBoundedWireframeShapeRepresentation >":
    return _StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_DownCast(t)
Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_DownCast = _StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_DownCast

def Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_GeometricallyBoundedWireframeShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_IsNull(t)
Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_IsNull = _StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_IsNull

def Handle_StepShape_Loop_Create() -> "opencascade::handle< StepShape_Loop >":
    return _StepShape.Handle_StepShape_Loop_Create()
Handle_StepShape_Loop_Create = _StepShape.Handle_StepShape_Loop_Create

def Handle_StepShape_Loop_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Loop >":
    return _StepShape.Handle_StepShape_Loop_DownCast(t)
Handle_StepShape_Loop_DownCast = _StepShape.Handle_StepShape_Loop_DownCast

def Handle_StepShape_Loop_IsNull(t: 'opencascade::handle< StepShape_Loop > const &') -> "bool":
    return _StepShape.Handle_StepShape_Loop_IsNull(t)
Handle_StepShape_Loop_IsNull = _StepShape.Handle_StepShape_Loop_IsNull

def Handle_StepShape_LoopAndPath_Create() -> "opencascade::handle< StepShape_LoopAndPath >":
    return _StepShape.Handle_StepShape_LoopAndPath_Create()
Handle_StepShape_LoopAndPath_Create = _StepShape.Handle_StepShape_LoopAndPath_Create

def Handle_StepShape_LoopAndPath_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_LoopAndPath >":
    return _StepShape.Handle_StepShape_LoopAndPath_DownCast(t)
Handle_StepShape_LoopAndPath_DownCast = _StepShape.Handle_StepShape_LoopAndPath_DownCast

def Handle_StepShape_LoopAndPath_IsNull(t: 'opencascade::handle< StepShape_LoopAndPath > const &') -> "bool":
    return _StepShape.Handle_StepShape_LoopAndPath_IsNull(t)
Handle_StepShape_LoopAndPath_IsNull = _StepShape.Handle_StepShape_LoopAndPath_IsNull

def Handle_StepShape_ManifoldSolidBrep_Create() -> "opencascade::handle< StepShape_ManifoldSolidBrep >":
    return _StepShape.Handle_StepShape_ManifoldSolidBrep_Create()
Handle_StepShape_ManifoldSolidBrep_Create = _StepShape.Handle_StepShape_ManifoldSolidBrep_Create

def Handle_StepShape_ManifoldSolidBrep_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ManifoldSolidBrep >":
    return _StepShape.Handle_StepShape_ManifoldSolidBrep_DownCast(t)
Handle_StepShape_ManifoldSolidBrep_DownCast = _StepShape.Handle_StepShape_ManifoldSolidBrep_DownCast

def Handle_StepShape_ManifoldSolidBrep_IsNull(t: 'opencascade::handle< StepShape_ManifoldSolidBrep > const &') -> "bool":
    return _StepShape.Handle_StepShape_ManifoldSolidBrep_IsNull(t)
Handle_StepShape_ManifoldSolidBrep_IsNull = _StepShape.Handle_StepShape_ManifoldSolidBrep_IsNull

def Handle_StepShape_ManifoldSurfaceShapeRepresentation_Create() -> "opencascade::handle< StepShape_ManifoldSurfaceShapeRepresentation >":
    return _StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation_Create()
Handle_StepShape_ManifoldSurfaceShapeRepresentation_Create = _StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation_Create

def Handle_StepShape_ManifoldSurfaceShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ManifoldSurfaceShapeRepresentation >":
    return _StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation_DownCast(t)
Handle_StepShape_ManifoldSurfaceShapeRepresentation_DownCast = _StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation_DownCast

def Handle_StepShape_ManifoldSurfaceShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_ManifoldSurfaceShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation_IsNull(t)
Handle_StepShape_ManifoldSurfaceShapeRepresentation_IsNull = _StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation_IsNull

def Handle_StepShape_NonManifoldSurfaceShapeRepresentation_Create() -> "opencascade::handle< StepShape_NonManifoldSurfaceShapeRepresentation >":
    return _StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation_Create()
Handle_StepShape_NonManifoldSurfaceShapeRepresentation_Create = _StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation_Create

def Handle_StepShape_NonManifoldSurfaceShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_NonManifoldSurfaceShapeRepresentation >":
    return _StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation_DownCast(t)
Handle_StepShape_NonManifoldSurfaceShapeRepresentation_DownCast = _StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation_DownCast

def Handle_StepShape_NonManifoldSurfaceShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_NonManifoldSurfaceShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation_IsNull(t)
Handle_StepShape_NonManifoldSurfaceShapeRepresentation_IsNull = _StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation_IsNull

def Handle_StepShape_Path_Create() -> "opencascade::handle< StepShape_Path >":
    return _StepShape.Handle_StepShape_Path_Create()
Handle_StepShape_Path_Create = _StepShape.Handle_StepShape_Path_Create

def Handle_StepShape_Path_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Path >":
    return _StepShape.Handle_StepShape_Path_DownCast(t)
Handle_StepShape_Path_DownCast = _StepShape.Handle_StepShape_Path_DownCast

def Handle_StepShape_Path_IsNull(t: 'opencascade::handle< StepShape_Path > const &') -> "bool":
    return _StepShape.Handle_StepShape_Path_IsNull(t)
Handle_StepShape_Path_IsNull = _StepShape.Handle_StepShape_Path_IsNull

def Handle_StepShape_PointRepresentation_Create() -> "opencascade::handle< StepShape_PointRepresentation >":
    return _StepShape.Handle_StepShape_PointRepresentation_Create()
Handle_StepShape_PointRepresentation_Create = _StepShape.Handle_StepShape_PointRepresentation_Create

def Handle_StepShape_PointRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_PointRepresentation >":
    return _StepShape.Handle_StepShape_PointRepresentation_DownCast(t)
Handle_StepShape_PointRepresentation_DownCast = _StepShape.Handle_StepShape_PointRepresentation_DownCast

def Handle_StepShape_PointRepresentation_IsNull(t: 'opencascade::handle< StepShape_PointRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_PointRepresentation_IsNull(t)
Handle_StepShape_PointRepresentation_IsNull = _StepShape.Handle_StepShape_PointRepresentation_IsNull

def Handle_StepShape_ShapeDimensionRepresentation_Create() -> "opencascade::handle< StepShape_ShapeDimensionRepresentation >":
    return _StepShape.Handle_StepShape_ShapeDimensionRepresentation_Create()
Handle_StepShape_ShapeDimensionRepresentation_Create = _StepShape.Handle_StepShape_ShapeDimensionRepresentation_Create

def Handle_StepShape_ShapeDimensionRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ShapeDimensionRepresentation >":
    return _StepShape.Handle_StepShape_ShapeDimensionRepresentation_DownCast(t)
Handle_StepShape_ShapeDimensionRepresentation_DownCast = _StepShape.Handle_StepShape_ShapeDimensionRepresentation_DownCast

def Handle_StepShape_ShapeDimensionRepresentation_IsNull(t: 'opencascade::handle< StepShape_ShapeDimensionRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_ShapeDimensionRepresentation_IsNull(t)
Handle_StepShape_ShapeDimensionRepresentation_IsNull = _StepShape.Handle_StepShape_ShapeDimensionRepresentation_IsNull

def Handle_StepShape_ShapeRepresentationWithParameters_Create() -> "opencascade::handle< StepShape_ShapeRepresentationWithParameters >":
    return _StepShape.Handle_StepShape_ShapeRepresentationWithParameters_Create()
Handle_StepShape_ShapeRepresentationWithParameters_Create = _StepShape.Handle_StepShape_ShapeRepresentationWithParameters_Create

def Handle_StepShape_ShapeRepresentationWithParameters_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ShapeRepresentationWithParameters >":
    return _StepShape.Handle_StepShape_ShapeRepresentationWithParameters_DownCast(t)
Handle_StepShape_ShapeRepresentationWithParameters_DownCast = _StepShape.Handle_StepShape_ShapeRepresentationWithParameters_DownCast

def Handle_StepShape_ShapeRepresentationWithParameters_IsNull(t: 'opencascade::handle< StepShape_ShapeRepresentationWithParameters > const &') -> "bool":
    return _StepShape.Handle_StepShape_ShapeRepresentationWithParameters_IsNull(t)
Handle_StepShape_ShapeRepresentationWithParameters_IsNull = _StepShape.Handle_StepShape_ShapeRepresentationWithParameters_IsNull

def Handle_StepShape_SolidReplica_Create() -> "opencascade::handle< StepShape_SolidReplica >":
    return _StepShape.Handle_StepShape_SolidReplica_Create()
Handle_StepShape_SolidReplica_Create = _StepShape.Handle_StepShape_SolidReplica_Create

def Handle_StepShape_SolidReplica_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_SolidReplica >":
    return _StepShape.Handle_StepShape_SolidReplica_DownCast(t)
Handle_StepShape_SolidReplica_DownCast = _StepShape.Handle_StepShape_SolidReplica_DownCast

def Handle_StepShape_SolidReplica_IsNull(t: 'opencascade::handle< StepShape_SolidReplica > const &') -> "bool":
    return _StepShape.Handle_StepShape_SolidReplica_IsNull(t)
Handle_StepShape_SolidReplica_IsNull = _StepShape.Handle_StepShape_SolidReplica_IsNull

def Handle_StepShape_SweptAreaSolid_Create() -> "opencascade::handle< StepShape_SweptAreaSolid >":
    return _StepShape.Handle_StepShape_SweptAreaSolid_Create()
Handle_StepShape_SweptAreaSolid_Create = _StepShape.Handle_StepShape_SweptAreaSolid_Create

def Handle_StepShape_SweptAreaSolid_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_SweptAreaSolid >":
    return _StepShape.Handle_StepShape_SweptAreaSolid_DownCast(t)
Handle_StepShape_SweptAreaSolid_DownCast = _StepShape.Handle_StepShape_SweptAreaSolid_DownCast

def Handle_StepShape_SweptAreaSolid_IsNull(t: 'opencascade::handle< StepShape_SweptAreaSolid > const &') -> "bool":
    return _StepShape.Handle_StepShape_SweptAreaSolid_IsNull(t)
Handle_StepShape_SweptAreaSolid_IsNull = _StepShape.Handle_StepShape_SweptAreaSolid_IsNull

def Handle_StepShape_SweptFaceSolid_Create() -> "opencascade::handle< StepShape_SweptFaceSolid >":
    return _StepShape.Handle_StepShape_SweptFaceSolid_Create()
Handle_StepShape_SweptFaceSolid_Create = _StepShape.Handle_StepShape_SweptFaceSolid_Create

def Handle_StepShape_SweptFaceSolid_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_SweptFaceSolid >":
    return _StepShape.Handle_StepShape_SweptFaceSolid_DownCast(t)
Handle_StepShape_SweptFaceSolid_DownCast = _StepShape.Handle_StepShape_SweptFaceSolid_DownCast

def Handle_StepShape_SweptFaceSolid_IsNull(t: 'opencascade::handle< StepShape_SweptFaceSolid > const &') -> "bool":
    return _StepShape.Handle_StepShape_SweptFaceSolid_IsNull(t)
Handle_StepShape_SweptFaceSolid_IsNull = _StepShape.Handle_StepShape_SweptFaceSolid_IsNull

def Handle_StepShape_TransitionalShapeRepresentation_Create() -> "opencascade::handle< StepShape_TransitionalShapeRepresentation >":
    return _StepShape.Handle_StepShape_TransitionalShapeRepresentation_Create()
Handle_StepShape_TransitionalShapeRepresentation_Create = _StepShape.Handle_StepShape_TransitionalShapeRepresentation_Create

def Handle_StepShape_TransitionalShapeRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_TransitionalShapeRepresentation >":
    return _StepShape.Handle_StepShape_TransitionalShapeRepresentation_DownCast(t)
Handle_StepShape_TransitionalShapeRepresentation_DownCast = _StepShape.Handle_StepShape_TransitionalShapeRepresentation_DownCast

def Handle_StepShape_TransitionalShapeRepresentation_IsNull(t: 'opencascade::handle< StepShape_TransitionalShapeRepresentation > const &') -> "bool":
    return _StepShape.Handle_StepShape_TransitionalShapeRepresentation_IsNull(t)
Handle_StepShape_TransitionalShapeRepresentation_IsNull = _StepShape.Handle_StepShape_TransitionalShapeRepresentation_IsNull

def Handle_StepShape_Vertex_Create() -> "opencascade::handle< StepShape_Vertex >":
    return _StepShape.Handle_StepShape_Vertex_Create()
Handle_StepShape_Vertex_Create = _StepShape.Handle_StepShape_Vertex_Create

def Handle_StepShape_Vertex_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Vertex >":
    return _StepShape.Handle_StepShape_Vertex_DownCast(t)
Handle_StepShape_Vertex_DownCast = _StepShape.Handle_StepShape_Vertex_DownCast

def Handle_StepShape_Vertex_IsNull(t: 'opencascade::handle< StepShape_Vertex > const &') -> "bool":
    return _StepShape.Handle_StepShape_Vertex_IsNull(t)
Handle_StepShape_Vertex_IsNull = _StepShape.Handle_StepShape_Vertex_IsNull

def Handle_StepShape_BrepWithVoids_Create() -> "opencascade::handle< StepShape_BrepWithVoids >":
    return _StepShape.Handle_StepShape_BrepWithVoids_Create()
Handle_StepShape_BrepWithVoids_Create = _StepShape.Handle_StepShape_BrepWithVoids_Create

def Handle_StepShape_BrepWithVoids_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_BrepWithVoids >":
    return _StepShape.Handle_StepShape_BrepWithVoids_DownCast(t)
Handle_StepShape_BrepWithVoids_DownCast = _StepShape.Handle_StepShape_BrepWithVoids_DownCast

def Handle_StepShape_BrepWithVoids_IsNull(t: 'opencascade::handle< StepShape_BrepWithVoids > const &') -> "bool":
    return _StepShape.Handle_StepShape_BrepWithVoids_IsNull(t)
Handle_StepShape_BrepWithVoids_IsNull = _StepShape.Handle_StepShape_BrepWithVoids_IsNull

def Handle_StepShape_ClosedShell_Create() -> "opencascade::handle< StepShape_ClosedShell >":
    return _StepShape.Handle_StepShape_ClosedShell_Create()
Handle_StepShape_ClosedShell_Create = _StepShape.Handle_StepShape_ClosedShell_Create

def Handle_StepShape_ClosedShell_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ClosedShell >":
    return _StepShape.Handle_StepShape_ClosedShell_DownCast(t)
Handle_StepShape_ClosedShell_DownCast = _StepShape.Handle_StepShape_ClosedShell_DownCast

def Handle_StepShape_ClosedShell_IsNull(t: 'opencascade::handle< StepShape_ClosedShell > const &') -> "bool":
    return _StepShape.Handle_StepShape_ClosedShell_IsNull(t)
Handle_StepShape_ClosedShell_IsNull = _StepShape.Handle_StepShape_ClosedShell_IsNull

def Handle_StepShape_ConnectedFaceSubSet_Create() -> "opencascade::handle< StepShape_ConnectedFaceSubSet >":
    return _StepShape.Handle_StepShape_ConnectedFaceSubSet_Create()
Handle_StepShape_ConnectedFaceSubSet_Create = _StepShape.Handle_StepShape_ConnectedFaceSubSet_Create

def Handle_StepShape_ConnectedFaceSubSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ConnectedFaceSubSet >":
    return _StepShape.Handle_StepShape_ConnectedFaceSubSet_DownCast(t)
Handle_StepShape_ConnectedFaceSubSet_DownCast = _StepShape.Handle_StepShape_ConnectedFaceSubSet_DownCast

def Handle_StepShape_ConnectedFaceSubSet_IsNull(t: 'opencascade::handle< StepShape_ConnectedFaceSubSet > const &') -> "bool":
    return _StepShape.Handle_StepShape_ConnectedFaceSubSet_IsNull(t)
Handle_StepShape_ConnectedFaceSubSet_IsNull = _StepShape.Handle_StepShape_ConnectedFaceSubSet_IsNull

def Handle_StepShape_EdgeCurve_Create() -> "opencascade::handle< StepShape_EdgeCurve >":
    return _StepShape.Handle_StepShape_EdgeCurve_Create()
Handle_StepShape_EdgeCurve_Create = _StepShape.Handle_StepShape_EdgeCurve_Create

def Handle_StepShape_EdgeCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_EdgeCurve >":
    return _StepShape.Handle_StepShape_EdgeCurve_DownCast(t)
Handle_StepShape_EdgeCurve_DownCast = _StepShape.Handle_StepShape_EdgeCurve_DownCast

def Handle_StepShape_EdgeCurve_IsNull(t: 'opencascade::handle< StepShape_EdgeCurve > const &') -> "bool":
    return _StepShape.Handle_StepShape_EdgeCurve_IsNull(t)
Handle_StepShape_EdgeCurve_IsNull = _StepShape.Handle_StepShape_EdgeCurve_IsNull

def Handle_StepShape_EdgeLoop_Create() -> "opencascade::handle< StepShape_EdgeLoop >":
    return _StepShape.Handle_StepShape_EdgeLoop_Create()
Handle_StepShape_EdgeLoop_Create = _StepShape.Handle_StepShape_EdgeLoop_Create

def Handle_StepShape_EdgeLoop_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_EdgeLoop >":
    return _StepShape.Handle_StepShape_EdgeLoop_DownCast(t)
Handle_StepShape_EdgeLoop_DownCast = _StepShape.Handle_StepShape_EdgeLoop_DownCast

def Handle_StepShape_EdgeLoop_IsNull(t: 'opencascade::handle< StepShape_EdgeLoop > const &') -> "bool":
    return _StepShape.Handle_StepShape_EdgeLoop_IsNull(t)
Handle_StepShape_EdgeLoop_IsNull = _StepShape.Handle_StepShape_EdgeLoop_IsNull

def Handle_StepShape_ExtrudedAreaSolid_Create() -> "opencascade::handle< StepShape_ExtrudedAreaSolid >":
    return _StepShape.Handle_StepShape_ExtrudedAreaSolid_Create()
Handle_StepShape_ExtrudedAreaSolid_Create = _StepShape.Handle_StepShape_ExtrudedAreaSolid_Create

def Handle_StepShape_ExtrudedAreaSolid_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ExtrudedAreaSolid >":
    return _StepShape.Handle_StepShape_ExtrudedAreaSolid_DownCast(t)
Handle_StepShape_ExtrudedAreaSolid_DownCast = _StepShape.Handle_StepShape_ExtrudedAreaSolid_DownCast

def Handle_StepShape_ExtrudedAreaSolid_IsNull(t: 'opencascade::handle< StepShape_ExtrudedAreaSolid > const &') -> "bool":
    return _StepShape.Handle_StepShape_ExtrudedAreaSolid_IsNull(t)
Handle_StepShape_ExtrudedAreaSolid_IsNull = _StepShape.Handle_StepShape_ExtrudedAreaSolid_IsNull

def Handle_StepShape_ExtrudedFaceSolid_Create() -> "opencascade::handle< StepShape_ExtrudedFaceSolid >":
    return _StepShape.Handle_StepShape_ExtrudedFaceSolid_Create()
Handle_StepShape_ExtrudedFaceSolid_Create = _StepShape.Handle_StepShape_ExtrudedFaceSolid_Create

def Handle_StepShape_ExtrudedFaceSolid_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_ExtrudedFaceSolid >":
    return _StepShape.Handle_StepShape_ExtrudedFaceSolid_DownCast(t)
Handle_StepShape_ExtrudedFaceSolid_DownCast = _StepShape.Handle_StepShape_ExtrudedFaceSolid_DownCast

def Handle_StepShape_ExtrudedFaceSolid_IsNull(t: 'opencascade::handle< StepShape_ExtrudedFaceSolid > const &') -> "bool":
    return _StepShape.Handle_StepShape_ExtrudedFaceSolid_IsNull(t)
Handle_StepShape_ExtrudedFaceSolid_IsNull = _StepShape.Handle_StepShape_ExtrudedFaceSolid_IsNull

def Handle_StepShape_FaceOuterBound_Create() -> "opencascade::handle< StepShape_FaceOuterBound >":
    return _StepShape.Handle_StepShape_FaceOuterBound_Create()
Handle_StepShape_FaceOuterBound_Create = _StepShape.Handle_StepShape_FaceOuterBound_Create

def Handle_StepShape_FaceOuterBound_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_FaceOuterBound >":
    return _StepShape.Handle_StepShape_FaceOuterBound_DownCast(t)
Handle_StepShape_FaceOuterBound_DownCast = _StepShape.Handle_StepShape_FaceOuterBound_DownCast

def Handle_StepShape_FaceOuterBound_IsNull(t: 'opencascade::handle< StepShape_FaceOuterBound > const &') -> "bool":
    return _StepShape.Handle_StepShape_FaceOuterBound_IsNull(t)
Handle_StepShape_FaceOuterBound_IsNull = _StepShape.Handle_StepShape_FaceOuterBound_IsNull

def Handle_StepShape_FaceSurface_Create() -> "opencascade::handle< StepShape_FaceSurface >":
    return _StepShape.Handle_StepShape_FaceSurface_Create()
Handle_StepShape_FaceSurface_Create = _StepShape.Handle_StepShape_FaceSurface_Create

def Handle_StepShape_FaceSurface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_FaceSurface >":
    return _StepShape.Handle_StepShape_FaceSurface_DownCast(t)
Handle_StepShape_FaceSurface_DownCast = _StepShape.Handle_StepShape_FaceSurface_DownCast

def Handle_StepShape_FaceSurface_IsNull(t: 'opencascade::handle< StepShape_FaceSurface > const &') -> "bool":
    return _StepShape.Handle_StepShape_FaceSurface_IsNull(t)
Handle_StepShape_FaceSurface_IsNull = _StepShape.Handle_StepShape_FaceSurface_IsNull

def Handle_StepShape_FacetedBrep_Create() -> "opencascade::handle< StepShape_FacetedBrep >":
    return _StepShape.Handle_StepShape_FacetedBrep_Create()
Handle_StepShape_FacetedBrep_Create = _StepShape.Handle_StepShape_FacetedBrep_Create

def Handle_StepShape_FacetedBrep_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_FacetedBrep >":
    return _StepShape.Handle_StepShape_FacetedBrep_DownCast(t)
Handle_StepShape_FacetedBrep_DownCast = _StepShape.Handle_StepShape_FacetedBrep_DownCast

def Handle_StepShape_FacetedBrep_IsNull(t: 'opencascade::handle< StepShape_FacetedBrep > const &') -> "bool":
    return _StepShape.Handle_StepShape_FacetedBrep_IsNull(t)
Handle_StepShape_FacetedBrep_IsNull = _StepShape.Handle_StepShape_FacetedBrep_IsNull

def Handle_StepShape_FacetedBrepAndBrepWithVoids_Create() -> "opencascade::handle< StepShape_FacetedBrepAndBrepWithVoids >":
    return _StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids_Create()
Handle_StepShape_FacetedBrepAndBrepWithVoids_Create = _StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids_Create

def Handle_StepShape_FacetedBrepAndBrepWithVoids_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_FacetedBrepAndBrepWithVoids >":
    return _StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids_DownCast(t)
Handle_StepShape_FacetedBrepAndBrepWithVoids_DownCast = _StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids_DownCast

def Handle_StepShape_FacetedBrepAndBrepWithVoids_IsNull(t: 'opencascade::handle< StepShape_FacetedBrepAndBrepWithVoids > const &') -> "bool":
    return _StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids_IsNull(t)
Handle_StepShape_FacetedBrepAndBrepWithVoids_IsNull = _StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids_IsNull

def Handle_StepShape_OpenShell_Create() -> "opencascade::handle< StepShape_OpenShell >":
    return _StepShape.Handle_StepShape_OpenShell_Create()
Handle_StepShape_OpenShell_Create = _StepShape.Handle_StepShape_OpenShell_Create

def Handle_StepShape_OpenShell_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_OpenShell >":
    return _StepShape.Handle_StepShape_OpenShell_DownCast(t)
Handle_StepShape_OpenShell_DownCast = _StepShape.Handle_StepShape_OpenShell_DownCast

def Handle_StepShape_OpenShell_IsNull(t: 'opencascade::handle< StepShape_OpenShell > const &') -> "bool":
    return _StepShape.Handle_StepShape_OpenShell_IsNull(t)
Handle_StepShape_OpenShell_IsNull = _StepShape.Handle_StepShape_OpenShell_IsNull

def Handle_StepShape_OrientedEdge_Create() -> "opencascade::handle< StepShape_OrientedEdge >":
    return _StepShape.Handle_StepShape_OrientedEdge_Create()
Handle_StepShape_OrientedEdge_Create = _StepShape.Handle_StepShape_OrientedEdge_Create

def Handle_StepShape_OrientedEdge_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_OrientedEdge >":
    return _StepShape.Handle_StepShape_OrientedEdge_DownCast(t)
Handle_StepShape_OrientedEdge_DownCast = _StepShape.Handle_StepShape_OrientedEdge_DownCast

def Handle_StepShape_OrientedEdge_IsNull(t: 'opencascade::handle< StepShape_OrientedEdge > const &') -> "bool":
    return _StepShape.Handle_StepShape_OrientedEdge_IsNull(t)
Handle_StepShape_OrientedEdge_IsNull = _StepShape.Handle_StepShape_OrientedEdge_IsNull

def Handle_StepShape_OrientedFace_Create() -> "opencascade::handle< StepShape_OrientedFace >":
    return _StepShape.Handle_StepShape_OrientedFace_Create()
Handle_StepShape_OrientedFace_Create = _StepShape.Handle_StepShape_OrientedFace_Create

def Handle_StepShape_OrientedFace_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_OrientedFace >":
    return _StepShape.Handle_StepShape_OrientedFace_DownCast(t)
Handle_StepShape_OrientedFace_DownCast = _StepShape.Handle_StepShape_OrientedFace_DownCast

def Handle_StepShape_OrientedFace_IsNull(t: 'opencascade::handle< StepShape_OrientedFace > const &') -> "bool":
    return _StepShape.Handle_StepShape_OrientedFace_IsNull(t)
Handle_StepShape_OrientedFace_IsNull = _StepShape.Handle_StepShape_OrientedFace_IsNull

def Handle_StepShape_OrientedPath_Create() -> "opencascade::handle< StepShape_OrientedPath >":
    return _StepShape.Handle_StepShape_OrientedPath_Create()
Handle_StepShape_OrientedPath_Create = _StepShape.Handle_StepShape_OrientedPath_Create

def Handle_StepShape_OrientedPath_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_OrientedPath >":
    return _StepShape.Handle_StepShape_OrientedPath_DownCast(t)
Handle_StepShape_OrientedPath_DownCast = _StepShape.Handle_StepShape_OrientedPath_DownCast

def Handle_StepShape_OrientedPath_IsNull(t: 'opencascade::handle< StepShape_OrientedPath > const &') -> "bool":
    return _StepShape.Handle_StepShape_OrientedPath_IsNull(t)
Handle_StepShape_OrientedPath_IsNull = _StepShape.Handle_StepShape_OrientedPath_IsNull

def Handle_StepShape_PolyLoop_Create() -> "opencascade::handle< StepShape_PolyLoop >":
    return _StepShape.Handle_StepShape_PolyLoop_Create()
Handle_StepShape_PolyLoop_Create = _StepShape.Handle_StepShape_PolyLoop_Create

def Handle_StepShape_PolyLoop_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_PolyLoop >":
    return _StepShape.Handle_StepShape_PolyLoop_DownCast(t)
Handle_StepShape_PolyLoop_DownCast = _StepShape.Handle_StepShape_PolyLoop_DownCast

def Handle_StepShape_PolyLoop_IsNull(t: 'opencascade::handle< StepShape_PolyLoop > const &') -> "bool":
    return _StepShape.Handle_StepShape_PolyLoop_IsNull(t)
Handle_StepShape_PolyLoop_IsNull = _StepShape.Handle_StepShape_PolyLoop_IsNull

def Handle_StepShape_RevolvedAreaSolid_Create() -> "opencascade::handle< StepShape_RevolvedAreaSolid >":
    return _StepShape.Handle_StepShape_RevolvedAreaSolid_Create()
Handle_StepShape_RevolvedAreaSolid_Create = _StepShape.Handle_StepShape_RevolvedAreaSolid_Create

def Handle_StepShape_RevolvedAreaSolid_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_RevolvedAreaSolid >":
    return _StepShape.Handle_StepShape_RevolvedAreaSolid_DownCast(t)
Handle_StepShape_RevolvedAreaSolid_DownCast = _StepShape.Handle_StepShape_RevolvedAreaSolid_DownCast

def Handle_StepShape_RevolvedAreaSolid_IsNull(t: 'opencascade::handle< StepShape_RevolvedAreaSolid > const &') -> "bool":
    return _StepShape.Handle_StepShape_RevolvedAreaSolid_IsNull(t)
Handle_StepShape_RevolvedAreaSolid_IsNull = _StepShape.Handle_StepShape_RevolvedAreaSolid_IsNull

def Handle_StepShape_RevolvedFaceSolid_Create() -> "opencascade::handle< StepShape_RevolvedFaceSolid >":
    return _StepShape.Handle_StepShape_RevolvedFaceSolid_Create()
Handle_StepShape_RevolvedFaceSolid_Create = _StepShape.Handle_StepShape_RevolvedFaceSolid_Create

def Handle_StepShape_RevolvedFaceSolid_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_RevolvedFaceSolid >":
    return _StepShape.Handle_StepShape_RevolvedFaceSolid_DownCast(t)
Handle_StepShape_RevolvedFaceSolid_DownCast = _StepShape.Handle_StepShape_RevolvedFaceSolid_DownCast

def Handle_StepShape_RevolvedFaceSolid_IsNull(t: 'opencascade::handle< StepShape_RevolvedFaceSolid > const &') -> "bool":
    return _StepShape.Handle_StepShape_RevolvedFaceSolid_IsNull(t)
Handle_StepShape_RevolvedFaceSolid_IsNull = _StepShape.Handle_StepShape_RevolvedFaceSolid_IsNull

def Handle_StepShape_Subedge_Create() -> "opencascade::handle< StepShape_Subedge >":
    return _StepShape.Handle_StepShape_Subedge_Create()
Handle_StepShape_Subedge_Create = _StepShape.Handle_StepShape_Subedge_Create

def Handle_StepShape_Subedge_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Subedge >":
    return _StepShape.Handle_StepShape_Subedge_DownCast(t)
Handle_StepShape_Subedge_DownCast = _StepShape.Handle_StepShape_Subedge_DownCast

def Handle_StepShape_Subedge_IsNull(t: 'opencascade::handle< StepShape_Subedge > const &') -> "bool":
    return _StepShape.Handle_StepShape_Subedge_IsNull(t)
Handle_StepShape_Subedge_IsNull = _StepShape.Handle_StepShape_Subedge_IsNull

def Handle_StepShape_Subface_Create() -> "opencascade::handle< StepShape_Subface >":
    return _StepShape.Handle_StepShape_Subface_Create()
Handle_StepShape_Subface_Create = _StepShape.Handle_StepShape_Subface_Create

def Handle_StepShape_Subface_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_Subface >":
    return _StepShape.Handle_StepShape_Subface_DownCast(t)
Handle_StepShape_Subface_DownCast = _StepShape.Handle_StepShape_Subface_DownCast

def Handle_StepShape_Subface_IsNull(t: 'opencascade::handle< StepShape_Subface > const &') -> "bool":
    return _StepShape.Handle_StepShape_Subface_IsNull(t)
Handle_StepShape_Subface_IsNull = _StepShape.Handle_StepShape_Subface_IsNull

def Handle_StepShape_VertexLoop_Create() -> "opencascade::handle< StepShape_VertexLoop >":
    return _StepShape.Handle_StepShape_VertexLoop_Create()
Handle_StepShape_VertexLoop_Create = _StepShape.Handle_StepShape_VertexLoop_Create

def Handle_StepShape_VertexLoop_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_VertexLoop >":
    return _StepShape.Handle_StepShape_VertexLoop_DownCast(t)
Handle_StepShape_VertexLoop_DownCast = _StepShape.Handle_StepShape_VertexLoop_DownCast

def Handle_StepShape_VertexLoop_IsNull(t: 'opencascade::handle< StepShape_VertexLoop > const &') -> "bool":
    return _StepShape.Handle_StepShape_VertexLoop_IsNull(t)
Handle_StepShape_VertexLoop_IsNull = _StepShape.Handle_StepShape_VertexLoop_IsNull

def Handle_StepShape_VertexPoint_Create() -> "opencascade::handle< StepShape_VertexPoint >":
    return _StepShape.Handle_StepShape_VertexPoint_Create()
Handle_StepShape_VertexPoint_Create = _StepShape.Handle_StepShape_VertexPoint_Create

def Handle_StepShape_VertexPoint_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_VertexPoint >":
    return _StepShape.Handle_StepShape_VertexPoint_DownCast(t)
Handle_StepShape_VertexPoint_DownCast = _StepShape.Handle_StepShape_VertexPoint_DownCast

def Handle_StepShape_VertexPoint_IsNull(t: 'opencascade::handle< StepShape_VertexPoint > const &') -> "bool":
    return _StepShape.Handle_StepShape_VertexPoint_IsNull(t)
Handle_StepShape_VertexPoint_IsNull = _StepShape.Handle_StepShape_VertexPoint_IsNull

def Handle_StepShape_AdvancedFace_Create() -> "opencascade::handle< StepShape_AdvancedFace >":
    return _StepShape.Handle_StepShape_AdvancedFace_Create()
Handle_StepShape_AdvancedFace_Create = _StepShape.Handle_StepShape_AdvancedFace_Create

def Handle_StepShape_AdvancedFace_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_AdvancedFace >":
    return _StepShape.Handle_StepShape_AdvancedFace_DownCast(t)
Handle_StepShape_AdvancedFace_DownCast = _StepShape.Handle_StepShape_AdvancedFace_DownCast

def Handle_StepShape_AdvancedFace_IsNull(t: 'opencascade::handle< StepShape_AdvancedFace > const &') -> "bool":
    return _StepShape.Handle_StepShape_AdvancedFace_IsNull(t)
Handle_StepShape_AdvancedFace_IsNull = _StepShape.Handle_StepShape_AdvancedFace_IsNull

def Handle_StepShape_OrientedClosedShell_Create() -> "opencascade::handle< StepShape_OrientedClosedShell >":
    return _StepShape.Handle_StepShape_OrientedClosedShell_Create()
Handle_StepShape_OrientedClosedShell_Create = _StepShape.Handle_StepShape_OrientedClosedShell_Create

def Handle_StepShape_OrientedClosedShell_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_OrientedClosedShell >":
    return _StepShape.Handle_StepShape_OrientedClosedShell_DownCast(t)
Handle_StepShape_OrientedClosedShell_DownCast = _StepShape.Handle_StepShape_OrientedClosedShell_DownCast

def Handle_StepShape_OrientedClosedShell_IsNull(t: 'opencascade::handle< StepShape_OrientedClosedShell > const &') -> "bool":
    return _StepShape.Handle_StepShape_OrientedClosedShell_IsNull(t)
Handle_StepShape_OrientedClosedShell_IsNull = _StepShape.Handle_StepShape_OrientedClosedShell_IsNull

def Handle_StepShape_OrientedOpenShell_Create() -> "opencascade::handle< StepShape_OrientedOpenShell >":
    return _StepShape.Handle_StepShape_OrientedOpenShell_Create()
Handle_StepShape_OrientedOpenShell_Create = _StepShape.Handle_StepShape_OrientedOpenShell_Create

def Handle_StepShape_OrientedOpenShell_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_OrientedOpenShell >":
    return _StepShape.Handle_StepShape_OrientedOpenShell_DownCast(t)
Handle_StepShape_OrientedOpenShell_DownCast = _StepShape.Handle_StepShape_OrientedOpenShell_DownCast

def Handle_StepShape_OrientedOpenShell_IsNull(t: 'opencascade::handle< StepShape_OrientedOpenShell > const &') -> "bool":
    return _StepShape.Handle_StepShape_OrientedOpenShell_IsNull(t)
Handle_StepShape_OrientedOpenShell_IsNull = _StepShape.Handle_StepShape_OrientedOpenShell_IsNull

def Handle_StepShape_SeamEdge_Create() -> "opencascade::handle< StepShape_SeamEdge >":
    return _StepShape.Handle_StepShape_SeamEdge_Create()
Handle_StepShape_SeamEdge_Create = _StepShape.Handle_StepShape_SeamEdge_Create

def Handle_StepShape_SeamEdge_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_SeamEdge >":
    return _StepShape.Handle_StepShape_SeamEdge_DownCast(t)
Handle_StepShape_SeamEdge_DownCast = _StepShape.Handle_StepShape_SeamEdge_DownCast

def Handle_StepShape_SeamEdge_IsNull(t: 'opencascade::handle< StepShape_SeamEdge > const &') -> "bool":
    return _StepShape.Handle_StepShape_SeamEdge_IsNull(t)
Handle_StepShape_SeamEdge_IsNull = _StepShape.Handle_StepShape_SeamEdge_IsNull

def Handle_StepShape_HArray1OfConnectedEdgeSet_Create() -> "opencascade::handle< StepShape_HArray1OfConnectedEdgeSet >":
    return _StepShape.Handle_StepShape_HArray1OfConnectedEdgeSet_Create()
Handle_StepShape_HArray1OfConnectedEdgeSet_Create = _StepShape.Handle_StepShape_HArray1OfConnectedEdgeSet_Create

def Handle_StepShape_HArray1OfConnectedEdgeSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfConnectedEdgeSet >":
    return _StepShape.Handle_StepShape_HArray1OfConnectedEdgeSet_DownCast(t)
Handle_StepShape_HArray1OfConnectedEdgeSet_DownCast = _StepShape.Handle_StepShape_HArray1OfConnectedEdgeSet_DownCast

def Handle_StepShape_HArray1OfConnectedEdgeSet_IsNull(t: 'opencascade::handle< StepShape_HArray1OfConnectedEdgeSet > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfConnectedEdgeSet_IsNull(t)
Handle_StepShape_HArray1OfConnectedEdgeSet_IsNull = _StepShape.Handle_StepShape_HArray1OfConnectedEdgeSet_IsNull

def Handle_StepShape_HArray1OfFaceBound_Create() -> "opencascade::handle< StepShape_HArray1OfFaceBound >":
    return _StepShape.Handle_StepShape_HArray1OfFaceBound_Create()
Handle_StepShape_HArray1OfFaceBound_Create = _StepShape.Handle_StepShape_HArray1OfFaceBound_Create

def Handle_StepShape_HArray1OfFaceBound_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfFaceBound >":
    return _StepShape.Handle_StepShape_HArray1OfFaceBound_DownCast(t)
Handle_StepShape_HArray1OfFaceBound_DownCast = _StepShape.Handle_StepShape_HArray1OfFaceBound_DownCast

def Handle_StepShape_HArray1OfFaceBound_IsNull(t: 'opencascade::handle< StepShape_HArray1OfFaceBound > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfFaceBound_IsNull(t)
Handle_StepShape_HArray1OfFaceBound_IsNull = _StepShape.Handle_StepShape_HArray1OfFaceBound_IsNull

def Handle_StepShape_HArray1OfGeometricSetSelect_Create() -> "opencascade::handle< StepShape_HArray1OfGeometricSetSelect >":
    return _StepShape.Handle_StepShape_HArray1OfGeometricSetSelect_Create()
Handle_StepShape_HArray1OfGeometricSetSelect_Create = _StepShape.Handle_StepShape_HArray1OfGeometricSetSelect_Create

def Handle_StepShape_HArray1OfGeometricSetSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfGeometricSetSelect >":
    return _StepShape.Handle_StepShape_HArray1OfGeometricSetSelect_DownCast(t)
Handle_StepShape_HArray1OfGeometricSetSelect_DownCast = _StepShape.Handle_StepShape_HArray1OfGeometricSetSelect_DownCast

def Handle_StepShape_HArray1OfGeometricSetSelect_IsNull(t: 'opencascade::handle< StepShape_HArray1OfGeometricSetSelect > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfGeometricSetSelect_IsNull(t)
Handle_StepShape_HArray1OfGeometricSetSelect_IsNull = _StepShape.Handle_StepShape_HArray1OfGeometricSetSelect_IsNull

def Handle_StepShape_HArray1OfConnectedFaceSet_Create() -> "opencascade::handle< StepShape_HArray1OfConnectedFaceSet >":
    return _StepShape.Handle_StepShape_HArray1OfConnectedFaceSet_Create()
Handle_StepShape_HArray1OfConnectedFaceSet_Create = _StepShape.Handle_StepShape_HArray1OfConnectedFaceSet_Create

def Handle_StepShape_HArray1OfConnectedFaceSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfConnectedFaceSet >":
    return _StepShape.Handle_StepShape_HArray1OfConnectedFaceSet_DownCast(t)
Handle_StepShape_HArray1OfConnectedFaceSet_DownCast = _StepShape.Handle_StepShape_HArray1OfConnectedFaceSet_DownCast

def Handle_StepShape_HArray1OfConnectedFaceSet_IsNull(t: 'opencascade::handle< StepShape_HArray1OfConnectedFaceSet > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfConnectedFaceSet_IsNull(t)
Handle_StepShape_HArray1OfConnectedFaceSet_IsNull = _StepShape.Handle_StepShape_HArray1OfConnectedFaceSet_IsNull

def Handle_StepShape_HArray1OfEdge_Create() -> "opencascade::handle< StepShape_HArray1OfEdge >":
    return _StepShape.Handle_StepShape_HArray1OfEdge_Create()
Handle_StepShape_HArray1OfEdge_Create = _StepShape.Handle_StepShape_HArray1OfEdge_Create

def Handle_StepShape_HArray1OfEdge_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfEdge >":
    return _StepShape.Handle_StepShape_HArray1OfEdge_DownCast(t)
Handle_StepShape_HArray1OfEdge_DownCast = _StepShape.Handle_StepShape_HArray1OfEdge_DownCast

def Handle_StepShape_HArray1OfEdge_IsNull(t: 'opencascade::handle< StepShape_HArray1OfEdge > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfEdge_IsNull(t)
Handle_StepShape_HArray1OfEdge_IsNull = _StepShape.Handle_StepShape_HArray1OfEdge_IsNull

def Handle_StepShape_HArray1OfFace_Create() -> "opencascade::handle< StepShape_HArray1OfFace >":
    return _StepShape.Handle_StepShape_HArray1OfFace_Create()
Handle_StepShape_HArray1OfFace_Create = _StepShape.Handle_StepShape_HArray1OfFace_Create

def Handle_StepShape_HArray1OfFace_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfFace >":
    return _StepShape.Handle_StepShape_HArray1OfFace_DownCast(t)
Handle_StepShape_HArray1OfFace_DownCast = _StepShape.Handle_StepShape_HArray1OfFace_DownCast

def Handle_StepShape_HArray1OfFace_IsNull(t: 'opencascade::handle< StepShape_HArray1OfFace > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfFace_IsNull(t)
Handle_StepShape_HArray1OfFace_IsNull = _StepShape.Handle_StepShape_HArray1OfFace_IsNull

def Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_Create() -> "opencascade::handle< StepShape_HArray1OfShapeDimensionRepresentationItem >":
    return _StepShape.Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_Create()
Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_Create = _StepShape.Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_Create

def Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfShapeDimensionRepresentationItem >":
    return _StepShape.Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_DownCast(t)
Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_DownCast = _StepShape.Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_DownCast

def Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_IsNull(t: 'opencascade::handle< StepShape_HArray1OfShapeDimensionRepresentationItem > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_IsNull(t)
Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_IsNull = _StepShape.Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_IsNull

def Handle_StepShape_HArray1OfValueQualifier_Create() -> "opencascade::handle< StepShape_HArray1OfValueQualifier >":
    return _StepShape.Handle_StepShape_HArray1OfValueQualifier_Create()
Handle_StepShape_HArray1OfValueQualifier_Create = _StepShape.Handle_StepShape_HArray1OfValueQualifier_Create

def Handle_StepShape_HArray1OfValueQualifier_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfValueQualifier >":
    return _StepShape.Handle_StepShape_HArray1OfValueQualifier_DownCast(t)
Handle_StepShape_HArray1OfValueQualifier_DownCast = _StepShape.Handle_StepShape_HArray1OfValueQualifier_DownCast

def Handle_StepShape_HArray1OfValueQualifier_IsNull(t: 'opencascade::handle< StepShape_HArray1OfValueQualifier > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfValueQualifier_IsNull(t)
Handle_StepShape_HArray1OfValueQualifier_IsNull = _StepShape.Handle_StepShape_HArray1OfValueQualifier_IsNull

def Handle_StepShape_HArray1OfShell_Create() -> "opencascade::handle< StepShape_HArray1OfShell >":
    return _StepShape.Handle_StepShape_HArray1OfShell_Create()
Handle_StepShape_HArray1OfShell_Create = _StepShape.Handle_StepShape_HArray1OfShell_Create

def Handle_StepShape_HArray1OfShell_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfShell >":
    return _StepShape.Handle_StepShape_HArray1OfShell_DownCast(t)
Handle_StepShape_HArray1OfShell_DownCast = _StepShape.Handle_StepShape_HArray1OfShell_DownCast

def Handle_StepShape_HArray1OfShell_IsNull(t: 'opencascade::handle< StepShape_HArray1OfShell > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfShell_IsNull(t)
Handle_StepShape_HArray1OfShell_IsNull = _StepShape.Handle_StepShape_HArray1OfShell_IsNull

def Handle_StepShape_HArray1OfOrientedClosedShell_Create() -> "opencascade::handle< StepShape_HArray1OfOrientedClosedShell >":
    return _StepShape.Handle_StepShape_HArray1OfOrientedClosedShell_Create()
Handle_StepShape_HArray1OfOrientedClosedShell_Create = _StepShape.Handle_StepShape_HArray1OfOrientedClosedShell_Create

def Handle_StepShape_HArray1OfOrientedClosedShell_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfOrientedClosedShell >":
    return _StepShape.Handle_StepShape_HArray1OfOrientedClosedShell_DownCast(t)
Handle_StepShape_HArray1OfOrientedClosedShell_DownCast = _StepShape.Handle_StepShape_HArray1OfOrientedClosedShell_DownCast

def Handle_StepShape_HArray1OfOrientedClosedShell_IsNull(t: 'opencascade::handle< StepShape_HArray1OfOrientedClosedShell > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfOrientedClosedShell_IsNull(t)
Handle_StepShape_HArray1OfOrientedClosedShell_IsNull = _StepShape.Handle_StepShape_HArray1OfOrientedClosedShell_IsNull

def Handle_StepShape_HArray1OfOrientedEdge_Create() -> "opencascade::handle< StepShape_HArray1OfOrientedEdge >":
    return _StepShape.Handle_StepShape_HArray1OfOrientedEdge_Create()
Handle_StepShape_HArray1OfOrientedEdge_Create = _StepShape.Handle_StepShape_HArray1OfOrientedEdge_Create

def Handle_StepShape_HArray1OfOrientedEdge_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepShape_HArray1OfOrientedEdge >":
    return _StepShape.Handle_StepShape_HArray1OfOrientedEdge_DownCast(t)
Handle_StepShape_HArray1OfOrientedEdge_DownCast = _StepShape.Handle_StepShape_HArray1OfOrientedEdge_DownCast

def Handle_StepShape_HArray1OfOrientedEdge_IsNull(t: 'opencascade::handle< StepShape_HArray1OfOrientedEdge > const &') -> "bool":
    return _StepShape.Handle_StepShape_HArray1OfOrientedEdge_IsNull(t)
Handle_StepShape_HArray1OfOrientedEdge_IsNull = _StepShape.Handle_StepShape_HArray1OfOrientedEdge_IsNull
class StepShape_Array1OfConnectedFaceSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfConnectedFaceSet_swiginit(self, _StepShape.new_StepShape_Array1OfConnectedFaceSet(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfConnectedFaceSet

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfConnectedFaceSet.begin = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_begin, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.end = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_end, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_cbegin, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.cend = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_cend, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Init = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Init, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Size = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Size, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Length = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Length, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_IsEmpty, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Lower = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Lower, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Upper = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Upper, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_IsDeletable, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_IsAllocated, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Assign = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Assign, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Move = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Move, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Set = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Set, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.First = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_First, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_ChangeFirst, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Last = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Last, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_ChangeLast, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Value = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Value, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_ChangeValue, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet___call__, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_SetValue, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet.Resize = new_instancemethod(_StepShape.StepShape_Array1OfConnectedFaceSet_Resize, None, StepShape_Array1OfConnectedFaceSet)
StepShape_Array1OfConnectedFaceSet_swigregister = _StepShape.StepShape_Array1OfConnectedFaceSet_swigregister
StepShape_Array1OfConnectedFaceSet_swigregister(StepShape_Array1OfConnectedFaceSet)

class StepShape_Array1OfValueQualifier(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfValueQualifier_swiginit(self, _StepShape.new_StepShape_Array1OfValueQualifier(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfValueQualifier

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfValueQualifier.begin = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_begin, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.end = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_end, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_cbegin, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.cend = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_cend, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Init = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Init, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Size = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Size, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Length = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Length, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_IsEmpty, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Lower = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Lower, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Upper = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Upper, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_IsDeletable, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_IsAllocated, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Assign = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Assign, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Move = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Move, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Set = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Set, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.First = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_First, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_ChangeFirst, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Last = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Last, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_ChangeLast, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Value = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Value, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_ChangeValue, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier___call__, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_SetValue, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier.Resize = new_instancemethod(_StepShape.StepShape_Array1OfValueQualifier_Resize, None, StepShape_Array1OfValueQualifier)
StepShape_Array1OfValueQualifier_swigregister = _StepShape.StepShape_Array1OfValueQualifier_swigregister
StepShape_Array1OfValueQualifier_swigregister(StepShape_Array1OfValueQualifier)

class StepShape_Array1OfShapeDimensionRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_swiginit(self, _StepShape.new_StepShape_Array1OfShapeDimensionRepresentationItem(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfShapeDimensionRepresentationItem

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfShapeDimensionRepresentationItem.begin = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_begin, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.end = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_end, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_cbegin, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.cend = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_cend, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Init = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Init, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Size = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Size, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Length = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Length, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_IsEmpty, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Lower = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Lower, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Upper = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Upper, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_IsDeletable, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_IsAllocated, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Assign = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Assign, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Move = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Move, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Set = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Set, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.First = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_First, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_ChangeFirst, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Last = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Last, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_ChangeLast, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Value = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Value, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_ChangeValue, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem___call__, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_SetValue, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem.Resize = new_instancemethod(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Resize, None, StepShape_Array1OfShapeDimensionRepresentationItem)
StepShape_Array1OfShapeDimensionRepresentationItem_swigregister = _StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_swigregister
StepShape_Array1OfShapeDimensionRepresentationItem_swigregister(StepShape_Array1OfShapeDimensionRepresentationItem)

class StepShape_Array1OfConnectedEdgeSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfConnectedEdgeSet_swiginit(self, _StepShape.new_StepShape_Array1OfConnectedEdgeSet(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfConnectedEdgeSet

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfConnectedEdgeSet.begin = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_begin, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.end = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_end, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_cbegin, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.cend = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_cend, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Init = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Init, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Size = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Size, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Length = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Length, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_IsEmpty, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Lower = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Lower, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Upper = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Upper, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_IsDeletable, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_IsAllocated, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Assign = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Assign, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Move = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Move, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Set = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Set, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.First = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_First, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_ChangeFirst, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Last = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Last, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_ChangeLast, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Value = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Value, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_ChangeValue, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet___call__, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_SetValue, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet.Resize = new_instancemethod(_StepShape.StepShape_Array1OfConnectedEdgeSet_Resize, None, StepShape_Array1OfConnectedEdgeSet)
StepShape_Array1OfConnectedEdgeSet_swigregister = _StepShape.StepShape_Array1OfConnectedEdgeSet_swigregister
StepShape_Array1OfConnectedEdgeSet_swigregister(StepShape_Array1OfConnectedEdgeSet)

class StepShape_Array1OfFace(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfFace_swiginit(self, _StepShape.new_StepShape_Array1OfFace(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfFace

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfFace.begin = new_instancemethod(_StepShape.StepShape_Array1OfFace_begin, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.end = new_instancemethod(_StepShape.StepShape_Array1OfFace_end, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfFace_cbegin, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.cend = new_instancemethod(_StepShape.StepShape_Array1OfFace_cend, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Init = new_instancemethod(_StepShape.StepShape_Array1OfFace_Init, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Size = new_instancemethod(_StepShape.StepShape_Array1OfFace_Size, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Length = new_instancemethod(_StepShape.StepShape_Array1OfFace_Length, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfFace_IsEmpty, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Lower = new_instancemethod(_StepShape.StepShape_Array1OfFace_Lower, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Upper = new_instancemethod(_StepShape.StepShape_Array1OfFace_Upper, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfFace_IsDeletable, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfFace_IsAllocated, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Assign = new_instancemethod(_StepShape.StepShape_Array1OfFace_Assign, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Move = new_instancemethod(_StepShape.StepShape_Array1OfFace_Move, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Set = new_instancemethod(_StepShape.StepShape_Array1OfFace_Set, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.First = new_instancemethod(_StepShape.StepShape_Array1OfFace_First, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfFace_ChangeFirst, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Last = new_instancemethod(_StepShape.StepShape_Array1OfFace_Last, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfFace_ChangeLast, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Value = new_instancemethod(_StepShape.StepShape_Array1OfFace_Value, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfFace_ChangeValue, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfFace___call__, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfFace_SetValue, None, StepShape_Array1OfFace)
StepShape_Array1OfFace.Resize = new_instancemethod(_StepShape.StepShape_Array1OfFace_Resize, None, StepShape_Array1OfFace)
StepShape_Array1OfFace_swigregister = _StepShape.StepShape_Array1OfFace_swigregister
StepShape_Array1OfFace_swigregister(StepShape_Array1OfFace)

class StepShape_Array1OfFaceBound(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfFaceBound_swiginit(self, _StepShape.new_StepShape_Array1OfFaceBound(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfFaceBound

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfFaceBound.begin = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_begin, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.end = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_end, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_cbegin, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.cend = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_cend, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Init = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Init, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Size = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Size, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Length = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Length, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_IsEmpty, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Lower = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Lower, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Upper = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Upper, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_IsDeletable, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_IsAllocated, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Assign = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Assign, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Move = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Move, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Set = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Set, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.First = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_First, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_ChangeFirst, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Last = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Last, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_ChangeLast, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Value = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Value, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_ChangeValue, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound___call__, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_SetValue, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound.Resize = new_instancemethod(_StepShape.StepShape_Array1OfFaceBound_Resize, None, StepShape_Array1OfFaceBound)
StepShape_Array1OfFaceBound_swigregister = _StepShape.StepShape_Array1OfFaceBound_swigregister
StepShape_Array1OfFaceBound_swigregister(StepShape_Array1OfFaceBound)

class StepShape_Array1OfShell(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfShell_swiginit(self, _StepShape.new_StepShape_Array1OfShell(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfShell

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfShell.begin = new_instancemethod(_StepShape.StepShape_Array1OfShell_begin, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.end = new_instancemethod(_StepShape.StepShape_Array1OfShell_end, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfShell_cbegin, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.cend = new_instancemethod(_StepShape.StepShape_Array1OfShell_cend, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Init = new_instancemethod(_StepShape.StepShape_Array1OfShell_Init, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Size = new_instancemethod(_StepShape.StepShape_Array1OfShell_Size, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Length = new_instancemethod(_StepShape.StepShape_Array1OfShell_Length, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfShell_IsEmpty, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Lower = new_instancemethod(_StepShape.StepShape_Array1OfShell_Lower, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Upper = new_instancemethod(_StepShape.StepShape_Array1OfShell_Upper, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfShell_IsDeletable, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfShell_IsAllocated, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Assign = new_instancemethod(_StepShape.StepShape_Array1OfShell_Assign, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Move = new_instancemethod(_StepShape.StepShape_Array1OfShell_Move, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Set = new_instancemethod(_StepShape.StepShape_Array1OfShell_Set, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.First = new_instancemethod(_StepShape.StepShape_Array1OfShell_First, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfShell_ChangeFirst, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Last = new_instancemethod(_StepShape.StepShape_Array1OfShell_Last, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfShell_ChangeLast, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Value = new_instancemethod(_StepShape.StepShape_Array1OfShell_Value, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfShell_ChangeValue, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfShell___call__, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfShell_SetValue, None, StepShape_Array1OfShell)
StepShape_Array1OfShell.Resize = new_instancemethod(_StepShape.StepShape_Array1OfShell_Resize, None, StepShape_Array1OfShell)
StepShape_Array1OfShell_swigregister = _StepShape.StepShape_Array1OfShell_swigregister
StepShape_Array1OfShell_swigregister(StepShape_Array1OfShell)

class StepShape_Array1OfOrientedEdge(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfOrientedEdge_swiginit(self, _StepShape.new_StepShape_Array1OfOrientedEdge(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfOrientedEdge

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfOrientedEdge.begin = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_begin, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.end = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_end, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_cbegin, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.cend = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_cend, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Init = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Init, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Size = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Size, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Length = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Length, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_IsEmpty, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Lower = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Lower, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Upper = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Upper, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_IsDeletable, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_IsAllocated, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Assign = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Assign, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Move = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Move, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Set = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Set, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.First = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_First, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_ChangeFirst, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Last = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Last, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_ChangeLast, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Value = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Value, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_ChangeValue, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge___call__, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_SetValue, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge.Resize = new_instancemethod(_StepShape.StepShape_Array1OfOrientedEdge_Resize, None, StepShape_Array1OfOrientedEdge)
StepShape_Array1OfOrientedEdge_swigregister = _StepShape.StepShape_Array1OfOrientedEdge_swigregister
StepShape_Array1OfOrientedEdge_swigregister(StepShape_Array1OfOrientedEdge)

class StepShape_Array1OfGeometricSetSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfGeometricSetSelect_swiginit(self, _StepShape.new_StepShape_Array1OfGeometricSetSelect(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfGeometricSetSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfGeometricSetSelect.begin = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_begin, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.end = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_end, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_cbegin, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.cend = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_cend, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Init = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Init, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Size = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Size, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Length = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Length, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_IsEmpty, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Lower = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Lower, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Upper = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Upper, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_IsDeletable, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_IsAllocated, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Assign = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Assign, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Move = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Move, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Set = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Set, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.First = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_First, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_ChangeFirst, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Last = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Last, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_ChangeLast, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Value = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Value, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_ChangeValue, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect___call__, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_SetValue, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect.Resize = new_instancemethod(_StepShape.StepShape_Array1OfGeometricSetSelect_Resize, None, StepShape_Array1OfGeometricSetSelect)
StepShape_Array1OfGeometricSetSelect_swigregister = _StepShape.StepShape_Array1OfGeometricSetSelect_swigregister
StepShape_Array1OfGeometricSetSelect_swigregister(StepShape_Array1OfGeometricSetSelect)

class StepShape_Array1OfOrientedClosedShell(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfOrientedClosedShell_swiginit(self, _StepShape.new_StepShape_Array1OfOrientedClosedShell(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfOrientedClosedShell

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfOrientedClosedShell.begin = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_begin, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.end = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_end, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_cbegin, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.cend = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_cend, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Init = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Init, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Size = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Size, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Length = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Length, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_IsEmpty, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Lower = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Lower, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Upper = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Upper, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_IsDeletable, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_IsAllocated, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Assign = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Assign, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Move = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Move, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Set = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Set, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.First = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_First, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_ChangeFirst, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Last = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Last, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_ChangeLast, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Value = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Value, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_ChangeValue, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell___call__, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_SetValue, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell.Resize = new_instancemethod(_StepShape.StepShape_Array1OfOrientedClosedShell_Resize, None, StepShape_Array1OfOrientedClosedShell)
StepShape_Array1OfOrientedClosedShell_swigregister = _StepShape.StepShape_Array1OfOrientedClosedShell_swigregister
StepShape_Array1OfOrientedClosedShell_swigregister(StepShape_Array1OfOrientedClosedShell)

class StepShape_Array1OfEdge(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfEdge_swiginit(self, _StepShape.new_StepShape_Array1OfEdge(*args))
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfEdge

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepShape_Array1OfEdge.begin = new_instancemethod(_StepShape.StepShape_Array1OfEdge_begin, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.end = new_instancemethod(_StepShape.StepShape_Array1OfEdge_end, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.cbegin = new_instancemethod(_StepShape.StepShape_Array1OfEdge_cbegin, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.cend = new_instancemethod(_StepShape.StepShape_Array1OfEdge_cend, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Init = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Init, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Size = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Size, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Length = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Length, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.IsEmpty = new_instancemethod(_StepShape.StepShape_Array1OfEdge_IsEmpty, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Lower = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Lower, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Upper = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Upper, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.IsDeletable = new_instancemethod(_StepShape.StepShape_Array1OfEdge_IsDeletable, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.IsAllocated = new_instancemethod(_StepShape.StepShape_Array1OfEdge_IsAllocated, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Assign = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Assign, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Move = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Move, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Set = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Set, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.First = new_instancemethod(_StepShape.StepShape_Array1OfEdge_First, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.ChangeFirst = new_instancemethod(_StepShape.StepShape_Array1OfEdge_ChangeFirst, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Last = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Last, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.ChangeLast = new_instancemethod(_StepShape.StepShape_Array1OfEdge_ChangeLast, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Value = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Value, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.ChangeValue = new_instancemethod(_StepShape.StepShape_Array1OfEdge_ChangeValue, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.__call__ = new_instancemethod(_StepShape.StepShape_Array1OfEdge___call__, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.SetValue = new_instancemethod(_StepShape.StepShape_Array1OfEdge_SetValue, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge.Resize = new_instancemethod(_StepShape.StepShape_Array1OfEdge_Resize, None, StepShape_Array1OfEdge)
StepShape_Array1OfEdge_swigregister = _StepShape.StepShape_Array1OfEdge_swigregister
StepShape_Array1OfEdge_swigregister(StepShape_Array1OfEdge)

class StepShape_Block(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:param aX:
        	:type aX: float
        	:param aY:
        	:type aY: float
        	:param aZ:
        	:type aZ: float
        	:rtype: None
        """
        return _StepShape.StepShape_Block_Init(self, *args)


    def Position(self, *args) -> "opencascade::handle< StepGeom_Axis2Placement3d >":
        """:rtype: opencascade::handle<StepGeom_Axis2Placement3d>"""
        return _StepShape.StepShape_Block_Position(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        :param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:rtype: None
        """
        return _StepShape.StepShape_Block_SetPosition(self, *args)


    def SetX(self, *args) -> "void":
        """
        :param aX:
        	:type aX: float
        	:rtype: None
        """
        return _StepShape.StepShape_Block_SetX(self, *args)


    def SetY(self, *args) -> "void":
        """
        :param aY:
        	:type aY: float
        	:rtype: None
        """
        return _StepShape.StepShape_Block_SetY(self, *args)


    def SetZ(self, *args) -> "void":
        """
        :param aZ:
        	:type aZ: float
        	:rtype: None
        """
        return _StepShape.StepShape_Block_SetZ(self, *args)


    def __init__(self, *args):
        """
        * Returns a Block
        	:rtype: None
        """
        _StepShape.StepShape_Block_swiginit(self, _StepShape.new_StepShape_Block(*args))

    def X(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_Block_X(self, *args)


    def Y(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_Block_Y(self, *args)


    def Z(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_Block_Z(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Block_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Block
StepShape_Block.Init = new_instancemethod(_StepShape.StepShape_Block_Init, None, StepShape_Block)
StepShape_Block.Position = new_instancemethod(_StepShape.StepShape_Block_Position, None, StepShape_Block)
StepShape_Block.SetPosition = new_instancemethod(_StepShape.StepShape_Block_SetPosition, None, StepShape_Block)
StepShape_Block.SetX = new_instancemethod(_StepShape.StepShape_Block_SetX, None, StepShape_Block)
StepShape_Block.SetY = new_instancemethod(_StepShape.StepShape_Block_SetY, None, StepShape_Block)
StepShape_Block.SetZ = new_instancemethod(_StepShape.StepShape_Block_SetZ, None, StepShape_Block)
StepShape_Block.X = new_instancemethod(_StepShape.StepShape_Block_X, None, StepShape_Block)
StepShape_Block.Y = new_instancemethod(_StepShape.StepShape_Block_Y, None, StepShape_Block)
StepShape_Block.Z = new_instancemethod(_StepShape.StepShape_Block_Z, None, StepShape_Block)
StepShape_Block_swigregister = _StepShape.StepShape_Block_swigregister
StepShape_Block_swigregister(StepShape_Block)

class StepShape_BooleanOperand(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BooleanResult(self, *args) -> "opencascade::handle< StepShape_BooleanResult >":
        """
        * returns Value as a BooleanResult (Null if another type)
        	:rtype: opencascade::handle<StepShape_BooleanResult>
        """
        return _StepShape.StepShape_BooleanOperand_BooleanResult(self, *args)


    def CsgPrimitive(self, *args) -> "StepShape_CsgPrimitive":
        """
        * returns Value as a CsgPrimitive (Null if another type) CsgPrimitive is another Select Type
        	:rtype: StepShape_CsgPrimitive
        """
        return _StepShape.StepShape_BooleanOperand_CsgPrimitive(self, *args)


    def HalfSpaceSolid(self, *args) -> "opencascade::handle< StepShape_HalfSpaceSolid >":
        """
        * returns Value as a HalfSpaceSolid (Null if another type)
        	:rtype: opencascade::handle<StepShape_HalfSpaceSolid>
        """
        return _StepShape.StepShape_BooleanOperand_HalfSpaceSolid(self, *args)


    def SetBooleanResult(self, *args) -> "void":
        """
        :param aBooleanResult:
        	:type aBooleanResult: StepShape_BooleanResult
        	:rtype: None
        """
        return _StepShape.StepShape_BooleanOperand_SetBooleanResult(self, *args)


    def SetCsgPrimitive(self, *args) -> "void":
        """
        :param aCsgPrimitive:
        	:type aCsgPrimitive: StepShape_CsgPrimitive
        	:rtype: None
        """
        return _StepShape.StepShape_BooleanOperand_SetCsgPrimitive(self, *args)


    def SetHalfSpaceSolid(self, *args) -> "void":
        """
        :param aHalfSpaceSolid:
        	:type aHalfSpaceSolid: StepShape_HalfSpaceSolid
        	:rtype: None
        """
        return _StepShape.StepShape_BooleanOperand_SetHalfSpaceSolid(self, *args)


    def SetSolidModel(self, *args) -> "void":
        """
        :param aSolidModel:
        	:type aSolidModel: StepShape_SolidModel
        	:rtype: None
        """
        return _StepShape.StepShape_BooleanOperand_SetSolidModel(self, *args)


    def SetTypeOfContent(self, *args) -> "void":
        """
        :param aTypeOfContent:
        	:type aTypeOfContent: int
        	:rtype: None
        """
        return _StepShape.StepShape_BooleanOperand_SetTypeOfContent(self, *args)


    def SolidModel(self, *args) -> "opencascade::handle< StepShape_SolidModel >":
        """
        * returns Value as a SolidModel (Null if another type)
        	:rtype: opencascade::handle<StepShape_SolidModel>
        """
        return _StepShape.StepShape_BooleanOperand_SolidModel(self, *args)


    def __init__(self, *args):
        """
        * Returns a BooleanOperand SelectType
        	:rtype: None
        """
        _StepShape.StepShape_BooleanOperand_swiginit(self, _StepShape.new_StepShape_BooleanOperand(*args))

    def TypeOfContent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_BooleanOperand_TypeOfContent(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BooleanOperand
StepShape_BooleanOperand.BooleanResult = new_instancemethod(_StepShape.StepShape_BooleanOperand_BooleanResult, None, StepShape_BooleanOperand)
StepShape_BooleanOperand.CsgPrimitive = new_instancemethod(_StepShape.StepShape_BooleanOperand_CsgPrimitive, None, StepShape_BooleanOperand)
StepShape_BooleanOperand.HalfSpaceSolid = new_instancemethod(_StepShape.StepShape_BooleanOperand_HalfSpaceSolid, None, StepShape_BooleanOperand)
StepShape_BooleanOperand.SetBooleanResult = new_instancemethod(_StepShape.StepShape_BooleanOperand_SetBooleanResult, None, StepShape_BooleanOperand)
StepShape_BooleanOperand.SetCsgPrimitive = new_instancemethod(_StepShape.StepShape_BooleanOperand_SetCsgPrimitive, None, StepShape_BooleanOperand)
StepShape_BooleanOperand.SetHalfSpaceSolid = new_instancemethod(_StepShape.StepShape_BooleanOperand_SetHalfSpaceSolid, None, StepShape_BooleanOperand)
StepShape_BooleanOperand.SetSolidModel = new_instancemethod(_StepShape.StepShape_BooleanOperand_SetSolidModel, None, StepShape_BooleanOperand)
StepShape_BooleanOperand.SetTypeOfContent = new_instancemethod(_StepShape.StepShape_BooleanOperand_SetTypeOfContent, None, StepShape_BooleanOperand)
StepShape_BooleanOperand.SolidModel = new_instancemethod(_StepShape.StepShape_BooleanOperand_SolidModel, None, StepShape_BooleanOperand)
StepShape_BooleanOperand.TypeOfContent = new_instancemethod(_StepShape.StepShape_BooleanOperand_TypeOfContent, None, StepShape_BooleanOperand)
StepShape_BooleanOperand_swigregister = _StepShape.StepShape_BooleanOperand_swigregister
StepShape_BooleanOperand_swigregister(StepShape_BooleanOperand)

class StepShape_BooleanResult(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FirstOperand(self, *args) -> "StepShape_BooleanOperand":
        """:rtype: StepShape_BooleanOperand"""
        return _StepShape.StepShape_BooleanResult_FirstOperand(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aOperator:
        	:type aOperator: StepShape_BooleanOperator
        	:param aFirstOperand:
        	:type aFirstOperand: StepShape_BooleanOperand
        	:param aSecondOperand:
        	:type aSecondOperand: StepShape_BooleanOperand
        	:rtype: None
        """
        return _StepShape.StepShape_BooleanResult_Init(self, *args)


    def Operator(self, *args) -> "StepShape_BooleanOperator":
        """:rtype: StepShape_BooleanOperator"""
        return _StepShape.StepShape_BooleanResult_Operator(self, *args)


    def SecondOperand(self, *args) -> "StepShape_BooleanOperand":
        """:rtype: StepShape_BooleanOperand"""
        return _StepShape.StepShape_BooleanResult_SecondOperand(self, *args)


    def SetFirstOperand(self, *args) -> "void":
        """
        :param aFirstOperand:
        	:type aFirstOperand: StepShape_BooleanOperand
        	:rtype: None
        """
        return _StepShape.StepShape_BooleanResult_SetFirstOperand(self, *args)


    def SetOperator(self, *args) -> "void":
        """
        :param aOperator:
        	:type aOperator: StepShape_BooleanOperator
        	:rtype: None
        """
        return _StepShape.StepShape_BooleanResult_SetOperator(self, *args)


    def SetSecondOperand(self, *args) -> "void":
        """
        :param aSecondOperand:
        	:type aSecondOperand: StepShape_BooleanOperand
        	:rtype: None
        """
        return _StepShape.StepShape_BooleanResult_SetSecondOperand(self, *args)


    def __init__(self, *args):
        """
        * Returns a BooleanResult
        	:rtype: None
        """
        _StepShape.StepShape_BooleanResult_swiginit(self, _StepShape.new_StepShape_BooleanResult(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_BooleanResult_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BooleanResult
StepShape_BooleanResult.FirstOperand = new_instancemethod(_StepShape.StepShape_BooleanResult_FirstOperand, None, StepShape_BooleanResult)
StepShape_BooleanResult.Init = new_instancemethod(_StepShape.StepShape_BooleanResult_Init, None, StepShape_BooleanResult)
StepShape_BooleanResult.Operator = new_instancemethod(_StepShape.StepShape_BooleanResult_Operator, None, StepShape_BooleanResult)
StepShape_BooleanResult.SecondOperand = new_instancemethod(_StepShape.StepShape_BooleanResult_SecondOperand, None, StepShape_BooleanResult)
StepShape_BooleanResult.SetFirstOperand = new_instancemethod(_StepShape.StepShape_BooleanResult_SetFirstOperand, None, StepShape_BooleanResult)
StepShape_BooleanResult.SetOperator = new_instancemethod(_StepShape.StepShape_BooleanResult_SetOperator, None, StepShape_BooleanResult)
StepShape_BooleanResult.SetSecondOperand = new_instancemethod(_StepShape.StepShape_BooleanResult_SetSecondOperand, None, StepShape_BooleanResult)
StepShape_BooleanResult_swigregister = _StepShape.StepShape_BooleanResult_swigregister
StepShape_BooleanResult_swigregister(StepShape_BooleanResult)

class StepShape_BoxDomain(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Corner(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_CartesianPoint>"""
        return _StepShape.StepShape_BoxDomain_Corner(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aCorner:
        	:type aCorner: StepGeom_CartesianPoint
        	:param aXlength:
        	:type aXlength: float
        	:param aYlength:
        	:type aYlength: float
        	:param aZlength:
        	:type aZlength: float
        	:rtype: None
        """
        return _StepShape.StepShape_BoxDomain_Init(self, *args)


    def SetCorner(self, *args) -> "void":
        """
        :param aCorner:
        	:type aCorner: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _StepShape.StepShape_BoxDomain_SetCorner(self, *args)


    def SetXlength(self, *args) -> "void":
        """
        :param aXlength:
        	:type aXlength: float
        	:rtype: None
        """
        return _StepShape.StepShape_BoxDomain_SetXlength(self, *args)


    def SetYlength(self, *args) -> "void":
        """
        :param aYlength:
        	:type aYlength: float
        	:rtype: None
        """
        return _StepShape.StepShape_BoxDomain_SetYlength(self, *args)


    def SetZlength(self, *args) -> "void":
        """
        :param aZlength:
        	:type aZlength: float
        	:rtype: None
        """
        return _StepShape.StepShape_BoxDomain_SetZlength(self, *args)


    def __init__(self, *args):
        """
        * Returns a BoxDomain
        	:rtype: None
        """
        _StepShape.StepShape_BoxDomain_swiginit(self, _StepShape.new_StepShape_BoxDomain(*args))

    def Xlength(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_BoxDomain_Xlength(self, *args)


    def Ylength(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_BoxDomain_Ylength(self, *args)


    def Zlength(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_BoxDomain_Zlength(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_BoxDomain_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BoxDomain
StepShape_BoxDomain.Corner = new_instancemethod(_StepShape.StepShape_BoxDomain_Corner, None, StepShape_BoxDomain)
StepShape_BoxDomain.Init = new_instancemethod(_StepShape.StepShape_BoxDomain_Init, None, StepShape_BoxDomain)
StepShape_BoxDomain.SetCorner = new_instancemethod(_StepShape.StepShape_BoxDomain_SetCorner, None, StepShape_BoxDomain)
StepShape_BoxDomain.SetXlength = new_instancemethod(_StepShape.StepShape_BoxDomain_SetXlength, None, StepShape_BoxDomain)
StepShape_BoxDomain.SetYlength = new_instancemethod(_StepShape.StepShape_BoxDomain_SetYlength, None, StepShape_BoxDomain)
StepShape_BoxDomain.SetZlength = new_instancemethod(_StepShape.StepShape_BoxDomain_SetZlength, None, StepShape_BoxDomain)
StepShape_BoxDomain.Xlength = new_instancemethod(_StepShape.StepShape_BoxDomain_Xlength, None, StepShape_BoxDomain)
StepShape_BoxDomain.Ylength = new_instancemethod(_StepShape.StepShape_BoxDomain_Ylength, None, StepShape_BoxDomain)
StepShape_BoxDomain.Zlength = new_instancemethod(_StepShape.StepShape_BoxDomain_Zlength, None, StepShape_BoxDomain)
StepShape_BoxDomain_swigregister = _StepShape.StepShape_BoxDomain_swigregister
StepShape_BoxDomain_swigregister(StepShape_BoxDomain)

class StepShape_ConnectedFaceShapeRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ConnectedFaceShapeRepresentation_swiginit(self, _StepShape.new_StepShape_ConnectedFaceShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ConnectedFaceShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ConnectedFaceShapeRepresentation
StepShape_ConnectedFaceShapeRepresentation_swigregister = _StepShape.StepShape_ConnectedFaceShapeRepresentation_swigregister
StepShape_ConnectedFaceShapeRepresentation_swigregister(StepShape_ConnectedFaceShapeRepresentation)

class StepShape_ContextDependentShapeRepresentation(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aRepRel:
        	:type aRepRel: StepRepr_ShapeRepresentationRelationship
        	:param aProRel:
        	:type aProRel: StepRepr_ProductDefinitionShape
        	:rtype: None
        """
        return _StepShape.StepShape_ContextDependentShapeRepresentation_Init(self, *args)


    def RepresentationRelation(self, *args) -> "opencascade::handle< StepRepr_ShapeRepresentationRelationship >":
        """:rtype: opencascade::handle<StepRepr_ShapeRepresentationRelationship>"""
        return _StepShape.StepShape_ContextDependentShapeRepresentation_RepresentationRelation(self, *args)


    def RepresentedProductRelation(self, *args) -> "opencascade::handle< StepRepr_ProductDefinitionShape >":
        """:rtype: opencascade::handle<StepRepr_ProductDefinitionShape>"""
        return _StepShape.StepShape_ContextDependentShapeRepresentation_RepresentedProductRelation(self, *args)


    def SetRepresentationRelation(self, *args) -> "void":
        """
        :param aRepRel:
        	:type aRepRel: StepRepr_ShapeRepresentationRelationship
        	:rtype: None
        """
        return _StepShape.StepShape_ContextDependentShapeRepresentation_SetRepresentationRelation(self, *args)


    def SetRepresentedProductRelation(self, *args) -> "void":
        """
        :param aProRel:
        	:type aProRel: StepRepr_ProductDefinitionShape
        	:rtype: None
        """
        return _StepShape.StepShape_ContextDependentShapeRepresentation_SetRepresentedProductRelation(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_ContextDependentShapeRepresentation_swiginit(self, _StepShape.new_StepShape_ContextDependentShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ContextDependentShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ContextDependentShapeRepresentation
StepShape_ContextDependentShapeRepresentation.Init = new_instancemethod(_StepShape.StepShape_ContextDependentShapeRepresentation_Init, None, StepShape_ContextDependentShapeRepresentation)
StepShape_ContextDependentShapeRepresentation.RepresentationRelation = new_instancemethod(_StepShape.StepShape_ContextDependentShapeRepresentation_RepresentationRelation, None, StepShape_ContextDependentShapeRepresentation)
StepShape_ContextDependentShapeRepresentation.RepresentedProductRelation = new_instancemethod(_StepShape.StepShape_ContextDependentShapeRepresentation_RepresentedProductRelation, None, StepShape_ContextDependentShapeRepresentation)
StepShape_ContextDependentShapeRepresentation.SetRepresentationRelation = new_instancemethod(_StepShape.StepShape_ContextDependentShapeRepresentation_SetRepresentationRelation, None, StepShape_ContextDependentShapeRepresentation)
StepShape_ContextDependentShapeRepresentation.SetRepresentedProductRelation = new_instancemethod(_StepShape.StepShape_ContextDependentShapeRepresentation_SetRepresentedProductRelation, None, StepShape_ContextDependentShapeRepresentation)
StepShape_ContextDependentShapeRepresentation_swigregister = _StepShape.StepShape_ContextDependentShapeRepresentation_swigregister
StepShape_ContextDependentShapeRepresentation_swigregister(StepShape_ContextDependentShapeRepresentation)

class StepShape_CsgPrimitive(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Block(self, *args) -> "opencascade::handle< StepShape_Block >":
        """
        * returns Value as a Block (Null if another type)
        	:rtype: opencascade::handle<StepShape_Block>
        """
        return _StepShape.StepShape_CsgPrimitive_Block(self, *args)


    def RightAngularWedge(self, *args) -> "opencascade::handle< StepShape_RightAngularWedge >":
        """
        * returns Value as a RightAngularWedge (Null if another type)
        	:rtype: opencascade::handle<StepShape_RightAngularWedge>
        """
        return _StepShape.StepShape_CsgPrimitive_RightAngularWedge(self, *args)


    def RightCircularCone(self, *args) -> "opencascade::handle< StepShape_RightCircularCone >":
        """
        * returns Value as a RightCircularCone (Null if another type)
        	:rtype: opencascade::handle<StepShape_RightCircularCone>
        """
        return _StepShape.StepShape_CsgPrimitive_RightCircularCone(self, *args)


    def RightCircularCylinder(self, *args) -> "opencascade::handle< StepShape_RightCircularCylinder >":
        """
        * returns Value as a RightCircularCylinder (Null if another type)
        	:rtype: opencascade::handle<StepShape_RightCircularCylinder>
        """
        return _StepShape.StepShape_CsgPrimitive_RightCircularCylinder(self, *args)


    def Sphere(self, *args) -> "opencascade::handle< StepShape_Sphere >":
        """
        * returns Value as a Sphere (Null if another type)
        	:rtype: opencascade::handle<StepShape_Sphere>
        """
        return _StepShape.StepShape_CsgPrimitive_Sphere(self, *args)


    def __init__(self, *args):
        """
        * Returns a CsgPrimitive SelectType
        	:rtype: None
        """
        _StepShape.StepShape_CsgPrimitive_swiginit(self, _StepShape.new_StepShape_CsgPrimitive(*args))

    def Torus(self, *args) -> "opencascade::handle< StepShape_Torus >":
        """
        * returns Value as a Torus (Null if another type)
        	:rtype: opencascade::handle<StepShape_Torus>
        """
        return _StepShape.StepShape_CsgPrimitive_Torus(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CsgPrimitive
StepShape_CsgPrimitive.Block = new_instancemethod(_StepShape.StepShape_CsgPrimitive_Block, None, StepShape_CsgPrimitive)
StepShape_CsgPrimitive.RightAngularWedge = new_instancemethod(_StepShape.StepShape_CsgPrimitive_RightAngularWedge, None, StepShape_CsgPrimitive)
StepShape_CsgPrimitive.RightCircularCone = new_instancemethod(_StepShape.StepShape_CsgPrimitive_RightCircularCone, None, StepShape_CsgPrimitive)
StepShape_CsgPrimitive.RightCircularCylinder = new_instancemethod(_StepShape.StepShape_CsgPrimitive_RightCircularCylinder, None, StepShape_CsgPrimitive)
StepShape_CsgPrimitive.Sphere = new_instancemethod(_StepShape.StepShape_CsgPrimitive_Sphere, None, StepShape_CsgPrimitive)
StepShape_CsgPrimitive.Torus = new_instancemethod(_StepShape.StepShape_CsgPrimitive_Torus, None, StepShape_CsgPrimitive)
StepShape_CsgPrimitive_swigregister = _StepShape.StepShape_CsgPrimitive_swigregister
StepShape_CsgPrimitive_swigregister(StepShape_CsgPrimitive)

class StepShape_CsgSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BooleanResult(self, *args) -> "opencascade::handle< StepShape_BooleanResult >":
        """
        * returns Value as a BooleanResult (Null if another type)
        	:rtype: opencascade::handle<StepShape_BooleanResult>
        """
        return _StepShape.StepShape_CsgSelect_BooleanResult(self, *args)


    def CsgPrimitive(self, *args) -> "StepShape_CsgPrimitive":
        """
        * returns Value as a CsgPrimitive (Null if another type)
        	:rtype: StepShape_CsgPrimitive
        """
        return _StepShape.StepShape_CsgSelect_CsgPrimitive(self, *args)


    def SetBooleanResult(self, *args) -> "void":
        """
        :param aBooleanResult:
        	:type aBooleanResult: StepShape_BooleanResult
        	:rtype: None
        """
        return _StepShape.StepShape_CsgSelect_SetBooleanResult(self, *args)


    def SetCsgPrimitive(self, *args) -> "void":
        """
        :param aCsgPrimitive:
        	:type aCsgPrimitive: StepShape_CsgPrimitive
        	:rtype: None
        """
        return _StepShape.StepShape_CsgSelect_SetCsgPrimitive(self, *args)


    def SetTypeOfContent(self, *args) -> "void":
        """
        :param aTypeOfContent:
        	:type aTypeOfContent: int
        	:rtype: None
        """
        return _StepShape.StepShape_CsgSelect_SetTypeOfContent(self, *args)


    def __init__(self, *args):
        """
        * Returns a CsgSelect SelectType
        	:rtype: None
        """
        _StepShape.StepShape_CsgSelect_swiginit(self, _StepShape.new_StepShape_CsgSelect(*args))

    def TypeOfContent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_CsgSelect_TypeOfContent(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CsgSelect
StepShape_CsgSelect.BooleanResult = new_instancemethod(_StepShape.StepShape_CsgSelect_BooleanResult, None, StepShape_CsgSelect)
StepShape_CsgSelect.CsgPrimitive = new_instancemethod(_StepShape.StepShape_CsgSelect_CsgPrimitive, None, StepShape_CsgSelect)
StepShape_CsgSelect.SetBooleanResult = new_instancemethod(_StepShape.StepShape_CsgSelect_SetBooleanResult, None, StepShape_CsgSelect)
StepShape_CsgSelect.SetCsgPrimitive = new_instancemethod(_StepShape.StepShape_CsgSelect_SetCsgPrimitive, None, StepShape_CsgSelect)
StepShape_CsgSelect.SetTypeOfContent = new_instancemethod(_StepShape.StepShape_CsgSelect_SetTypeOfContent, None, StepShape_CsgSelect)
StepShape_CsgSelect.TypeOfContent = new_instancemethod(_StepShape.StepShape_CsgSelect_TypeOfContent, None, StepShape_CsgSelect)
StepShape_CsgSelect_swigregister = _StepShape.StepShape_CsgSelect_swigregister
StepShape_CsgSelect_swigregister(StepShape_CsgSelect)

class StepShape_DefinitionalRepresentationAndShapeRepresentation(OCC.Core.StepRepr.StepRepr_DefinitionalRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_DefinitionalRepresentationAndShapeRepresentation_swiginit(self, _StepShape.new_StepShape_DefinitionalRepresentationAndShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DefinitionalRepresentationAndShapeRepresentation
StepShape_DefinitionalRepresentationAndShapeRepresentation_swigregister = _StepShape.StepShape_DefinitionalRepresentationAndShapeRepresentation_swigregister
StepShape_DefinitionalRepresentationAndShapeRepresentation_swigregister(StepShape_DefinitionalRepresentationAndShapeRepresentation)

class StepShape_DimensionalCharacteristic(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DimensionalLocation(self, *args) -> "opencascade::handle< StepShape_DimensionalLocation >":
        """
        * Returns Value as DimensionalLocation (or Null if another type)
        	:rtype: opencascade::handle<StepShape_DimensionalLocation>
        """
        return _StepShape.StepShape_DimensionalCharacteristic_DimensionalLocation(self, *args)


    def DimensionalSize(self, *args) -> "opencascade::handle< StepShape_DimensionalSize >":
        """
        * Returns Value as DimensionalSize (or Null if another type)
        	:rtype: opencascade::handle<StepShape_DimensionalSize>
        """
        return _StepShape.StepShape_DimensionalCharacteristic_DimensionalSize(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalCharacteristic_swiginit(self, _StepShape.new_StepShape_DimensionalCharacteristic(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalCharacteristic
StepShape_DimensionalCharacteristic.DimensionalLocation = new_instancemethod(_StepShape.StepShape_DimensionalCharacteristic_DimensionalLocation, None, StepShape_DimensionalCharacteristic)
StepShape_DimensionalCharacteristic.DimensionalSize = new_instancemethod(_StepShape.StepShape_DimensionalCharacteristic_DimensionalSize, None, StepShape_DimensionalCharacteristic)
StepShape_DimensionalCharacteristic_swigregister = _StepShape.StepShape_DimensionalCharacteristic_swigregister
StepShape_DimensionalCharacteristic_swigregister(StepShape_DimensionalCharacteristic)

class StepShape_DimensionalCharacteristicRepresentation(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Dimension(self, *args) -> "StepShape_DimensionalCharacteristic":
        """
        * Returns field Dimension
        	:rtype: StepShape_DimensionalCharacteristic
        """
        return _StepShape.StepShape_DimensionalCharacteristicRepresentation_Dimension(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aDimension:
        	:type aDimension: StepShape_DimensionalCharacteristic
        	:param aRepresentation:
        	:type aRepresentation: StepShape_ShapeDimensionRepresentation
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalCharacteristicRepresentation_Init(self, *args)


    def Representation(self, *args) -> "opencascade::handle< StepShape_ShapeDimensionRepresentation >":
        """
        * Returns field Representation
        	:rtype: opencascade::handle<StepShape_ShapeDimensionRepresentation>
        """
        return _StepShape.StepShape_DimensionalCharacteristicRepresentation_Representation(self, *args)


    def SetDimension(self, *args) -> "void":
        """
        * Set field Dimension
        	:param Dimension:
        	:type Dimension: StepShape_DimensionalCharacteristic
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalCharacteristicRepresentation_SetDimension(self, *args)


    def SetRepresentation(self, *args) -> "void":
        """
        * Set field Representation
        	:param Representation:
        	:type Representation: StepShape_ShapeDimensionRepresentation
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalCharacteristicRepresentation_SetRepresentation(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalCharacteristicRepresentation_swiginit(self, _StepShape.new_StepShape_DimensionalCharacteristicRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalCharacteristicRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalCharacteristicRepresentation
StepShape_DimensionalCharacteristicRepresentation.Dimension = new_instancemethod(_StepShape.StepShape_DimensionalCharacteristicRepresentation_Dimension, None, StepShape_DimensionalCharacteristicRepresentation)
StepShape_DimensionalCharacteristicRepresentation.Init = new_instancemethod(_StepShape.StepShape_DimensionalCharacteristicRepresentation_Init, None, StepShape_DimensionalCharacteristicRepresentation)
StepShape_DimensionalCharacteristicRepresentation.Representation = new_instancemethod(_StepShape.StepShape_DimensionalCharacteristicRepresentation_Representation, None, StepShape_DimensionalCharacteristicRepresentation)
StepShape_DimensionalCharacteristicRepresentation.SetDimension = new_instancemethod(_StepShape.StepShape_DimensionalCharacteristicRepresentation_SetDimension, None, StepShape_DimensionalCharacteristicRepresentation)
StepShape_DimensionalCharacteristicRepresentation.SetRepresentation = new_instancemethod(_StepShape.StepShape_DimensionalCharacteristicRepresentation_SetRepresentation, None, StepShape_DimensionalCharacteristicRepresentation)
StepShape_DimensionalCharacteristicRepresentation_swigregister = _StepShape.StepShape_DimensionalCharacteristicRepresentation_swigregister
StepShape_DimensionalCharacteristicRepresentation_swigregister(StepShape_DimensionalCharacteristicRepresentation)

class StepShape_DimensionalLocation(OCC.Core.StepRepr.StepRepr_ShapeAspectRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalLocation_swiginit(self, _StepShape.new_StepShape_DimensionalLocation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalLocation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalLocation
StepShape_DimensionalLocation_swigregister = _StepShape.StepShape_DimensionalLocation_swigregister
StepShape_DimensionalLocation_swigregister(StepShape_DimensionalLocation)

class StepShape_DimensionalSize(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AppliesTo(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        * Returns field AppliesTo
        	:rtype: opencascade::handle<StepRepr_ShapeAspect>
        """
        return _StepShape.StepShape_DimensionalSize_AppliesTo(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aAppliesTo:
        	:type aAppliesTo: StepRepr_ShapeAspect
        	:param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalSize_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field Name
        	:rtype: opencascade::handle<TCollection_HAsciiString>
        """
        return _StepShape.StepShape_DimensionalSize_Name(self, *args)


    def SetAppliesTo(self, *args) -> "void":
        """
        * Set field AppliesTo
        	:param AppliesTo:
        	:type AppliesTo: StepRepr_ShapeAspect
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalSize_SetAppliesTo(self, *args)


    def SetName(self, *args) -> "void":
        """
        * Set field Name
        	:param Name:
        	:type Name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalSize_SetName(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalSize_swiginit(self, _StepShape.new_StepShape_DimensionalSize(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalSize_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalSize
StepShape_DimensionalSize.AppliesTo = new_instancemethod(_StepShape.StepShape_DimensionalSize_AppliesTo, None, StepShape_DimensionalSize)
StepShape_DimensionalSize.Init = new_instancemethod(_StepShape.StepShape_DimensionalSize_Init, None, StepShape_DimensionalSize)
StepShape_DimensionalSize.Name = new_instancemethod(_StepShape.StepShape_DimensionalSize_Name, None, StepShape_DimensionalSize)
StepShape_DimensionalSize.SetAppliesTo = new_instancemethod(_StepShape.StepShape_DimensionalSize_SetAppliesTo, None, StepShape_DimensionalSize)
StepShape_DimensionalSize.SetName = new_instancemethod(_StepShape.StepShape_DimensionalSize_SetName, None, StepShape_DimensionalSize)
StepShape_DimensionalSize_swigregister = _StepShape.StepShape_DimensionalSize_swigregister
StepShape_DimensionalSize_swigregister(StepShape_DimensionalSize)

class StepShape_EdgeBasedWireframeModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EbwmBoundary(self, *args) -> "opencascade::handle< StepShape_HArray1OfConnectedEdgeSet >":
        """
        * Returns field EbwmBoundary
        	:rtype: opencascade::handle<StepShape_HArray1OfConnectedEdgeSet>
        """
        return _StepShape.StepShape_EdgeBasedWireframeModel_EbwmBoundary(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aEbwmBoundary:
        	:type aEbwmBoundary: StepShape_HArray1OfConnectedEdgeSet
        	:rtype: None
        """
        return _StepShape.StepShape_EdgeBasedWireframeModel_Init(self, *args)


    def SetEbwmBoundary(self, *args) -> "void":
        """
        * Set field EbwmBoundary
        	:param EbwmBoundary:
        	:type EbwmBoundary: StepShape_HArray1OfConnectedEdgeSet
        	:rtype: None
        """
        return _StepShape.StepShape_EdgeBasedWireframeModel_SetEbwmBoundary(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_EdgeBasedWireframeModel_swiginit(self, _StepShape.new_StepShape_EdgeBasedWireframeModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_EdgeBasedWireframeModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_EdgeBasedWireframeModel
StepShape_EdgeBasedWireframeModel.EbwmBoundary = new_instancemethod(_StepShape.StepShape_EdgeBasedWireframeModel_EbwmBoundary, None, StepShape_EdgeBasedWireframeModel)
StepShape_EdgeBasedWireframeModel.Init = new_instancemethod(_StepShape.StepShape_EdgeBasedWireframeModel_Init, None, StepShape_EdgeBasedWireframeModel)
StepShape_EdgeBasedWireframeModel.SetEbwmBoundary = new_instancemethod(_StepShape.StepShape_EdgeBasedWireframeModel_SetEbwmBoundary, None, StepShape_EdgeBasedWireframeModel)
StepShape_EdgeBasedWireframeModel_swigregister = _StepShape.StepShape_EdgeBasedWireframeModel_swigregister
StepShape_EdgeBasedWireframeModel_swigregister(StepShape_EdgeBasedWireframeModel)

class StepShape_FaceBasedSurfaceModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FbsmFaces(self, *args) -> "opencascade::handle< StepShape_HArray1OfConnectedFaceSet >":
        """
        * Returns field FbsmFaces
        	:rtype: opencascade::handle<StepShape_HArray1OfConnectedFaceSet>
        """
        return _StepShape.StepShape_FaceBasedSurfaceModel_FbsmFaces(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFbsmFaces:
        	:type aFbsmFaces: StepShape_HArray1OfConnectedFaceSet
        	:rtype: None
        """
        return _StepShape.StepShape_FaceBasedSurfaceModel_Init(self, *args)


    def SetFbsmFaces(self, *args) -> "void":
        """
        * Set field FbsmFaces
        	:param FbsmFaces:
        	:type FbsmFaces: StepShape_HArray1OfConnectedFaceSet
        	:rtype: None
        """
        return _StepShape.StepShape_FaceBasedSurfaceModel_SetFbsmFaces(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_FaceBasedSurfaceModel_swiginit(self, _StepShape.new_StepShape_FaceBasedSurfaceModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FaceBasedSurfaceModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FaceBasedSurfaceModel
StepShape_FaceBasedSurfaceModel.FbsmFaces = new_instancemethod(_StepShape.StepShape_FaceBasedSurfaceModel_FbsmFaces, None, StepShape_FaceBasedSurfaceModel)
StepShape_FaceBasedSurfaceModel.Init = new_instancemethod(_StepShape.StepShape_FaceBasedSurfaceModel_Init, None, StepShape_FaceBasedSurfaceModel)
StepShape_FaceBasedSurfaceModel.SetFbsmFaces = new_instancemethod(_StepShape.StepShape_FaceBasedSurfaceModel_SetFbsmFaces, None, StepShape_FaceBasedSurfaceModel)
StepShape_FaceBasedSurfaceModel_swigregister = _StepShape.StepShape_FaceBasedSurfaceModel_swigregister
StepShape_FaceBasedSurfaceModel_swigregister(StepShape_FaceBasedSurfaceModel)

class StepShape_GeometricSet(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Elements(self, *args) -> "opencascade::handle< StepShape_HArray1OfGeometricSetSelect >":
        """:rtype: opencascade::handle<StepShape_HArray1OfGeometricSetSelect>"""
        return _StepShape.StepShape_GeometricSet_Elements(self, *args)


    def ElementsValue(self, *args) -> "StepShape_GeometricSetSelect":
        """
        :param num:
        	:type num: int
        	:rtype: StepShape_GeometricSetSelect
        """
        return _StepShape.StepShape_GeometricSet_ElementsValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aElements:
        	:type aElements: StepShape_HArray1OfGeometricSetSelect
        	:rtype: None
        """
        return _StepShape.StepShape_GeometricSet_Init(self, *args)


    def NbElements(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_GeometricSet_NbElements(self, *args)


    def SetElements(self, *args) -> "void":
        """
        :param aElements:
        	:type aElements: StepShape_HArray1OfGeometricSetSelect
        	:rtype: None
        """
        return _StepShape.StepShape_GeometricSet_SetElements(self, *args)


    def __init__(self, *args):
        """
        * Returns a GeometricSet
        	:rtype: None
        """
        _StepShape.StepShape_GeometricSet_swiginit(self, _StepShape.new_StepShape_GeometricSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_GeometricSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricSet
StepShape_GeometricSet.Elements = new_instancemethod(_StepShape.StepShape_GeometricSet_Elements, None, StepShape_GeometricSet)
StepShape_GeometricSet.ElementsValue = new_instancemethod(_StepShape.StepShape_GeometricSet_ElementsValue, None, StepShape_GeometricSet)
StepShape_GeometricSet.Init = new_instancemethod(_StepShape.StepShape_GeometricSet_Init, None, StepShape_GeometricSet)
StepShape_GeometricSet.NbElements = new_instancemethod(_StepShape.StepShape_GeometricSet_NbElements, None, StepShape_GeometricSet)
StepShape_GeometricSet.SetElements = new_instancemethod(_StepShape.StepShape_GeometricSet_SetElements, None, StepShape_GeometricSet)
StepShape_GeometricSet_swigregister = _StepShape.StepShape_GeometricSet_swigregister
StepShape_GeometricSet_swigregister(StepShape_GeometricSet)

class StepShape_GeometricSetSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Curve(self, *args) -> "opencascade::handle< StepGeom_Curve >":
        """
        * returns Value as a Curve (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Curve>
        """
        return _StepShape.StepShape_GeometricSetSelect_Curve(self, *args)


    def Point(self, *args) -> "opencascade::handle< StepGeom_Point >":
        """
        * returns Value as a Point (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Point>
        """
        return _StepShape.StepShape_GeometricSetSelect_Point(self, *args)


    def __init__(self, *args):
        """
        * Returns a GeometricSetSelect SelectType
        	:rtype: None
        """
        _StepShape.StepShape_GeometricSetSelect_swiginit(self, _StepShape.new_StepShape_GeometricSetSelect(*args))

    def Surface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """
        * returns Value as a Surface (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Surface>
        """
        return _StepShape.StepShape_GeometricSetSelect_Surface(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricSetSelect
StepShape_GeometricSetSelect.Curve = new_instancemethod(_StepShape.StepShape_GeometricSetSelect_Curve, None, StepShape_GeometricSetSelect)
StepShape_GeometricSetSelect.Point = new_instancemethod(_StepShape.StepShape_GeometricSetSelect_Point, None, StepShape_GeometricSetSelect)
StepShape_GeometricSetSelect.Surface = new_instancemethod(_StepShape.StepShape_GeometricSetSelect_Surface, None, StepShape_GeometricSetSelect)
StepShape_GeometricSetSelect_swigregister = _StepShape.StepShape_GeometricSetSelect_swigregister
StepShape_GeometricSetSelect_swigregister(StepShape_GeometricSetSelect)

class StepShape_HalfSpaceSolid(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AgreementFlag(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepShape.StepShape_HalfSpaceSolid_AgreementFlag(self, *args)


    def BaseSurface(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """:rtype: opencascade::handle<StepGeom_Surface>"""
        return _StepShape.StepShape_HalfSpaceSolid_BaseSurface(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBaseSurface:
        	:type aBaseSurface: StepGeom_Surface
        	:param aAgreementFlag:
        	:type aAgreementFlag: bool
        	:rtype: None
        """
        return _StepShape.StepShape_HalfSpaceSolid_Init(self, *args)


    def SetAgreementFlag(self, *args) -> "void":
        """
        :param aAgreementFlag:
        	:type aAgreementFlag: bool
        	:rtype: None
        """
        return _StepShape.StepShape_HalfSpaceSolid_SetAgreementFlag(self, *args)


    def SetBaseSurface(self, *args) -> "void":
        """
        :param aBaseSurface:
        	:type aBaseSurface: StepGeom_Surface
        	:rtype: None
        """
        return _StepShape.StepShape_HalfSpaceSolid_SetBaseSurface(self, *args)


    def __init__(self, *args):
        """
        * Returns a HalfSpaceSolid
        	:rtype: None
        """
        _StepShape.StepShape_HalfSpaceSolid_swiginit(self, _StepShape.new_StepShape_HalfSpaceSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HalfSpaceSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_HalfSpaceSolid
StepShape_HalfSpaceSolid.AgreementFlag = new_instancemethod(_StepShape.StepShape_HalfSpaceSolid_AgreementFlag, None, StepShape_HalfSpaceSolid)
StepShape_HalfSpaceSolid.BaseSurface = new_instancemethod(_StepShape.StepShape_HalfSpaceSolid_BaseSurface, None, StepShape_HalfSpaceSolid)
StepShape_HalfSpaceSolid.Init = new_instancemethod(_StepShape.StepShape_HalfSpaceSolid_Init, None, StepShape_HalfSpaceSolid)
StepShape_HalfSpaceSolid.SetAgreementFlag = new_instancemethod(_StepShape.StepShape_HalfSpaceSolid_SetAgreementFlag, None, StepShape_HalfSpaceSolid)
StepShape_HalfSpaceSolid.SetBaseSurface = new_instancemethod(_StepShape.StepShape_HalfSpaceSolid_SetBaseSurface, None, StepShape_HalfSpaceSolid)
StepShape_HalfSpaceSolid_swigregister = _StepShape.StepShape_HalfSpaceSolid_swigregister
StepShape_HalfSpaceSolid_swigregister(StepShape_HalfSpaceSolid)

class StepShape_LimitsAndFits(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FormVariance(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepShape.StepShape_LimitsAndFits_FormVariance(self, *args)


    def Grade(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepShape.StepShape_LimitsAndFits_Grade(self, *args)


    def Init(self, *args) -> "void":
        """
        :param form_variance:
        	:type form_variance: TCollection_HAsciiString
        	:param zone_variance:
        	:type zone_variance: TCollection_HAsciiString
        	:param grade:
        	:type grade: TCollection_HAsciiString
        	:param source:
        	:type source: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_LimitsAndFits_Init(self, *args)


    def SetFormVariance(self, *args) -> "void":
        """
        :param form_variance:
        	:type form_variance: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_LimitsAndFits_SetFormVariance(self, *args)


    def SetGrade(self, *args) -> "void":
        """
        :param grade:
        	:type grade: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_LimitsAndFits_SetGrade(self, *args)


    def SetSource(self, *args) -> "void":
        """
        :param source:
        	:type source: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_LimitsAndFits_SetSource(self, *args)


    def SetZoneVariance(self, *args) -> "void":
        """
        :param zone_variance:
        	:type zone_variance: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_LimitsAndFits_SetZoneVariance(self, *args)


    def Source(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepShape.StepShape_LimitsAndFits_Source(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_LimitsAndFits_swiginit(self, _StepShape.new_StepShape_LimitsAndFits(*args))

    def ZoneVariance(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepShape.StepShape_LimitsAndFits_ZoneVariance(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_LimitsAndFits_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_LimitsAndFits
StepShape_LimitsAndFits.FormVariance = new_instancemethod(_StepShape.StepShape_LimitsAndFits_FormVariance, None, StepShape_LimitsAndFits)
StepShape_LimitsAndFits.Grade = new_instancemethod(_StepShape.StepShape_LimitsAndFits_Grade, None, StepShape_LimitsAndFits)
StepShape_LimitsAndFits.Init = new_instancemethod(_StepShape.StepShape_LimitsAndFits_Init, None, StepShape_LimitsAndFits)
StepShape_LimitsAndFits.SetFormVariance = new_instancemethod(_StepShape.StepShape_LimitsAndFits_SetFormVariance, None, StepShape_LimitsAndFits)
StepShape_LimitsAndFits.SetGrade = new_instancemethod(_StepShape.StepShape_LimitsAndFits_SetGrade, None, StepShape_LimitsAndFits)
StepShape_LimitsAndFits.SetSource = new_instancemethod(_StepShape.StepShape_LimitsAndFits_SetSource, None, StepShape_LimitsAndFits)
StepShape_LimitsAndFits.SetZoneVariance = new_instancemethod(_StepShape.StepShape_LimitsAndFits_SetZoneVariance, None, StepShape_LimitsAndFits)
StepShape_LimitsAndFits.Source = new_instancemethod(_StepShape.StepShape_LimitsAndFits_Source, None, StepShape_LimitsAndFits)
StepShape_LimitsAndFits.ZoneVariance = new_instancemethod(_StepShape.StepShape_LimitsAndFits_ZoneVariance, None, StepShape_LimitsAndFits)
StepShape_LimitsAndFits_swigregister = _StepShape.StepShape_LimitsAndFits_swigregister
StepShape_LimitsAndFits_swigregister(StepShape_LimitsAndFits)

class StepShape_MeasureQualification(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepShape.StepShape_MeasureQualification_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        :param name:
        	:type name: TCollection_HAsciiString
        	:param description:
        	:type description: TCollection_HAsciiString
        	:param qualified_measure:
        	:type qualified_measure: StepBasic_MeasureWithUnit
        	:param qualifiers:
        	:type qualifiers: StepShape_HArray1OfValueQualifier
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureQualification_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepShape.StepShape_MeasureQualification_Name(self, *args)


    def NbQualifiers(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_MeasureQualification_NbQualifiers(self, *args)


    def QualifiedMeasure(self, *args) -> "opencascade::handle< StepBasic_MeasureWithUnit >":
        """:rtype: opencascade::handle<StepBasic_MeasureWithUnit>"""
        return _StepShape.StepShape_MeasureQualification_QualifiedMeasure(self, *args)


    def Qualifiers(self, *args) -> "opencascade::handle< StepShape_HArray1OfValueQualifier >":
        """:rtype: opencascade::handle<StepShape_HArray1OfValueQualifier>"""
        return _StepShape.StepShape_MeasureQualification_Qualifiers(self, *args)


    def QualifiersValue(self, *args) -> "StepShape_ValueQualifier":
        """
        :param num:
        	:type num: int
        	:rtype: StepShape_ValueQualifier
        """
        return _StepShape.StepShape_MeasureQualification_QualifiersValue(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param description:
        	:type description: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureQualification_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param name:
        	:type name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureQualification_SetName(self, *args)


    def SetQualifiedMeasure(self, *args) -> "void":
        """
        :param qualified_measure:
        	:type qualified_measure: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureQualification_SetQualifiedMeasure(self, *args)


    def SetQualifiers(self, *args) -> "void":
        """
        :param qualifiers:
        	:type qualifiers: StepShape_HArray1OfValueQualifier
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureQualification_SetQualifiers(self, *args)


    def SetQualifiersValue(self, *args) -> "void":
        """
        :param num:
        	:type num: int
        	:param aqualifier:
        	:type aqualifier: StepShape_ValueQualifier
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureQualification_SetQualifiersValue(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_MeasureQualification_swiginit(self, _StepShape.new_StepShape_MeasureQualification(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_MeasureQualification_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_MeasureQualification
StepShape_MeasureQualification.Description = new_instancemethod(_StepShape.StepShape_MeasureQualification_Description, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.Init = new_instancemethod(_StepShape.StepShape_MeasureQualification_Init, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.Name = new_instancemethod(_StepShape.StepShape_MeasureQualification_Name, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.NbQualifiers = new_instancemethod(_StepShape.StepShape_MeasureQualification_NbQualifiers, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.QualifiedMeasure = new_instancemethod(_StepShape.StepShape_MeasureQualification_QualifiedMeasure, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.Qualifiers = new_instancemethod(_StepShape.StepShape_MeasureQualification_Qualifiers, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.QualifiersValue = new_instancemethod(_StepShape.StepShape_MeasureQualification_QualifiersValue, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.SetDescription = new_instancemethod(_StepShape.StepShape_MeasureQualification_SetDescription, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.SetName = new_instancemethod(_StepShape.StepShape_MeasureQualification_SetName, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.SetQualifiedMeasure = new_instancemethod(_StepShape.StepShape_MeasureQualification_SetQualifiedMeasure, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.SetQualifiers = new_instancemethod(_StepShape.StepShape_MeasureQualification_SetQualifiers, None, StepShape_MeasureQualification)
StepShape_MeasureQualification.SetQualifiersValue = new_instancemethod(_StepShape.StepShape_MeasureQualification_SetQualifiersValue, None, StepShape_MeasureQualification)
StepShape_MeasureQualification_swigregister = _StepShape.StepShape_MeasureQualification_swigregister
StepShape_MeasureQualification_swigregister(StepShape_MeasureQualification)

class StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aValueComponent:
        	:type aValueComponent: StepBasic_MeasureValueMember
        	:param aUnitComponent:
        	:type aUnitComponent: StepBasic_Unit
        	:param qualifiers:
        	:type qualifiers: StepShape_HArray1OfValueQualifier
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Init(self, *args)


    def Measure(self, *args) -> "opencascade::handle< StepBasic_MeasureWithUnit >":
        """:rtype: opencascade::handle<StepBasic_MeasureWithUnit>"""
        return _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Measure(self, *args)


    def NbQualifiers(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_NbQualifiers(self, *args)


    def Qualifiers(self, *args) -> "opencascade::handle< StepShape_HArray1OfValueQualifier >":
        """:rtype: opencascade::handle<StepShape_HArray1OfValueQualifier>"""
        return _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Qualifiers(self, *args)


    def QualifiersValue(self, *args) -> "StepShape_ValueQualifier":
        """
        :param num:
        	:type num: int
        	:rtype: StepShape_ValueQualifier
        """
        return _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_QualifiersValue(self, *args)


    def SetMeasure(self, *args) -> "void":
        """
        :param Measure:
        	:type Measure: StepBasic_MeasureWithUnit
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_SetMeasure(self, *args)


    def SetQualifiers(self, *args) -> "void":
        """
        :param qualifiers:
        	:type qualifiers: StepShape_HArray1OfValueQualifier
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_SetQualifiers(self, *args)


    def SetQualifiersValue(self, *args) -> "void":
        """
        :param num:
        	:type num: int
        	:param aqualifier:
        	:type aqualifier: StepShape_ValueQualifier
        	:rtype: None
        """
        return _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_SetQualifiersValue(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_swiginit(self, _StepShape.new_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem.Init = new_instancemethod(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Init, None, StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem.Measure = new_instancemethod(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Measure, None, StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem.NbQualifiers = new_instancemethod(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_NbQualifiers, None, StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem.Qualifiers = new_instancemethod(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Qualifiers, None, StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem.QualifiersValue = new_instancemethod(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_QualifiersValue, None, StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem.SetMeasure = new_instancemethod(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_SetMeasure, None, StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem.SetQualifiers = new_instancemethod(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_SetQualifiers, None, StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem.SetQualifiersValue = new_instancemethod(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_SetQualifiersValue, None, StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_swigregister = _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_swigregister
StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_swigregister(StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)

class StepShape_PlusMinusTolerance(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param range:
        	:type range: StepShape_ToleranceMethodDefinition
        	:param toleranced_dimension:
        	:type toleranced_dimension: StepShape_DimensionalCharacteristic
        	:rtype: None
        """
        return _StepShape.StepShape_PlusMinusTolerance_Init(self, *args)


    def Range(self, *args) -> "StepShape_ToleranceMethodDefinition":
        """:rtype: StepShape_ToleranceMethodDefinition"""
        return _StepShape.StepShape_PlusMinusTolerance_Range(self, *args)


    def SetRange(self, *args) -> "void":
        """
        :param range:
        	:type range: StepShape_ToleranceMethodDefinition
        	:rtype: None
        """
        return _StepShape.StepShape_PlusMinusTolerance_SetRange(self, *args)


    def SetTolerancedDimension(self, *args) -> "void":
        """
        :param toleranced_dimension:
        	:type toleranced_dimension: StepShape_DimensionalCharacteristic
        	:rtype: None
        """
        return _StepShape.StepShape_PlusMinusTolerance_SetTolerancedDimension(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_PlusMinusTolerance_swiginit(self, _StepShape.new_StepShape_PlusMinusTolerance(*args))

    def TolerancedDimension(self, *args) -> "StepShape_DimensionalCharacteristic":
        """:rtype: StepShape_DimensionalCharacteristic"""
        return _StepShape.StepShape_PlusMinusTolerance_TolerancedDimension(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_PlusMinusTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_PlusMinusTolerance
StepShape_PlusMinusTolerance.Init = new_instancemethod(_StepShape.StepShape_PlusMinusTolerance_Init, None, StepShape_PlusMinusTolerance)
StepShape_PlusMinusTolerance.Range = new_instancemethod(_StepShape.StepShape_PlusMinusTolerance_Range, None, StepShape_PlusMinusTolerance)
StepShape_PlusMinusTolerance.SetRange = new_instancemethod(_StepShape.StepShape_PlusMinusTolerance_SetRange, None, StepShape_PlusMinusTolerance)
StepShape_PlusMinusTolerance.SetTolerancedDimension = new_instancemethod(_StepShape.StepShape_PlusMinusTolerance_SetTolerancedDimension, None, StepShape_PlusMinusTolerance)
StepShape_PlusMinusTolerance.TolerancedDimension = new_instancemethod(_StepShape.StepShape_PlusMinusTolerance_TolerancedDimension, None, StepShape_PlusMinusTolerance)
StepShape_PlusMinusTolerance_swigregister = _StepShape.StepShape_PlusMinusTolerance_swigregister
StepShape_PlusMinusTolerance_swigregister(StepShape_PlusMinusTolerance)

class StepShape_PrecisionQualifier(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param precision_value:
        	:type precision_value: int
        	:rtype: None
        """
        return _StepShape.StepShape_PrecisionQualifier_Init(self, *args)


    def PrecisionValue(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_PrecisionQualifier_PrecisionValue(self, *args)


    def SetPrecisionValue(self, *args) -> "void":
        """
        :param precision_value:
        	:type precision_value: int
        	:rtype: None
        """
        return _StepShape.StepShape_PrecisionQualifier_SetPrecisionValue(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_PrecisionQualifier_swiginit(self, _StepShape.new_StepShape_PrecisionQualifier(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_PrecisionQualifier_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_PrecisionQualifier
StepShape_PrecisionQualifier.Init = new_instancemethod(_StepShape.StepShape_PrecisionQualifier_Init, None, StepShape_PrecisionQualifier)
StepShape_PrecisionQualifier.PrecisionValue = new_instancemethod(_StepShape.StepShape_PrecisionQualifier_PrecisionValue, None, StepShape_PrecisionQualifier)
StepShape_PrecisionQualifier.SetPrecisionValue = new_instancemethod(_StepShape.StepShape_PrecisionQualifier_SetPrecisionValue, None, StepShape_PrecisionQualifier)
StepShape_PrecisionQualifier_swigregister = _StepShape.StepShape_PrecisionQualifier_swigregister
StepShape_PrecisionQualifier_swigregister(StepShape_PrecisionQualifier)

class StepShape_QualifiedRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param qualifiers:
        	:type qualifiers: StepShape_HArray1OfValueQualifier
        	:rtype: None
        """
        return _StepShape.StepShape_QualifiedRepresentationItem_Init(self, *args)


    def NbQualifiers(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_QualifiedRepresentationItem_NbQualifiers(self, *args)


    def Qualifiers(self, *args) -> "opencascade::handle< StepShape_HArray1OfValueQualifier >":
        """:rtype: opencascade::handle<StepShape_HArray1OfValueQualifier>"""
        return _StepShape.StepShape_QualifiedRepresentationItem_Qualifiers(self, *args)


    def QualifiersValue(self, *args) -> "StepShape_ValueQualifier":
        """
        :param num:
        	:type num: int
        	:rtype: StepShape_ValueQualifier
        """
        return _StepShape.StepShape_QualifiedRepresentationItem_QualifiersValue(self, *args)


    def SetQualifiers(self, *args) -> "void":
        """
        :param qualifiers:
        	:type qualifiers: StepShape_HArray1OfValueQualifier
        	:rtype: None
        """
        return _StepShape.StepShape_QualifiedRepresentationItem_SetQualifiers(self, *args)


    def SetQualifiersValue(self, *args) -> "void":
        """
        :param num:
        	:type num: int
        	:param aqualifier:
        	:type aqualifier: StepShape_ValueQualifier
        	:rtype: None
        """
        return _StepShape.StepShape_QualifiedRepresentationItem_SetQualifiersValue(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_QualifiedRepresentationItem_swiginit(self, _StepShape.new_StepShape_QualifiedRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_QualifiedRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_QualifiedRepresentationItem
StepShape_QualifiedRepresentationItem.Init = new_instancemethod(_StepShape.StepShape_QualifiedRepresentationItem_Init, None, StepShape_QualifiedRepresentationItem)
StepShape_QualifiedRepresentationItem.NbQualifiers = new_instancemethod(_StepShape.StepShape_QualifiedRepresentationItem_NbQualifiers, None, StepShape_QualifiedRepresentationItem)
StepShape_QualifiedRepresentationItem.Qualifiers = new_instancemethod(_StepShape.StepShape_QualifiedRepresentationItem_Qualifiers, None, StepShape_QualifiedRepresentationItem)
StepShape_QualifiedRepresentationItem.QualifiersValue = new_instancemethod(_StepShape.StepShape_QualifiedRepresentationItem_QualifiersValue, None, StepShape_QualifiedRepresentationItem)
StepShape_QualifiedRepresentationItem.SetQualifiers = new_instancemethod(_StepShape.StepShape_QualifiedRepresentationItem_SetQualifiers, None, StepShape_QualifiedRepresentationItem)
StepShape_QualifiedRepresentationItem.SetQualifiersValue = new_instancemethod(_StepShape.StepShape_QualifiedRepresentationItem_SetQualifiersValue, None, StepShape_QualifiedRepresentationItem)
StepShape_QualifiedRepresentationItem_swigregister = _StepShape.StepShape_QualifiedRepresentationItem_swigregister
StepShape_QualifiedRepresentationItem_swigregister(StepShape_QualifiedRepresentationItem)

class StepShape_ReversibleTopologyItem(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ClosedShell(self, *args) -> "opencascade::handle< StepShape_ClosedShell >":
        """
        * returns Value as a ClosedShell (Null if another type)
        	:rtype: opencascade::handle<StepShape_ClosedShell>
        """
        return _StepShape.StepShape_ReversibleTopologyItem_ClosedShell(self, *args)


    def Edge(self, *args) -> "opencascade::handle< StepShape_Edge >":
        """
        * returns Value as a Edge (Null if another type)
        	:rtype: opencascade::handle<StepShape_Edge>
        """
        return _StepShape.StepShape_ReversibleTopologyItem_Edge(self, *args)


    def Face(self, *args) -> "opencascade::handle< StepShape_Face >":
        """
        * returns Value as a Face (Null if another type)
        	:rtype: opencascade::handle<StepShape_Face>
        """
        return _StepShape.StepShape_ReversibleTopologyItem_Face(self, *args)


    def FaceBound(self, *args) -> "opencascade::handle< StepShape_FaceBound >":
        """
        * returns Value as a FaceBound (Null if another type)
        	:rtype: opencascade::handle<StepShape_FaceBound>
        """
        return _StepShape.StepShape_ReversibleTopologyItem_FaceBound(self, *args)


    def OpenShell(self, *args) -> "opencascade::handle< StepShape_OpenShell >":
        """
        * returns Value as a OpenShell (Null if another type)
        	:rtype: opencascade::handle<StepShape_OpenShell>
        """
        return _StepShape.StepShape_ReversibleTopologyItem_OpenShell(self, *args)


    def Path(self, *args) -> "opencascade::handle< StepShape_Path >":
        """
        * returns Value as a Path (Null if another type)
        	:rtype: opencascade::handle<StepShape_Path>
        """
        return _StepShape.StepShape_ReversibleTopologyItem_Path(self, *args)


    def __init__(self, *args):
        """
        * Returns a ReversibleTopologyItem SelectType
        	:rtype: None
        """
        _StepShape.StepShape_ReversibleTopologyItem_swiginit(self, _StepShape.new_StepShape_ReversibleTopologyItem(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ReversibleTopologyItem
StepShape_ReversibleTopologyItem.ClosedShell = new_instancemethod(_StepShape.StepShape_ReversibleTopologyItem_ClosedShell, None, StepShape_ReversibleTopologyItem)
StepShape_ReversibleTopologyItem.Edge = new_instancemethod(_StepShape.StepShape_ReversibleTopologyItem_Edge, None, StepShape_ReversibleTopologyItem)
StepShape_ReversibleTopologyItem.Face = new_instancemethod(_StepShape.StepShape_ReversibleTopologyItem_Face, None, StepShape_ReversibleTopologyItem)
StepShape_ReversibleTopologyItem.FaceBound = new_instancemethod(_StepShape.StepShape_ReversibleTopologyItem_FaceBound, None, StepShape_ReversibleTopologyItem)
StepShape_ReversibleTopologyItem.OpenShell = new_instancemethod(_StepShape.StepShape_ReversibleTopologyItem_OpenShell, None, StepShape_ReversibleTopologyItem)
StepShape_ReversibleTopologyItem.Path = new_instancemethod(_StepShape.StepShape_ReversibleTopologyItem_Path, None, StepShape_ReversibleTopologyItem)
StepShape_ReversibleTopologyItem_swigregister = _StepShape.StepShape_ReversibleTopologyItem_swigregister
StepShape_ReversibleTopologyItem_swigregister(StepShape_ReversibleTopologyItem)

class StepShape_RightAngularWedge(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:param aX:
        	:type aX: float
        	:param aY:
        	:type aY: float
        	:param aZ:
        	:type aZ: float
        	:param aLtx:
        	:type aLtx: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightAngularWedge_Init(self, *args)


    def Ltx(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RightAngularWedge_Ltx(self, *args)


    def Position(self, *args) -> "opencascade::handle< StepGeom_Axis2Placement3d >":
        """:rtype: opencascade::handle<StepGeom_Axis2Placement3d>"""
        return _StepShape.StepShape_RightAngularWedge_Position(self, *args)


    def SetLtx(self, *args) -> "void":
        """
        :param aLtx:
        	:type aLtx: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightAngularWedge_SetLtx(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        :param aPosition:
        	:type aPosition: StepGeom_Axis2Placement3d
        	:rtype: None
        """
        return _StepShape.StepShape_RightAngularWedge_SetPosition(self, *args)


    def SetX(self, *args) -> "void":
        """
        :param aX:
        	:type aX: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightAngularWedge_SetX(self, *args)


    def SetY(self, *args) -> "void":
        """
        :param aY:
        	:type aY: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightAngularWedge_SetY(self, *args)


    def SetZ(self, *args) -> "void":
        """
        :param aZ:
        	:type aZ: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightAngularWedge_SetZ(self, *args)


    def __init__(self, *args):
        """
        * Returns a RightAngularWedge
        	:rtype: None
        """
        _StepShape.StepShape_RightAngularWedge_swiginit(self, _StepShape.new_StepShape_RightAngularWedge(*args))

    def X(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RightAngularWedge_X(self, *args)


    def Y(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RightAngularWedge_Y(self, *args)


    def Z(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RightAngularWedge_Z(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RightAngularWedge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RightAngularWedge
StepShape_RightAngularWedge.Init = new_instancemethod(_StepShape.StepShape_RightAngularWedge_Init, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.Ltx = new_instancemethod(_StepShape.StepShape_RightAngularWedge_Ltx, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.Position = new_instancemethod(_StepShape.StepShape_RightAngularWedge_Position, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.SetLtx = new_instancemethod(_StepShape.StepShape_RightAngularWedge_SetLtx, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.SetPosition = new_instancemethod(_StepShape.StepShape_RightAngularWedge_SetPosition, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.SetX = new_instancemethod(_StepShape.StepShape_RightAngularWedge_SetX, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.SetY = new_instancemethod(_StepShape.StepShape_RightAngularWedge_SetY, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.SetZ = new_instancemethod(_StepShape.StepShape_RightAngularWedge_SetZ, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.X = new_instancemethod(_StepShape.StepShape_RightAngularWedge_X, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.Y = new_instancemethod(_StepShape.StepShape_RightAngularWedge_Y, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge.Z = new_instancemethod(_StepShape.StepShape_RightAngularWedge_Z, None, StepShape_RightAngularWedge)
StepShape_RightAngularWedge_swigregister = _StepShape.StepShape_RightAngularWedge_swigregister
StepShape_RightAngularWedge_swigregister(StepShape_RightAngularWedge)

class StepShape_RightCircularCone(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Height(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RightCircularCone_Height(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis1Placement
        	:param aHeight:
        	:type aHeight: float
        	:param aRadius:
        	:type aRadius: float
        	:param aSemiAngle:
        	:type aSemiAngle: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightCircularCone_Init(self, *args)


    def Position(self, *args) -> "opencascade::handle< StepGeom_Axis1Placement >":
        """:rtype: opencascade::handle<StepGeom_Axis1Placement>"""
        return _StepShape.StepShape_RightCircularCone_Position(self, *args)


    def Radius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RightCircularCone_Radius(self, *args)


    def SemiAngle(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RightCircularCone_SemiAngle(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        :param aHeight:
        	:type aHeight: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightCircularCone_SetHeight(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        :param aPosition:
        	:type aPosition: StepGeom_Axis1Placement
        	:rtype: None
        """
        return _StepShape.StepShape_RightCircularCone_SetPosition(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        :param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightCircularCone_SetRadius(self, *args)


    def SetSemiAngle(self, *args) -> "void":
        """
        :param aSemiAngle:
        	:type aSemiAngle: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightCircularCone_SetSemiAngle(self, *args)


    def __init__(self, *args):
        """
        * Returns a RightCircularCone
        	:rtype: None
        """
        _StepShape.StepShape_RightCircularCone_swiginit(self, _StepShape.new_StepShape_RightCircularCone(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RightCircularCone_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RightCircularCone
StepShape_RightCircularCone.Height = new_instancemethod(_StepShape.StepShape_RightCircularCone_Height, None, StepShape_RightCircularCone)
StepShape_RightCircularCone.Init = new_instancemethod(_StepShape.StepShape_RightCircularCone_Init, None, StepShape_RightCircularCone)
StepShape_RightCircularCone.Position = new_instancemethod(_StepShape.StepShape_RightCircularCone_Position, None, StepShape_RightCircularCone)
StepShape_RightCircularCone.Radius = new_instancemethod(_StepShape.StepShape_RightCircularCone_Radius, None, StepShape_RightCircularCone)
StepShape_RightCircularCone.SemiAngle = new_instancemethod(_StepShape.StepShape_RightCircularCone_SemiAngle, None, StepShape_RightCircularCone)
StepShape_RightCircularCone.SetHeight = new_instancemethod(_StepShape.StepShape_RightCircularCone_SetHeight, None, StepShape_RightCircularCone)
StepShape_RightCircularCone.SetPosition = new_instancemethod(_StepShape.StepShape_RightCircularCone_SetPosition, None, StepShape_RightCircularCone)
StepShape_RightCircularCone.SetRadius = new_instancemethod(_StepShape.StepShape_RightCircularCone_SetRadius, None, StepShape_RightCircularCone)
StepShape_RightCircularCone.SetSemiAngle = new_instancemethod(_StepShape.StepShape_RightCircularCone_SetSemiAngle, None, StepShape_RightCircularCone)
StepShape_RightCircularCone_swigregister = _StepShape.StepShape_RightCircularCone_swigregister
StepShape_RightCircularCone_swigregister(StepShape_RightCircularCone)

class StepShape_RightCircularCylinder(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Height(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RightCircularCylinder_Height(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis1Placement
        	:param aHeight:
        	:type aHeight: float
        	:param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightCircularCylinder_Init(self, *args)


    def Position(self, *args) -> "opencascade::handle< StepGeom_Axis1Placement >":
        """:rtype: opencascade::handle<StepGeom_Axis1Placement>"""
        return _StepShape.StepShape_RightCircularCylinder_Position(self, *args)


    def Radius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RightCircularCylinder_Radius(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        :param aHeight:
        	:type aHeight: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightCircularCylinder_SetHeight(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        :param aPosition:
        	:type aPosition: StepGeom_Axis1Placement
        	:rtype: None
        """
        return _StepShape.StepShape_RightCircularCylinder_SetPosition(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        :param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepShape.StepShape_RightCircularCylinder_SetRadius(self, *args)


    def __init__(self, *args):
        """
        * Returns a RightCircularCylinder
        	:rtype: None
        """
        _StepShape.StepShape_RightCircularCylinder_swiginit(self, _StepShape.new_StepShape_RightCircularCylinder(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RightCircularCylinder_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RightCircularCylinder
StepShape_RightCircularCylinder.Height = new_instancemethod(_StepShape.StepShape_RightCircularCylinder_Height, None, StepShape_RightCircularCylinder)
StepShape_RightCircularCylinder.Init = new_instancemethod(_StepShape.StepShape_RightCircularCylinder_Init, None, StepShape_RightCircularCylinder)
StepShape_RightCircularCylinder.Position = new_instancemethod(_StepShape.StepShape_RightCircularCylinder_Position, None, StepShape_RightCircularCylinder)
StepShape_RightCircularCylinder.Radius = new_instancemethod(_StepShape.StepShape_RightCircularCylinder_Radius, None, StepShape_RightCircularCylinder)
StepShape_RightCircularCylinder.SetHeight = new_instancemethod(_StepShape.StepShape_RightCircularCylinder_SetHeight, None, StepShape_RightCircularCylinder)
StepShape_RightCircularCylinder.SetPosition = new_instancemethod(_StepShape.StepShape_RightCircularCylinder_SetPosition, None, StepShape_RightCircularCylinder)
StepShape_RightCircularCylinder.SetRadius = new_instancemethod(_StepShape.StepShape_RightCircularCylinder_SetRadius, None, StepShape_RightCircularCylinder)
StepShape_RightCircularCylinder_swigregister = _StepShape.StepShape_RightCircularCylinder_swigregister
StepShape_RightCircularCylinder_swigregister(StepShape_RightCircularCylinder)

class StepShape_ShapeDefinitionRepresentation(OCC.Core.StepRepr.StepRepr_PropertyDefinitionRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ShapeDefinitionRepresentation_swiginit(self, _StepShape.new_StepShape_ShapeDefinitionRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShapeDefinitionRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeDefinitionRepresentation
StepShape_ShapeDefinitionRepresentation_swigregister = _StepShape.StepShape_ShapeDefinitionRepresentation_swigregister
StepShape_ShapeDefinitionRepresentation_swigregister(StepShape_ShapeDefinitionRepresentation)

class StepShape_ShapeDimensionRepresentationItem(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CompoundRepresentationItem(self, *args) -> "opencascade::handle< StepRepr_CompoundRepresentationItem >":
        """
        * returns Value as a CompoundRepresentationItem (Null if another type)
        	:rtype: opencascade::handle<StepRepr_CompoundRepresentationItem>
        """
        return _StepShape.StepShape_ShapeDimensionRepresentationItem_CompoundRepresentationItem(self, *args)


    def DescriptiveRepresentationItem(self, *args) -> "opencascade::handle< StepRepr_DescriptiveRepresentationItem >":
        """
        * returns Value as a DescriptiveRepresentationItem (Null if another type)
        	:rtype: opencascade::handle<StepRepr_DescriptiveRepresentationItem>
        """
        return _StepShape.StepShape_ShapeDimensionRepresentationItem_DescriptiveRepresentationItem(self, *args)


    def MeasureRepresentationItem(self, *args) -> "opencascade::handle< StepRepr_MeasureRepresentationItem >":
        """
        * returns Value as a MeasureRepresentationItem (Null if another type)
        	:rtype: opencascade::handle<StepRepr_MeasureRepresentationItem>
        """
        return _StepShape.StepShape_ShapeDimensionRepresentationItem_MeasureRepresentationItem(self, *args)


    def Placement(self, *args) -> "opencascade::handle< StepGeom_Placement >":
        """
        * returns Value as a Placement (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Placement>
        """
        return _StepShape.StepShape_ShapeDimensionRepresentationItem_Placement(self, *args)


    def __init__(self, *args):
        """
        * Returns a ShapeDimensionRepresentationItem select type
        	:rtype: None
        """
        _StepShape.StepShape_ShapeDimensionRepresentationItem_swiginit(self, _StepShape.new_StepShape_ShapeDimensionRepresentationItem(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeDimensionRepresentationItem
StepShape_ShapeDimensionRepresentationItem.CompoundRepresentationItem = new_instancemethod(_StepShape.StepShape_ShapeDimensionRepresentationItem_CompoundRepresentationItem, None, StepShape_ShapeDimensionRepresentationItem)
StepShape_ShapeDimensionRepresentationItem.DescriptiveRepresentationItem = new_instancemethod(_StepShape.StepShape_ShapeDimensionRepresentationItem_DescriptiveRepresentationItem, None, StepShape_ShapeDimensionRepresentationItem)
StepShape_ShapeDimensionRepresentationItem.MeasureRepresentationItem = new_instancemethod(_StepShape.StepShape_ShapeDimensionRepresentationItem_MeasureRepresentationItem, None, StepShape_ShapeDimensionRepresentationItem)
StepShape_ShapeDimensionRepresentationItem.Placement = new_instancemethod(_StepShape.StepShape_ShapeDimensionRepresentationItem_Placement, None, StepShape_ShapeDimensionRepresentationItem)
StepShape_ShapeDimensionRepresentationItem_swigregister = _StepShape.StepShape_ShapeDimensionRepresentationItem_swigregister
StepShape_ShapeDimensionRepresentationItem_swigregister(StepShape_ShapeDimensionRepresentationItem)

class StepShape_ShapeRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a ShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_ShapeRepresentation_swiginit(self, _StepShape.new_StepShape_ShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeRepresentation
StepShape_ShapeRepresentation_swigregister = _StepShape.StepShape_ShapeRepresentation_swigregister
StepShape_ShapeRepresentation_swigregister(StepShape_ShapeRepresentation)

class StepShape_Shell(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ClosedShell(self, *args) -> "opencascade::handle< StepShape_ClosedShell >":
        """
        * returns Value as a ClosedShell (Null if another type)
        	:rtype: opencascade::handle<StepShape_ClosedShell>
        """
        return _StepShape.StepShape_Shell_ClosedShell(self, *args)


    def OpenShell(self, *args) -> "opencascade::handle< StepShape_OpenShell >":
        """
        * returns Value as a OpenShell (Null if another type)
        	:rtype: opencascade::handle<StepShape_OpenShell>
        """
        return _StepShape.StepShape_Shell_OpenShell(self, *args)


    def __init__(self, *args):
        """
        * Returns a Shell SelectType
        	:rtype: None
        """
        _StepShape.StepShape_Shell_swiginit(self, _StepShape.new_StepShape_Shell(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Shell
StepShape_Shell.ClosedShell = new_instancemethod(_StepShape.StepShape_Shell_ClosedShell, None, StepShape_Shell)
StepShape_Shell.OpenShell = new_instancemethod(_StepShape.StepShape_Shell_OpenShell, None, StepShape_Shell)
StepShape_Shell_swigregister = _StepShape.StepShape_Shell_swigregister
StepShape_Shell_swigregister(StepShape_Shell)

class StepShape_ShellBasedSurfaceModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSbsmBoundary:
        	:type aSbsmBoundary: StepShape_HArray1OfShell
        	:rtype: None
        """
        return _StepShape.StepShape_ShellBasedSurfaceModel_Init(self, *args)


    def NbSbsmBoundary(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_ShellBasedSurfaceModel_NbSbsmBoundary(self, *args)


    def SbsmBoundary(self, *args) -> "opencascade::handle< StepShape_HArray1OfShell >":
        """:rtype: opencascade::handle<StepShape_HArray1OfShell>"""
        return _StepShape.StepShape_ShellBasedSurfaceModel_SbsmBoundary(self, *args)


    def SbsmBoundaryValue(self, *args) -> "StepShape_Shell":
        """
        :param num:
        	:type num: int
        	:rtype: StepShape_Shell
        """
        return _StepShape.StepShape_ShellBasedSurfaceModel_SbsmBoundaryValue(self, *args)


    def SetSbsmBoundary(self, *args) -> "void":
        """
        :param aSbsmBoundary:
        	:type aSbsmBoundary: StepShape_HArray1OfShell
        	:rtype: None
        """
        return _StepShape.StepShape_ShellBasedSurfaceModel_SetSbsmBoundary(self, *args)


    def __init__(self, *args):
        """
        * Returns a ShellBasedSurfaceModel
        	:rtype: None
        """
        _StepShape.StepShape_ShellBasedSurfaceModel_swiginit(self, _StepShape.new_StepShape_ShellBasedSurfaceModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShellBasedSurfaceModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShellBasedSurfaceModel
StepShape_ShellBasedSurfaceModel.Init = new_instancemethod(_StepShape.StepShape_ShellBasedSurfaceModel_Init, None, StepShape_ShellBasedSurfaceModel)
StepShape_ShellBasedSurfaceModel.NbSbsmBoundary = new_instancemethod(_StepShape.StepShape_ShellBasedSurfaceModel_NbSbsmBoundary, None, StepShape_ShellBasedSurfaceModel)
StepShape_ShellBasedSurfaceModel.SbsmBoundary = new_instancemethod(_StepShape.StepShape_ShellBasedSurfaceModel_SbsmBoundary, None, StepShape_ShellBasedSurfaceModel)
StepShape_ShellBasedSurfaceModel.SbsmBoundaryValue = new_instancemethod(_StepShape.StepShape_ShellBasedSurfaceModel_SbsmBoundaryValue, None, StepShape_ShellBasedSurfaceModel)
StepShape_ShellBasedSurfaceModel.SetSbsmBoundary = new_instancemethod(_StepShape.StepShape_ShellBasedSurfaceModel_SetSbsmBoundary, None, StepShape_ShellBasedSurfaceModel)
StepShape_ShellBasedSurfaceModel_swigregister = _StepShape.StepShape_ShellBasedSurfaceModel_swigregister
StepShape_ShellBasedSurfaceModel_swigregister(StepShape_ShellBasedSurfaceModel)

class StepShape_SolidModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a SolidModel
        	:rtype: None
        """
        _StepShape.StepShape_SolidModel_swiginit(self, _StepShape.new_StepShape_SolidModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SolidModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SolidModel
StepShape_SolidModel_swigregister = _StepShape.StepShape_SolidModel_swigregister
StepShape_SolidModel_swigregister(StepShape_SolidModel)

class StepShape_Sphere(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Centre(self, *args) -> "opencascade::handle< StepGeom_Point >":
        """:rtype: opencascade::handle<StepGeom_Point>"""
        return _StepShape.StepShape_Sphere_Centre(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aRadius:
        	:type aRadius: float
        	:param aCentre:
        	:type aCentre: StepGeom_Point
        	:rtype: None
        """
        return _StepShape.StepShape_Sphere_Init(self, *args)


    def Radius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_Sphere_Radius(self, *args)


    def SetCentre(self, *args) -> "void":
        """
        :param aCentre:
        	:type aCentre: StepGeom_Point
        	:rtype: None
        """
        return _StepShape.StepShape_Sphere_SetCentre(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        :param aRadius:
        	:type aRadius: float
        	:rtype: None
        """
        return _StepShape.StepShape_Sphere_SetRadius(self, *args)


    def __init__(self, *args):
        """
        * Returns a Sphere
        	:rtype: None
        """
        _StepShape.StepShape_Sphere_swiginit(self, _StepShape.new_StepShape_Sphere(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Sphere_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Sphere
StepShape_Sphere.Centre = new_instancemethod(_StepShape.StepShape_Sphere_Centre, None, StepShape_Sphere)
StepShape_Sphere.Init = new_instancemethod(_StepShape.StepShape_Sphere_Init, None, StepShape_Sphere)
StepShape_Sphere.Radius = new_instancemethod(_StepShape.StepShape_Sphere_Radius, None, StepShape_Sphere)
StepShape_Sphere.SetCentre = new_instancemethod(_StepShape.StepShape_Sphere_SetCentre, None, StepShape_Sphere)
StepShape_Sphere.SetRadius = new_instancemethod(_StepShape.StepShape_Sphere_SetRadius, None, StepShape_Sphere)
StepShape_Sphere_swigregister = _StepShape.StepShape_Sphere_swigregister
StepShape_Sphere_swigregister(StepShape_Sphere)

class StepShape_SurfaceModel(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ShellBasedSurfaceModel(self, *args) -> "opencascade::handle< StepShape_ShellBasedSurfaceModel >":
        """
        * returns Value as a ShellBasedSurfaceModel (Null if another type)
        	:rtype: opencascade::handle<StepShape_ShellBasedSurfaceModel>
        """
        return _StepShape.StepShape_SurfaceModel_ShellBasedSurfaceModel(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceModel SelectType
        	:rtype: None
        """
        _StepShape.StepShape_SurfaceModel_swiginit(self, _StepShape.new_StepShape_SurfaceModel(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SurfaceModel
StepShape_SurfaceModel.ShellBasedSurfaceModel = new_instancemethod(_StepShape.StepShape_SurfaceModel_ShellBasedSurfaceModel, None, StepShape_SurfaceModel)
StepShape_SurfaceModel_swigregister = _StepShape.StepShape_SurfaceModel_swigregister
StepShape_SurfaceModel_swigregister(StepShape_SurfaceModel)

class StepShape_ToleranceMethodDefinition(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def LimitsAndFits(self, *args) -> "opencascade::handle< StepShape_LimitsAndFits >":
        """
        * Returns Value as LimitsAndFits
        	:rtype: opencascade::handle<StepShape_LimitsAndFits>
        """
        return _StepShape.StepShape_ToleranceMethodDefinition_LimitsAndFits(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_ToleranceMethodDefinition_swiginit(self, _StepShape.new_StepShape_ToleranceMethodDefinition(*args))

    def ToleranceValue(self, *args) -> "opencascade::handle< StepShape_ToleranceValue >":
        """
        * Returns Value as ToleranceValue
        	:rtype: opencascade::handle<StepShape_ToleranceValue>
        """
        return _StepShape.StepShape_ToleranceMethodDefinition_ToleranceValue(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ToleranceMethodDefinition
StepShape_ToleranceMethodDefinition.LimitsAndFits = new_instancemethod(_StepShape.StepShape_ToleranceMethodDefinition_LimitsAndFits, None, StepShape_ToleranceMethodDefinition)
StepShape_ToleranceMethodDefinition.ToleranceValue = new_instancemethod(_StepShape.StepShape_ToleranceMethodDefinition_ToleranceValue, None, StepShape_ToleranceMethodDefinition)
StepShape_ToleranceMethodDefinition_swigregister = _StepShape.StepShape_ToleranceMethodDefinition_swigregister
StepShape_ToleranceMethodDefinition_swigregister(StepShape_ToleranceMethodDefinition)

class StepShape_ToleranceValue(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param lower_bound:
        	:type lower_bound: Standard_Transient
        	:param upper_bound:
        	:type upper_bound: Standard_Transient
        	:rtype: None
        """
        return _StepShape.StepShape_ToleranceValue_Init(self, *args)


    def LowerBound(self, *args) -> "opencascade::handle< Standard_Transient >":
        """:rtype: opencascade::handle<Standard_Transient>"""
        return _StepShape.StepShape_ToleranceValue_LowerBound(self, *args)


    def SetLowerBound(self, *args) -> "void":
        """
        :param lower_bound:
        	:type lower_bound: Standard_Transient
        	:rtype: None
        """
        return _StepShape.StepShape_ToleranceValue_SetLowerBound(self, *args)


    def SetUpperBound(self, *args) -> "void":
        """
        :param upper_bound:
        	:type upper_bound: Standard_Transient
        	:rtype: None
        """
        return _StepShape.StepShape_ToleranceValue_SetUpperBound(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_ToleranceValue_swiginit(self, _StepShape.new_StepShape_ToleranceValue(*args))

    def UpperBound(self, *args) -> "opencascade::handle< Standard_Transient >":
        """:rtype: opencascade::handle<Standard_Transient>"""
        return _StepShape.StepShape_ToleranceValue_UpperBound(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ToleranceValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ToleranceValue
StepShape_ToleranceValue.Init = new_instancemethod(_StepShape.StepShape_ToleranceValue_Init, None, StepShape_ToleranceValue)
StepShape_ToleranceValue.LowerBound = new_instancemethod(_StepShape.StepShape_ToleranceValue_LowerBound, None, StepShape_ToleranceValue)
StepShape_ToleranceValue.SetLowerBound = new_instancemethod(_StepShape.StepShape_ToleranceValue_SetLowerBound, None, StepShape_ToleranceValue)
StepShape_ToleranceValue.SetUpperBound = new_instancemethod(_StepShape.StepShape_ToleranceValue_SetUpperBound, None, StepShape_ToleranceValue)
StepShape_ToleranceValue.UpperBound = new_instancemethod(_StepShape.StepShape_ToleranceValue_UpperBound, None, StepShape_ToleranceValue)
StepShape_ToleranceValue_swigregister = _StepShape.StepShape_ToleranceValue_swigregister
StepShape_ToleranceValue_swigregister(StepShape_ToleranceValue)

class StepShape_TopologicalRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a TopologicalRepresentationItem
        	:rtype: None
        """
        _StepShape.StepShape_TopologicalRepresentationItem_swiginit(self, _StepShape.new_StepShape_TopologicalRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_TopologicalRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_TopologicalRepresentationItem
StepShape_TopologicalRepresentationItem_swigregister = _StepShape.StepShape_TopologicalRepresentationItem_swigregister
StepShape_TopologicalRepresentationItem_swigregister(StepShape_TopologicalRepresentationItem)

class StepShape_Torus(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPosition:
        	:type aPosition: StepGeom_Axis1Placement
        	:param aMajorRadius:
        	:type aMajorRadius: float
        	:param aMinorRadius:
        	:type aMinorRadius: float
        	:rtype: None
        """
        return _StepShape.StepShape_Torus_Init(self, *args)


    def MajorRadius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_Torus_MajorRadius(self, *args)


    def MinorRadius(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_Torus_MinorRadius(self, *args)


    def Position(self, *args) -> "opencascade::handle< StepGeom_Axis1Placement >":
        """:rtype: opencascade::handle<StepGeom_Axis1Placement>"""
        return _StepShape.StepShape_Torus_Position(self, *args)


    def SetMajorRadius(self, *args) -> "void":
        """
        :param aMajorRadius:
        	:type aMajorRadius: float
        	:rtype: None
        """
        return _StepShape.StepShape_Torus_SetMajorRadius(self, *args)


    def SetMinorRadius(self, *args) -> "void":
        """
        :param aMinorRadius:
        	:type aMinorRadius: float
        	:rtype: None
        """
        return _StepShape.StepShape_Torus_SetMinorRadius(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        :param aPosition:
        	:type aPosition: StepGeom_Axis1Placement
        	:rtype: None
        """
        return _StepShape.StepShape_Torus_SetPosition(self, *args)


    def __init__(self, *args):
        """
        * Returns a Torus
        	:rtype: None
        """
        _StepShape.StepShape_Torus_swiginit(self, _StepShape.new_StepShape_Torus(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Torus_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Torus
StepShape_Torus.Init = new_instancemethod(_StepShape.StepShape_Torus_Init, None, StepShape_Torus)
StepShape_Torus.MajorRadius = new_instancemethod(_StepShape.StepShape_Torus_MajorRadius, None, StepShape_Torus)
StepShape_Torus.MinorRadius = new_instancemethod(_StepShape.StepShape_Torus_MinorRadius, None, StepShape_Torus)
StepShape_Torus.Position = new_instancemethod(_StepShape.StepShape_Torus_Position, None, StepShape_Torus)
StepShape_Torus.SetMajorRadius = new_instancemethod(_StepShape.StepShape_Torus_SetMajorRadius, None, StepShape_Torus)
StepShape_Torus.SetMinorRadius = new_instancemethod(_StepShape.StepShape_Torus_SetMinorRadius, None, StepShape_Torus)
StepShape_Torus.SetPosition = new_instancemethod(_StepShape.StepShape_Torus_SetPosition, None, StepShape_Torus)
StepShape_Torus_swigregister = _StepShape.StepShape_Torus_swigregister
StepShape_Torus_swigregister(StepShape_Torus)

class StepShape_TypeQualifier(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param name:
        	:type name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_TypeQualifier_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepShape.StepShape_TypeQualifier_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param name:
        	:type name: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_TypeQualifier_SetName(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_TypeQualifier_swiginit(self, _StepShape.new_StepShape_TypeQualifier(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_TypeQualifier_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_TypeQualifier
StepShape_TypeQualifier.Init = new_instancemethod(_StepShape.StepShape_TypeQualifier_Init, None, StepShape_TypeQualifier)
StepShape_TypeQualifier.Name = new_instancemethod(_StepShape.StepShape_TypeQualifier_Name, None, StepShape_TypeQualifier)
StepShape_TypeQualifier.SetName = new_instancemethod(_StepShape.StepShape_TypeQualifier_SetName, None, StepShape_TypeQualifier)
StepShape_TypeQualifier_swigregister = _StepShape.StepShape_TypeQualifier_swigregister
StepShape_TypeQualifier_swigregister(StepShape_TypeQualifier)

class StepShape_ValueFormatTypeQualifier(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FormatType(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        * Returns field FormatType
        	:rtype: inline opencascade::handle<TCollection_HAsciiString>
        """
        return _StepShape.StepShape_ValueFormatTypeQualifier_FormatType(self, *args)


    def Init(self, *args) -> "void":
        """
        * Init all field own and inherited
        	:param theFormatType:
        	:type theFormatType: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepShape.StepShape_ValueFormatTypeQualifier_Init(self, *args)


    def SetFormatType(self, *args) -> "void":
        """
        * Set field FormatType
        	:param theFormatType:
        	:type theFormatType: TCollection_HAsciiString
        	:rtype: inline void
        """
        return _StepShape.StepShape_ValueFormatTypeQualifier_SetFormatType(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_ValueFormatTypeQualifier_swiginit(self, _StepShape.new_StepShape_ValueFormatTypeQualifier(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ValueFormatTypeQualifier_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ValueFormatTypeQualifier
StepShape_ValueFormatTypeQualifier.FormatType = new_instancemethod(_StepShape.StepShape_ValueFormatTypeQualifier_FormatType, None, StepShape_ValueFormatTypeQualifier)
StepShape_ValueFormatTypeQualifier.Init = new_instancemethod(_StepShape.StepShape_ValueFormatTypeQualifier_Init, None, StepShape_ValueFormatTypeQualifier)
StepShape_ValueFormatTypeQualifier.SetFormatType = new_instancemethod(_StepShape.StepShape_ValueFormatTypeQualifier_SetFormatType, None, StepShape_ValueFormatTypeQualifier)
StepShape_ValueFormatTypeQualifier_swigregister = _StepShape.StepShape_ValueFormatTypeQualifier_swigregister
StepShape_ValueFormatTypeQualifier_swigregister(StepShape_ValueFormatTypeQualifier)

class StepShape_ValueQualifier(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PrecisionQualifier(self, *args) -> "opencascade::handle< StepShape_PrecisionQualifier >":
        """
        * Returns Value as PrecisionQualifier
        	:rtype: opencascade::handle<StepShape_PrecisionQualifier>
        """
        return _StepShape.StepShape_ValueQualifier_PrecisionQualifier(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepShape.StepShape_ValueQualifier_swiginit(self, _StepShape.new_StepShape_ValueQualifier(*args))

    def TypeQualifier(self, *args) -> "opencascade::handle< StepShape_TypeQualifier >":
        """
        * Returns Value as TypeQualifier
        	:rtype: opencascade::handle<StepShape_TypeQualifier>
        """
        return _StepShape.StepShape_ValueQualifier_TypeQualifier(self, *args)


    def ValueFormatTypeQualifier(self, *args) -> "opencascade::handle< StepShape_ValueFormatTypeQualifier >":
        """
        * Returns Value as ValueFormatTypeQualifier
        	:rtype: opencascade::handle<StepShape_ValueFormatTypeQualifier>
        """
        return _StepShape.StepShape_ValueQualifier_ValueFormatTypeQualifier(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ValueQualifier
StepShape_ValueQualifier.PrecisionQualifier = new_instancemethod(_StepShape.StepShape_ValueQualifier_PrecisionQualifier, None, StepShape_ValueQualifier)
StepShape_ValueQualifier.TypeQualifier = new_instancemethod(_StepShape.StepShape_ValueQualifier_TypeQualifier, None, StepShape_ValueQualifier)
StepShape_ValueQualifier.ValueFormatTypeQualifier = new_instancemethod(_StepShape.StepShape_ValueQualifier_ValueFormatTypeQualifier, None, StepShape_ValueQualifier)
StepShape_ValueQualifier_swigregister = _StepShape.StepShape_ValueQualifier_swigregister
StepShape_ValueQualifier_swigregister(StepShape_ValueQualifier)

class StepShape_AdvancedBrepShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a AdvancedBrepShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_AdvancedBrepShapeRepresentation_swiginit(self, _StepShape.new_StepShape_AdvancedBrepShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_AdvancedBrepShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_AdvancedBrepShapeRepresentation
StepShape_AdvancedBrepShapeRepresentation_swigregister = _StepShape.StepShape_AdvancedBrepShapeRepresentation_swigregister
StepShape_AdvancedBrepShapeRepresentation_swigregister(StepShape_AdvancedBrepShapeRepresentation)

class StepShape_AngularLocation(StepShape_DimensionalLocation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AngleSelection(self, *args) -> "StepShape_AngleRelator":
        """
        * Returns field AngleSelection
        	:rtype: StepShape_AngleRelator
        """
        return _StepShape.StepShape_AngularLocation_AngleSelection(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aShapeAspectRelationship_Name:
        	:type aShapeAspectRelationship_Name: TCollection_HAsciiString
        	:param hasShapeAspectRelationship_Description:
        	:type hasShapeAspectRelationship_Description: bool
        	:param aShapeAspectRelationship_Description:
        	:type aShapeAspectRelationship_Description: TCollection_HAsciiString
        	:param aShapeAspectRelationship_RelatingShapeAspect:
        	:type aShapeAspectRelationship_RelatingShapeAspect: StepRepr_ShapeAspect
        	:param aShapeAspectRelationship_RelatedShapeAspect:
        	:type aShapeAspectRelationship_RelatedShapeAspect: StepRepr_ShapeAspect
        	:param aAngleSelection:
        	:type aAngleSelection: StepShape_AngleRelator
        	:rtype: None
        """
        return _StepShape.StepShape_AngularLocation_Init(self, *args)


    def SetAngleSelection(self, *args) -> "void":
        """
        * Set field AngleSelection
        	:param AngleSelection:
        	:type AngleSelection: StepShape_AngleRelator
        	:rtype: None
        """
        return _StepShape.StepShape_AngularLocation_SetAngleSelection(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_AngularLocation_swiginit(self, _StepShape.new_StepShape_AngularLocation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_AngularLocation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_AngularLocation
StepShape_AngularLocation.AngleSelection = new_instancemethod(_StepShape.StepShape_AngularLocation_AngleSelection, None, StepShape_AngularLocation)
StepShape_AngularLocation.Init = new_instancemethod(_StepShape.StepShape_AngularLocation_Init, None, StepShape_AngularLocation)
StepShape_AngularLocation.SetAngleSelection = new_instancemethod(_StepShape.StepShape_AngularLocation_SetAngleSelection, None, StepShape_AngularLocation)
StepShape_AngularLocation_swigregister = _StepShape.StepShape_AngularLocation_swigregister
StepShape_AngularLocation_swigregister(StepShape_AngularLocation)

class StepShape_AngularSize(StepShape_DimensionalSize):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AngleSelection(self, *args) -> "StepShape_AngleRelator":
        """
        * Returns field AngleSelection
        	:rtype: StepShape_AngleRelator
        """
        return _StepShape.StepShape_AngularSize_AngleSelection(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aDimensionalSize_AppliesTo:
        	:type aDimensionalSize_AppliesTo: StepRepr_ShapeAspect
        	:param aDimensionalSize_Name:
        	:type aDimensionalSize_Name: TCollection_HAsciiString
        	:param aAngleSelection:
        	:type aAngleSelection: StepShape_AngleRelator
        	:rtype: None
        """
        return _StepShape.StepShape_AngularSize_Init(self, *args)


    def SetAngleSelection(self, *args) -> "void":
        """
        * Set field AngleSelection
        	:param AngleSelection:
        	:type AngleSelection: StepShape_AngleRelator
        	:rtype: None
        """
        return _StepShape.StepShape_AngularSize_SetAngleSelection(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_AngularSize_swiginit(self, _StepShape.new_StepShape_AngularSize(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_AngularSize_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_AngularSize
StepShape_AngularSize.AngleSelection = new_instancemethod(_StepShape.StepShape_AngularSize_AngleSelection, None, StepShape_AngularSize)
StepShape_AngularSize.Init = new_instancemethod(_StepShape.StepShape_AngularSize_Init, None, StepShape_AngularSize)
StepShape_AngularSize.SetAngleSelection = new_instancemethod(_StepShape.StepShape_AngularSize_SetAngleSelection, None, StepShape_AngularSize)
StepShape_AngularSize_swigregister = _StepShape.StepShape_AngularSize_swigregister
StepShape_AngularSize_swigregister(StepShape_AngularSize)

class StepShape_BoxedHalfSpace(StepShape_HalfSpaceSolid):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Enclosure(self, *args) -> "opencascade::handle< StepShape_BoxDomain >":
        """:rtype: opencascade::handle<StepShape_BoxDomain>"""
        return _StepShape.StepShape_BoxedHalfSpace_Enclosure(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBaseSurface:
        	:type aBaseSurface: StepGeom_Surface
        	:param aAgreementFlag:
        	:type aAgreementFlag: bool
        	:param aEnclosure:
        	:type aEnclosure: StepShape_BoxDomain
        	:rtype: None
        """
        return _StepShape.StepShape_BoxedHalfSpace_Init(self, *args)


    def SetEnclosure(self, *args) -> "void":
        """
        :param aEnclosure:
        	:type aEnclosure: StepShape_BoxDomain
        	:rtype: None
        """
        return _StepShape.StepShape_BoxedHalfSpace_SetEnclosure(self, *args)


    def __init__(self, *args):
        """
        * Returns a BoxedHalfSpace
        	:rtype: None
        """
        _StepShape.StepShape_BoxedHalfSpace_swiginit(self, _StepShape.new_StepShape_BoxedHalfSpace(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_BoxedHalfSpace_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BoxedHalfSpace
StepShape_BoxedHalfSpace.Enclosure = new_instancemethod(_StepShape.StepShape_BoxedHalfSpace_Enclosure, None, StepShape_BoxedHalfSpace)
StepShape_BoxedHalfSpace.Init = new_instancemethod(_StepShape.StepShape_BoxedHalfSpace_Init, None, StepShape_BoxedHalfSpace)
StepShape_BoxedHalfSpace.SetEnclosure = new_instancemethod(_StepShape.StepShape_BoxedHalfSpace_SetEnclosure, None, StepShape_BoxedHalfSpace)
StepShape_BoxedHalfSpace_swigregister = _StepShape.StepShape_BoxedHalfSpace_swigregister
StepShape_BoxedHalfSpace_swigregister(StepShape_BoxedHalfSpace)

class StepShape_CompoundShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_CompoundShapeRepresentation_swiginit(self, _StepShape.new_StepShape_CompoundShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_CompoundShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CompoundShapeRepresentation
StepShape_CompoundShapeRepresentation_swigregister = _StepShape.StepShape_CompoundShapeRepresentation_swigregister
StepShape_CompoundShapeRepresentation_swigregister(StepShape_CompoundShapeRepresentation)

class StepShape_ConnectedEdgeSet(StepShape_TopologicalRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CesEdges(self, *args) -> "opencascade::handle< StepShape_HArray1OfEdge >":
        """
        * Returns field CesEdges
        	:rtype: opencascade::handle<StepShape_HArray1OfEdge>
        """
        return _StepShape.StepShape_ConnectedEdgeSet_CesEdges(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aCesEdges:
        	:type aCesEdges: StepShape_HArray1OfEdge
        	:rtype: None
        """
        return _StepShape.StepShape_ConnectedEdgeSet_Init(self, *args)


    def SetCesEdges(self, *args) -> "void":
        """
        * Set field CesEdges
        	:param CesEdges:
        	:type CesEdges: StepShape_HArray1OfEdge
        	:rtype: None
        """
        return _StepShape.StepShape_ConnectedEdgeSet_SetCesEdges(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ConnectedEdgeSet_swiginit(self, _StepShape.new_StepShape_ConnectedEdgeSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ConnectedEdgeSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ConnectedEdgeSet
StepShape_ConnectedEdgeSet.CesEdges = new_instancemethod(_StepShape.StepShape_ConnectedEdgeSet_CesEdges, None, StepShape_ConnectedEdgeSet)
StepShape_ConnectedEdgeSet.Init = new_instancemethod(_StepShape.StepShape_ConnectedEdgeSet_Init, None, StepShape_ConnectedEdgeSet)
StepShape_ConnectedEdgeSet.SetCesEdges = new_instancemethod(_StepShape.StepShape_ConnectedEdgeSet_SetCesEdges, None, StepShape_ConnectedEdgeSet)
StepShape_ConnectedEdgeSet_swigregister = _StepShape.StepShape_ConnectedEdgeSet_swigregister
StepShape_ConnectedEdgeSet_swigregister(StepShape_ConnectedEdgeSet)

class StepShape_ConnectedFaceSet(StepShape_TopologicalRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CfsFaces(self, *args) -> "opencascade::handle< StepShape_HArray1OfFace >":
        """:rtype: opencascade::handle<StepShape_HArray1OfFace>"""
        return _StepShape.StepShape_ConnectedFaceSet_CfsFaces(self, *args)


    def CfsFacesValue(self, *args) -> "opencascade::handle< StepShape_Face >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepShape_Face>
        """
        return _StepShape.StepShape_ConnectedFaceSet_CfsFacesValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aCfsFaces:
        	:type aCfsFaces: StepShape_HArray1OfFace
        	:rtype: None
        """
        return _StepShape.StepShape_ConnectedFaceSet_Init(self, *args)


    def NbCfsFaces(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_ConnectedFaceSet_NbCfsFaces(self, *args)


    def SetCfsFaces(self, *args) -> "void":
        """
        :param aCfsFaces:
        	:type aCfsFaces: StepShape_HArray1OfFace
        	:rtype: void
        """
        return _StepShape.StepShape_ConnectedFaceSet_SetCfsFaces(self, *args)


    def __init__(self, *args):
        """
        * Returns a ConnectedFaceSet
        	:rtype: None
        """
        _StepShape.StepShape_ConnectedFaceSet_swiginit(self, _StepShape.new_StepShape_ConnectedFaceSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ConnectedFaceSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ConnectedFaceSet
StepShape_ConnectedFaceSet.CfsFaces = new_instancemethod(_StepShape.StepShape_ConnectedFaceSet_CfsFaces, None, StepShape_ConnectedFaceSet)
StepShape_ConnectedFaceSet.CfsFacesValue = new_instancemethod(_StepShape.StepShape_ConnectedFaceSet_CfsFacesValue, None, StepShape_ConnectedFaceSet)
StepShape_ConnectedFaceSet.Init = new_instancemethod(_StepShape.StepShape_ConnectedFaceSet_Init, None, StepShape_ConnectedFaceSet)
StepShape_ConnectedFaceSet.NbCfsFaces = new_instancemethod(_StepShape.StepShape_ConnectedFaceSet_NbCfsFaces, None, StepShape_ConnectedFaceSet)
StepShape_ConnectedFaceSet.SetCfsFaces = new_instancemethod(_StepShape.StepShape_ConnectedFaceSet_SetCfsFaces, None, StepShape_ConnectedFaceSet)
StepShape_ConnectedFaceSet_swigregister = _StepShape.StepShape_ConnectedFaceSet_swigregister
StepShape_ConnectedFaceSet_swigregister(StepShape_ConnectedFaceSet)

class StepShape_CsgShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a CsgShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_CsgShapeRepresentation_swiginit(self, _StepShape.new_StepShape_CsgShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_CsgShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CsgShapeRepresentation
StepShape_CsgShapeRepresentation_swigregister = _StepShape.StepShape_CsgShapeRepresentation_swigregister
StepShape_CsgShapeRepresentation_swigregister(StepShape_CsgShapeRepresentation)

class StepShape_CsgSolid(StepShape_SolidModel):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aTreeRootExpression:
        	:type aTreeRootExpression: StepShape_CsgSelect
        	:rtype: None
        """
        return _StepShape.StepShape_CsgSolid_Init(self, *args)


    def SetTreeRootExpression(self, *args) -> "void":
        """
        :param aTreeRootExpression:
        	:type aTreeRootExpression: StepShape_CsgSelect
        	:rtype: None
        """
        return _StepShape.StepShape_CsgSolid_SetTreeRootExpression(self, *args)


    def __init__(self, *args):
        """
        * Returns a CsgSolid
        	:rtype: None
        """
        _StepShape.StepShape_CsgSolid_swiginit(self, _StepShape.new_StepShape_CsgSolid(*args))

    def TreeRootExpression(self, *args) -> "StepShape_CsgSelect":
        """:rtype: StepShape_CsgSelect"""
        return _StepShape.StepShape_CsgSolid_TreeRootExpression(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_CsgSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CsgSolid
StepShape_CsgSolid.Init = new_instancemethod(_StepShape.StepShape_CsgSolid_Init, None, StepShape_CsgSolid)
StepShape_CsgSolid.SetTreeRootExpression = new_instancemethod(_StepShape.StepShape_CsgSolid_SetTreeRootExpression, None, StepShape_CsgSolid)
StepShape_CsgSolid.TreeRootExpression = new_instancemethod(_StepShape.StepShape_CsgSolid_TreeRootExpression, None, StepShape_CsgSolid)
StepShape_CsgSolid_swigregister = _StepShape.StepShape_CsgSolid_swigregister
StepShape_CsgSolid_swigregister(StepShape_CsgSolid)

class StepShape_DimensionalLocationWithPath(StepShape_DimensionalLocation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aShapeAspectRelationship_Name:
        	:type aShapeAspectRelationship_Name: TCollection_HAsciiString
        	:param hasShapeAspectRelationship_Description:
        	:type hasShapeAspectRelationship_Description: bool
        	:param aShapeAspectRelationship_Description:
        	:type aShapeAspectRelationship_Description: TCollection_HAsciiString
        	:param aShapeAspectRelationship_RelatingShapeAspect:
        	:type aShapeAspectRelationship_RelatingShapeAspect: StepRepr_ShapeAspect
        	:param aShapeAspectRelationship_RelatedShapeAspect:
        	:type aShapeAspectRelationship_RelatedShapeAspect: StepRepr_ShapeAspect
        	:param aPath:
        	:type aPath: StepRepr_ShapeAspect
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalLocationWithPath_Init(self, *args)


    def Path(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        * Returns field Path
        	:rtype: opencascade::handle<StepRepr_ShapeAspect>
        """
        return _StepShape.StepShape_DimensionalLocationWithPath_Path(self, *args)


    def SetPath(self, *args) -> "void":
        """
        * Set field Path
        	:param Path:
        	:type Path: StepRepr_ShapeAspect
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalLocationWithPath_SetPath(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalLocationWithPath_swiginit(self, _StepShape.new_StepShape_DimensionalLocationWithPath(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalLocationWithPath_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalLocationWithPath
StepShape_DimensionalLocationWithPath.Init = new_instancemethod(_StepShape.StepShape_DimensionalLocationWithPath_Init, None, StepShape_DimensionalLocationWithPath)
StepShape_DimensionalLocationWithPath.Path = new_instancemethod(_StepShape.StepShape_DimensionalLocationWithPath_Path, None, StepShape_DimensionalLocationWithPath)
StepShape_DimensionalLocationWithPath.SetPath = new_instancemethod(_StepShape.StepShape_DimensionalLocationWithPath_SetPath, None, StepShape_DimensionalLocationWithPath)
StepShape_DimensionalLocationWithPath_swigregister = _StepShape.StepShape_DimensionalLocationWithPath_swigregister
StepShape_DimensionalLocationWithPath_swigregister(StepShape_DimensionalLocationWithPath)

class StepShape_DimensionalSizeWithPath(StepShape_DimensionalSize):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aDimensionalSize_AppliesTo:
        	:type aDimensionalSize_AppliesTo: StepRepr_ShapeAspect
        	:param aDimensionalSize_Name:
        	:type aDimensionalSize_Name: TCollection_HAsciiString
        	:param aPath:
        	:type aPath: StepRepr_ShapeAspect
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalSizeWithPath_Init(self, *args)


    def Path(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        * Returns field Path
        	:rtype: opencascade::handle<StepRepr_ShapeAspect>
        """
        return _StepShape.StepShape_DimensionalSizeWithPath_Path(self, *args)


    def SetPath(self, *args) -> "void":
        """
        * Set field Path
        	:param Path:
        	:type Path: StepRepr_ShapeAspect
        	:rtype: None
        """
        return _StepShape.StepShape_DimensionalSizeWithPath_SetPath(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalSizeWithPath_swiginit(self, _StepShape.new_StepShape_DimensionalSizeWithPath(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalSizeWithPath_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalSizeWithPath
StepShape_DimensionalSizeWithPath.Init = new_instancemethod(_StepShape.StepShape_DimensionalSizeWithPath_Init, None, StepShape_DimensionalSizeWithPath)
StepShape_DimensionalSizeWithPath.Path = new_instancemethod(_StepShape.StepShape_DimensionalSizeWithPath_Path, None, StepShape_DimensionalSizeWithPath)
StepShape_DimensionalSizeWithPath.SetPath = new_instancemethod(_StepShape.StepShape_DimensionalSizeWithPath_SetPath, None, StepShape_DimensionalSizeWithPath)
StepShape_DimensionalSizeWithPath_swigregister = _StepShape.StepShape_DimensionalSizeWithPath_swigregister
StepShape_DimensionalSizeWithPath_swigregister(StepShape_DimensionalSizeWithPath)

class StepShape_DirectedDimensionalLocation(StepShape_DimensionalLocation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DirectedDimensionalLocation_swiginit(self, _StepShape.new_StepShape_DirectedDimensionalLocation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DirectedDimensionalLocation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DirectedDimensionalLocation
StepShape_DirectedDimensionalLocation_swigregister = _StepShape.StepShape_DirectedDimensionalLocation_swigregister
StepShape_DirectedDimensionalLocation_swigregister(StepShape_DirectedDimensionalLocation)

class StepShape_Edge(StepShape_TopologicalRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EdgeEnd(self, *args) -> "opencascade::handle< StepShape_Vertex >":
        """:rtype: opencascade::handle<StepShape_Vertex>"""
        return _StepShape.StepShape_Edge_EdgeEnd(self, *args)


    def EdgeStart(self, *args) -> "opencascade::handle< StepShape_Vertex >":
        """:rtype: opencascade::handle<StepShape_Vertex>"""
        return _StepShape.StepShape_Edge_EdgeStart(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aEdgeStart:
        	:type aEdgeStart: StepShape_Vertex
        	:param aEdgeEnd:
        	:type aEdgeEnd: StepShape_Vertex
        	:rtype: None
        """
        return _StepShape.StepShape_Edge_Init(self, *args)


    def SetEdgeEnd(self, *args) -> "void":
        """
        :param aEdgeEnd:
        	:type aEdgeEnd: StepShape_Vertex
        	:rtype: void
        """
        return _StepShape.StepShape_Edge_SetEdgeEnd(self, *args)


    def SetEdgeStart(self, *args) -> "void":
        """
        :param aEdgeStart:
        	:type aEdgeStart: StepShape_Vertex
        	:rtype: void
        """
        return _StepShape.StepShape_Edge_SetEdgeStart(self, *args)


    def __init__(self, *args):
        """
        * Returns a Edge
        	:rtype: None
        """
        _StepShape.StepShape_Edge_swiginit(self, _StepShape.new_StepShape_Edge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Edge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Edge
StepShape_Edge.EdgeEnd = new_instancemethod(_StepShape.StepShape_Edge_EdgeEnd, None, StepShape_Edge)
StepShape_Edge.EdgeStart = new_instancemethod(_StepShape.StepShape_Edge_EdgeStart, None, StepShape_Edge)
StepShape_Edge.Init = new_instancemethod(_StepShape.StepShape_Edge_Init, None, StepShape_Edge)
StepShape_Edge.SetEdgeEnd = new_instancemethod(_StepShape.StepShape_Edge_SetEdgeEnd, None, StepShape_Edge)
StepShape_Edge.SetEdgeStart = new_instancemethod(_StepShape.StepShape_Edge_SetEdgeStart, None, StepShape_Edge)
StepShape_Edge_swigregister = _StepShape.StepShape_Edge_swigregister
StepShape_Edge_swigregister(StepShape_Edge)

class StepShape_EdgeBasedWireframeShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_EdgeBasedWireframeShapeRepresentation_swiginit(self, _StepShape.new_StepShape_EdgeBasedWireframeShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_EdgeBasedWireframeShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_EdgeBasedWireframeShapeRepresentation
StepShape_EdgeBasedWireframeShapeRepresentation_swigregister = _StepShape.StepShape_EdgeBasedWireframeShapeRepresentation_swigregister
StepShape_EdgeBasedWireframeShapeRepresentation_swigregister(StepShape_EdgeBasedWireframeShapeRepresentation)

class StepShape_Face(StepShape_TopologicalRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Bounds(self, *args) -> "opencascade::handle< StepShape_HArray1OfFaceBound >":
        """:rtype: opencascade::handle<StepShape_HArray1OfFaceBound>"""
        return _StepShape.StepShape_Face_Bounds(self, *args)


    def BoundsValue(self, *args) -> "opencascade::handle< StepShape_FaceBound >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepShape_FaceBound>
        """
        return _StepShape.StepShape_Face_BoundsValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBounds:
        	:type aBounds: StepShape_HArray1OfFaceBound
        	:rtype: None
        """
        return _StepShape.StepShape_Face_Init(self, *args)


    def NbBounds(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_Face_NbBounds(self, *args)


    def SetBounds(self, *args) -> "void":
        """
        :param aBounds:
        	:type aBounds: StepShape_HArray1OfFaceBound
        	:rtype: void
        """
        return _StepShape.StepShape_Face_SetBounds(self, *args)


    def __init__(self, *args):
        """
        * Returns a Face
        	:rtype: None
        """
        _StepShape.StepShape_Face_swiginit(self, _StepShape.new_StepShape_Face(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Face_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Face
StepShape_Face.Bounds = new_instancemethod(_StepShape.StepShape_Face_Bounds, None, StepShape_Face)
StepShape_Face.BoundsValue = new_instancemethod(_StepShape.StepShape_Face_BoundsValue, None, StepShape_Face)
StepShape_Face.Init = new_instancemethod(_StepShape.StepShape_Face_Init, None, StepShape_Face)
StepShape_Face.NbBounds = new_instancemethod(_StepShape.StepShape_Face_NbBounds, None, StepShape_Face)
StepShape_Face.SetBounds = new_instancemethod(_StepShape.StepShape_Face_SetBounds, None, StepShape_Face)
StepShape_Face_swigregister = _StepShape.StepShape_Face_swigregister
StepShape_Face_swigregister(StepShape_Face)

class StepShape_FaceBound(StepShape_TopologicalRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Bound(self, *args) -> "opencascade::handle< StepShape_Loop >":
        """:rtype: opencascade::handle<StepShape_Loop>"""
        return _StepShape.StepShape_FaceBound_Bound(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBound:
        	:type aBound: StepShape_Loop
        	:param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_FaceBound_Init(self, *args)


    def Orientation(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepShape.StepShape_FaceBound_Orientation(self, *args)


    def SetBound(self, *args) -> "void":
        """
        :param aBound:
        	:type aBound: StepShape_Loop
        	:rtype: None
        """
        return _StepShape.StepShape_FaceBound_SetBound(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        :param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_FaceBound_SetOrientation(self, *args)


    def __init__(self, *args):
        """
        * Returns a FaceBound
        	:rtype: None
        """
        _StepShape.StepShape_FaceBound_swiginit(self, _StepShape.new_StepShape_FaceBound(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FaceBound_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FaceBound
StepShape_FaceBound.Bound = new_instancemethod(_StepShape.StepShape_FaceBound_Bound, None, StepShape_FaceBound)
StepShape_FaceBound.Init = new_instancemethod(_StepShape.StepShape_FaceBound_Init, None, StepShape_FaceBound)
StepShape_FaceBound.Orientation = new_instancemethod(_StepShape.StepShape_FaceBound_Orientation, None, StepShape_FaceBound)
StepShape_FaceBound.SetBound = new_instancemethod(_StepShape.StepShape_FaceBound_SetBound, None, StepShape_FaceBound)
StepShape_FaceBound.SetOrientation = new_instancemethod(_StepShape.StepShape_FaceBound_SetOrientation, None, StepShape_FaceBound)
StepShape_FaceBound_swigregister = _StepShape.StepShape_FaceBound_swigregister
StepShape_FaceBound_swigregister(StepShape_FaceBound)

class StepShape_FacetedBrepShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a FacetedBrepShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_FacetedBrepShapeRepresentation_swiginit(self, _StepShape.new_StepShape_FacetedBrepShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FacetedBrepShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FacetedBrepShapeRepresentation
StepShape_FacetedBrepShapeRepresentation_swigregister = _StepShape.StepShape_FacetedBrepShapeRepresentation_swigregister
StepShape_FacetedBrepShapeRepresentation_swigregister(StepShape_FacetedBrepShapeRepresentation)

class StepShape_GeometricCurveSet(StepShape_GeometricSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a GeometricCurveSet
        	:rtype: None
        """
        _StepShape.StepShape_GeometricCurveSet_swiginit(self, _StepShape.new_StepShape_GeometricCurveSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_GeometricCurveSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricCurveSet
StepShape_GeometricCurveSet_swigregister = _StepShape.StepShape_GeometricCurveSet_swigregister
StepShape_GeometricCurveSet_swigregister(StepShape_GeometricCurveSet)

class StepShape_GeometricallyBoundedSurfaceShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a GeometricallyBoundedSurfaceShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_GeometricallyBoundedSurfaceShapeRepresentation_swiginit(self, _StepShape.new_StepShape_GeometricallyBoundedSurfaceShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricallyBoundedSurfaceShapeRepresentation
StepShape_GeometricallyBoundedSurfaceShapeRepresentation_swigregister = _StepShape.StepShape_GeometricallyBoundedSurfaceShapeRepresentation_swigregister
StepShape_GeometricallyBoundedSurfaceShapeRepresentation_swigregister(StepShape_GeometricallyBoundedSurfaceShapeRepresentation)

class StepShape_GeometricallyBoundedWireframeShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a GeometricallyBoundedWireframeShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_GeometricallyBoundedWireframeShapeRepresentation_swiginit(self, _StepShape.new_StepShape_GeometricallyBoundedWireframeShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricallyBoundedWireframeShapeRepresentation
StepShape_GeometricallyBoundedWireframeShapeRepresentation_swigregister = _StepShape.StepShape_GeometricallyBoundedWireframeShapeRepresentation_swigregister
StepShape_GeometricallyBoundedWireframeShapeRepresentation_swigregister(StepShape_GeometricallyBoundedWireframeShapeRepresentation)

class StepShape_Loop(StepShape_TopologicalRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Loop
        	:rtype: None
        """
        _StepShape.StepShape_Loop_swiginit(self, _StepShape.new_StepShape_Loop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Loop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Loop
StepShape_Loop_swigregister = _StepShape.StepShape_Loop_swigregister
StepShape_Loop_swigregister(StepShape_Loop)

class StepShape_LoopAndPath(StepShape_TopologicalRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EdgeList(self, *args) -> "opencascade::handle< StepShape_HArray1OfOrientedEdge >":
        """:rtype: opencascade::handle<StepShape_HArray1OfOrientedEdge>"""
        return _StepShape.StepShape_LoopAndPath_EdgeList(self, *args)


    def EdgeListValue(self, *args) -> "opencascade::handle< StepShape_OrientedEdge >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepShape_OrientedEdge>
        """
        return _StepShape.StepShape_LoopAndPath_EdgeListValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aLoop:
        	:type aLoop: StepShape_Loop
        	:param aPath:
        	:type aPath: StepShape_Path
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aEdgeList:
        	:type aEdgeList: StepShape_HArray1OfOrientedEdge
        	:rtype: None
        """
        return _StepShape.StepShape_LoopAndPath_Init(self, *args)


    def Loop(self, *args) -> "opencascade::handle< StepShape_Loop >":
        """:rtype: opencascade::handle<StepShape_Loop>"""
        return _StepShape.StepShape_LoopAndPath_Loop(self, *args)


    def NbEdgeList(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_LoopAndPath_NbEdgeList(self, *args)


    def Path(self, *args) -> "opencascade::handle< StepShape_Path >":
        """:rtype: opencascade::handle<StepShape_Path>"""
        return _StepShape.StepShape_LoopAndPath_Path(self, *args)


    def SetEdgeList(self, *args) -> "void":
        """
        :param aEdgeList:
        	:type aEdgeList: StepShape_HArray1OfOrientedEdge
        	:rtype: None
        """
        return _StepShape.StepShape_LoopAndPath_SetEdgeList(self, *args)


    def SetLoop(self, *args) -> "void":
        """
        :param aLoop:
        	:type aLoop: StepShape_Loop
        	:rtype: None
        """
        return _StepShape.StepShape_LoopAndPath_SetLoop(self, *args)


    def SetPath(self, *args) -> "void":
        """
        :param aPath:
        	:type aPath: StepShape_Path
        	:rtype: None
        """
        return _StepShape.StepShape_LoopAndPath_SetPath(self, *args)


    def __init__(self, *args):
        """
        * Returns a LoopAndPath
        	:rtype: None
        """
        _StepShape.StepShape_LoopAndPath_swiginit(self, _StepShape.new_StepShape_LoopAndPath(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_LoopAndPath_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_LoopAndPath
StepShape_LoopAndPath.EdgeList = new_instancemethod(_StepShape.StepShape_LoopAndPath_EdgeList, None, StepShape_LoopAndPath)
StepShape_LoopAndPath.EdgeListValue = new_instancemethod(_StepShape.StepShape_LoopAndPath_EdgeListValue, None, StepShape_LoopAndPath)
StepShape_LoopAndPath.Init = new_instancemethod(_StepShape.StepShape_LoopAndPath_Init, None, StepShape_LoopAndPath)
StepShape_LoopAndPath.Loop = new_instancemethod(_StepShape.StepShape_LoopAndPath_Loop, None, StepShape_LoopAndPath)
StepShape_LoopAndPath.NbEdgeList = new_instancemethod(_StepShape.StepShape_LoopAndPath_NbEdgeList, None, StepShape_LoopAndPath)
StepShape_LoopAndPath.Path = new_instancemethod(_StepShape.StepShape_LoopAndPath_Path, None, StepShape_LoopAndPath)
StepShape_LoopAndPath.SetEdgeList = new_instancemethod(_StepShape.StepShape_LoopAndPath_SetEdgeList, None, StepShape_LoopAndPath)
StepShape_LoopAndPath.SetLoop = new_instancemethod(_StepShape.StepShape_LoopAndPath_SetLoop, None, StepShape_LoopAndPath)
StepShape_LoopAndPath.SetPath = new_instancemethod(_StepShape.StepShape_LoopAndPath_SetPath, None, StepShape_LoopAndPath)
StepShape_LoopAndPath_swigregister = _StepShape.StepShape_LoopAndPath_swigregister
StepShape_LoopAndPath_swigregister(StepShape_LoopAndPath)

class StepShape_ManifoldSolidBrep(StepShape_SolidModel):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aOuter:
        	:type aOuter: StepShape_ClosedShell
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aOuter:
        	:type aOuter: StepShape_ConnectedFaceSet
        	:rtype: None
        """
        return _StepShape.StepShape_ManifoldSolidBrep_Init(self, *args)


    def Outer(self, *args) -> "opencascade::handle< StepShape_ConnectedFaceSet >":
        """:rtype: opencascade::handle<StepShape_ConnectedFaceSet>"""
        return _StepShape.StepShape_ManifoldSolidBrep_Outer(self, *args)


    def SetOuter(self, *args) -> "void":
        """
        :param aOuter:
        	:type aOuter: StepShape_ConnectedFaceSet
        	:rtype: None
        """
        return _StepShape.StepShape_ManifoldSolidBrep_SetOuter(self, *args)


    def __init__(self, *args):
        """
        * Returns a ManifoldSolidBrep
        	:rtype: None
        """
        _StepShape.StepShape_ManifoldSolidBrep_swiginit(self, _StepShape.new_StepShape_ManifoldSolidBrep(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ManifoldSolidBrep_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ManifoldSolidBrep
StepShape_ManifoldSolidBrep.Init = new_instancemethod(_StepShape.StepShape_ManifoldSolidBrep_Init, None, StepShape_ManifoldSolidBrep)
StepShape_ManifoldSolidBrep.Outer = new_instancemethod(_StepShape.StepShape_ManifoldSolidBrep_Outer, None, StepShape_ManifoldSolidBrep)
StepShape_ManifoldSolidBrep.SetOuter = new_instancemethod(_StepShape.StepShape_ManifoldSolidBrep_SetOuter, None, StepShape_ManifoldSolidBrep)
StepShape_ManifoldSolidBrep_swigregister = _StepShape.StepShape_ManifoldSolidBrep_swigregister
StepShape_ManifoldSolidBrep_swigregister(StepShape_ManifoldSolidBrep)

class StepShape_ManifoldSurfaceShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a ManifoldSurfaceShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_ManifoldSurfaceShapeRepresentation_swiginit(self, _StepShape.new_StepShape_ManifoldSurfaceShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ManifoldSurfaceShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ManifoldSurfaceShapeRepresentation
StepShape_ManifoldSurfaceShapeRepresentation_swigregister = _StepShape.StepShape_ManifoldSurfaceShapeRepresentation_swigregister
StepShape_ManifoldSurfaceShapeRepresentation_swigregister(StepShape_ManifoldSurfaceShapeRepresentation)

class StepShape_NonManifoldSurfaceShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_NonManifoldSurfaceShapeRepresentation_swiginit(self, _StepShape.new_StepShape_NonManifoldSurfaceShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_NonManifoldSurfaceShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_NonManifoldSurfaceShapeRepresentation
StepShape_NonManifoldSurfaceShapeRepresentation_swigregister = _StepShape.StepShape_NonManifoldSurfaceShapeRepresentation_swigregister
StepShape_NonManifoldSurfaceShapeRepresentation_swigregister(StepShape_NonManifoldSurfaceShapeRepresentation)

class StepShape_Path(StepShape_TopologicalRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EdgeList(self, *args) -> "opencascade::handle< StepShape_HArray1OfOrientedEdge >":
        """:rtype: opencascade::handle<StepShape_HArray1OfOrientedEdge>"""
        return _StepShape.StepShape_Path_EdgeList(self, *args)


    def EdgeListValue(self, *args) -> "opencascade::handle< StepShape_OrientedEdge >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepShape_OrientedEdge>
        """
        return _StepShape.StepShape_Path_EdgeListValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aEdgeList:
        	:type aEdgeList: StepShape_HArray1OfOrientedEdge
        	:rtype: None
        """
        return _StepShape.StepShape_Path_Init(self, *args)


    def NbEdgeList(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_Path_NbEdgeList(self, *args)


    def SetEdgeList(self, *args) -> "void":
        """
        :param aEdgeList:
        	:type aEdgeList: StepShape_HArray1OfOrientedEdge
        	:rtype: void
        """
        return _StepShape.StepShape_Path_SetEdgeList(self, *args)


    def __init__(self, *args):
        """
        * Returns a Path
        	:rtype: None
        """
        _StepShape.StepShape_Path_swiginit(self, _StepShape.new_StepShape_Path(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Path_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Path
StepShape_Path.EdgeList = new_instancemethod(_StepShape.StepShape_Path_EdgeList, None, StepShape_Path)
StepShape_Path.EdgeListValue = new_instancemethod(_StepShape.StepShape_Path_EdgeListValue, None, StepShape_Path)
StepShape_Path.Init = new_instancemethod(_StepShape.StepShape_Path_Init, None, StepShape_Path)
StepShape_Path.NbEdgeList = new_instancemethod(_StepShape.StepShape_Path_NbEdgeList, None, StepShape_Path)
StepShape_Path.SetEdgeList = new_instancemethod(_StepShape.StepShape_Path_SetEdgeList, None, StepShape_Path)
StepShape_Path_swigregister = _StepShape.StepShape_Path_swigregister
StepShape_Path_swigregister(StepShape_Path)

class StepShape_PointRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_PointRepresentation_swiginit(self, _StepShape.new_StepShape_PointRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_PointRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_PointRepresentation
StepShape_PointRepresentation_swigregister = _StepShape.StepShape_PointRepresentation_swigregister
StepShape_PointRepresentation_swigregister(StepShape_PointRepresentation)

class StepShape_ShapeDimensionRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields AP214
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theItems:
        	:type theItems: StepRepr_HArray1OfRepresentationItem
        	:param theContextOfItems:
        	:type theContextOfItems: StepRepr_RepresentationContext
        	:rtype: None
        * Initialize all fields AP242
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theItems:
        	:type theItems: StepShape_HArray1OfShapeDimensionRepresentationItem
        	:param theContextOfItems:
        	:type theContextOfItems: StepRepr_RepresentationContext
        	:rtype: None
        """
        return _StepShape.StepShape_ShapeDimensionRepresentation_Init(self, *args)


    def ItemsAP242(self, *args) -> "opencascade::handle< StepShape_HArray1OfShapeDimensionRepresentationItem >":
        """:rtype: opencascade::handle<StepShape_HArray1OfShapeDimensionRepresentationItem>"""
        return _StepShape.StepShape_ShapeDimensionRepresentation_ItemsAP242(self, *args)


    def SetItemsAP242(self, *args) -> "void":
        """
        :param theItems:
        	:type theItems: StepShape_HArray1OfShapeDimensionRepresentationItem
        	:rtype: None
        """
        return _StepShape.StepShape_ShapeDimensionRepresentation_SetItemsAP242(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ShapeDimensionRepresentation_swiginit(self, _StepShape.new_StepShape_ShapeDimensionRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShapeDimensionRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeDimensionRepresentation
StepShape_ShapeDimensionRepresentation.Init = new_instancemethod(_StepShape.StepShape_ShapeDimensionRepresentation_Init, None, StepShape_ShapeDimensionRepresentation)
StepShape_ShapeDimensionRepresentation.ItemsAP242 = new_instancemethod(_StepShape.StepShape_ShapeDimensionRepresentation_ItemsAP242, None, StepShape_ShapeDimensionRepresentation)
StepShape_ShapeDimensionRepresentation.SetItemsAP242 = new_instancemethod(_StepShape.StepShape_ShapeDimensionRepresentation_SetItemsAP242, None, StepShape_ShapeDimensionRepresentation)
StepShape_ShapeDimensionRepresentation_swigregister = _StepShape.StepShape_ShapeDimensionRepresentation_swigregister
StepShape_ShapeDimensionRepresentation_swigregister(StepShape_ShapeDimensionRepresentation)

class StepShape_ShapeRepresentationWithParameters(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ShapeRepresentationWithParameters_swiginit(self, _StepShape.new_StepShape_ShapeRepresentationWithParameters(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShapeRepresentationWithParameters_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeRepresentationWithParameters
StepShape_ShapeRepresentationWithParameters_swigregister = _StepShape.StepShape_ShapeRepresentationWithParameters_swigregister
StepShape_ShapeRepresentationWithParameters_swigregister(StepShape_ShapeRepresentationWithParameters)

class StepShape_SolidReplica(StepShape_SolidModel):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aParentSolid:
        	:type aParentSolid: StepShape_SolidModel
        	:param aTransformation:
        	:type aTransformation: StepGeom_CartesianTransformationOperator3d
        	:rtype: None
        """
        return _StepShape.StepShape_SolidReplica_Init(self, *args)


    def ParentSolid(self, *args) -> "opencascade::handle< StepShape_SolidModel >":
        """:rtype: opencascade::handle<StepShape_SolidModel>"""
        return _StepShape.StepShape_SolidReplica_ParentSolid(self, *args)


    def SetParentSolid(self, *args) -> "void":
        """
        :param aParentSolid:
        	:type aParentSolid: StepShape_SolidModel
        	:rtype: None
        """
        return _StepShape.StepShape_SolidReplica_SetParentSolid(self, *args)


    def SetTransformation(self, *args) -> "void":
        """
        :param aTransformation:
        	:type aTransformation: StepGeom_CartesianTransformationOperator3d
        	:rtype: None
        """
        return _StepShape.StepShape_SolidReplica_SetTransformation(self, *args)


    def __init__(self, *args):
        """
        * Returns a SolidReplica
        	:rtype: None
        """
        _StepShape.StepShape_SolidReplica_swiginit(self, _StepShape.new_StepShape_SolidReplica(*args))

    def Transformation(self, *args) -> "opencascade::handle< StepGeom_CartesianTransformationOperator3d >":
        """:rtype: opencascade::handle<StepGeom_CartesianTransformationOperator3d>"""
        return _StepShape.StepShape_SolidReplica_Transformation(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SolidReplica_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SolidReplica
StepShape_SolidReplica.Init = new_instancemethod(_StepShape.StepShape_SolidReplica_Init, None, StepShape_SolidReplica)
StepShape_SolidReplica.ParentSolid = new_instancemethod(_StepShape.StepShape_SolidReplica_ParentSolid, None, StepShape_SolidReplica)
StepShape_SolidReplica.SetParentSolid = new_instancemethod(_StepShape.StepShape_SolidReplica_SetParentSolid, None, StepShape_SolidReplica)
StepShape_SolidReplica.SetTransformation = new_instancemethod(_StepShape.StepShape_SolidReplica_SetTransformation, None, StepShape_SolidReplica)
StepShape_SolidReplica.Transformation = new_instancemethod(_StepShape.StepShape_SolidReplica_Transformation, None, StepShape_SolidReplica)
StepShape_SolidReplica_swigregister = _StepShape.StepShape_SolidReplica_swigregister
StepShape_SolidReplica_swigregister(StepShape_SolidReplica)

class StepShape_SweptAreaSolid(StepShape_SolidModel):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptArea:
        	:type aSweptArea: StepGeom_CurveBoundedSurface
        	:rtype: None
        """
        return _StepShape.StepShape_SweptAreaSolid_Init(self, *args)


    def SetSweptArea(self, *args) -> "void":
        """
        :param aSweptArea:
        	:type aSweptArea: StepGeom_CurveBoundedSurface
        	:rtype: None
        """
        return _StepShape.StepShape_SweptAreaSolid_SetSweptArea(self, *args)


    def __init__(self, *args):
        """
        * Returns a SweptAreaSolid
        	:rtype: None
        """
        _StepShape.StepShape_SweptAreaSolid_swiginit(self, _StepShape.new_StepShape_SweptAreaSolid(*args))

    def SweptArea(self, *args) -> "opencascade::handle< StepGeom_CurveBoundedSurface >":
        """:rtype: opencascade::handle<StepGeom_CurveBoundedSurface>"""
        return _StepShape.StepShape_SweptAreaSolid_SweptArea(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SweptAreaSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SweptAreaSolid
StepShape_SweptAreaSolid.Init = new_instancemethod(_StepShape.StepShape_SweptAreaSolid_Init, None, StepShape_SweptAreaSolid)
StepShape_SweptAreaSolid.SetSweptArea = new_instancemethod(_StepShape.StepShape_SweptAreaSolid_SetSweptArea, None, StepShape_SweptAreaSolid)
StepShape_SweptAreaSolid.SweptArea = new_instancemethod(_StepShape.StepShape_SweptAreaSolid_SweptArea, None, StepShape_SweptAreaSolid)
StepShape_SweptAreaSolid_swigregister = _StepShape.StepShape_SweptAreaSolid_swigregister
StepShape_SweptAreaSolid_swigregister(StepShape_SweptAreaSolid)

class StepShape_SweptFaceSolid(StepShape_SolidModel):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptArea:
        	:type aSweptArea: StepShape_FaceSurface
        	:rtype: None
        """
        return _StepShape.StepShape_SweptFaceSolid_Init(self, *args)


    def SetSweptFace(self, *args) -> "void":
        """
        :param aSweptArea:
        	:type aSweptArea: StepShape_FaceSurface
        	:rtype: void
        """
        return _StepShape.StepShape_SweptFaceSolid_SetSweptFace(self, *args)


    def __init__(self, *args):
        """
        * Returns a SweptFaceSolid
        	:rtype: None
        """
        _StepShape.StepShape_SweptFaceSolid_swiginit(self, _StepShape.new_StepShape_SweptFaceSolid(*args))

    def SweptFace(self, *args) -> "opencascade::handle< StepShape_FaceSurface >":
        """:rtype: opencascade::handle<StepShape_FaceSurface>"""
        return _StepShape.StepShape_SweptFaceSolid_SweptFace(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SweptFaceSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SweptFaceSolid
StepShape_SweptFaceSolid.Init = new_instancemethod(_StepShape.StepShape_SweptFaceSolid_Init, None, StepShape_SweptFaceSolid)
StepShape_SweptFaceSolid.SetSweptFace = new_instancemethod(_StepShape.StepShape_SweptFaceSolid_SetSweptFace, None, StepShape_SweptFaceSolid)
StepShape_SweptFaceSolid.SweptFace = new_instancemethod(_StepShape.StepShape_SweptFaceSolid_SweptFace, None, StepShape_SweptFaceSolid)
StepShape_SweptFaceSolid_swigregister = _StepShape.StepShape_SweptFaceSolid_swigregister
StepShape_SweptFaceSolid_swigregister(StepShape_SweptFaceSolid)

class StepShape_TransitionalShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a TransitionalShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_TransitionalShapeRepresentation_swiginit(self, _StepShape.new_StepShape_TransitionalShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_TransitionalShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_TransitionalShapeRepresentation
StepShape_TransitionalShapeRepresentation_swigregister = _StepShape.StepShape_TransitionalShapeRepresentation_swigregister
StepShape_TransitionalShapeRepresentation_swigregister(StepShape_TransitionalShapeRepresentation)

class StepShape_Vertex(StepShape_TopologicalRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Vertex
        	:rtype: None
        """
        _StepShape.StepShape_Vertex_swiginit(self, _StepShape.new_StepShape_Vertex(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Vertex_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Vertex
StepShape_Vertex_swigregister = _StepShape.StepShape_Vertex_swigregister
StepShape_Vertex_swigregister(StepShape_Vertex)

class StepShape_BrepWithVoids(StepShape_ManifoldSolidBrep):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aOuter:
        	:type aOuter: StepShape_ClosedShell
        	:param aVoids:
        	:type aVoids: StepShape_HArray1OfOrientedClosedShell
        	:rtype: None
        """
        return _StepShape.StepShape_BrepWithVoids_Init(self, *args)


    def NbVoids(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_BrepWithVoids_NbVoids(self, *args)


    def SetVoids(self, *args) -> "void":
        """
        :param aVoids:
        	:type aVoids: StepShape_HArray1OfOrientedClosedShell
        	:rtype: None
        """
        return _StepShape.StepShape_BrepWithVoids_SetVoids(self, *args)


    def __init__(self, *args):
        """
        * Returns a BrepWithVoids
        	:rtype: None
        """
        _StepShape.StepShape_BrepWithVoids_swiginit(self, _StepShape.new_StepShape_BrepWithVoids(*args))

    def Voids(self, *args) -> "opencascade::handle< StepShape_HArray1OfOrientedClosedShell >":
        """:rtype: opencascade::handle<StepShape_HArray1OfOrientedClosedShell>"""
        return _StepShape.StepShape_BrepWithVoids_Voids(self, *args)


    def VoidsValue(self, *args) -> "opencascade::handle< StepShape_OrientedClosedShell >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepShape_OrientedClosedShell>
        """
        return _StepShape.StepShape_BrepWithVoids_VoidsValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_BrepWithVoids_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BrepWithVoids
StepShape_BrepWithVoids.Init = new_instancemethod(_StepShape.StepShape_BrepWithVoids_Init, None, StepShape_BrepWithVoids)
StepShape_BrepWithVoids.NbVoids = new_instancemethod(_StepShape.StepShape_BrepWithVoids_NbVoids, None, StepShape_BrepWithVoids)
StepShape_BrepWithVoids.SetVoids = new_instancemethod(_StepShape.StepShape_BrepWithVoids_SetVoids, None, StepShape_BrepWithVoids)
StepShape_BrepWithVoids.Voids = new_instancemethod(_StepShape.StepShape_BrepWithVoids_Voids, None, StepShape_BrepWithVoids)
StepShape_BrepWithVoids.VoidsValue = new_instancemethod(_StepShape.StepShape_BrepWithVoids_VoidsValue, None, StepShape_BrepWithVoids)
StepShape_BrepWithVoids_swigregister = _StepShape.StepShape_BrepWithVoids_swigregister
StepShape_BrepWithVoids_swigregister(StepShape_BrepWithVoids)

class StepShape_ClosedShell(StepShape_ConnectedFaceSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a ClosedShell
        	:rtype: None
        """
        _StepShape.StepShape_ClosedShell_swiginit(self, _StepShape.new_StepShape_ClosedShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ClosedShell_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ClosedShell
StepShape_ClosedShell_swigregister = _StepShape.StepShape_ClosedShell_swigregister
StepShape_ClosedShell_swigregister(StepShape_ClosedShell)

class StepShape_ConnectedFaceSubSet(StepShape_ConnectedFaceSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aConnectedFaceSet_CfsFaces:
        	:type aConnectedFaceSet_CfsFaces: StepShape_HArray1OfFace
        	:param aParentFaceSet:
        	:type aParentFaceSet: StepShape_ConnectedFaceSet
        	:rtype: None
        """
        return _StepShape.StepShape_ConnectedFaceSubSet_Init(self, *args)


    def ParentFaceSet(self, *args) -> "opencascade::handle< StepShape_ConnectedFaceSet >":
        """
        * Returns field ParentFaceSet
        	:rtype: opencascade::handle<StepShape_ConnectedFaceSet>
        """
        return _StepShape.StepShape_ConnectedFaceSubSet_ParentFaceSet(self, *args)


    def SetParentFaceSet(self, *args) -> "void":
        """
        * Set field ParentFaceSet
        	:param ParentFaceSet:
        	:type ParentFaceSet: StepShape_ConnectedFaceSet
        	:rtype: None
        """
        return _StepShape.StepShape_ConnectedFaceSubSet_SetParentFaceSet(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ConnectedFaceSubSet_swiginit(self, _StepShape.new_StepShape_ConnectedFaceSubSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ConnectedFaceSubSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ConnectedFaceSubSet
StepShape_ConnectedFaceSubSet.Init = new_instancemethod(_StepShape.StepShape_ConnectedFaceSubSet_Init, None, StepShape_ConnectedFaceSubSet)
StepShape_ConnectedFaceSubSet.ParentFaceSet = new_instancemethod(_StepShape.StepShape_ConnectedFaceSubSet_ParentFaceSet, None, StepShape_ConnectedFaceSubSet)
StepShape_ConnectedFaceSubSet.SetParentFaceSet = new_instancemethod(_StepShape.StepShape_ConnectedFaceSubSet_SetParentFaceSet, None, StepShape_ConnectedFaceSubSet)
StepShape_ConnectedFaceSubSet_swigregister = _StepShape.StepShape_ConnectedFaceSubSet_swigregister
StepShape_ConnectedFaceSubSet_swigregister(StepShape_ConnectedFaceSubSet)

class StepShape_EdgeCurve(StepShape_Edge):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EdgeGeometry(self, *args) -> "opencascade::handle< StepGeom_Curve >":
        """:rtype: opencascade::handle<StepGeom_Curve>"""
        return _StepShape.StepShape_EdgeCurve_EdgeGeometry(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aEdgeStart:
        	:type aEdgeStart: StepShape_Vertex
        	:param aEdgeEnd:
        	:type aEdgeEnd: StepShape_Vertex
        	:param aEdgeGeometry:
        	:type aEdgeGeometry: StepGeom_Curve
        	:param aSameSense:
        	:type aSameSense: bool
        	:rtype: None
        """
        return _StepShape.StepShape_EdgeCurve_Init(self, *args)


    def SameSense(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepShape.StepShape_EdgeCurve_SameSense(self, *args)


    def SetEdgeGeometry(self, *args) -> "void":
        """
        :param aEdgeGeometry:
        	:type aEdgeGeometry: StepGeom_Curve
        	:rtype: None
        """
        return _StepShape.StepShape_EdgeCurve_SetEdgeGeometry(self, *args)


    def SetSameSense(self, *args) -> "void":
        """
        :param aSameSense:
        	:type aSameSense: bool
        	:rtype: None
        """
        return _StepShape.StepShape_EdgeCurve_SetSameSense(self, *args)


    def __init__(self, *args):
        """
        * Returns a EdgeCurve
        	:rtype: None
        """
        _StepShape.StepShape_EdgeCurve_swiginit(self, _StepShape.new_StepShape_EdgeCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_EdgeCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_EdgeCurve
StepShape_EdgeCurve.EdgeGeometry = new_instancemethod(_StepShape.StepShape_EdgeCurve_EdgeGeometry, None, StepShape_EdgeCurve)
StepShape_EdgeCurve.Init = new_instancemethod(_StepShape.StepShape_EdgeCurve_Init, None, StepShape_EdgeCurve)
StepShape_EdgeCurve.SameSense = new_instancemethod(_StepShape.StepShape_EdgeCurve_SameSense, None, StepShape_EdgeCurve)
StepShape_EdgeCurve.SetEdgeGeometry = new_instancemethod(_StepShape.StepShape_EdgeCurve_SetEdgeGeometry, None, StepShape_EdgeCurve)
StepShape_EdgeCurve.SetSameSense = new_instancemethod(_StepShape.StepShape_EdgeCurve_SetSameSense, None, StepShape_EdgeCurve)
StepShape_EdgeCurve_swigregister = _StepShape.StepShape_EdgeCurve_swigregister
StepShape_EdgeCurve_swigregister(StepShape_EdgeCurve)

class StepShape_EdgeLoop(StepShape_Loop):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EdgeList(self, *args) -> "opencascade::handle< StepShape_HArray1OfOrientedEdge >":
        """:rtype: opencascade::handle<StepShape_HArray1OfOrientedEdge>"""
        return _StepShape.StepShape_EdgeLoop_EdgeList(self, *args)


    def EdgeListValue(self, *args) -> "opencascade::handle< StepShape_OrientedEdge >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepShape_OrientedEdge>
        """
        return _StepShape.StepShape_EdgeLoop_EdgeListValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aEdgeList:
        	:type aEdgeList: StepShape_HArray1OfOrientedEdge
        	:rtype: None
        """
        return _StepShape.StepShape_EdgeLoop_Init(self, *args)


    def NbEdgeList(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_EdgeLoop_NbEdgeList(self, *args)


    def SetEdgeList(self, *args) -> "void":
        """
        :param aEdgeList:
        	:type aEdgeList: StepShape_HArray1OfOrientedEdge
        	:rtype: None
        """
        return _StepShape.StepShape_EdgeLoop_SetEdgeList(self, *args)


    def __init__(self, *args):
        """
        * Returns a EdgeLoop
        	:rtype: None
        """
        _StepShape.StepShape_EdgeLoop_swiginit(self, _StepShape.new_StepShape_EdgeLoop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_EdgeLoop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_EdgeLoop
StepShape_EdgeLoop.EdgeList = new_instancemethod(_StepShape.StepShape_EdgeLoop_EdgeList, None, StepShape_EdgeLoop)
StepShape_EdgeLoop.EdgeListValue = new_instancemethod(_StepShape.StepShape_EdgeLoop_EdgeListValue, None, StepShape_EdgeLoop)
StepShape_EdgeLoop.Init = new_instancemethod(_StepShape.StepShape_EdgeLoop_Init, None, StepShape_EdgeLoop)
StepShape_EdgeLoop.NbEdgeList = new_instancemethod(_StepShape.StepShape_EdgeLoop_NbEdgeList, None, StepShape_EdgeLoop)
StepShape_EdgeLoop.SetEdgeList = new_instancemethod(_StepShape.StepShape_EdgeLoop_SetEdgeList, None, StepShape_EdgeLoop)
StepShape_EdgeLoop_swigregister = _StepShape.StepShape_EdgeLoop_swigregister
StepShape_EdgeLoop_swigregister(StepShape_EdgeLoop)

class StepShape_ExtrudedAreaSolid(StepShape_SweptAreaSolid):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Depth(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_ExtrudedAreaSolid_Depth(self, *args)


    def ExtrudedDirection(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepShape.StepShape_ExtrudedAreaSolid_ExtrudedDirection(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptArea:
        	:type aSweptArea: StepGeom_CurveBoundedSurface
        	:param aExtrudedDirection:
        	:type aExtrudedDirection: StepGeom_Direction
        	:param aDepth:
        	:type aDepth: float
        	:rtype: None
        """
        return _StepShape.StepShape_ExtrudedAreaSolid_Init(self, *args)


    def SetDepth(self, *args) -> "void":
        """
        :param aDepth:
        	:type aDepth: float
        	:rtype: None
        """
        return _StepShape.StepShape_ExtrudedAreaSolid_SetDepth(self, *args)


    def SetExtrudedDirection(self, *args) -> "void":
        """
        :param aExtrudedDirection:
        	:type aExtrudedDirection: StepGeom_Direction
        	:rtype: None
        """
        return _StepShape.StepShape_ExtrudedAreaSolid_SetExtrudedDirection(self, *args)


    def __init__(self, *args):
        """
        * Returns a ExtrudedAreaSolid
        	:rtype: None
        """
        _StepShape.StepShape_ExtrudedAreaSolid_swiginit(self, _StepShape.new_StepShape_ExtrudedAreaSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ExtrudedAreaSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ExtrudedAreaSolid
StepShape_ExtrudedAreaSolid.Depth = new_instancemethod(_StepShape.StepShape_ExtrudedAreaSolid_Depth, None, StepShape_ExtrudedAreaSolid)
StepShape_ExtrudedAreaSolid.ExtrudedDirection = new_instancemethod(_StepShape.StepShape_ExtrudedAreaSolid_ExtrudedDirection, None, StepShape_ExtrudedAreaSolid)
StepShape_ExtrudedAreaSolid.Init = new_instancemethod(_StepShape.StepShape_ExtrudedAreaSolid_Init, None, StepShape_ExtrudedAreaSolid)
StepShape_ExtrudedAreaSolid.SetDepth = new_instancemethod(_StepShape.StepShape_ExtrudedAreaSolid_SetDepth, None, StepShape_ExtrudedAreaSolid)
StepShape_ExtrudedAreaSolid.SetExtrudedDirection = new_instancemethod(_StepShape.StepShape_ExtrudedAreaSolid_SetExtrudedDirection, None, StepShape_ExtrudedAreaSolid)
StepShape_ExtrudedAreaSolid_swigregister = _StepShape.StepShape_ExtrudedAreaSolid_swigregister
StepShape_ExtrudedAreaSolid_swigregister(StepShape_ExtrudedAreaSolid)

class StepShape_ExtrudedFaceSolid(StepShape_SweptFaceSolid):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Depth(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_ExtrudedFaceSolid_Depth(self, *args)


    def ExtrudedDirection(self, *args) -> "opencascade::handle< StepGeom_Direction >":
        """:rtype: opencascade::handle<StepGeom_Direction>"""
        return _StepShape.StepShape_ExtrudedFaceSolid_ExtrudedDirection(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptArea:
        	:type aSweptArea: StepShape_FaceSurface
        	:param aExtrudedDirection:
        	:type aExtrudedDirection: StepGeom_Direction
        	:param aDepth:
        	:type aDepth: float
        	:rtype: None
        """
        return _StepShape.StepShape_ExtrudedFaceSolid_Init(self, *args)


    def SetDepth(self, *args) -> "void":
        """
        :param aDepth:
        	:type aDepth: float
        	:rtype: None
        """
        return _StepShape.StepShape_ExtrudedFaceSolid_SetDepth(self, *args)


    def SetExtrudedDirection(self, *args) -> "void":
        """
        :param aExtrudedDirection:
        	:type aExtrudedDirection: StepGeom_Direction
        	:rtype: None
        """
        return _StepShape.StepShape_ExtrudedFaceSolid_SetExtrudedDirection(self, *args)


    def __init__(self, *args):
        """
        * Returns a ExtrudedFaceSolid
        	:rtype: None
        """
        _StepShape.StepShape_ExtrudedFaceSolid_swiginit(self, _StepShape.new_StepShape_ExtrudedFaceSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ExtrudedFaceSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ExtrudedFaceSolid
StepShape_ExtrudedFaceSolid.Depth = new_instancemethod(_StepShape.StepShape_ExtrudedFaceSolid_Depth, None, StepShape_ExtrudedFaceSolid)
StepShape_ExtrudedFaceSolid.ExtrudedDirection = new_instancemethod(_StepShape.StepShape_ExtrudedFaceSolid_ExtrudedDirection, None, StepShape_ExtrudedFaceSolid)
StepShape_ExtrudedFaceSolid.Init = new_instancemethod(_StepShape.StepShape_ExtrudedFaceSolid_Init, None, StepShape_ExtrudedFaceSolid)
StepShape_ExtrudedFaceSolid.SetDepth = new_instancemethod(_StepShape.StepShape_ExtrudedFaceSolid_SetDepth, None, StepShape_ExtrudedFaceSolid)
StepShape_ExtrudedFaceSolid.SetExtrudedDirection = new_instancemethod(_StepShape.StepShape_ExtrudedFaceSolid_SetExtrudedDirection, None, StepShape_ExtrudedFaceSolid)
StepShape_ExtrudedFaceSolid_swigregister = _StepShape.StepShape_ExtrudedFaceSolid_swigregister
StepShape_ExtrudedFaceSolid_swigregister(StepShape_ExtrudedFaceSolid)

class StepShape_FaceOuterBound(StepShape_FaceBound):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a FaceOuterBound
        	:rtype: None
        """
        _StepShape.StepShape_FaceOuterBound_swiginit(self, _StepShape.new_StepShape_FaceOuterBound(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FaceOuterBound_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FaceOuterBound
StepShape_FaceOuterBound_swigregister = _StepShape.StepShape_FaceOuterBound_swigregister
StepShape_FaceOuterBound_swigregister(StepShape_FaceOuterBound)

class StepShape_FaceSurface(StepShape_Face):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FaceGeometry(self, *args) -> "opencascade::handle< StepGeom_Surface >":
        """:rtype: opencascade::handle<StepGeom_Surface>"""
        return _StepShape.StepShape_FaceSurface_FaceGeometry(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aBounds:
        	:type aBounds: StepShape_HArray1OfFaceBound
        	:param aFaceGeometry:
        	:type aFaceGeometry: StepGeom_Surface
        	:param aSameSense:
        	:type aSameSense: bool
        	:rtype: None
        """
        return _StepShape.StepShape_FaceSurface_Init(self, *args)


    def SameSense(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepShape.StepShape_FaceSurface_SameSense(self, *args)


    def SetFaceGeometry(self, *args) -> "void":
        """
        :param aFaceGeometry:
        	:type aFaceGeometry: StepGeom_Surface
        	:rtype: None
        """
        return _StepShape.StepShape_FaceSurface_SetFaceGeometry(self, *args)


    def SetSameSense(self, *args) -> "void":
        """
        :param aSameSense:
        	:type aSameSense: bool
        	:rtype: None
        """
        return _StepShape.StepShape_FaceSurface_SetSameSense(self, *args)


    def __init__(self, *args):
        """
        * Returns a FaceSurface
        	:rtype: None
        """
        _StepShape.StepShape_FaceSurface_swiginit(self, _StepShape.new_StepShape_FaceSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FaceSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FaceSurface
StepShape_FaceSurface.FaceGeometry = new_instancemethod(_StepShape.StepShape_FaceSurface_FaceGeometry, None, StepShape_FaceSurface)
StepShape_FaceSurface.Init = new_instancemethod(_StepShape.StepShape_FaceSurface_Init, None, StepShape_FaceSurface)
StepShape_FaceSurface.SameSense = new_instancemethod(_StepShape.StepShape_FaceSurface_SameSense, None, StepShape_FaceSurface)
StepShape_FaceSurface.SetFaceGeometry = new_instancemethod(_StepShape.StepShape_FaceSurface_SetFaceGeometry, None, StepShape_FaceSurface)
StepShape_FaceSurface.SetSameSense = new_instancemethod(_StepShape.StepShape_FaceSurface_SetSameSense, None, StepShape_FaceSurface)
StepShape_FaceSurface_swigregister = _StepShape.StepShape_FaceSurface_swigregister
StepShape_FaceSurface_swigregister(StepShape_FaceSurface)

class StepShape_FacetedBrep(StepShape_ManifoldSolidBrep):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a FacetedBrep
        	:rtype: None
        """
        _StepShape.StepShape_FacetedBrep_swiginit(self, _StepShape.new_StepShape_FacetedBrep(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FacetedBrep_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FacetedBrep
StepShape_FacetedBrep_swigregister = _StepShape.StepShape_FacetedBrep_swigregister
StepShape_FacetedBrep_swigregister(StepShape_FacetedBrep)

class StepShape_FacetedBrepAndBrepWithVoids(StepShape_ManifoldSolidBrep):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BrepWithVoids(self, *args) -> "opencascade::handle< StepShape_BrepWithVoids >":
        """:rtype: opencascade::handle<StepShape_BrepWithVoids>"""
        return _StepShape.StepShape_FacetedBrepAndBrepWithVoids_BrepWithVoids(self, *args)


    def FacetedBrep(self, *args) -> "opencascade::handle< StepShape_FacetedBrep >":
        """:rtype: opencascade::handle<StepShape_FacetedBrep>"""
        return _StepShape.StepShape_FacetedBrepAndBrepWithVoids_FacetedBrep(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aOuter:
        	:type aOuter: StepShape_ClosedShell
        	:param aFacetedBrep:
        	:type aFacetedBrep: StepShape_FacetedBrep
        	:param aBrepWithVoids:
        	:type aBrepWithVoids: StepShape_BrepWithVoids
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aOuter:
        	:type aOuter: StepShape_ClosedShell
        	:param aVoids:
        	:type aVoids: StepShape_HArray1OfOrientedClosedShell
        	:rtype: None
        """
        return _StepShape.StepShape_FacetedBrepAndBrepWithVoids_Init(self, *args)


    def NbVoids(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_FacetedBrepAndBrepWithVoids_NbVoids(self, *args)


    def SetBrepWithVoids(self, *args) -> "void":
        """
        :param aBrepWithVoids:
        	:type aBrepWithVoids: StepShape_BrepWithVoids
        	:rtype: None
        """
        return _StepShape.StepShape_FacetedBrepAndBrepWithVoids_SetBrepWithVoids(self, *args)


    def SetFacetedBrep(self, *args) -> "void":
        """
        :param aFacetedBrep:
        	:type aFacetedBrep: StepShape_FacetedBrep
        	:rtype: None
        """
        return _StepShape.StepShape_FacetedBrepAndBrepWithVoids_SetFacetedBrep(self, *args)


    def SetVoids(self, *args) -> "void":
        """
        :param aVoids:
        	:type aVoids: StepShape_HArray1OfOrientedClosedShell
        	:rtype: None
        """
        return _StepShape.StepShape_FacetedBrepAndBrepWithVoids_SetVoids(self, *args)


    def __init__(self, *args):
        """
        * Returns a FacetedBrepAndBrepWithVoids
        	:rtype: None
        """
        _StepShape.StepShape_FacetedBrepAndBrepWithVoids_swiginit(self, _StepShape.new_StepShape_FacetedBrepAndBrepWithVoids(*args))

    def Voids(self, *args) -> "opencascade::handle< StepShape_HArray1OfOrientedClosedShell >":
        """:rtype: opencascade::handle<StepShape_HArray1OfOrientedClosedShell>"""
        return _StepShape.StepShape_FacetedBrepAndBrepWithVoids_Voids(self, *args)


    def VoidsValue(self, *args) -> "opencascade::handle< StepShape_OrientedClosedShell >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepShape_OrientedClosedShell>
        """
        return _StepShape.StepShape_FacetedBrepAndBrepWithVoids_VoidsValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FacetedBrepAndBrepWithVoids_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FacetedBrepAndBrepWithVoids
StepShape_FacetedBrepAndBrepWithVoids.BrepWithVoids = new_instancemethod(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_BrepWithVoids, None, StepShape_FacetedBrepAndBrepWithVoids)
StepShape_FacetedBrepAndBrepWithVoids.FacetedBrep = new_instancemethod(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_FacetedBrep, None, StepShape_FacetedBrepAndBrepWithVoids)
StepShape_FacetedBrepAndBrepWithVoids.Init = new_instancemethod(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_Init, None, StepShape_FacetedBrepAndBrepWithVoids)
StepShape_FacetedBrepAndBrepWithVoids.NbVoids = new_instancemethod(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_NbVoids, None, StepShape_FacetedBrepAndBrepWithVoids)
StepShape_FacetedBrepAndBrepWithVoids.SetBrepWithVoids = new_instancemethod(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_SetBrepWithVoids, None, StepShape_FacetedBrepAndBrepWithVoids)
StepShape_FacetedBrepAndBrepWithVoids.SetFacetedBrep = new_instancemethod(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_SetFacetedBrep, None, StepShape_FacetedBrepAndBrepWithVoids)
StepShape_FacetedBrepAndBrepWithVoids.SetVoids = new_instancemethod(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_SetVoids, None, StepShape_FacetedBrepAndBrepWithVoids)
StepShape_FacetedBrepAndBrepWithVoids.Voids = new_instancemethod(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_Voids, None, StepShape_FacetedBrepAndBrepWithVoids)
StepShape_FacetedBrepAndBrepWithVoids.VoidsValue = new_instancemethod(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_VoidsValue, None, StepShape_FacetedBrepAndBrepWithVoids)
StepShape_FacetedBrepAndBrepWithVoids_swigregister = _StepShape.StepShape_FacetedBrepAndBrepWithVoids_swigregister
StepShape_FacetedBrepAndBrepWithVoids_swigregister(StepShape_FacetedBrepAndBrepWithVoids)

class StepShape_OpenShell(StepShape_ConnectedFaceSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a OpenShell
        	:rtype: None
        """
        _StepShape.StepShape_OpenShell_swiginit(self, _StepShape.new_StepShape_OpenShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OpenShell_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OpenShell
StepShape_OpenShell_swigregister = _StepShape.StepShape_OpenShell_swigregister
StepShape_OpenShell_swigregister(StepShape_OpenShell)

class StepShape_OrientedEdge(StepShape_Edge):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EdgeElement(self, *args) -> "opencascade::handle< StepShape_Edge >":
        """:rtype: opencascade::handle<StepShape_Edge>"""
        return _StepShape.StepShape_OrientedEdge_EdgeElement(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aEdgeElement:
        	:type aEdgeElement: StepShape_Edge
        	:param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedEdge_Init(self, *args)


    def Orientation(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepShape.StepShape_OrientedEdge_Orientation(self, *args)


    def SetEdgeElement(self, *args) -> "void":
        """
        :param aEdgeElement:
        	:type aEdgeElement: StepShape_Edge
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedEdge_SetEdgeElement(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        :param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedEdge_SetOrientation(self, *args)


    def __init__(self, *args):
        """
        * Returns a OrientedEdge
        	:rtype: None
        """
        _StepShape.StepShape_OrientedEdge_swiginit(self, _StepShape.new_StepShape_OrientedEdge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedEdge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedEdge
StepShape_OrientedEdge.EdgeElement = new_instancemethod(_StepShape.StepShape_OrientedEdge_EdgeElement, None, StepShape_OrientedEdge)
StepShape_OrientedEdge.Init = new_instancemethod(_StepShape.StepShape_OrientedEdge_Init, None, StepShape_OrientedEdge)
StepShape_OrientedEdge.Orientation = new_instancemethod(_StepShape.StepShape_OrientedEdge_Orientation, None, StepShape_OrientedEdge)
StepShape_OrientedEdge.SetEdgeElement = new_instancemethod(_StepShape.StepShape_OrientedEdge_SetEdgeElement, None, StepShape_OrientedEdge)
StepShape_OrientedEdge.SetOrientation = new_instancemethod(_StepShape.StepShape_OrientedEdge_SetOrientation, None, StepShape_OrientedEdge)
StepShape_OrientedEdge_swigregister = _StepShape.StepShape_OrientedEdge_swigregister
StepShape_OrientedEdge_swigregister(StepShape_OrientedEdge)

class StepShape_OrientedFace(StepShape_Face):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FaceElement(self, *args) -> "opencascade::handle< StepShape_Face >":
        """:rtype: opencascade::handle<StepShape_Face>"""
        return _StepShape.StepShape_OrientedFace_FaceElement(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aFaceElement:
        	:type aFaceElement: StepShape_Face
        	:param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedFace_Init(self, *args)


    def Orientation(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepShape.StepShape_OrientedFace_Orientation(self, *args)


    def SetFaceElement(self, *args) -> "void":
        """
        :param aFaceElement:
        	:type aFaceElement: StepShape_Face
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedFace_SetFaceElement(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        :param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedFace_SetOrientation(self, *args)


    def __init__(self, *args):
        """
        * Returns a OrientedFace
        	:rtype: None
        """
        _StepShape.StepShape_OrientedFace_swiginit(self, _StepShape.new_StepShape_OrientedFace(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedFace_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedFace
StepShape_OrientedFace.FaceElement = new_instancemethod(_StepShape.StepShape_OrientedFace_FaceElement, None, StepShape_OrientedFace)
StepShape_OrientedFace.Init = new_instancemethod(_StepShape.StepShape_OrientedFace_Init, None, StepShape_OrientedFace)
StepShape_OrientedFace.Orientation = new_instancemethod(_StepShape.StepShape_OrientedFace_Orientation, None, StepShape_OrientedFace)
StepShape_OrientedFace.SetFaceElement = new_instancemethod(_StepShape.StepShape_OrientedFace_SetFaceElement, None, StepShape_OrientedFace)
StepShape_OrientedFace.SetOrientation = new_instancemethod(_StepShape.StepShape_OrientedFace_SetOrientation, None, StepShape_OrientedFace)
StepShape_OrientedFace_swigregister = _StepShape.StepShape_OrientedFace_swigregister
StepShape_OrientedFace_swigregister(StepShape_OrientedFace)

class StepShape_OrientedPath(StepShape_Path):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPathElement:
        	:type aPathElement: StepShape_EdgeLoop
        	:param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedPath_Init(self, *args)


    def Orientation(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepShape.StepShape_OrientedPath_Orientation(self, *args)


    def PathElement(self, *args) -> "opencascade::handle< StepShape_EdgeLoop >":
        """:rtype: opencascade::handle<StepShape_EdgeLoop>"""
        return _StepShape.StepShape_OrientedPath_PathElement(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        :param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedPath_SetOrientation(self, *args)


    def SetPathElement(self, *args) -> "void":
        """
        :param aPathElement:
        	:type aPathElement: StepShape_EdgeLoop
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedPath_SetPathElement(self, *args)


    def __init__(self, *args):
        """
        * Returns a OrientedPath
        	:rtype: None
        """
        _StepShape.StepShape_OrientedPath_swiginit(self, _StepShape.new_StepShape_OrientedPath(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedPath_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedPath
StepShape_OrientedPath.Init = new_instancemethod(_StepShape.StepShape_OrientedPath_Init, None, StepShape_OrientedPath)
StepShape_OrientedPath.Orientation = new_instancemethod(_StepShape.StepShape_OrientedPath_Orientation, None, StepShape_OrientedPath)
StepShape_OrientedPath.PathElement = new_instancemethod(_StepShape.StepShape_OrientedPath_PathElement, None, StepShape_OrientedPath)
StepShape_OrientedPath.SetOrientation = new_instancemethod(_StepShape.StepShape_OrientedPath_SetOrientation, None, StepShape_OrientedPath)
StepShape_OrientedPath.SetPathElement = new_instancemethod(_StepShape.StepShape_OrientedPath_SetPathElement, None, StepShape_OrientedPath)
StepShape_OrientedPath_swigregister = _StepShape.StepShape_OrientedPath_swigregister
StepShape_OrientedPath_swigregister(StepShape_OrientedPath)

class StepShape_PolyLoop(StepShape_Loop):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPolygon:
        	:type aPolygon: StepGeom_HArray1OfCartesianPoint
        	:rtype: None
        """
        return _StepShape.StepShape_PolyLoop_Init(self, *args)


    def NbPolygon(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepShape.StepShape_PolyLoop_NbPolygon(self, *args)


    def Polygon(self, *args) -> "opencascade::handle< StepGeom_HArray1OfCartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_HArray1OfCartesianPoint>"""
        return _StepShape.StepShape_PolyLoop_Polygon(self, *args)


    def PolygonValue(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepGeom_CartesianPoint>
        """
        return _StepShape.StepShape_PolyLoop_PolygonValue(self, *args)


    def SetPolygon(self, *args) -> "void":
        """
        :param aPolygon:
        	:type aPolygon: StepGeom_HArray1OfCartesianPoint
        	:rtype: None
        """
        return _StepShape.StepShape_PolyLoop_SetPolygon(self, *args)


    def __init__(self, *args):
        """
        * Returns a PolyLoop
        	:rtype: None
        """
        _StepShape.StepShape_PolyLoop_swiginit(self, _StepShape.new_StepShape_PolyLoop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_PolyLoop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_PolyLoop
StepShape_PolyLoop.Init = new_instancemethod(_StepShape.StepShape_PolyLoop_Init, None, StepShape_PolyLoop)
StepShape_PolyLoop.NbPolygon = new_instancemethod(_StepShape.StepShape_PolyLoop_NbPolygon, None, StepShape_PolyLoop)
StepShape_PolyLoop.Polygon = new_instancemethod(_StepShape.StepShape_PolyLoop_Polygon, None, StepShape_PolyLoop)
StepShape_PolyLoop.PolygonValue = new_instancemethod(_StepShape.StepShape_PolyLoop_PolygonValue, None, StepShape_PolyLoop)
StepShape_PolyLoop.SetPolygon = new_instancemethod(_StepShape.StepShape_PolyLoop_SetPolygon, None, StepShape_PolyLoop)
StepShape_PolyLoop_swigregister = _StepShape.StepShape_PolyLoop_swigregister
StepShape_PolyLoop_swigregister(StepShape_PolyLoop)

class StepShape_RevolvedAreaSolid(StepShape_SweptAreaSolid):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Angle(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RevolvedAreaSolid_Angle(self, *args)


    def Axis(self, *args) -> "opencascade::handle< StepGeom_Axis1Placement >":
        """:rtype: opencascade::handle<StepGeom_Axis1Placement>"""
        return _StepShape.StepShape_RevolvedAreaSolid_Axis(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptArea:
        	:type aSweptArea: StepGeom_CurveBoundedSurface
        	:param aAxis:
        	:type aAxis: StepGeom_Axis1Placement
        	:param aAngle:
        	:type aAngle: float
        	:rtype: None
        """
        return _StepShape.StepShape_RevolvedAreaSolid_Init(self, *args)


    def SetAngle(self, *args) -> "void":
        """
        :param aAngle:
        	:type aAngle: float
        	:rtype: None
        """
        return _StepShape.StepShape_RevolvedAreaSolid_SetAngle(self, *args)


    def SetAxis(self, *args) -> "void":
        """
        :param aAxis:
        	:type aAxis: StepGeom_Axis1Placement
        	:rtype: None
        """
        return _StepShape.StepShape_RevolvedAreaSolid_SetAxis(self, *args)


    def __init__(self, *args):
        """
        * Returns a RevolvedAreaSolid
        	:rtype: None
        """
        _StepShape.StepShape_RevolvedAreaSolid_swiginit(self, _StepShape.new_StepShape_RevolvedAreaSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RevolvedAreaSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RevolvedAreaSolid
StepShape_RevolvedAreaSolid.Angle = new_instancemethod(_StepShape.StepShape_RevolvedAreaSolid_Angle, None, StepShape_RevolvedAreaSolid)
StepShape_RevolvedAreaSolid.Axis = new_instancemethod(_StepShape.StepShape_RevolvedAreaSolid_Axis, None, StepShape_RevolvedAreaSolid)
StepShape_RevolvedAreaSolid.Init = new_instancemethod(_StepShape.StepShape_RevolvedAreaSolid_Init, None, StepShape_RevolvedAreaSolid)
StepShape_RevolvedAreaSolid.SetAngle = new_instancemethod(_StepShape.StepShape_RevolvedAreaSolid_SetAngle, None, StepShape_RevolvedAreaSolid)
StepShape_RevolvedAreaSolid.SetAxis = new_instancemethod(_StepShape.StepShape_RevolvedAreaSolid_SetAxis, None, StepShape_RevolvedAreaSolid)
StepShape_RevolvedAreaSolid_swigregister = _StepShape.StepShape_RevolvedAreaSolid_swigregister
StepShape_RevolvedAreaSolid_swigregister(StepShape_RevolvedAreaSolid)

class StepShape_RevolvedFaceSolid(StepShape_SweptFaceSolid):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Angle(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepShape.StepShape_RevolvedFaceSolid_Angle(self, *args)


    def Axis(self, *args) -> "opencascade::handle< StepGeom_Axis1Placement >":
        """:rtype: opencascade::handle<StepGeom_Axis1Placement>"""
        return _StepShape.StepShape_RevolvedFaceSolid_Axis(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptArea:
        	:type aSweptArea: StepShape_FaceSurface
        	:rtype: None
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSweptArea:
        	:type aSweptArea: StepShape_FaceSurface
        	:param aAxis:
        	:type aAxis: StepGeom_Axis1Placement
        	:param aAngle:
        	:type aAngle: float
        	:rtype: None
        """
        return _StepShape.StepShape_RevolvedFaceSolid_Init(self, *args)


    def SetAngle(self, *args) -> "void":
        """
        :param aAngle:
        	:type aAngle: float
        	:rtype: None
        """
        return _StepShape.StepShape_RevolvedFaceSolid_SetAngle(self, *args)


    def SetAxis(self, *args) -> "void":
        """
        :param aAxis:
        	:type aAxis: StepGeom_Axis1Placement
        	:rtype: None
        """
        return _StepShape.StepShape_RevolvedFaceSolid_SetAxis(self, *args)


    def __init__(self, *args):
        """
        * Returns a RevolvedFaceSolid
        	:rtype: None
        """
        _StepShape.StepShape_RevolvedFaceSolid_swiginit(self, _StepShape.new_StepShape_RevolvedFaceSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RevolvedFaceSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RevolvedFaceSolid
StepShape_RevolvedFaceSolid.Angle = new_instancemethod(_StepShape.StepShape_RevolvedFaceSolid_Angle, None, StepShape_RevolvedFaceSolid)
StepShape_RevolvedFaceSolid.Axis = new_instancemethod(_StepShape.StepShape_RevolvedFaceSolid_Axis, None, StepShape_RevolvedFaceSolid)
StepShape_RevolvedFaceSolid.Init = new_instancemethod(_StepShape.StepShape_RevolvedFaceSolid_Init, None, StepShape_RevolvedFaceSolid)
StepShape_RevolvedFaceSolid.SetAngle = new_instancemethod(_StepShape.StepShape_RevolvedFaceSolid_SetAngle, None, StepShape_RevolvedFaceSolid)
StepShape_RevolvedFaceSolid.SetAxis = new_instancemethod(_StepShape.StepShape_RevolvedFaceSolid_SetAxis, None, StepShape_RevolvedFaceSolid)
StepShape_RevolvedFaceSolid_swigregister = _StepShape.StepShape_RevolvedFaceSolid_swigregister
StepShape_RevolvedFaceSolid_swigregister(StepShape_RevolvedFaceSolid)

class StepShape_Subedge(StepShape_Edge):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aEdge_EdgeStart:
        	:type aEdge_EdgeStart: StepShape_Vertex
        	:param aEdge_EdgeEnd:
        	:type aEdge_EdgeEnd: StepShape_Vertex
        	:param aParentEdge:
        	:type aParentEdge: StepShape_Edge
        	:rtype: None
        """
        return _StepShape.StepShape_Subedge_Init(self, *args)


    def ParentEdge(self, *args) -> "opencascade::handle< StepShape_Edge >":
        """
        * Returns field ParentEdge
        	:rtype: opencascade::handle<StepShape_Edge>
        """
        return _StepShape.StepShape_Subedge_ParentEdge(self, *args)


    def SetParentEdge(self, *args) -> "void":
        """
        * Set field ParentEdge
        	:param ParentEdge:
        	:type ParentEdge: StepShape_Edge
        	:rtype: None
        """
        return _StepShape.StepShape_Subedge_SetParentEdge(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_Subedge_swiginit(self, _StepShape.new_StepShape_Subedge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Subedge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Subedge
StepShape_Subedge.Init = new_instancemethod(_StepShape.StepShape_Subedge_Init, None, StepShape_Subedge)
StepShape_Subedge.ParentEdge = new_instancemethod(_StepShape.StepShape_Subedge_ParentEdge, None, StepShape_Subedge)
StepShape_Subedge.SetParentEdge = new_instancemethod(_StepShape.StepShape_Subedge_SetParentEdge, None, StepShape_Subedge)
StepShape_Subedge_swigregister = _StepShape.StepShape_Subedge_swigregister
StepShape_Subedge_swigregister(StepShape_Subedge)

class StepShape_Subface(StepShape_Face):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aFace_Bounds:
        	:type aFace_Bounds: StepShape_HArray1OfFaceBound
        	:param aParentFace:
        	:type aParentFace: StepShape_Face
        	:rtype: None
        """
        return _StepShape.StepShape_Subface_Init(self, *args)


    def ParentFace(self, *args) -> "opencascade::handle< StepShape_Face >":
        """
        * Returns field ParentFace
        	:rtype: opencascade::handle<StepShape_Face>
        """
        return _StepShape.StepShape_Subface_ParentFace(self, *args)


    def SetParentFace(self, *args) -> "void":
        """
        * Set field ParentFace
        	:param ParentFace:
        	:type ParentFace: StepShape_Face
        	:rtype: None
        """
        return _StepShape.StepShape_Subface_SetParentFace(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_Subface_swiginit(self, _StepShape.new_StepShape_Subface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Subface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Subface
StepShape_Subface.Init = new_instancemethod(_StepShape.StepShape_Subface_Init, None, StepShape_Subface)
StepShape_Subface.ParentFace = new_instancemethod(_StepShape.StepShape_Subface_ParentFace, None, StepShape_Subface)
StepShape_Subface.SetParentFace = new_instancemethod(_StepShape.StepShape_Subface_SetParentFace, None, StepShape_Subface)
StepShape_Subface_swigregister = _StepShape.StepShape_Subface_swigregister
StepShape_Subface_swigregister(StepShape_Subface)

class StepShape_VertexLoop(StepShape_Loop):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aLoopVertex:
        	:type aLoopVertex: StepShape_Vertex
        	:rtype: None
        """
        return _StepShape.StepShape_VertexLoop_Init(self, *args)


    def LoopVertex(self, *args) -> "opencascade::handle< StepShape_Vertex >":
        """:rtype: opencascade::handle<StepShape_Vertex>"""
        return _StepShape.StepShape_VertexLoop_LoopVertex(self, *args)


    def SetLoopVertex(self, *args) -> "void":
        """
        :param aLoopVertex:
        	:type aLoopVertex: StepShape_Vertex
        	:rtype: None
        """
        return _StepShape.StepShape_VertexLoop_SetLoopVertex(self, *args)


    def __init__(self, *args):
        """
        * Returns a VertexLoop
        	:rtype: None
        """
        _StepShape.StepShape_VertexLoop_swiginit(self, _StepShape.new_StepShape_VertexLoop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_VertexLoop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_VertexLoop
StepShape_VertexLoop.Init = new_instancemethod(_StepShape.StepShape_VertexLoop_Init, None, StepShape_VertexLoop)
StepShape_VertexLoop.LoopVertex = new_instancemethod(_StepShape.StepShape_VertexLoop_LoopVertex, None, StepShape_VertexLoop)
StepShape_VertexLoop.SetLoopVertex = new_instancemethod(_StepShape.StepShape_VertexLoop_SetLoopVertex, None, StepShape_VertexLoop)
StepShape_VertexLoop_swigregister = _StepShape.StepShape_VertexLoop_swigregister
StepShape_VertexLoop_swigregister(StepShape_VertexLoop)

class StepShape_VertexPoint(StepShape_Vertex):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aVertexGeometry:
        	:type aVertexGeometry: StepGeom_Point
        	:rtype: None
        """
        return _StepShape.StepShape_VertexPoint_Init(self, *args)


    def SetVertexGeometry(self, *args) -> "void":
        """
        :param aVertexGeometry:
        	:type aVertexGeometry: StepGeom_Point
        	:rtype: None
        """
        return _StepShape.StepShape_VertexPoint_SetVertexGeometry(self, *args)


    def __init__(self, *args):
        """
        * Returns a VertexPoint
        	:rtype: None
        """
        _StepShape.StepShape_VertexPoint_swiginit(self, _StepShape.new_StepShape_VertexPoint(*args))

    def VertexGeometry(self, *args) -> "opencascade::handle< StepGeom_Point >":
        """:rtype: opencascade::handle<StepGeom_Point>"""
        return _StepShape.StepShape_VertexPoint_VertexGeometry(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepShape_VertexPoint_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_VertexPoint
StepShape_VertexPoint.Init = new_instancemethod(_StepShape.StepShape_VertexPoint_Init, None, StepShape_VertexPoint)
StepShape_VertexPoint.SetVertexGeometry = new_instancemethod(_StepShape.StepShape_VertexPoint_SetVertexGeometry, None, StepShape_VertexPoint)
StepShape_VertexPoint.VertexGeometry = new_instancemethod(_StepShape.StepShape_VertexPoint_VertexGeometry, None, StepShape_VertexPoint)
StepShape_VertexPoint_swigregister = _StepShape.StepShape_VertexPoint_swigregister
StepShape_VertexPoint_swigregister(StepShape_VertexPoint)

class StepShape_AdvancedFace(StepShape_FaceSurface):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a AdvancedFace
        	:rtype: None
        """
        _StepShape.StepShape_AdvancedFace_swiginit(self, _StepShape.new_StepShape_AdvancedFace(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_AdvancedFace_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_AdvancedFace
StepShape_AdvancedFace_swigregister = _StepShape.StepShape_AdvancedFace_swigregister
StepShape_AdvancedFace_swigregister(StepShape_AdvancedFace)

class StepShape_OrientedClosedShell(StepShape_ClosedShell):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ClosedShellElement(self, *args) -> "opencascade::handle< StepShape_ClosedShell >":
        """:rtype: opencascade::handle<StepShape_ClosedShell>"""
        return _StepShape.StepShape_OrientedClosedShell_ClosedShellElement(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aClosedShellElement:
        	:type aClosedShellElement: StepShape_ClosedShell
        	:param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedClosedShell_Init(self, *args)


    def Orientation(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepShape.StepShape_OrientedClosedShell_Orientation(self, *args)


    def SetClosedShellElement(self, *args) -> "void":
        """
        :param aClosedShellElement:
        	:type aClosedShellElement: StepShape_ClosedShell
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedClosedShell_SetClosedShellElement(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        :param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedClosedShell_SetOrientation(self, *args)


    def __init__(self, *args):
        """
        * Returns a OrientedClosedShell
        	:rtype: None
        """
        _StepShape.StepShape_OrientedClosedShell_swiginit(self, _StepShape.new_StepShape_OrientedClosedShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedClosedShell_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedClosedShell
StepShape_OrientedClosedShell.ClosedShellElement = new_instancemethod(_StepShape.StepShape_OrientedClosedShell_ClosedShellElement, None, StepShape_OrientedClosedShell)
StepShape_OrientedClosedShell.Init = new_instancemethod(_StepShape.StepShape_OrientedClosedShell_Init, None, StepShape_OrientedClosedShell)
StepShape_OrientedClosedShell.Orientation = new_instancemethod(_StepShape.StepShape_OrientedClosedShell_Orientation, None, StepShape_OrientedClosedShell)
StepShape_OrientedClosedShell.SetClosedShellElement = new_instancemethod(_StepShape.StepShape_OrientedClosedShell_SetClosedShellElement, None, StepShape_OrientedClosedShell)
StepShape_OrientedClosedShell.SetOrientation = new_instancemethod(_StepShape.StepShape_OrientedClosedShell_SetOrientation, None, StepShape_OrientedClosedShell)
StepShape_OrientedClosedShell_swigregister = _StepShape.StepShape_OrientedClosedShell_swigregister
StepShape_OrientedClosedShell_swigregister(StepShape_OrientedClosedShell)

class StepShape_OrientedOpenShell(StepShape_OpenShell):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aOpenShellElement:
        	:type aOpenShellElement: StepShape_OpenShell
        	:param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedOpenShell_Init(self, *args)


    def OpenShellElement(self, *args) -> "opencascade::handle< StepShape_OpenShell >":
        """:rtype: opencascade::handle<StepShape_OpenShell>"""
        return _StepShape.StepShape_OrientedOpenShell_OpenShellElement(self, *args)


    def Orientation(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepShape.StepShape_OrientedOpenShell_Orientation(self, *args)


    def SetOpenShellElement(self, *args) -> "void":
        """
        :param aOpenShellElement:
        	:type aOpenShellElement: StepShape_OpenShell
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedOpenShell_SetOpenShellElement(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        :param aOrientation:
        	:type aOrientation: bool
        	:rtype: None
        """
        return _StepShape.StepShape_OrientedOpenShell_SetOrientation(self, *args)


    def __init__(self, *args):
        """
        * Returns a OrientedOpenShell
        	:rtype: None
        """
        _StepShape.StepShape_OrientedOpenShell_swiginit(self, _StepShape.new_StepShape_OrientedOpenShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedOpenShell_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedOpenShell
StepShape_OrientedOpenShell.Init = new_instancemethod(_StepShape.StepShape_OrientedOpenShell_Init, None, StepShape_OrientedOpenShell)
StepShape_OrientedOpenShell.OpenShellElement = new_instancemethod(_StepShape.StepShape_OrientedOpenShell_OpenShellElement, None, StepShape_OrientedOpenShell)
StepShape_OrientedOpenShell.Orientation = new_instancemethod(_StepShape.StepShape_OrientedOpenShell_Orientation, None, StepShape_OrientedOpenShell)
StepShape_OrientedOpenShell.SetOpenShellElement = new_instancemethod(_StepShape.StepShape_OrientedOpenShell_SetOpenShellElement, None, StepShape_OrientedOpenShell)
StepShape_OrientedOpenShell.SetOrientation = new_instancemethod(_StepShape.StepShape_OrientedOpenShell_SetOrientation, None, StepShape_OrientedOpenShell)
StepShape_OrientedOpenShell_swigregister = _StepShape.StepShape_OrientedOpenShell_swigregister
StepShape_OrientedOpenShell_swigregister(StepShape_OrientedOpenShell)

class StepShape_SeamEdge(StepShape_OrientedEdge):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param aRepresentationItem_Name:
        	:type aRepresentationItem_Name: TCollection_HAsciiString
        	:param aOrientedEdge_EdgeElement:
        	:type aOrientedEdge_EdgeElement: StepShape_Edge
        	:param aOrientedEdge_Orientation:
        	:type aOrientedEdge_Orientation: bool
        	:param aPcurveReference:
        	:type aPcurveReference: StepGeom_Pcurve
        	:rtype: None
        """
        return _StepShape.StepShape_SeamEdge_Init(self, *args)


    def PcurveReference(self, *args) -> "opencascade::handle< StepGeom_Pcurve >":
        """
        * Returns field PcurveReference
        	:rtype: opencascade::handle<StepGeom_Pcurve>
        """
        return _StepShape.StepShape_SeamEdge_PcurveReference(self, *args)


    def SetPcurveReference(self, *args) -> "void":
        """
        * Set field PcurveReference
        	:param PcurveReference:
        	:type PcurveReference: StepGeom_Pcurve
        	:rtype: None
        """
        return _StepShape.StepShape_SeamEdge_SetPcurveReference(self, *args)


    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_SeamEdge_swiginit(self, _StepShape.new_StepShape_SeamEdge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SeamEdge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SeamEdge
StepShape_SeamEdge.Init = new_instancemethod(_StepShape.StepShape_SeamEdge_Init, None, StepShape_SeamEdge)
StepShape_SeamEdge.PcurveReference = new_instancemethod(_StepShape.StepShape_SeamEdge_PcurveReference, None, StepShape_SeamEdge)
StepShape_SeamEdge.SetPcurveReference = new_instancemethod(_StepShape.StepShape_SeamEdge_SetPcurveReference, None, StepShape_SeamEdge)
StepShape_SeamEdge_swigregister = _StepShape.StepShape_SeamEdge_swigregister
StepShape_SeamEdge_swigregister(StepShape_SeamEdge)

class StepShape_HArray1OfConnectedEdgeSet(StepShape_Array1OfConnectedEdgeSet, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfConnectedEdgeSet_swiginit(self, _StepShape.new_StepShape_HArray1OfConnectedEdgeSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfConnectedEdgeSet_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfConnectedEdgeSet
StepShape_HArray1OfConnectedEdgeSet.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfConnectedEdgeSet_Array1, None, StepShape_HArray1OfConnectedEdgeSet)
StepShape_HArray1OfConnectedEdgeSet.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfConnectedEdgeSet_ChangeArray1, None, StepShape_HArray1OfConnectedEdgeSet)
StepShape_HArray1OfConnectedEdgeSet_swigregister = _StepShape.StepShape_HArray1OfConnectedEdgeSet_swigregister
StepShape_HArray1OfConnectedEdgeSet_swigregister(StepShape_HArray1OfConnectedEdgeSet)

class StepShape_HArray1OfFaceBound(StepShape_Array1OfFaceBound, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfFaceBound_swiginit(self, _StepShape.new_StepShape_HArray1OfFaceBound(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfFaceBound_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfFaceBound
StepShape_HArray1OfFaceBound.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfFaceBound_Array1, None, StepShape_HArray1OfFaceBound)
StepShape_HArray1OfFaceBound.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfFaceBound_ChangeArray1, None, StepShape_HArray1OfFaceBound)
StepShape_HArray1OfFaceBound_swigregister = _StepShape.StepShape_HArray1OfFaceBound_swigregister
StepShape_HArray1OfFaceBound_swigregister(StepShape_HArray1OfFaceBound)

class StepShape_HArray1OfGeometricSetSelect(StepShape_Array1OfGeometricSetSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfGeometricSetSelect_swiginit(self, _StepShape.new_StepShape_HArray1OfGeometricSetSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfGeometricSetSelect_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfGeometricSetSelect
StepShape_HArray1OfGeometricSetSelect.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfGeometricSetSelect_Array1, None, StepShape_HArray1OfGeometricSetSelect)
StepShape_HArray1OfGeometricSetSelect.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfGeometricSetSelect_ChangeArray1, None, StepShape_HArray1OfGeometricSetSelect)
StepShape_HArray1OfGeometricSetSelect_swigregister = _StepShape.StepShape_HArray1OfGeometricSetSelect_swigregister
StepShape_HArray1OfGeometricSetSelect_swigregister(StepShape_HArray1OfGeometricSetSelect)

class StepShape_HArray1OfConnectedFaceSet(StepShape_Array1OfConnectedFaceSet, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfConnectedFaceSet_swiginit(self, _StepShape.new_StepShape_HArray1OfConnectedFaceSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfConnectedFaceSet_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfConnectedFaceSet
StepShape_HArray1OfConnectedFaceSet.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfConnectedFaceSet_Array1, None, StepShape_HArray1OfConnectedFaceSet)
StepShape_HArray1OfConnectedFaceSet.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfConnectedFaceSet_ChangeArray1, None, StepShape_HArray1OfConnectedFaceSet)
StepShape_HArray1OfConnectedFaceSet_swigregister = _StepShape.StepShape_HArray1OfConnectedFaceSet_swigregister
StepShape_HArray1OfConnectedFaceSet_swigregister(StepShape_HArray1OfConnectedFaceSet)

class StepShape_HArray1OfEdge(StepShape_Array1OfEdge, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfEdge_swiginit(self, _StepShape.new_StepShape_HArray1OfEdge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfEdge_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfEdge
StepShape_HArray1OfEdge.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfEdge_Array1, None, StepShape_HArray1OfEdge)
StepShape_HArray1OfEdge.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfEdge_ChangeArray1, None, StepShape_HArray1OfEdge)
StepShape_HArray1OfEdge_swigregister = _StepShape.StepShape_HArray1OfEdge_swigregister
StepShape_HArray1OfEdge_swigregister(StepShape_HArray1OfEdge)

class StepShape_HArray1OfFace(StepShape_Array1OfFace, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfFace_swiginit(self, _StepShape.new_StepShape_HArray1OfFace(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfFace_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfFace
StepShape_HArray1OfFace.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfFace_Array1, None, StepShape_HArray1OfFace)
StepShape_HArray1OfFace.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfFace_ChangeArray1, None, StepShape_HArray1OfFace)
StepShape_HArray1OfFace_swigregister = _StepShape.StepShape_HArray1OfFace_swigregister
StepShape_HArray1OfFace_swigregister(StepShape_HArray1OfFace)

class StepShape_HArray1OfShapeDimensionRepresentationItem(StepShape_Array1OfShapeDimensionRepresentationItem, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfShapeDimensionRepresentationItem_swiginit(self, _StepShape.new_StepShape_HArray1OfShapeDimensionRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfShapeDimensionRepresentationItem
StepShape_HArray1OfShapeDimensionRepresentationItem.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfShapeDimensionRepresentationItem_Array1, None, StepShape_HArray1OfShapeDimensionRepresentationItem)
StepShape_HArray1OfShapeDimensionRepresentationItem.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfShapeDimensionRepresentationItem_ChangeArray1, None, StepShape_HArray1OfShapeDimensionRepresentationItem)
StepShape_HArray1OfShapeDimensionRepresentationItem_swigregister = _StepShape.StepShape_HArray1OfShapeDimensionRepresentationItem_swigregister
StepShape_HArray1OfShapeDimensionRepresentationItem_swigregister(StepShape_HArray1OfShapeDimensionRepresentationItem)

class StepShape_HArray1OfValueQualifier(StepShape_Array1OfValueQualifier, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfValueQualifier_swiginit(self, _StepShape.new_StepShape_HArray1OfValueQualifier(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfValueQualifier_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfValueQualifier
StepShape_HArray1OfValueQualifier.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfValueQualifier_Array1, None, StepShape_HArray1OfValueQualifier)
StepShape_HArray1OfValueQualifier.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfValueQualifier_ChangeArray1, None, StepShape_HArray1OfValueQualifier)
StepShape_HArray1OfValueQualifier_swigregister = _StepShape.StepShape_HArray1OfValueQualifier_swigregister
StepShape_HArray1OfValueQualifier_swigregister(StepShape_HArray1OfValueQualifier)

class StepShape_HArray1OfShell(StepShape_Array1OfShell, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfShell_swiginit(self, _StepShape.new_StepShape_HArray1OfShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfShell_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfShell
StepShape_HArray1OfShell.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfShell_Array1, None, StepShape_HArray1OfShell)
StepShape_HArray1OfShell.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfShell_ChangeArray1, None, StepShape_HArray1OfShell)
StepShape_HArray1OfShell_swigregister = _StepShape.StepShape_HArray1OfShell_swigregister
StepShape_HArray1OfShell_swigregister(StepShape_HArray1OfShell)

class StepShape_HArray1OfOrientedClosedShell(StepShape_Array1OfOrientedClosedShell, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfOrientedClosedShell_swiginit(self, _StepShape.new_StepShape_HArray1OfOrientedClosedShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfOrientedClosedShell_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfOrientedClosedShell
StepShape_HArray1OfOrientedClosedShell.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfOrientedClosedShell_Array1, None, StepShape_HArray1OfOrientedClosedShell)
StepShape_HArray1OfOrientedClosedShell.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfOrientedClosedShell_ChangeArray1, None, StepShape_HArray1OfOrientedClosedShell)
StepShape_HArray1OfOrientedClosedShell_swigregister = _StepShape.StepShape_HArray1OfOrientedClosedShell_swigregister
StepShape_HArray1OfOrientedClosedShell_swigregister(StepShape_HArray1OfOrientedClosedShell)

class StepShape_HArray1OfOrientedEdge(StepShape_Array1OfOrientedEdge, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfOrientedEdge_swiginit(self, _StepShape.new_StepShape_HArray1OfOrientedEdge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfOrientedEdge_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfOrientedEdge
StepShape_HArray1OfOrientedEdge.Array1 = new_instancemethod(_StepShape.StepShape_HArray1OfOrientedEdge_Array1, None, StepShape_HArray1OfOrientedEdge)
StepShape_HArray1OfOrientedEdge.ChangeArray1 = new_instancemethod(_StepShape.StepShape_HArray1OfOrientedEdge_ChangeArray1, None, StepShape_HArray1OfOrientedEdge)
StepShape_HArray1OfOrientedEdge_swigregister = _StepShape.StepShape_HArray1OfOrientedEdge_swigregister
StepShape_HArray1OfOrientedEdge_swigregister(StepShape_HArray1OfOrientedEdge)



