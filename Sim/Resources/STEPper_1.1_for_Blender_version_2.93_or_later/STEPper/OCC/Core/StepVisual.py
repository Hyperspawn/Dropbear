# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepVisual module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepvisual.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StepVisual.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StepVisual')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StepVisual')
    _StepVisual = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepVisual', [dirname(__file__)])
        except ImportError:
            import _StepVisual
            return _StepVisual
        try:
            _mod = imp.load_module('_StepVisual', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _StepVisual = swig_import_helper()
    del swig_import_helper
else:
    import _StepVisual
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepVisual.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_StepVisual.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_StepVisual.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_StepVisual.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_StepVisual.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_StepVisual.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_StepVisual.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_StepVisual.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_StepVisual.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_StepVisual.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_StepVisual.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_StepVisual.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_StepVisual.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_StepVisual.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_StepVisual.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_StepVisual.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_StepVisual.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _StepVisual.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure const &', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _StepVisual.process_exception(error, method_name, class_name)
process_exception = _StepVisual.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.StepShape
import OCC.Core.StepGeom
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepRepr
import OCC.Core.StepBasic
import OCC.Core.TColgp
StepVisual_Null = _StepVisual.StepVisual_Null
StepVisual_copCentral = _StepVisual.StepVisual_copCentral
StepVisual_copParallel = _StepVisual.StepVisual_copParallel
StepVisual_ssNegative = _StepVisual.StepVisual_ssNegative
StepVisual_ssPositive = _StepVisual.StepVisual_ssPositive
StepVisual_ssBoth = _StepVisual.StepVisual_ssBoth
StepVisual_tpUp = _StepVisual.StepVisual_tpUp
StepVisual_tpRight = _StepVisual.StepVisual_tpRight
StepVisual_tpDown = _StepVisual.StepVisual_tpDown
StepVisual_tpLeft = _StepVisual.StepVisual_tpLeft
StepVisual_mtDot = _StepVisual.StepVisual_mtDot
StepVisual_mtX = _StepVisual.StepVisual_mtX
StepVisual_mtPlus = _StepVisual.StepVisual_mtPlus
StepVisual_mtAsterisk = _StepVisual.StepVisual_mtAsterisk
StepVisual_mtRing = _StepVisual.StepVisual_mtRing
StepVisual_mtSquare = _StepVisual.StepVisual_mtSquare
StepVisual_mtTriangle = _StepVisual.StepVisual_mtTriangle

def Handle_StepVisual_AnnotationFillArea_Create() -> "opencascade::handle< StepVisual_AnnotationFillArea >":
    return _StepVisual.Handle_StepVisual_AnnotationFillArea_Create()
Handle_StepVisual_AnnotationFillArea_Create = _StepVisual.Handle_StepVisual_AnnotationFillArea_Create

def Handle_StepVisual_AnnotationFillArea_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_AnnotationFillArea >":
    return _StepVisual.Handle_StepVisual_AnnotationFillArea_DownCast(t)
Handle_StepVisual_AnnotationFillArea_DownCast = _StepVisual.Handle_StepVisual_AnnotationFillArea_DownCast

def Handle_StepVisual_AnnotationFillArea_IsNull(t: 'opencascade::handle< StepVisual_AnnotationFillArea > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_AnnotationFillArea_IsNull(t)
Handle_StepVisual_AnnotationFillArea_IsNull = _StepVisual.Handle_StepVisual_AnnotationFillArea_IsNull

def Handle_StepVisual_AnnotationText_Create() -> "opencascade::handle< StepVisual_AnnotationText >":
    return _StepVisual.Handle_StepVisual_AnnotationText_Create()
Handle_StepVisual_AnnotationText_Create = _StepVisual.Handle_StepVisual_AnnotationText_Create

def Handle_StepVisual_AnnotationText_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_AnnotationText >":
    return _StepVisual.Handle_StepVisual_AnnotationText_DownCast(t)
Handle_StepVisual_AnnotationText_DownCast = _StepVisual.Handle_StepVisual_AnnotationText_DownCast

def Handle_StepVisual_AnnotationText_IsNull(t: 'opencascade::handle< StepVisual_AnnotationText > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_AnnotationText_IsNull(t)
Handle_StepVisual_AnnotationText_IsNull = _StepVisual.Handle_StepVisual_AnnotationText_IsNull

def Handle_StepVisual_AreaInSet_Create() -> "opencascade::handle< StepVisual_AreaInSet >":
    return _StepVisual.Handle_StepVisual_AreaInSet_Create()
Handle_StepVisual_AreaInSet_Create = _StepVisual.Handle_StepVisual_AreaInSet_Create

def Handle_StepVisual_AreaInSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_AreaInSet >":
    return _StepVisual.Handle_StepVisual_AreaInSet_DownCast(t)
Handle_StepVisual_AreaInSet_DownCast = _StepVisual.Handle_StepVisual_AreaInSet_DownCast

def Handle_StepVisual_AreaInSet_IsNull(t: 'opencascade::handle< StepVisual_AreaInSet > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_AreaInSet_IsNull(t)
Handle_StepVisual_AreaInSet_IsNull = _StepVisual.Handle_StepVisual_AreaInSet_IsNull

def Handle_StepVisual_CameraImage_Create() -> "opencascade::handle< StepVisual_CameraImage >":
    return _StepVisual.Handle_StepVisual_CameraImage_Create()
Handle_StepVisual_CameraImage_Create = _StepVisual.Handle_StepVisual_CameraImage_Create

def Handle_StepVisual_CameraImage_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraImage >":
    return _StepVisual.Handle_StepVisual_CameraImage_DownCast(t)
Handle_StepVisual_CameraImage_DownCast = _StepVisual.Handle_StepVisual_CameraImage_DownCast

def Handle_StepVisual_CameraImage_IsNull(t: 'opencascade::handle< StepVisual_CameraImage > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraImage_IsNull(t)
Handle_StepVisual_CameraImage_IsNull = _StepVisual.Handle_StepVisual_CameraImage_IsNull

def Handle_StepVisual_CameraModel_Create() -> "opencascade::handle< StepVisual_CameraModel >":
    return _StepVisual.Handle_StepVisual_CameraModel_Create()
Handle_StepVisual_CameraModel_Create = _StepVisual.Handle_StepVisual_CameraModel_Create

def Handle_StepVisual_CameraModel_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraModel >":
    return _StepVisual.Handle_StepVisual_CameraModel_DownCast(t)
Handle_StepVisual_CameraModel_DownCast = _StepVisual.Handle_StepVisual_CameraModel_DownCast

def Handle_StepVisual_CameraModel_IsNull(t: 'opencascade::handle< StepVisual_CameraModel > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraModel_IsNull(t)
Handle_StepVisual_CameraModel_IsNull = _StepVisual.Handle_StepVisual_CameraModel_IsNull

def Handle_StepVisual_CameraModelD3MultiClippingIntersection_Create() -> "opencascade::handle< StepVisual_CameraModelD3MultiClippingIntersection >":
    return _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingIntersection_Create()
Handle_StepVisual_CameraModelD3MultiClippingIntersection_Create = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingIntersection_Create

def Handle_StepVisual_CameraModelD3MultiClippingIntersection_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraModelD3MultiClippingIntersection >":
    return _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingIntersection_DownCast(t)
Handle_StepVisual_CameraModelD3MultiClippingIntersection_DownCast = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingIntersection_DownCast

def Handle_StepVisual_CameraModelD3MultiClippingIntersection_IsNull(t: 'opencascade::handle< StepVisual_CameraModelD3MultiClippingIntersection > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingIntersection_IsNull(t)
Handle_StepVisual_CameraModelD3MultiClippingIntersection_IsNull = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingIntersection_IsNull

def Handle_StepVisual_CameraModelD3MultiClippingUnion_Create() -> "opencascade::handle< StepVisual_CameraModelD3MultiClippingUnion >":
    return _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingUnion_Create()
Handle_StepVisual_CameraModelD3MultiClippingUnion_Create = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingUnion_Create

def Handle_StepVisual_CameraModelD3MultiClippingUnion_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraModelD3MultiClippingUnion >":
    return _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingUnion_DownCast(t)
Handle_StepVisual_CameraModelD3MultiClippingUnion_DownCast = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingUnion_DownCast

def Handle_StepVisual_CameraModelD3MultiClippingUnion_IsNull(t: 'opencascade::handle< StepVisual_CameraModelD3MultiClippingUnion > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingUnion_IsNull(t)
Handle_StepVisual_CameraModelD3MultiClippingUnion_IsNull = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingUnion_IsNull

def Handle_StepVisual_CameraUsage_Create() -> "opencascade::handle< StepVisual_CameraUsage >":
    return _StepVisual.Handle_StepVisual_CameraUsage_Create()
Handle_StepVisual_CameraUsage_Create = _StepVisual.Handle_StepVisual_CameraUsage_Create

def Handle_StepVisual_CameraUsage_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraUsage >":
    return _StepVisual.Handle_StepVisual_CameraUsage_DownCast(t)
Handle_StepVisual_CameraUsage_DownCast = _StepVisual.Handle_StepVisual_CameraUsage_DownCast

def Handle_StepVisual_CameraUsage_IsNull(t: 'opencascade::handle< StepVisual_CameraUsage > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraUsage_IsNull(t)
Handle_StepVisual_CameraUsage_IsNull = _StepVisual.Handle_StepVisual_CameraUsage_IsNull

def Handle_StepVisual_Colour_Create() -> "opencascade::handle< StepVisual_Colour >":
    return _StepVisual.Handle_StepVisual_Colour_Create()
Handle_StepVisual_Colour_Create = _StepVisual.Handle_StepVisual_Colour_Create

def Handle_StepVisual_Colour_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_Colour >":
    return _StepVisual.Handle_StepVisual_Colour_DownCast(t)
Handle_StepVisual_Colour_DownCast = _StepVisual.Handle_StepVisual_Colour_DownCast

def Handle_StepVisual_Colour_IsNull(t: 'opencascade::handle< StepVisual_Colour > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_Colour_IsNull(t)
Handle_StepVisual_Colour_IsNull = _StepVisual.Handle_StepVisual_Colour_IsNull

def Handle_StepVisual_CompositeText_Create() -> "opencascade::handle< StepVisual_CompositeText >":
    return _StepVisual.Handle_StepVisual_CompositeText_Create()
Handle_StepVisual_CompositeText_Create = _StepVisual.Handle_StepVisual_CompositeText_Create

def Handle_StepVisual_CompositeText_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CompositeText >":
    return _StepVisual.Handle_StepVisual_CompositeText_DownCast(t)
Handle_StepVisual_CompositeText_DownCast = _StepVisual.Handle_StepVisual_CompositeText_DownCast

def Handle_StepVisual_CompositeText_IsNull(t: 'opencascade::handle< StepVisual_CompositeText > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CompositeText_IsNull(t)
Handle_StepVisual_CompositeText_IsNull = _StepVisual.Handle_StepVisual_CompositeText_IsNull

def Handle_StepVisual_CurveStyle_Create() -> "opencascade::handle< StepVisual_CurveStyle >":
    return _StepVisual.Handle_StepVisual_CurveStyle_Create()
Handle_StepVisual_CurveStyle_Create = _StepVisual.Handle_StepVisual_CurveStyle_Create

def Handle_StepVisual_CurveStyle_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CurveStyle >":
    return _StepVisual.Handle_StepVisual_CurveStyle_DownCast(t)
Handle_StepVisual_CurveStyle_DownCast = _StepVisual.Handle_StepVisual_CurveStyle_DownCast

def Handle_StepVisual_CurveStyle_IsNull(t: 'opencascade::handle< StepVisual_CurveStyle > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CurveStyle_IsNull(t)
Handle_StepVisual_CurveStyle_IsNull = _StepVisual.Handle_StepVisual_CurveStyle_IsNull

def Handle_StepVisual_CurveStyleFont_Create() -> "opencascade::handle< StepVisual_CurveStyleFont >":
    return _StepVisual.Handle_StepVisual_CurveStyleFont_Create()
Handle_StepVisual_CurveStyleFont_Create = _StepVisual.Handle_StepVisual_CurveStyleFont_Create

def Handle_StepVisual_CurveStyleFont_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CurveStyleFont >":
    return _StepVisual.Handle_StepVisual_CurveStyleFont_DownCast(t)
Handle_StepVisual_CurveStyleFont_DownCast = _StepVisual.Handle_StepVisual_CurveStyleFont_DownCast

def Handle_StepVisual_CurveStyleFont_IsNull(t: 'opencascade::handle< StepVisual_CurveStyleFont > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CurveStyleFont_IsNull(t)
Handle_StepVisual_CurveStyleFont_IsNull = _StepVisual.Handle_StepVisual_CurveStyleFont_IsNull

def Handle_StepVisual_CurveStyleFontPattern_Create() -> "opencascade::handle< StepVisual_CurveStyleFontPattern >":
    return _StepVisual.Handle_StepVisual_CurveStyleFontPattern_Create()
Handle_StepVisual_CurveStyleFontPattern_Create = _StepVisual.Handle_StepVisual_CurveStyleFontPattern_Create

def Handle_StepVisual_CurveStyleFontPattern_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CurveStyleFontPattern >":
    return _StepVisual.Handle_StepVisual_CurveStyleFontPattern_DownCast(t)
Handle_StepVisual_CurveStyleFontPattern_DownCast = _StepVisual.Handle_StepVisual_CurveStyleFontPattern_DownCast

def Handle_StepVisual_CurveStyleFontPattern_IsNull(t: 'opencascade::handle< StepVisual_CurveStyleFontPattern > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CurveStyleFontPattern_IsNull(t)
Handle_StepVisual_CurveStyleFontPattern_IsNull = _StepVisual.Handle_StepVisual_CurveStyleFontPattern_IsNull

def Handle_StepVisual_DraughtingCallout_Create() -> "opencascade::handle< StepVisual_DraughtingCallout >":
    return _StepVisual.Handle_StepVisual_DraughtingCallout_Create()
Handle_StepVisual_DraughtingCallout_Create = _StepVisual.Handle_StepVisual_DraughtingCallout_Create

def Handle_StepVisual_DraughtingCallout_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_DraughtingCallout >":
    return _StepVisual.Handle_StepVisual_DraughtingCallout_DownCast(t)
Handle_StepVisual_DraughtingCallout_DownCast = _StepVisual.Handle_StepVisual_DraughtingCallout_DownCast

def Handle_StepVisual_DraughtingCallout_IsNull(t: 'opencascade::handle< StepVisual_DraughtingCallout > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_DraughtingCallout_IsNull(t)
Handle_StepVisual_DraughtingCallout_IsNull = _StepVisual.Handle_StepVisual_DraughtingCallout_IsNull

def Handle_StepVisual_DraughtingModel_Create() -> "opencascade::handle< StepVisual_DraughtingModel >":
    return _StepVisual.Handle_StepVisual_DraughtingModel_Create()
Handle_StepVisual_DraughtingModel_Create = _StepVisual.Handle_StepVisual_DraughtingModel_Create

def Handle_StepVisual_DraughtingModel_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_DraughtingModel >":
    return _StepVisual.Handle_StepVisual_DraughtingModel_DownCast(t)
Handle_StepVisual_DraughtingModel_DownCast = _StepVisual.Handle_StepVisual_DraughtingModel_DownCast

def Handle_StepVisual_DraughtingModel_IsNull(t: 'opencascade::handle< StepVisual_DraughtingModel > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_DraughtingModel_IsNull(t)
Handle_StepVisual_DraughtingModel_IsNull = _StepVisual.Handle_StepVisual_DraughtingModel_IsNull

def Handle_StepVisual_ExternallyDefinedCurveFont_Create() -> "opencascade::handle< StepVisual_ExternallyDefinedCurveFont >":
    return _StepVisual.Handle_StepVisual_ExternallyDefinedCurveFont_Create()
Handle_StepVisual_ExternallyDefinedCurveFont_Create = _StepVisual.Handle_StepVisual_ExternallyDefinedCurveFont_Create

def Handle_StepVisual_ExternallyDefinedCurveFont_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_ExternallyDefinedCurveFont >":
    return _StepVisual.Handle_StepVisual_ExternallyDefinedCurveFont_DownCast(t)
Handle_StepVisual_ExternallyDefinedCurveFont_DownCast = _StepVisual.Handle_StepVisual_ExternallyDefinedCurveFont_DownCast

def Handle_StepVisual_ExternallyDefinedCurveFont_IsNull(t: 'opencascade::handle< StepVisual_ExternallyDefinedCurveFont > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_ExternallyDefinedCurveFont_IsNull(t)
Handle_StepVisual_ExternallyDefinedCurveFont_IsNull = _StepVisual.Handle_StepVisual_ExternallyDefinedCurveFont_IsNull

def Handle_StepVisual_ExternallyDefinedTextFont_Create() -> "opencascade::handle< StepVisual_ExternallyDefinedTextFont >":
    return _StepVisual.Handle_StepVisual_ExternallyDefinedTextFont_Create()
Handle_StepVisual_ExternallyDefinedTextFont_Create = _StepVisual.Handle_StepVisual_ExternallyDefinedTextFont_Create

def Handle_StepVisual_ExternallyDefinedTextFont_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_ExternallyDefinedTextFont >":
    return _StepVisual.Handle_StepVisual_ExternallyDefinedTextFont_DownCast(t)
Handle_StepVisual_ExternallyDefinedTextFont_DownCast = _StepVisual.Handle_StepVisual_ExternallyDefinedTextFont_DownCast

def Handle_StepVisual_ExternallyDefinedTextFont_IsNull(t: 'opencascade::handle< StepVisual_ExternallyDefinedTextFont > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_ExternallyDefinedTextFont_IsNull(t)
Handle_StepVisual_ExternallyDefinedTextFont_IsNull = _StepVisual.Handle_StepVisual_ExternallyDefinedTextFont_IsNull

def Handle_StepVisual_FillAreaStyle_Create() -> "opencascade::handle< StepVisual_FillAreaStyle >":
    return _StepVisual.Handle_StepVisual_FillAreaStyle_Create()
Handle_StepVisual_FillAreaStyle_Create = _StepVisual.Handle_StepVisual_FillAreaStyle_Create

def Handle_StepVisual_FillAreaStyle_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_FillAreaStyle >":
    return _StepVisual.Handle_StepVisual_FillAreaStyle_DownCast(t)
Handle_StepVisual_FillAreaStyle_DownCast = _StepVisual.Handle_StepVisual_FillAreaStyle_DownCast

def Handle_StepVisual_FillAreaStyle_IsNull(t: 'opencascade::handle< StepVisual_FillAreaStyle > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_FillAreaStyle_IsNull(t)
Handle_StepVisual_FillAreaStyle_IsNull = _StepVisual.Handle_StepVisual_FillAreaStyle_IsNull

def Handle_StepVisual_FillAreaStyleColour_Create() -> "opencascade::handle< StepVisual_FillAreaStyleColour >":
    return _StepVisual.Handle_StepVisual_FillAreaStyleColour_Create()
Handle_StepVisual_FillAreaStyleColour_Create = _StepVisual.Handle_StepVisual_FillAreaStyleColour_Create

def Handle_StepVisual_FillAreaStyleColour_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_FillAreaStyleColour >":
    return _StepVisual.Handle_StepVisual_FillAreaStyleColour_DownCast(t)
Handle_StepVisual_FillAreaStyleColour_DownCast = _StepVisual.Handle_StepVisual_FillAreaStyleColour_DownCast

def Handle_StepVisual_FillAreaStyleColour_IsNull(t: 'opencascade::handle< StepVisual_FillAreaStyleColour > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_FillAreaStyleColour_IsNull(t)
Handle_StepVisual_FillAreaStyleColour_IsNull = _StepVisual.Handle_StepVisual_FillAreaStyleColour_IsNull

def Handle_StepVisual_Invisibility_Create() -> "opencascade::handle< StepVisual_Invisibility >":
    return _StepVisual.Handle_StepVisual_Invisibility_Create()
Handle_StepVisual_Invisibility_Create = _StepVisual.Handle_StepVisual_Invisibility_Create

def Handle_StepVisual_Invisibility_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_Invisibility >":
    return _StepVisual.Handle_StepVisual_Invisibility_DownCast(t)
Handle_StepVisual_Invisibility_DownCast = _StepVisual.Handle_StepVisual_Invisibility_DownCast

def Handle_StepVisual_Invisibility_IsNull(t: 'opencascade::handle< StepVisual_Invisibility > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_Invisibility_IsNull(t)
Handle_StepVisual_Invisibility_IsNull = _StepVisual.Handle_StepVisual_Invisibility_IsNull

def Handle_StepVisual_MarkerMember_Create() -> "opencascade::handle< StepVisual_MarkerMember >":
    return _StepVisual.Handle_StepVisual_MarkerMember_Create()
Handle_StepVisual_MarkerMember_Create = _StepVisual.Handle_StepVisual_MarkerMember_Create

def Handle_StepVisual_MarkerMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_MarkerMember >":
    return _StepVisual.Handle_StepVisual_MarkerMember_DownCast(t)
Handle_StepVisual_MarkerMember_DownCast = _StepVisual.Handle_StepVisual_MarkerMember_DownCast

def Handle_StepVisual_MarkerMember_IsNull(t: 'opencascade::handle< StepVisual_MarkerMember > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_MarkerMember_IsNull(t)
Handle_StepVisual_MarkerMember_IsNull = _StepVisual.Handle_StepVisual_MarkerMember_IsNull

def Handle_StepVisual_NullStyleMember_Create() -> "opencascade::handle< StepVisual_NullStyleMember >":
    return _StepVisual.Handle_StepVisual_NullStyleMember_Create()
Handle_StepVisual_NullStyleMember_Create = _StepVisual.Handle_StepVisual_NullStyleMember_Create

def Handle_StepVisual_NullStyleMember_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_NullStyleMember >":
    return _StepVisual.Handle_StepVisual_NullStyleMember_DownCast(t)
Handle_StepVisual_NullStyleMember_DownCast = _StepVisual.Handle_StepVisual_NullStyleMember_DownCast

def Handle_StepVisual_NullStyleMember_IsNull(t: 'opencascade::handle< StepVisual_NullStyleMember > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_NullStyleMember_IsNull(t)
Handle_StepVisual_NullStyleMember_IsNull = _StepVisual.Handle_StepVisual_NullStyleMember_IsNull

def Handle_StepVisual_PlanarExtent_Create() -> "opencascade::handle< StepVisual_PlanarExtent >":
    return _StepVisual.Handle_StepVisual_PlanarExtent_Create()
Handle_StepVisual_PlanarExtent_Create = _StepVisual.Handle_StepVisual_PlanarExtent_Create

def Handle_StepVisual_PlanarExtent_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PlanarExtent >":
    return _StepVisual.Handle_StepVisual_PlanarExtent_DownCast(t)
Handle_StepVisual_PlanarExtent_DownCast = _StepVisual.Handle_StepVisual_PlanarExtent_DownCast

def Handle_StepVisual_PlanarExtent_IsNull(t: 'opencascade::handle< StepVisual_PlanarExtent > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PlanarExtent_IsNull(t)
Handle_StepVisual_PlanarExtent_IsNull = _StepVisual.Handle_StepVisual_PlanarExtent_IsNull

def Handle_StepVisual_PointStyle_Create() -> "opencascade::handle< StepVisual_PointStyle >":
    return _StepVisual.Handle_StepVisual_PointStyle_Create()
Handle_StepVisual_PointStyle_Create = _StepVisual.Handle_StepVisual_PointStyle_Create

def Handle_StepVisual_PointStyle_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PointStyle >":
    return _StepVisual.Handle_StepVisual_PointStyle_DownCast(t)
Handle_StepVisual_PointStyle_DownCast = _StepVisual.Handle_StepVisual_PointStyle_DownCast

def Handle_StepVisual_PointStyle_IsNull(t: 'opencascade::handle< StepVisual_PointStyle > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PointStyle_IsNull(t)
Handle_StepVisual_PointStyle_IsNull = _StepVisual.Handle_StepVisual_PointStyle_IsNull

def Handle_StepVisual_PreDefinedItem_Create() -> "opencascade::handle< StepVisual_PreDefinedItem >":
    return _StepVisual.Handle_StepVisual_PreDefinedItem_Create()
Handle_StepVisual_PreDefinedItem_Create = _StepVisual.Handle_StepVisual_PreDefinedItem_Create

def Handle_StepVisual_PreDefinedItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PreDefinedItem >":
    return _StepVisual.Handle_StepVisual_PreDefinedItem_DownCast(t)
Handle_StepVisual_PreDefinedItem_DownCast = _StepVisual.Handle_StepVisual_PreDefinedItem_DownCast

def Handle_StepVisual_PreDefinedItem_IsNull(t: 'opencascade::handle< StepVisual_PreDefinedItem > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PreDefinedItem_IsNull(t)
Handle_StepVisual_PreDefinedItem_IsNull = _StepVisual.Handle_StepVisual_PreDefinedItem_IsNull

def Handle_StepVisual_PresentationLayerAssignment_Create() -> "opencascade::handle< StepVisual_PresentationLayerAssignment >":
    return _StepVisual.Handle_StepVisual_PresentationLayerAssignment_Create()
Handle_StepVisual_PresentationLayerAssignment_Create = _StepVisual.Handle_StepVisual_PresentationLayerAssignment_Create

def Handle_StepVisual_PresentationLayerAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentationLayerAssignment >":
    return _StepVisual.Handle_StepVisual_PresentationLayerAssignment_DownCast(t)
Handle_StepVisual_PresentationLayerAssignment_DownCast = _StepVisual.Handle_StepVisual_PresentationLayerAssignment_DownCast

def Handle_StepVisual_PresentationLayerAssignment_IsNull(t: 'opencascade::handle< StepVisual_PresentationLayerAssignment > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentationLayerAssignment_IsNull(t)
Handle_StepVisual_PresentationLayerAssignment_IsNull = _StepVisual.Handle_StepVisual_PresentationLayerAssignment_IsNull

def Handle_StepVisual_PresentationLayerUsage_Create() -> "opencascade::handle< StepVisual_PresentationLayerUsage >":
    return _StepVisual.Handle_StepVisual_PresentationLayerUsage_Create()
Handle_StepVisual_PresentationLayerUsage_Create = _StepVisual.Handle_StepVisual_PresentationLayerUsage_Create

def Handle_StepVisual_PresentationLayerUsage_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentationLayerUsage >":
    return _StepVisual.Handle_StepVisual_PresentationLayerUsage_DownCast(t)
Handle_StepVisual_PresentationLayerUsage_DownCast = _StepVisual.Handle_StepVisual_PresentationLayerUsage_DownCast

def Handle_StepVisual_PresentationLayerUsage_IsNull(t: 'opencascade::handle< StepVisual_PresentationLayerUsage > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentationLayerUsage_IsNull(t)
Handle_StepVisual_PresentationLayerUsage_IsNull = _StepVisual.Handle_StepVisual_PresentationLayerUsage_IsNull

def Handle_StepVisual_PresentationRepresentation_Create() -> "opencascade::handle< StepVisual_PresentationRepresentation >":
    return _StepVisual.Handle_StepVisual_PresentationRepresentation_Create()
Handle_StepVisual_PresentationRepresentation_Create = _StepVisual.Handle_StepVisual_PresentationRepresentation_Create

def Handle_StepVisual_PresentationRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentationRepresentation >":
    return _StepVisual.Handle_StepVisual_PresentationRepresentation_DownCast(t)
Handle_StepVisual_PresentationRepresentation_DownCast = _StepVisual.Handle_StepVisual_PresentationRepresentation_DownCast

def Handle_StepVisual_PresentationRepresentation_IsNull(t: 'opencascade::handle< StepVisual_PresentationRepresentation > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentationRepresentation_IsNull(t)
Handle_StepVisual_PresentationRepresentation_IsNull = _StepVisual.Handle_StepVisual_PresentationRepresentation_IsNull

def Handle_StepVisual_PresentationSet_Create() -> "opencascade::handle< StepVisual_PresentationSet >":
    return _StepVisual.Handle_StepVisual_PresentationSet_Create()
Handle_StepVisual_PresentationSet_Create = _StepVisual.Handle_StepVisual_PresentationSet_Create

def Handle_StepVisual_PresentationSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentationSet >":
    return _StepVisual.Handle_StepVisual_PresentationSet_DownCast(t)
Handle_StepVisual_PresentationSet_DownCast = _StepVisual.Handle_StepVisual_PresentationSet_DownCast

def Handle_StepVisual_PresentationSet_IsNull(t: 'opencascade::handle< StepVisual_PresentationSet > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentationSet_IsNull(t)
Handle_StepVisual_PresentationSet_IsNull = _StepVisual.Handle_StepVisual_PresentationSet_IsNull

def Handle_StepVisual_PresentationSize_Create() -> "opencascade::handle< StepVisual_PresentationSize >":
    return _StepVisual.Handle_StepVisual_PresentationSize_Create()
Handle_StepVisual_PresentationSize_Create = _StepVisual.Handle_StepVisual_PresentationSize_Create

def Handle_StepVisual_PresentationSize_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentationSize >":
    return _StepVisual.Handle_StepVisual_PresentationSize_DownCast(t)
Handle_StepVisual_PresentationSize_DownCast = _StepVisual.Handle_StepVisual_PresentationSize_DownCast

def Handle_StepVisual_PresentationSize_IsNull(t: 'opencascade::handle< StepVisual_PresentationSize > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentationSize_IsNull(t)
Handle_StepVisual_PresentationSize_IsNull = _StepVisual.Handle_StepVisual_PresentationSize_IsNull

def Handle_StepVisual_PresentationStyleAssignment_Create() -> "opencascade::handle< StepVisual_PresentationStyleAssignment >":
    return _StepVisual.Handle_StepVisual_PresentationStyleAssignment_Create()
Handle_StepVisual_PresentationStyleAssignment_Create = _StepVisual.Handle_StepVisual_PresentationStyleAssignment_Create

def Handle_StepVisual_PresentationStyleAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentationStyleAssignment >":
    return _StepVisual.Handle_StepVisual_PresentationStyleAssignment_DownCast(t)
Handle_StepVisual_PresentationStyleAssignment_DownCast = _StepVisual.Handle_StepVisual_PresentationStyleAssignment_DownCast

def Handle_StepVisual_PresentationStyleAssignment_IsNull(t: 'opencascade::handle< StepVisual_PresentationStyleAssignment > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentationStyleAssignment_IsNull(t)
Handle_StepVisual_PresentationStyleAssignment_IsNull = _StepVisual.Handle_StepVisual_PresentationStyleAssignment_IsNull

def Handle_StepVisual_PresentedItem_Create() -> "opencascade::handle< StepVisual_PresentedItem >":
    return _StepVisual.Handle_StepVisual_PresentedItem_Create()
Handle_StepVisual_PresentedItem_Create = _StepVisual.Handle_StepVisual_PresentedItem_Create

def Handle_StepVisual_PresentedItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentedItem >":
    return _StepVisual.Handle_StepVisual_PresentedItem_DownCast(t)
Handle_StepVisual_PresentedItem_DownCast = _StepVisual.Handle_StepVisual_PresentedItem_DownCast

def Handle_StepVisual_PresentedItem_IsNull(t: 'opencascade::handle< StepVisual_PresentedItem > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentedItem_IsNull(t)
Handle_StepVisual_PresentedItem_IsNull = _StepVisual.Handle_StepVisual_PresentedItem_IsNull

def Handle_StepVisual_PresentedItemRepresentation_Create() -> "opencascade::handle< StepVisual_PresentedItemRepresentation >":
    return _StepVisual.Handle_StepVisual_PresentedItemRepresentation_Create()
Handle_StepVisual_PresentedItemRepresentation_Create = _StepVisual.Handle_StepVisual_PresentedItemRepresentation_Create

def Handle_StepVisual_PresentedItemRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentedItemRepresentation >":
    return _StepVisual.Handle_StepVisual_PresentedItemRepresentation_DownCast(t)
Handle_StepVisual_PresentedItemRepresentation_DownCast = _StepVisual.Handle_StepVisual_PresentedItemRepresentation_DownCast

def Handle_StepVisual_PresentedItemRepresentation_IsNull(t: 'opencascade::handle< StepVisual_PresentedItemRepresentation > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentedItemRepresentation_IsNull(t)
Handle_StepVisual_PresentedItemRepresentation_IsNull = _StepVisual.Handle_StepVisual_PresentedItemRepresentation_IsNull

def Handle_StepVisual_StyledItem_Create() -> "opencascade::handle< StepVisual_StyledItem >":
    return _StepVisual.Handle_StepVisual_StyledItem_Create()
Handle_StepVisual_StyledItem_Create = _StepVisual.Handle_StepVisual_StyledItem_Create

def Handle_StepVisual_StyledItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_StyledItem >":
    return _StepVisual.Handle_StepVisual_StyledItem_DownCast(t)
Handle_StepVisual_StyledItem_DownCast = _StepVisual.Handle_StepVisual_StyledItem_DownCast

def Handle_StepVisual_StyledItem_IsNull(t: 'opencascade::handle< StepVisual_StyledItem > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_StyledItem_IsNull(t)
Handle_StepVisual_StyledItem_IsNull = _StepVisual.Handle_StepVisual_StyledItem_IsNull

def Handle_StepVisual_SurfaceSideStyle_Create() -> "opencascade::handle< StepVisual_SurfaceSideStyle >":
    return _StepVisual.Handle_StepVisual_SurfaceSideStyle_Create()
Handle_StepVisual_SurfaceSideStyle_Create = _StepVisual.Handle_StepVisual_SurfaceSideStyle_Create

def Handle_StepVisual_SurfaceSideStyle_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_SurfaceSideStyle >":
    return _StepVisual.Handle_StepVisual_SurfaceSideStyle_DownCast(t)
Handle_StepVisual_SurfaceSideStyle_DownCast = _StepVisual.Handle_StepVisual_SurfaceSideStyle_DownCast

def Handle_StepVisual_SurfaceSideStyle_IsNull(t: 'opencascade::handle< StepVisual_SurfaceSideStyle > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_SurfaceSideStyle_IsNull(t)
Handle_StepVisual_SurfaceSideStyle_IsNull = _StepVisual.Handle_StepVisual_SurfaceSideStyle_IsNull

def Handle_StepVisual_SurfaceStyleBoundary_Create() -> "opencascade::handle< StepVisual_SurfaceStyleBoundary >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleBoundary_Create()
Handle_StepVisual_SurfaceStyleBoundary_Create = _StepVisual.Handle_StepVisual_SurfaceStyleBoundary_Create

def Handle_StepVisual_SurfaceStyleBoundary_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_SurfaceStyleBoundary >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleBoundary_DownCast(t)
Handle_StepVisual_SurfaceStyleBoundary_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleBoundary_DownCast

def Handle_StepVisual_SurfaceStyleBoundary_IsNull(t: 'opencascade::handle< StepVisual_SurfaceStyleBoundary > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_SurfaceStyleBoundary_IsNull(t)
Handle_StepVisual_SurfaceStyleBoundary_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleBoundary_IsNull

def Handle_StepVisual_SurfaceStyleControlGrid_Create() -> "opencascade::handle< StepVisual_SurfaceStyleControlGrid >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleControlGrid_Create()
Handle_StepVisual_SurfaceStyleControlGrid_Create = _StepVisual.Handle_StepVisual_SurfaceStyleControlGrid_Create

def Handle_StepVisual_SurfaceStyleControlGrid_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_SurfaceStyleControlGrid >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleControlGrid_DownCast(t)
Handle_StepVisual_SurfaceStyleControlGrid_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleControlGrid_DownCast

def Handle_StepVisual_SurfaceStyleControlGrid_IsNull(t: 'opencascade::handle< StepVisual_SurfaceStyleControlGrid > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_SurfaceStyleControlGrid_IsNull(t)
Handle_StepVisual_SurfaceStyleControlGrid_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleControlGrid_IsNull

def Handle_StepVisual_SurfaceStyleFillArea_Create() -> "opencascade::handle< StepVisual_SurfaceStyleFillArea >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleFillArea_Create()
Handle_StepVisual_SurfaceStyleFillArea_Create = _StepVisual.Handle_StepVisual_SurfaceStyleFillArea_Create

def Handle_StepVisual_SurfaceStyleFillArea_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_SurfaceStyleFillArea >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleFillArea_DownCast(t)
Handle_StepVisual_SurfaceStyleFillArea_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleFillArea_DownCast

def Handle_StepVisual_SurfaceStyleFillArea_IsNull(t: 'opencascade::handle< StepVisual_SurfaceStyleFillArea > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_SurfaceStyleFillArea_IsNull(t)
Handle_StepVisual_SurfaceStyleFillArea_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleFillArea_IsNull

def Handle_StepVisual_SurfaceStyleParameterLine_Create() -> "opencascade::handle< StepVisual_SurfaceStyleParameterLine >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleParameterLine_Create()
Handle_StepVisual_SurfaceStyleParameterLine_Create = _StepVisual.Handle_StepVisual_SurfaceStyleParameterLine_Create

def Handle_StepVisual_SurfaceStyleParameterLine_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_SurfaceStyleParameterLine >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleParameterLine_DownCast(t)
Handle_StepVisual_SurfaceStyleParameterLine_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleParameterLine_DownCast

def Handle_StepVisual_SurfaceStyleParameterLine_IsNull(t: 'opencascade::handle< StepVisual_SurfaceStyleParameterLine > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_SurfaceStyleParameterLine_IsNull(t)
Handle_StepVisual_SurfaceStyleParameterLine_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleParameterLine_IsNull

def Handle_StepVisual_SurfaceStyleSegmentationCurve_Create() -> "opencascade::handle< StepVisual_SurfaceStyleSegmentationCurve >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleSegmentationCurve_Create()
Handle_StepVisual_SurfaceStyleSegmentationCurve_Create = _StepVisual.Handle_StepVisual_SurfaceStyleSegmentationCurve_Create

def Handle_StepVisual_SurfaceStyleSegmentationCurve_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_SurfaceStyleSegmentationCurve >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleSegmentationCurve_DownCast(t)
Handle_StepVisual_SurfaceStyleSegmentationCurve_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleSegmentationCurve_DownCast

def Handle_StepVisual_SurfaceStyleSegmentationCurve_IsNull(t: 'opencascade::handle< StepVisual_SurfaceStyleSegmentationCurve > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_SurfaceStyleSegmentationCurve_IsNull(t)
Handle_StepVisual_SurfaceStyleSegmentationCurve_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleSegmentationCurve_IsNull

def Handle_StepVisual_SurfaceStyleSilhouette_Create() -> "opencascade::handle< StepVisual_SurfaceStyleSilhouette >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleSilhouette_Create()
Handle_StepVisual_SurfaceStyleSilhouette_Create = _StepVisual.Handle_StepVisual_SurfaceStyleSilhouette_Create

def Handle_StepVisual_SurfaceStyleSilhouette_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_SurfaceStyleSilhouette >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleSilhouette_DownCast(t)
Handle_StepVisual_SurfaceStyleSilhouette_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleSilhouette_DownCast

def Handle_StepVisual_SurfaceStyleSilhouette_IsNull(t: 'opencascade::handle< StepVisual_SurfaceStyleSilhouette > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_SurfaceStyleSilhouette_IsNull(t)
Handle_StepVisual_SurfaceStyleSilhouette_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleSilhouette_IsNull

def Handle_StepVisual_SurfaceStyleUsage_Create() -> "opencascade::handle< StepVisual_SurfaceStyleUsage >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleUsage_Create()
Handle_StepVisual_SurfaceStyleUsage_Create = _StepVisual.Handle_StepVisual_SurfaceStyleUsage_Create

def Handle_StepVisual_SurfaceStyleUsage_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_SurfaceStyleUsage >":
    return _StepVisual.Handle_StepVisual_SurfaceStyleUsage_DownCast(t)
Handle_StepVisual_SurfaceStyleUsage_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleUsage_DownCast

def Handle_StepVisual_SurfaceStyleUsage_IsNull(t: 'opencascade::handle< StepVisual_SurfaceStyleUsage > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_SurfaceStyleUsage_IsNull(t)
Handle_StepVisual_SurfaceStyleUsage_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleUsage_IsNull

def Handle_StepVisual_Template_Create() -> "opencascade::handle< StepVisual_Template >":
    return _StepVisual.Handle_StepVisual_Template_Create()
Handle_StepVisual_Template_Create = _StepVisual.Handle_StepVisual_Template_Create

def Handle_StepVisual_Template_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_Template >":
    return _StepVisual.Handle_StepVisual_Template_DownCast(t)
Handle_StepVisual_Template_DownCast = _StepVisual.Handle_StepVisual_Template_DownCast

def Handle_StepVisual_Template_IsNull(t: 'opencascade::handle< StepVisual_Template > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_Template_IsNull(t)
Handle_StepVisual_Template_IsNull = _StepVisual.Handle_StepVisual_Template_IsNull

def Handle_StepVisual_TemplateInstance_Create() -> "opencascade::handle< StepVisual_TemplateInstance >":
    return _StepVisual.Handle_StepVisual_TemplateInstance_Create()
Handle_StepVisual_TemplateInstance_Create = _StepVisual.Handle_StepVisual_TemplateInstance_Create

def Handle_StepVisual_TemplateInstance_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_TemplateInstance >":
    return _StepVisual.Handle_StepVisual_TemplateInstance_DownCast(t)
Handle_StepVisual_TemplateInstance_DownCast = _StepVisual.Handle_StepVisual_TemplateInstance_DownCast

def Handle_StepVisual_TemplateInstance_IsNull(t: 'opencascade::handle< StepVisual_TemplateInstance > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_TemplateInstance_IsNull(t)
Handle_StepVisual_TemplateInstance_IsNull = _StepVisual.Handle_StepVisual_TemplateInstance_IsNull

def Handle_StepVisual_TessellatedItem_Create() -> "opencascade::handle< StepVisual_TessellatedItem >":
    return _StepVisual.Handle_StepVisual_TessellatedItem_Create()
Handle_StepVisual_TessellatedItem_Create = _StepVisual.Handle_StepVisual_TessellatedItem_Create

def Handle_StepVisual_TessellatedItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_TessellatedItem >":
    return _StepVisual.Handle_StepVisual_TessellatedItem_DownCast(t)
Handle_StepVisual_TessellatedItem_DownCast = _StepVisual.Handle_StepVisual_TessellatedItem_DownCast

def Handle_StepVisual_TessellatedItem_IsNull(t: 'opencascade::handle< StepVisual_TessellatedItem > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_TessellatedItem_IsNull(t)
Handle_StepVisual_TessellatedItem_IsNull = _StepVisual.Handle_StepVisual_TessellatedItem_IsNull

def Handle_StepVisual_TextLiteral_Create() -> "opencascade::handle< StepVisual_TextLiteral >":
    return _StepVisual.Handle_StepVisual_TextLiteral_Create()
Handle_StepVisual_TextLiteral_Create = _StepVisual.Handle_StepVisual_TextLiteral_Create

def Handle_StepVisual_TextLiteral_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_TextLiteral >":
    return _StepVisual.Handle_StepVisual_TextLiteral_DownCast(t)
Handle_StepVisual_TextLiteral_DownCast = _StepVisual.Handle_StepVisual_TextLiteral_DownCast

def Handle_StepVisual_TextLiteral_IsNull(t: 'opencascade::handle< StepVisual_TextLiteral > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_TextLiteral_IsNull(t)
Handle_StepVisual_TextLiteral_IsNull = _StepVisual.Handle_StepVisual_TextLiteral_IsNull

def Handle_StepVisual_TextStyle_Create() -> "opencascade::handle< StepVisual_TextStyle >":
    return _StepVisual.Handle_StepVisual_TextStyle_Create()
Handle_StepVisual_TextStyle_Create = _StepVisual.Handle_StepVisual_TextStyle_Create

def Handle_StepVisual_TextStyle_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_TextStyle >":
    return _StepVisual.Handle_StepVisual_TextStyle_DownCast(t)
Handle_StepVisual_TextStyle_DownCast = _StepVisual.Handle_StepVisual_TextStyle_DownCast

def Handle_StepVisual_TextStyle_IsNull(t: 'opencascade::handle< StepVisual_TextStyle > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_TextStyle_IsNull(t)
Handle_StepVisual_TextStyle_IsNull = _StepVisual.Handle_StepVisual_TextStyle_IsNull

def Handle_StepVisual_TextStyleForDefinedFont_Create() -> "opencascade::handle< StepVisual_TextStyleForDefinedFont >":
    return _StepVisual.Handle_StepVisual_TextStyleForDefinedFont_Create()
Handle_StepVisual_TextStyleForDefinedFont_Create = _StepVisual.Handle_StepVisual_TextStyleForDefinedFont_Create

def Handle_StepVisual_TextStyleForDefinedFont_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_TextStyleForDefinedFont >":
    return _StepVisual.Handle_StepVisual_TextStyleForDefinedFont_DownCast(t)
Handle_StepVisual_TextStyleForDefinedFont_DownCast = _StepVisual.Handle_StepVisual_TextStyleForDefinedFont_DownCast

def Handle_StepVisual_TextStyleForDefinedFont_IsNull(t: 'opencascade::handle< StepVisual_TextStyleForDefinedFont > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_TextStyleForDefinedFont_IsNull(t)
Handle_StepVisual_TextStyleForDefinedFont_IsNull = _StepVisual.Handle_StepVisual_TextStyleForDefinedFont_IsNull

def Handle_StepVisual_ViewVolume_Create() -> "opencascade::handle< StepVisual_ViewVolume >":
    return _StepVisual.Handle_StepVisual_ViewVolume_Create()
Handle_StepVisual_ViewVolume_Create = _StepVisual.Handle_StepVisual_ViewVolume_Create

def Handle_StepVisual_ViewVolume_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_ViewVolume >":
    return _StepVisual.Handle_StepVisual_ViewVolume_DownCast(t)
Handle_StepVisual_ViewVolume_DownCast = _StepVisual.Handle_StepVisual_ViewVolume_DownCast

def Handle_StepVisual_ViewVolume_IsNull(t: 'opencascade::handle< StepVisual_ViewVolume > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_ViewVolume_IsNull(t)
Handle_StepVisual_ViewVolume_IsNull = _StepVisual.Handle_StepVisual_ViewVolume_IsNull

def Handle_StepVisual_AnnotationOccurrence_Create() -> "opencascade::handle< StepVisual_AnnotationOccurrence >":
    return _StepVisual.Handle_StepVisual_AnnotationOccurrence_Create()
Handle_StepVisual_AnnotationOccurrence_Create = _StepVisual.Handle_StepVisual_AnnotationOccurrence_Create

def Handle_StepVisual_AnnotationOccurrence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_AnnotationOccurrence >":
    return _StepVisual.Handle_StepVisual_AnnotationOccurrence_DownCast(t)
Handle_StepVisual_AnnotationOccurrence_DownCast = _StepVisual.Handle_StepVisual_AnnotationOccurrence_DownCast

def Handle_StepVisual_AnnotationOccurrence_IsNull(t: 'opencascade::handle< StepVisual_AnnotationOccurrence > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_AnnotationOccurrence_IsNull(t)
Handle_StepVisual_AnnotationOccurrence_IsNull = _StepVisual.Handle_StepVisual_AnnotationOccurrence_IsNull

def Handle_StepVisual_BackgroundColour_Create() -> "opencascade::handle< StepVisual_BackgroundColour >":
    return _StepVisual.Handle_StepVisual_BackgroundColour_Create()
Handle_StepVisual_BackgroundColour_Create = _StepVisual.Handle_StepVisual_BackgroundColour_Create

def Handle_StepVisual_BackgroundColour_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_BackgroundColour >":
    return _StepVisual.Handle_StepVisual_BackgroundColour_DownCast(t)
Handle_StepVisual_BackgroundColour_DownCast = _StepVisual.Handle_StepVisual_BackgroundColour_DownCast

def Handle_StepVisual_BackgroundColour_IsNull(t: 'opencascade::handle< StepVisual_BackgroundColour > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_BackgroundColour_IsNull(t)
Handle_StepVisual_BackgroundColour_IsNull = _StepVisual.Handle_StepVisual_BackgroundColour_IsNull

def Handle_StepVisual_CameraImage2dWithScale_Create() -> "opencascade::handle< StepVisual_CameraImage2dWithScale >":
    return _StepVisual.Handle_StepVisual_CameraImage2dWithScale_Create()
Handle_StepVisual_CameraImage2dWithScale_Create = _StepVisual.Handle_StepVisual_CameraImage2dWithScale_Create

def Handle_StepVisual_CameraImage2dWithScale_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraImage2dWithScale >":
    return _StepVisual.Handle_StepVisual_CameraImage2dWithScale_DownCast(t)
Handle_StepVisual_CameraImage2dWithScale_DownCast = _StepVisual.Handle_StepVisual_CameraImage2dWithScale_DownCast

def Handle_StepVisual_CameraImage2dWithScale_IsNull(t: 'opencascade::handle< StepVisual_CameraImage2dWithScale > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraImage2dWithScale_IsNull(t)
Handle_StepVisual_CameraImage2dWithScale_IsNull = _StepVisual.Handle_StepVisual_CameraImage2dWithScale_IsNull

def Handle_StepVisual_CameraImage3dWithScale_Create() -> "opencascade::handle< StepVisual_CameraImage3dWithScale >":
    return _StepVisual.Handle_StepVisual_CameraImage3dWithScale_Create()
Handle_StepVisual_CameraImage3dWithScale_Create = _StepVisual.Handle_StepVisual_CameraImage3dWithScale_Create

def Handle_StepVisual_CameraImage3dWithScale_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraImage3dWithScale >":
    return _StepVisual.Handle_StepVisual_CameraImage3dWithScale_DownCast(t)
Handle_StepVisual_CameraImage3dWithScale_DownCast = _StepVisual.Handle_StepVisual_CameraImage3dWithScale_DownCast

def Handle_StepVisual_CameraImage3dWithScale_IsNull(t: 'opencascade::handle< StepVisual_CameraImage3dWithScale > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraImage3dWithScale_IsNull(t)
Handle_StepVisual_CameraImage3dWithScale_IsNull = _StepVisual.Handle_StepVisual_CameraImage3dWithScale_IsNull

def Handle_StepVisual_CameraModelD2_Create() -> "opencascade::handle< StepVisual_CameraModelD2 >":
    return _StepVisual.Handle_StepVisual_CameraModelD2_Create()
Handle_StepVisual_CameraModelD2_Create = _StepVisual.Handle_StepVisual_CameraModelD2_Create

def Handle_StepVisual_CameraModelD2_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraModelD2 >":
    return _StepVisual.Handle_StepVisual_CameraModelD2_DownCast(t)
Handle_StepVisual_CameraModelD2_DownCast = _StepVisual.Handle_StepVisual_CameraModelD2_DownCast

def Handle_StepVisual_CameraModelD2_IsNull(t: 'opencascade::handle< StepVisual_CameraModelD2 > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraModelD2_IsNull(t)
Handle_StepVisual_CameraModelD2_IsNull = _StepVisual.Handle_StepVisual_CameraModelD2_IsNull

def Handle_StepVisual_CameraModelD3_Create() -> "opencascade::handle< StepVisual_CameraModelD3 >":
    return _StepVisual.Handle_StepVisual_CameraModelD3_Create()
Handle_StepVisual_CameraModelD3_Create = _StepVisual.Handle_StepVisual_CameraModelD3_Create

def Handle_StepVisual_CameraModelD3_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraModelD3 >":
    return _StepVisual.Handle_StepVisual_CameraModelD3_DownCast(t)
Handle_StepVisual_CameraModelD3_DownCast = _StepVisual.Handle_StepVisual_CameraModelD3_DownCast

def Handle_StepVisual_CameraModelD3_IsNull(t: 'opencascade::handle< StepVisual_CameraModelD3 > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraModelD3_IsNull(t)
Handle_StepVisual_CameraModelD3_IsNull = _StepVisual.Handle_StepVisual_CameraModelD3_IsNull

def Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_Create() -> "opencascade::handle< StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation >":
    return _StepVisual.Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_Create()
Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_Create = _StepVisual.Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_Create

def Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation >":
    return _StepVisual.Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_DownCast(t)
Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_DownCast = _StepVisual.Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_DownCast

def Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_IsNull(t: 'opencascade::handle< StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_IsNull(t)
Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_IsNull = _StepVisual.Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_IsNull

def Handle_StepVisual_ColourSpecification_Create() -> "opencascade::handle< StepVisual_ColourSpecification >":
    return _StepVisual.Handle_StepVisual_ColourSpecification_Create()
Handle_StepVisual_ColourSpecification_Create = _StepVisual.Handle_StepVisual_ColourSpecification_Create

def Handle_StepVisual_ColourSpecification_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_ColourSpecification >":
    return _StepVisual.Handle_StepVisual_ColourSpecification_DownCast(t)
Handle_StepVisual_ColourSpecification_DownCast = _StepVisual.Handle_StepVisual_ColourSpecification_DownCast

def Handle_StepVisual_ColourSpecification_IsNull(t: 'opencascade::handle< StepVisual_ColourSpecification > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_ColourSpecification_IsNull(t)
Handle_StepVisual_ColourSpecification_IsNull = _StepVisual.Handle_StepVisual_ColourSpecification_IsNull

def Handle_StepVisual_CompositeTextWithExtent_Create() -> "opencascade::handle< StepVisual_CompositeTextWithExtent >":
    return _StepVisual.Handle_StepVisual_CompositeTextWithExtent_Create()
Handle_StepVisual_CompositeTextWithExtent_Create = _StepVisual.Handle_StepVisual_CompositeTextWithExtent_Create

def Handle_StepVisual_CompositeTextWithExtent_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CompositeTextWithExtent >":
    return _StepVisual.Handle_StepVisual_CompositeTextWithExtent_DownCast(t)
Handle_StepVisual_CompositeTextWithExtent_DownCast = _StepVisual.Handle_StepVisual_CompositeTextWithExtent_DownCast

def Handle_StepVisual_CompositeTextWithExtent_IsNull(t: 'opencascade::handle< StepVisual_CompositeTextWithExtent > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CompositeTextWithExtent_IsNull(t)
Handle_StepVisual_CompositeTextWithExtent_IsNull = _StepVisual.Handle_StepVisual_CompositeTextWithExtent_IsNull

def Handle_StepVisual_ContextDependentInvisibility_Create() -> "opencascade::handle< StepVisual_ContextDependentInvisibility >":
    return _StepVisual.Handle_StepVisual_ContextDependentInvisibility_Create()
Handle_StepVisual_ContextDependentInvisibility_Create = _StepVisual.Handle_StepVisual_ContextDependentInvisibility_Create

def Handle_StepVisual_ContextDependentInvisibility_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_ContextDependentInvisibility >":
    return _StepVisual.Handle_StepVisual_ContextDependentInvisibility_DownCast(t)
Handle_StepVisual_ContextDependentInvisibility_DownCast = _StepVisual.Handle_StepVisual_ContextDependentInvisibility_DownCast

def Handle_StepVisual_ContextDependentInvisibility_IsNull(t: 'opencascade::handle< StepVisual_ContextDependentInvisibility > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_ContextDependentInvisibility_IsNull(t)
Handle_StepVisual_ContextDependentInvisibility_IsNull = _StepVisual.Handle_StepVisual_ContextDependentInvisibility_IsNull

def Handle_StepVisual_CoordinatesList_Create() -> "opencascade::handle< StepVisual_CoordinatesList >":
    return _StepVisual.Handle_StepVisual_CoordinatesList_Create()
Handle_StepVisual_CoordinatesList_Create = _StepVisual.Handle_StepVisual_CoordinatesList_Create

def Handle_StepVisual_CoordinatesList_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CoordinatesList >":
    return _StepVisual.Handle_StepVisual_CoordinatesList_DownCast(t)
Handle_StepVisual_CoordinatesList_DownCast = _StepVisual.Handle_StepVisual_CoordinatesList_DownCast

def Handle_StepVisual_CoordinatesList_IsNull(t: 'opencascade::handle< StepVisual_CoordinatesList > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CoordinatesList_IsNull(t)
Handle_StepVisual_CoordinatesList_IsNull = _StepVisual.Handle_StepVisual_CoordinatesList_IsNull

def Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_Create() -> "opencascade::handle< StepVisual_MechanicalDesignGeometricPresentationRepresentation >":
    return _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_Create()
Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_Create = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_Create

def Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_MechanicalDesignGeometricPresentationRepresentation >":
    return _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_DownCast(t)
Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_DownCast = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_DownCast

def Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_IsNull(t: 'opencascade::handle< StepVisual_MechanicalDesignGeometricPresentationRepresentation > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_IsNull(t)
Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_IsNull = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_IsNull

def Handle_StepVisual_OverRidingStyledItem_Create() -> "opencascade::handle< StepVisual_OverRidingStyledItem >":
    return _StepVisual.Handle_StepVisual_OverRidingStyledItem_Create()
Handle_StepVisual_OverRidingStyledItem_Create = _StepVisual.Handle_StepVisual_OverRidingStyledItem_Create

def Handle_StepVisual_OverRidingStyledItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_OverRidingStyledItem >":
    return _StepVisual.Handle_StepVisual_OverRidingStyledItem_DownCast(t)
Handle_StepVisual_OverRidingStyledItem_DownCast = _StepVisual.Handle_StepVisual_OverRidingStyledItem_DownCast

def Handle_StepVisual_OverRidingStyledItem_IsNull(t: 'opencascade::handle< StepVisual_OverRidingStyledItem > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_OverRidingStyledItem_IsNull(t)
Handle_StepVisual_OverRidingStyledItem_IsNull = _StepVisual.Handle_StepVisual_OverRidingStyledItem_IsNull

def Handle_StepVisual_PlanarBox_Create() -> "opencascade::handle< StepVisual_PlanarBox >":
    return _StepVisual.Handle_StepVisual_PlanarBox_Create()
Handle_StepVisual_PlanarBox_Create = _StepVisual.Handle_StepVisual_PlanarBox_Create

def Handle_StepVisual_PlanarBox_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PlanarBox >":
    return _StepVisual.Handle_StepVisual_PlanarBox_DownCast(t)
Handle_StepVisual_PlanarBox_DownCast = _StepVisual.Handle_StepVisual_PlanarBox_DownCast

def Handle_StepVisual_PlanarBox_IsNull(t: 'opencascade::handle< StepVisual_PlanarBox > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PlanarBox_IsNull(t)
Handle_StepVisual_PlanarBox_IsNull = _StepVisual.Handle_StepVisual_PlanarBox_IsNull

def Handle_StepVisual_PreDefinedColour_Create() -> "opencascade::handle< StepVisual_PreDefinedColour >":
    return _StepVisual.Handle_StepVisual_PreDefinedColour_Create()
Handle_StepVisual_PreDefinedColour_Create = _StepVisual.Handle_StepVisual_PreDefinedColour_Create

def Handle_StepVisual_PreDefinedColour_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PreDefinedColour >":
    return _StepVisual.Handle_StepVisual_PreDefinedColour_DownCast(t)
Handle_StepVisual_PreDefinedColour_DownCast = _StepVisual.Handle_StepVisual_PreDefinedColour_DownCast

def Handle_StepVisual_PreDefinedColour_IsNull(t: 'opencascade::handle< StepVisual_PreDefinedColour > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PreDefinedColour_IsNull(t)
Handle_StepVisual_PreDefinedColour_IsNull = _StepVisual.Handle_StepVisual_PreDefinedColour_IsNull

def Handle_StepVisual_PreDefinedCurveFont_Create() -> "opencascade::handle< StepVisual_PreDefinedCurveFont >":
    return _StepVisual.Handle_StepVisual_PreDefinedCurveFont_Create()
Handle_StepVisual_PreDefinedCurveFont_Create = _StepVisual.Handle_StepVisual_PreDefinedCurveFont_Create

def Handle_StepVisual_PreDefinedCurveFont_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PreDefinedCurveFont >":
    return _StepVisual.Handle_StepVisual_PreDefinedCurveFont_DownCast(t)
Handle_StepVisual_PreDefinedCurveFont_DownCast = _StepVisual.Handle_StepVisual_PreDefinedCurveFont_DownCast

def Handle_StepVisual_PreDefinedCurveFont_IsNull(t: 'opencascade::handle< StepVisual_PreDefinedCurveFont > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PreDefinedCurveFont_IsNull(t)
Handle_StepVisual_PreDefinedCurveFont_IsNull = _StepVisual.Handle_StepVisual_PreDefinedCurveFont_IsNull

def Handle_StepVisual_PreDefinedTextFont_Create() -> "opencascade::handle< StepVisual_PreDefinedTextFont >":
    return _StepVisual.Handle_StepVisual_PreDefinedTextFont_Create()
Handle_StepVisual_PreDefinedTextFont_Create = _StepVisual.Handle_StepVisual_PreDefinedTextFont_Create

def Handle_StepVisual_PreDefinedTextFont_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PreDefinedTextFont >":
    return _StepVisual.Handle_StepVisual_PreDefinedTextFont_DownCast(t)
Handle_StepVisual_PreDefinedTextFont_DownCast = _StepVisual.Handle_StepVisual_PreDefinedTextFont_DownCast

def Handle_StepVisual_PreDefinedTextFont_IsNull(t: 'opencascade::handle< StepVisual_PreDefinedTextFont > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PreDefinedTextFont_IsNull(t)
Handle_StepVisual_PreDefinedTextFont_IsNull = _StepVisual.Handle_StepVisual_PreDefinedTextFont_IsNull

def Handle_StepVisual_PresentationArea_Create() -> "opencascade::handle< StepVisual_PresentationArea >":
    return _StepVisual.Handle_StepVisual_PresentationArea_Create()
Handle_StepVisual_PresentationArea_Create = _StepVisual.Handle_StepVisual_PresentationArea_Create

def Handle_StepVisual_PresentationArea_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentationArea >":
    return _StepVisual.Handle_StepVisual_PresentationArea_DownCast(t)
Handle_StepVisual_PresentationArea_DownCast = _StepVisual.Handle_StepVisual_PresentationArea_DownCast

def Handle_StepVisual_PresentationArea_IsNull(t: 'opencascade::handle< StepVisual_PresentationArea > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentationArea_IsNull(t)
Handle_StepVisual_PresentationArea_IsNull = _StepVisual.Handle_StepVisual_PresentationArea_IsNull

def Handle_StepVisual_PresentationStyleByContext_Create() -> "opencascade::handle< StepVisual_PresentationStyleByContext >":
    return _StepVisual.Handle_StepVisual_PresentationStyleByContext_Create()
Handle_StepVisual_PresentationStyleByContext_Create = _StepVisual.Handle_StepVisual_PresentationStyleByContext_Create

def Handle_StepVisual_PresentationStyleByContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentationStyleByContext >":
    return _StepVisual.Handle_StepVisual_PresentationStyleByContext_DownCast(t)
Handle_StepVisual_PresentationStyleByContext_DownCast = _StepVisual.Handle_StepVisual_PresentationStyleByContext_DownCast

def Handle_StepVisual_PresentationStyleByContext_IsNull(t: 'opencascade::handle< StepVisual_PresentationStyleByContext > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentationStyleByContext_IsNull(t)
Handle_StepVisual_PresentationStyleByContext_IsNull = _StepVisual.Handle_StepVisual_PresentationStyleByContext_IsNull

def Handle_StepVisual_PresentationView_Create() -> "opencascade::handle< StepVisual_PresentationView >":
    return _StepVisual.Handle_StepVisual_PresentationView_Create()
Handle_StepVisual_PresentationView_Create = _StepVisual.Handle_StepVisual_PresentationView_Create

def Handle_StepVisual_PresentationView_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_PresentationView >":
    return _StepVisual.Handle_StepVisual_PresentationView_DownCast(t)
Handle_StepVisual_PresentationView_DownCast = _StepVisual.Handle_StepVisual_PresentationView_DownCast

def Handle_StepVisual_PresentationView_IsNull(t: 'opencascade::handle< StepVisual_PresentationView > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_PresentationView_IsNull(t)
Handle_StepVisual_PresentationView_IsNull = _StepVisual.Handle_StepVisual_PresentationView_IsNull

def Handle_StepVisual_TessellatedAnnotationOccurrence_Create() -> "opencascade::handle< StepVisual_TessellatedAnnotationOccurrence >":
    return _StepVisual.Handle_StepVisual_TessellatedAnnotationOccurrence_Create()
Handle_StepVisual_TessellatedAnnotationOccurrence_Create = _StepVisual.Handle_StepVisual_TessellatedAnnotationOccurrence_Create

def Handle_StepVisual_TessellatedAnnotationOccurrence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_TessellatedAnnotationOccurrence >":
    return _StepVisual.Handle_StepVisual_TessellatedAnnotationOccurrence_DownCast(t)
Handle_StepVisual_TessellatedAnnotationOccurrence_DownCast = _StepVisual.Handle_StepVisual_TessellatedAnnotationOccurrence_DownCast

def Handle_StepVisual_TessellatedAnnotationOccurrence_IsNull(t: 'opencascade::handle< StepVisual_TessellatedAnnotationOccurrence > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_TessellatedAnnotationOccurrence_IsNull(t)
Handle_StepVisual_TessellatedAnnotationOccurrence_IsNull = _StepVisual.Handle_StepVisual_TessellatedAnnotationOccurrence_IsNull

def Handle_StepVisual_TessellatedCurveSet_Create() -> "opencascade::handle< StepVisual_TessellatedCurveSet >":
    return _StepVisual.Handle_StepVisual_TessellatedCurveSet_Create()
Handle_StepVisual_TessellatedCurveSet_Create = _StepVisual.Handle_StepVisual_TessellatedCurveSet_Create

def Handle_StepVisual_TessellatedCurveSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_TessellatedCurveSet >":
    return _StepVisual.Handle_StepVisual_TessellatedCurveSet_DownCast(t)
Handle_StepVisual_TessellatedCurveSet_DownCast = _StepVisual.Handle_StepVisual_TessellatedCurveSet_DownCast

def Handle_StepVisual_TessellatedCurveSet_IsNull(t: 'opencascade::handle< StepVisual_TessellatedCurveSet > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_TessellatedCurveSet_IsNull(t)
Handle_StepVisual_TessellatedCurveSet_IsNull = _StepVisual.Handle_StepVisual_TessellatedCurveSet_IsNull

def Handle_StepVisual_TessellatedGeometricSet_Create() -> "opencascade::handle< StepVisual_TessellatedGeometricSet >":
    return _StepVisual.Handle_StepVisual_TessellatedGeometricSet_Create()
Handle_StepVisual_TessellatedGeometricSet_Create = _StepVisual.Handle_StepVisual_TessellatedGeometricSet_Create

def Handle_StepVisual_TessellatedGeometricSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_TessellatedGeometricSet >":
    return _StepVisual.Handle_StepVisual_TessellatedGeometricSet_DownCast(t)
Handle_StepVisual_TessellatedGeometricSet_DownCast = _StepVisual.Handle_StepVisual_TessellatedGeometricSet_DownCast

def Handle_StepVisual_TessellatedGeometricSet_IsNull(t: 'opencascade::handle< StepVisual_TessellatedGeometricSet > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_TessellatedGeometricSet_IsNull(t)
Handle_StepVisual_TessellatedGeometricSet_IsNull = _StepVisual.Handle_StepVisual_TessellatedGeometricSet_IsNull

def Handle_StepVisual_TextStyleWithBoxCharacteristics_Create() -> "opencascade::handle< StepVisual_TextStyleWithBoxCharacteristics >":
    return _StepVisual.Handle_StepVisual_TextStyleWithBoxCharacteristics_Create()
Handle_StepVisual_TextStyleWithBoxCharacteristics_Create = _StepVisual.Handle_StepVisual_TextStyleWithBoxCharacteristics_Create

def Handle_StepVisual_TextStyleWithBoxCharacteristics_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_TextStyleWithBoxCharacteristics >":
    return _StepVisual.Handle_StepVisual_TextStyleWithBoxCharacteristics_DownCast(t)
Handle_StepVisual_TextStyleWithBoxCharacteristics_DownCast = _StepVisual.Handle_StepVisual_TextStyleWithBoxCharacteristics_DownCast

def Handle_StepVisual_TextStyleWithBoxCharacteristics_IsNull(t: 'opencascade::handle< StepVisual_TextStyleWithBoxCharacteristics > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_TextStyleWithBoxCharacteristics_IsNull(t)
Handle_StepVisual_TextStyleWithBoxCharacteristics_IsNull = _StepVisual.Handle_StepVisual_TextStyleWithBoxCharacteristics_IsNull

def Handle_StepVisual_AnnotationCurveOccurrence_Create() -> "opencascade::handle< StepVisual_AnnotationCurveOccurrence >":
    return _StepVisual.Handle_StepVisual_AnnotationCurveOccurrence_Create()
Handle_StepVisual_AnnotationCurveOccurrence_Create = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrence_Create

def Handle_StepVisual_AnnotationCurveOccurrence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_AnnotationCurveOccurrence >":
    return _StepVisual.Handle_StepVisual_AnnotationCurveOccurrence_DownCast(t)
Handle_StepVisual_AnnotationCurveOccurrence_DownCast = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrence_DownCast

def Handle_StepVisual_AnnotationCurveOccurrence_IsNull(t: 'opencascade::handle< StepVisual_AnnotationCurveOccurrence > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_AnnotationCurveOccurrence_IsNull(t)
Handle_StepVisual_AnnotationCurveOccurrence_IsNull = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrence_IsNull

def Handle_StepVisual_AnnotationFillAreaOccurrence_Create() -> "opencascade::handle< StepVisual_AnnotationFillAreaOccurrence >":
    return _StepVisual.Handle_StepVisual_AnnotationFillAreaOccurrence_Create()
Handle_StepVisual_AnnotationFillAreaOccurrence_Create = _StepVisual.Handle_StepVisual_AnnotationFillAreaOccurrence_Create

def Handle_StepVisual_AnnotationFillAreaOccurrence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_AnnotationFillAreaOccurrence >":
    return _StepVisual.Handle_StepVisual_AnnotationFillAreaOccurrence_DownCast(t)
Handle_StepVisual_AnnotationFillAreaOccurrence_DownCast = _StepVisual.Handle_StepVisual_AnnotationFillAreaOccurrence_DownCast

def Handle_StepVisual_AnnotationFillAreaOccurrence_IsNull(t: 'opencascade::handle< StepVisual_AnnotationFillAreaOccurrence > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_AnnotationFillAreaOccurrence_IsNull(t)
Handle_StepVisual_AnnotationFillAreaOccurrence_IsNull = _StepVisual.Handle_StepVisual_AnnotationFillAreaOccurrence_IsNull

def Handle_StepVisual_AnnotationPlane_Create() -> "opencascade::handle< StepVisual_AnnotationPlane >":
    return _StepVisual.Handle_StepVisual_AnnotationPlane_Create()
Handle_StepVisual_AnnotationPlane_Create = _StepVisual.Handle_StepVisual_AnnotationPlane_Create

def Handle_StepVisual_AnnotationPlane_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_AnnotationPlane >":
    return _StepVisual.Handle_StepVisual_AnnotationPlane_DownCast(t)
Handle_StepVisual_AnnotationPlane_DownCast = _StepVisual.Handle_StepVisual_AnnotationPlane_DownCast

def Handle_StepVisual_AnnotationPlane_IsNull(t: 'opencascade::handle< StepVisual_AnnotationPlane > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_AnnotationPlane_IsNull(t)
Handle_StepVisual_AnnotationPlane_IsNull = _StepVisual.Handle_StepVisual_AnnotationPlane_IsNull

def Handle_StepVisual_AnnotationTextOccurrence_Create() -> "opencascade::handle< StepVisual_AnnotationTextOccurrence >":
    return _StepVisual.Handle_StepVisual_AnnotationTextOccurrence_Create()
Handle_StepVisual_AnnotationTextOccurrence_Create = _StepVisual.Handle_StepVisual_AnnotationTextOccurrence_Create

def Handle_StepVisual_AnnotationTextOccurrence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_AnnotationTextOccurrence >":
    return _StepVisual.Handle_StepVisual_AnnotationTextOccurrence_DownCast(t)
Handle_StepVisual_AnnotationTextOccurrence_DownCast = _StepVisual.Handle_StepVisual_AnnotationTextOccurrence_DownCast

def Handle_StepVisual_AnnotationTextOccurrence_IsNull(t: 'opencascade::handle< StepVisual_AnnotationTextOccurrence > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_AnnotationTextOccurrence_IsNull(t)
Handle_StepVisual_AnnotationTextOccurrence_IsNull = _StepVisual.Handle_StepVisual_AnnotationTextOccurrence_IsNull

def Handle_StepVisual_CameraModelD3MultiClipping_Create() -> "opencascade::handle< StepVisual_CameraModelD3MultiClipping >":
    return _StepVisual.Handle_StepVisual_CameraModelD3MultiClipping_Create()
Handle_StepVisual_CameraModelD3MultiClipping_Create = _StepVisual.Handle_StepVisual_CameraModelD3MultiClipping_Create

def Handle_StepVisual_CameraModelD3MultiClipping_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_CameraModelD3MultiClipping >":
    return _StepVisual.Handle_StepVisual_CameraModelD3MultiClipping_DownCast(t)
Handle_StepVisual_CameraModelD3MultiClipping_DownCast = _StepVisual.Handle_StepVisual_CameraModelD3MultiClipping_DownCast

def Handle_StepVisual_CameraModelD3MultiClipping_IsNull(t: 'opencascade::handle< StepVisual_CameraModelD3MultiClipping > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_CameraModelD3MultiClipping_IsNull(t)
Handle_StepVisual_CameraModelD3MultiClipping_IsNull = _StepVisual.Handle_StepVisual_CameraModelD3MultiClipping_IsNull

def Handle_StepVisual_ColourRgb_Create() -> "opencascade::handle< StepVisual_ColourRgb >":
    return _StepVisual.Handle_StepVisual_ColourRgb_Create()
Handle_StepVisual_ColourRgb_Create = _StepVisual.Handle_StepVisual_ColourRgb_Create

def Handle_StepVisual_ColourRgb_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_ColourRgb >":
    return _StepVisual.Handle_StepVisual_ColourRgb_DownCast(t)
Handle_StepVisual_ColourRgb_DownCast = _StepVisual.Handle_StepVisual_ColourRgb_DownCast

def Handle_StepVisual_ColourRgb_IsNull(t: 'opencascade::handle< StepVisual_ColourRgb > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_ColourRgb_IsNull(t)
Handle_StepVisual_ColourRgb_IsNull = _StepVisual.Handle_StepVisual_ColourRgb_IsNull

def Handle_StepVisual_ContextDependentOverRidingStyledItem_Create() -> "opencascade::handle< StepVisual_ContextDependentOverRidingStyledItem >":
    return _StepVisual.Handle_StepVisual_ContextDependentOverRidingStyledItem_Create()
Handle_StepVisual_ContextDependentOverRidingStyledItem_Create = _StepVisual.Handle_StepVisual_ContextDependentOverRidingStyledItem_Create

def Handle_StepVisual_ContextDependentOverRidingStyledItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_ContextDependentOverRidingStyledItem >":
    return _StepVisual.Handle_StepVisual_ContextDependentOverRidingStyledItem_DownCast(t)
Handle_StepVisual_ContextDependentOverRidingStyledItem_DownCast = _StepVisual.Handle_StepVisual_ContextDependentOverRidingStyledItem_DownCast

def Handle_StepVisual_ContextDependentOverRidingStyledItem_IsNull(t: 'opencascade::handle< StepVisual_ContextDependentOverRidingStyledItem > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_ContextDependentOverRidingStyledItem_IsNull(t)
Handle_StepVisual_ContextDependentOverRidingStyledItem_IsNull = _StepVisual.Handle_StepVisual_ContextDependentOverRidingStyledItem_IsNull

def Handle_StepVisual_DraughtingAnnotationOccurrence_Create() -> "opencascade::handle< StepVisual_DraughtingAnnotationOccurrence >":
    return _StepVisual.Handle_StepVisual_DraughtingAnnotationOccurrence_Create()
Handle_StepVisual_DraughtingAnnotationOccurrence_Create = _StepVisual.Handle_StepVisual_DraughtingAnnotationOccurrence_Create

def Handle_StepVisual_DraughtingAnnotationOccurrence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_DraughtingAnnotationOccurrence >":
    return _StepVisual.Handle_StepVisual_DraughtingAnnotationOccurrence_DownCast(t)
Handle_StepVisual_DraughtingAnnotationOccurrence_DownCast = _StepVisual.Handle_StepVisual_DraughtingAnnotationOccurrence_DownCast

def Handle_StepVisual_DraughtingAnnotationOccurrence_IsNull(t: 'opencascade::handle< StepVisual_DraughtingAnnotationOccurrence > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_DraughtingAnnotationOccurrence_IsNull(t)
Handle_StepVisual_DraughtingAnnotationOccurrence_IsNull = _StepVisual.Handle_StepVisual_DraughtingAnnotationOccurrence_IsNull

def Handle_StepVisual_DraughtingPreDefinedColour_Create() -> "opencascade::handle< StepVisual_DraughtingPreDefinedColour >":
    return _StepVisual.Handle_StepVisual_DraughtingPreDefinedColour_Create()
Handle_StepVisual_DraughtingPreDefinedColour_Create = _StepVisual.Handle_StepVisual_DraughtingPreDefinedColour_Create

def Handle_StepVisual_DraughtingPreDefinedColour_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_DraughtingPreDefinedColour >":
    return _StepVisual.Handle_StepVisual_DraughtingPreDefinedColour_DownCast(t)
Handle_StepVisual_DraughtingPreDefinedColour_DownCast = _StepVisual.Handle_StepVisual_DraughtingPreDefinedColour_DownCast

def Handle_StepVisual_DraughtingPreDefinedColour_IsNull(t: 'opencascade::handle< StepVisual_DraughtingPreDefinedColour > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_DraughtingPreDefinedColour_IsNull(t)
Handle_StepVisual_DraughtingPreDefinedColour_IsNull = _StepVisual.Handle_StepVisual_DraughtingPreDefinedColour_IsNull

def Handle_StepVisual_DraughtingPreDefinedCurveFont_Create() -> "opencascade::handle< StepVisual_DraughtingPreDefinedCurveFont >":
    return _StepVisual.Handle_StepVisual_DraughtingPreDefinedCurveFont_Create()
Handle_StepVisual_DraughtingPreDefinedCurveFont_Create = _StepVisual.Handle_StepVisual_DraughtingPreDefinedCurveFont_Create

def Handle_StepVisual_DraughtingPreDefinedCurveFont_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_DraughtingPreDefinedCurveFont >":
    return _StepVisual.Handle_StepVisual_DraughtingPreDefinedCurveFont_DownCast(t)
Handle_StepVisual_DraughtingPreDefinedCurveFont_DownCast = _StepVisual.Handle_StepVisual_DraughtingPreDefinedCurveFont_DownCast

def Handle_StepVisual_DraughtingPreDefinedCurveFont_IsNull(t: 'opencascade::handle< StepVisual_DraughtingPreDefinedCurveFont > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_DraughtingPreDefinedCurveFont_IsNull(t)
Handle_StepVisual_DraughtingPreDefinedCurveFont_IsNull = _StepVisual.Handle_StepVisual_DraughtingPreDefinedCurveFont_IsNull

def Handle_StepVisual_MechanicalDesignGeometricPresentationArea_Create() -> "opencascade::handle< StepVisual_MechanicalDesignGeometricPresentationArea >":
    return _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationArea_Create()
Handle_StepVisual_MechanicalDesignGeometricPresentationArea_Create = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationArea_Create

def Handle_StepVisual_MechanicalDesignGeometricPresentationArea_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_MechanicalDesignGeometricPresentationArea >":
    return _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationArea_DownCast(t)
Handle_StepVisual_MechanicalDesignGeometricPresentationArea_DownCast = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationArea_DownCast

def Handle_StepVisual_MechanicalDesignGeometricPresentationArea_IsNull(t: 'opencascade::handle< StepVisual_MechanicalDesignGeometricPresentationArea > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationArea_IsNull(t)
Handle_StepVisual_MechanicalDesignGeometricPresentationArea_IsNull = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationArea_IsNull

def Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_Create() -> "opencascade::handle< StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem >":
    return _StepVisual.Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_Create()
Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_Create = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_Create

def Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem >":
    return _StepVisual.Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_DownCast(t)
Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_DownCast = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_DownCast

def Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_IsNull(t: 'opencascade::handle< StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_IsNull(t)
Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_IsNull = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_IsNull

def Handle_StepVisual_HArray1OfAnnotationPlaneElement_Create() -> "opencascade::handle< StepVisual_HArray1OfAnnotationPlaneElement >":
    return _StepVisual.Handle_StepVisual_HArray1OfAnnotationPlaneElement_Create()
Handle_StepVisual_HArray1OfAnnotationPlaneElement_Create = _StepVisual.Handle_StepVisual_HArray1OfAnnotationPlaneElement_Create

def Handle_StepVisual_HArray1OfAnnotationPlaneElement_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfAnnotationPlaneElement >":
    return _StepVisual.Handle_StepVisual_HArray1OfAnnotationPlaneElement_DownCast(t)
Handle_StepVisual_HArray1OfAnnotationPlaneElement_DownCast = _StepVisual.Handle_StepVisual_HArray1OfAnnotationPlaneElement_DownCast

def Handle_StepVisual_HArray1OfAnnotationPlaneElement_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfAnnotationPlaneElement > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfAnnotationPlaneElement_IsNull(t)
Handle_StepVisual_HArray1OfAnnotationPlaneElement_IsNull = _StepVisual.Handle_StepVisual_HArray1OfAnnotationPlaneElement_IsNull

def Handle_StepVisual_HArray1OfDraughtingCalloutElement_Create() -> "opencascade::handle< StepVisual_HArray1OfDraughtingCalloutElement >":
    return _StepVisual.Handle_StepVisual_HArray1OfDraughtingCalloutElement_Create()
Handle_StepVisual_HArray1OfDraughtingCalloutElement_Create = _StepVisual.Handle_StepVisual_HArray1OfDraughtingCalloutElement_Create

def Handle_StepVisual_HArray1OfDraughtingCalloutElement_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfDraughtingCalloutElement >":
    return _StepVisual.Handle_StepVisual_HArray1OfDraughtingCalloutElement_DownCast(t)
Handle_StepVisual_HArray1OfDraughtingCalloutElement_DownCast = _StepVisual.Handle_StepVisual_HArray1OfDraughtingCalloutElement_DownCast

def Handle_StepVisual_HArray1OfDraughtingCalloutElement_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfDraughtingCalloutElement > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfDraughtingCalloutElement_IsNull(t)
Handle_StepVisual_HArray1OfDraughtingCalloutElement_IsNull = _StepVisual.Handle_StepVisual_HArray1OfDraughtingCalloutElement_IsNull

def Handle_StepVisual_HArray1OfDirectionCountSelect_Create() -> "opencascade::handle< StepVisual_HArray1OfDirectionCountSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfDirectionCountSelect_Create()
Handle_StepVisual_HArray1OfDirectionCountSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfDirectionCountSelect_Create

def Handle_StepVisual_HArray1OfDirectionCountSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfDirectionCountSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfDirectionCountSelect_DownCast(t)
Handle_StepVisual_HArray1OfDirectionCountSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfDirectionCountSelect_DownCast

def Handle_StepVisual_HArray1OfDirectionCountSelect_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfDirectionCountSelect > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfDirectionCountSelect_IsNull(t)
Handle_StepVisual_HArray1OfDirectionCountSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfDirectionCountSelect_IsNull

def Handle_StepVisual_HArray1OfStyleContextSelect_Create() -> "opencascade::handle< StepVisual_HArray1OfStyleContextSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfStyleContextSelect_Create()
Handle_StepVisual_HArray1OfStyleContextSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfStyleContextSelect_Create

def Handle_StepVisual_HArray1OfStyleContextSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfStyleContextSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfStyleContextSelect_DownCast(t)
Handle_StepVisual_HArray1OfStyleContextSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfStyleContextSelect_DownCast

def Handle_StepVisual_HArray1OfStyleContextSelect_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfStyleContextSelect > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfStyleContextSelect_IsNull(t)
Handle_StepVisual_HArray1OfStyleContextSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfStyleContextSelect_IsNull

def Handle_StepVisual_HArray1OfPresentationStyleSelect_Create() -> "opencascade::handle< StepVisual_HArray1OfPresentationStyleSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleSelect_Create()
Handle_StepVisual_HArray1OfPresentationStyleSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleSelect_Create

def Handle_StepVisual_HArray1OfPresentationStyleSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfPresentationStyleSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleSelect_DownCast(t)
Handle_StepVisual_HArray1OfPresentationStyleSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleSelect_DownCast

def Handle_StepVisual_HArray1OfPresentationStyleSelect_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfPresentationStyleSelect > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleSelect_IsNull(t)
Handle_StepVisual_HArray1OfPresentationStyleSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleSelect_IsNull

def Handle_StepVisual_HArray1OfCurveStyleFontPattern_Create() -> "opencascade::handle< StepVisual_HArray1OfCurveStyleFontPattern >":
    return _StepVisual.Handle_StepVisual_HArray1OfCurveStyleFontPattern_Create()
Handle_StepVisual_HArray1OfCurveStyleFontPattern_Create = _StepVisual.Handle_StepVisual_HArray1OfCurveStyleFontPattern_Create

def Handle_StepVisual_HArray1OfCurveStyleFontPattern_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfCurveStyleFontPattern >":
    return _StepVisual.Handle_StepVisual_HArray1OfCurveStyleFontPattern_DownCast(t)
Handle_StepVisual_HArray1OfCurveStyleFontPattern_DownCast = _StepVisual.Handle_StepVisual_HArray1OfCurveStyleFontPattern_DownCast

def Handle_StepVisual_HArray1OfCurveStyleFontPattern_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfCurveStyleFontPattern > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfCurveStyleFontPattern_IsNull(t)
Handle_StepVisual_HArray1OfCurveStyleFontPattern_IsNull = _StepVisual.Handle_StepVisual_HArray1OfCurveStyleFontPattern_IsNull

def Handle_StepVisual_HArray1OfBoxCharacteristicSelect_Create() -> "opencascade::handle< StepVisual_HArray1OfBoxCharacteristicSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfBoxCharacteristicSelect_Create()
Handle_StepVisual_HArray1OfBoxCharacteristicSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfBoxCharacteristicSelect_Create

def Handle_StepVisual_HArray1OfBoxCharacteristicSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfBoxCharacteristicSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfBoxCharacteristicSelect_DownCast(t)
Handle_StepVisual_HArray1OfBoxCharacteristicSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfBoxCharacteristicSelect_DownCast

def Handle_StepVisual_HArray1OfBoxCharacteristicSelect_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfBoxCharacteristicSelect > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfBoxCharacteristicSelect_IsNull(t)
Handle_StepVisual_HArray1OfBoxCharacteristicSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfBoxCharacteristicSelect_IsNull

def Handle_StepVisual_HArray1OfPresentationStyleAssignment_Create() -> "opencascade::handle< StepVisual_HArray1OfPresentationStyleAssignment >":
    return _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleAssignment_Create()
Handle_StepVisual_HArray1OfPresentationStyleAssignment_Create = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleAssignment_Create

def Handle_StepVisual_HArray1OfPresentationStyleAssignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfPresentationStyleAssignment >":
    return _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleAssignment_DownCast(t)
Handle_StepVisual_HArray1OfPresentationStyleAssignment_DownCast = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleAssignment_DownCast

def Handle_StepVisual_HArray1OfPresentationStyleAssignment_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfPresentationStyleAssignment > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleAssignment_IsNull(t)
Handle_StepVisual_HArray1OfPresentationStyleAssignment_IsNull = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleAssignment_IsNull

def Handle_StepVisual_HArray1OfFillStyleSelect_Create() -> "opencascade::handle< StepVisual_HArray1OfFillStyleSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfFillStyleSelect_Create()
Handle_StepVisual_HArray1OfFillStyleSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfFillStyleSelect_Create

def Handle_StepVisual_HArray1OfFillStyleSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfFillStyleSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfFillStyleSelect_DownCast(t)
Handle_StepVisual_HArray1OfFillStyleSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfFillStyleSelect_DownCast

def Handle_StepVisual_HArray1OfFillStyleSelect_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfFillStyleSelect > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfFillStyleSelect_IsNull(t)
Handle_StepVisual_HArray1OfFillStyleSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfFillStyleSelect_IsNull

def Handle_StepVisual_HArray1OfTextOrCharacter_Create() -> "opencascade::handle< StepVisual_HArray1OfTextOrCharacter >":
    return _StepVisual.Handle_StepVisual_HArray1OfTextOrCharacter_Create()
Handle_StepVisual_HArray1OfTextOrCharacter_Create = _StepVisual.Handle_StepVisual_HArray1OfTextOrCharacter_Create

def Handle_StepVisual_HArray1OfTextOrCharacter_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfTextOrCharacter >":
    return _StepVisual.Handle_StepVisual_HArray1OfTextOrCharacter_DownCast(t)
Handle_StepVisual_HArray1OfTextOrCharacter_DownCast = _StepVisual.Handle_StepVisual_HArray1OfTextOrCharacter_DownCast

def Handle_StepVisual_HArray1OfTextOrCharacter_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfTextOrCharacter > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfTextOrCharacter_IsNull(t)
Handle_StepVisual_HArray1OfTextOrCharacter_IsNull = _StepVisual.Handle_StepVisual_HArray1OfTextOrCharacter_IsNull

def Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_Create() -> "opencascade::handle< StepVisual_HArray1OfSurfaceStyleElementSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_Create()
Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_Create

def Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfSurfaceStyleElementSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_DownCast(t)
Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_DownCast

def Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfSurfaceStyleElementSelect > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_IsNull(t)
Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_IsNull

def Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_Create() -> "opencascade::handle< StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_Create()
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_Create

def Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_DownCast(t)
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_DownCast

def Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_IsNull(t)
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_IsNull

def Handle_StepVisual_HArray1OfLayeredItem_Create() -> "opencascade::handle< StepVisual_HArray1OfLayeredItem >":
    return _StepVisual.Handle_StepVisual_HArray1OfLayeredItem_Create()
Handle_StepVisual_HArray1OfLayeredItem_Create = _StepVisual.Handle_StepVisual_HArray1OfLayeredItem_Create

def Handle_StepVisual_HArray1OfLayeredItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfLayeredItem >":
    return _StepVisual.Handle_StepVisual_HArray1OfLayeredItem_DownCast(t)
Handle_StepVisual_HArray1OfLayeredItem_DownCast = _StepVisual.Handle_StepVisual_HArray1OfLayeredItem_DownCast

def Handle_StepVisual_HArray1OfLayeredItem_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfLayeredItem > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfLayeredItem_IsNull(t)
Handle_StepVisual_HArray1OfLayeredItem_IsNull = _StepVisual.Handle_StepVisual_HArray1OfLayeredItem_IsNull

def Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_Create() -> "opencascade::handle< StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_Create()
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_Create

def Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect >":
    return _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_DownCast(t)
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_DownCast

def Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_IsNull(t)
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_IsNull

def Handle_StepVisual_HArray1OfInvisibleItem_Create() -> "opencascade::handle< StepVisual_HArray1OfInvisibleItem >":
    return _StepVisual.Handle_StepVisual_HArray1OfInvisibleItem_Create()
Handle_StepVisual_HArray1OfInvisibleItem_Create = _StepVisual.Handle_StepVisual_HArray1OfInvisibleItem_Create

def Handle_StepVisual_HArray1OfInvisibleItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepVisual_HArray1OfInvisibleItem >":
    return _StepVisual.Handle_StepVisual_HArray1OfInvisibleItem_DownCast(t)
Handle_StepVisual_HArray1OfInvisibleItem_DownCast = _StepVisual.Handle_StepVisual_HArray1OfInvisibleItem_DownCast

def Handle_StepVisual_HArray1OfInvisibleItem_IsNull(t: 'opencascade::handle< StepVisual_HArray1OfInvisibleItem > const &') -> "bool":
    return _StepVisual.Handle_StepVisual_HArray1OfInvisibleItem_IsNull(t)
Handle_StepVisual_HArray1OfInvisibleItem_IsNull = _StepVisual.Handle_StepVisual_HArray1OfInvisibleItem_IsNull
class StepVisual_Array1OfTessellatedItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfTessellatedItem_swiginit(self, _StepVisual.new_StepVisual_Array1OfTessellatedItem(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfTessellatedItem

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfTessellatedItem.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_begin, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.end = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_end, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_cbegin, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_cend, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Init, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Size, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Length, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_IsEmpty, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Lower, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Upper, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_IsDeletable, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_IsAllocated, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Assign, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Move, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Set, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.First = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_First, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_ChangeFirst, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Last, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_ChangeLast, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Value, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_ChangeValue, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem___call__, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_SetValue, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfTessellatedItem_Resize, None, StepVisual_Array1OfTessellatedItem)
StepVisual_Array1OfTessellatedItem_swigregister = _StepVisual.StepVisual_Array1OfTessellatedItem_swigregister
StepVisual_Array1OfTessellatedItem_swigregister(StepVisual_Array1OfTessellatedItem)

class StepVisual_Array1OfLayeredItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfLayeredItem_swiginit(self, _StepVisual.new_StepVisual_Array1OfLayeredItem(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfLayeredItem

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfLayeredItem.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_begin, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.end = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_end, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_cbegin, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_cend, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Init, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Size, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Length, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_IsEmpty, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Lower, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Upper, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_IsDeletable, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_IsAllocated, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Assign, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Move, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Set, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.First = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_First, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_ChangeFirst, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Last, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_ChangeLast, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Value, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_ChangeValue, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem___call__, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_SetValue, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfLayeredItem_Resize, None, StepVisual_Array1OfLayeredItem)
StepVisual_Array1OfLayeredItem_swigregister = _StepVisual.StepVisual_Array1OfLayeredItem_swigregister
StepVisual_Array1OfLayeredItem_swigregister(StepVisual_Array1OfLayeredItem)

class StepVisual_Array1OfAnnotationPlaneElement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfAnnotationPlaneElement_swiginit(self, _StepVisual.new_StepVisual_Array1OfAnnotationPlaneElement(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfAnnotationPlaneElement

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfAnnotationPlaneElement.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_begin, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.end = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_end, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_cbegin, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_cend, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Init, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Size, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Length, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_IsEmpty, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Lower, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Upper, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_IsDeletable, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_IsAllocated, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Assign, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Move, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Set, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.First = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_First, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_ChangeFirst, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Last, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_ChangeLast, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Value, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_ChangeValue, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement___call__, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_SetValue, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Resize, None, StepVisual_Array1OfAnnotationPlaneElement)
StepVisual_Array1OfAnnotationPlaneElement_swigregister = _StepVisual.StepVisual_Array1OfAnnotationPlaneElement_swigregister
StepVisual_Array1OfAnnotationPlaneElement_swigregister(StepVisual_Array1OfAnnotationPlaneElement)

class StepVisual_Array1OfPresentationStyleAssignment(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfPresentationStyleAssignment_swiginit(self, _StepVisual.new_StepVisual_Array1OfPresentationStyleAssignment(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfPresentationStyleAssignment

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfPresentationStyleAssignment.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_begin, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.end = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_end, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_cbegin, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_cend, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Init, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Size, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Length, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_IsEmpty, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Lower, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Upper, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_IsDeletable, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_IsAllocated, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Assign, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Move, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Set, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.First = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_First, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_ChangeFirst, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Last, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_ChangeLast, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Value, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_ChangeValue, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment___call__, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_SetValue, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Resize, None, StepVisual_Array1OfPresentationStyleAssignment)
StepVisual_Array1OfPresentationStyleAssignment_swigregister = _StepVisual.StepVisual_Array1OfPresentationStyleAssignment_swigregister
StepVisual_Array1OfPresentationStyleAssignment_swigregister(StepVisual_Array1OfPresentationStyleAssignment)

class StepVisual_Array1OfSurfaceStyleElementSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfSurfaceStyleElementSelect(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfSurfaceStyleElementSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfSurfaceStyleElementSelect.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_begin, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.end = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_end, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_cbegin, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_cend, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Init, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Size, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Length, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_IsEmpty, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Lower, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Upper, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_IsDeletable, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_IsAllocated, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Assign, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Move, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Set, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.First = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_First, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_ChangeFirst, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Last, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_ChangeLast, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Value, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_ChangeValue, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect___call__, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_SetValue, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Resize, None, StepVisual_Array1OfSurfaceStyleElementSelect)
StepVisual_Array1OfSurfaceStyleElementSelect_swigregister = _StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_swigregister
StepVisual_Array1OfSurfaceStyleElementSelect_swigregister(StepVisual_Array1OfSurfaceStyleElementSelect)

class StepVisual_Array1OfInvisibleItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfInvisibleItem_swiginit(self, _StepVisual.new_StepVisual_Array1OfInvisibleItem(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfInvisibleItem

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfInvisibleItem.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_begin, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.end = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_end, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_cbegin, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_cend, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Init, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Size, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Length, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_IsEmpty, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Lower, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Upper, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_IsDeletable, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_IsAllocated, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Assign, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Move, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Set, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.First = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_First, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_ChangeFirst, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Last, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_ChangeLast, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Value, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_ChangeValue, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem___call__, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_SetValue, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfInvisibleItem_Resize, None, StepVisual_Array1OfInvisibleItem)
StepVisual_Array1OfInvisibleItem_swigregister = _StepVisual.StepVisual_Array1OfInvisibleItem_swigregister
StepVisual_Array1OfInvisibleItem_swigregister(StepVisual_Array1OfInvisibleItem)

class StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_begin, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.end = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_end, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_cbegin, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_cend, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Init, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Size, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Length, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_IsEmpty, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Lower, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Upper, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_IsDeletable, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_IsAllocated, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Assign, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Move, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Set, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.First = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_First, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_ChangeFirst, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Last, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_ChangeLast, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Value, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_ChangeValue, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect___call__, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_SetValue, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Resize, None, StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_swigregister = _StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_swigregister
StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_swigregister(StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)

class StepVisual_Array1OfTextOrCharacter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfTextOrCharacter_swiginit(self, _StepVisual.new_StepVisual_Array1OfTextOrCharacter(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfTextOrCharacter

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfTextOrCharacter.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_begin, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.end = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_end, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_cbegin, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_cend, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Init, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Size, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Length, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_IsEmpty, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Lower, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Upper, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_IsDeletable, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_IsAllocated, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Assign, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Move, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Set, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.First = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_First, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_ChangeFirst, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Last, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_ChangeLast, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Value, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_ChangeValue, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter___call__, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_SetValue, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfTextOrCharacter_Resize, None, StepVisual_Array1OfTextOrCharacter)
StepVisual_Array1OfTextOrCharacter_swigregister = _StepVisual.StepVisual_Array1OfTextOrCharacter_swigregister
StepVisual_Array1OfTextOrCharacter_swigregister(StepVisual_Array1OfTextOrCharacter)

class StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_begin, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.end = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_end, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_cbegin, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_cend, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Init, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Size, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Length, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_IsEmpty, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Lower, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Upper, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_IsDeletable, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_IsAllocated, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Assign, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Move, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Set, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.First = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_First, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_ChangeFirst, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Last, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_ChangeLast, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Value, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_ChangeValue, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect___call__, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_SetValue, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Resize, None, StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_swigregister = _StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_swigregister
StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_swigregister(StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)

class StepVisual_Array1OfPresentationStyleSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfPresentationStyleSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfPresentationStyleSelect(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfPresentationStyleSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfPresentationStyleSelect.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_begin, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.end = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_end, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_cbegin, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_cend, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Init, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Size, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Length, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_IsEmpty, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Lower, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Upper, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_IsDeletable, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_IsAllocated, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Assign, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Move, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Set, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.First = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_First, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_ChangeFirst, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Last, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_ChangeLast, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Value, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_ChangeValue, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect___call__, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_SetValue, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Resize, None, StepVisual_Array1OfPresentationStyleSelect)
StepVisual_Array1OfPresentationStyleSelect_swigregister = _StepVisual.StepVisual_Array1OfPresentationStyleSelect_swigregister
StepVisual_Array1OfPresentationStyleSelect_swigregister(StepVisual_Array1OfPresentationStyleSelect)

class StepVisual_Array1OfBoxCharacteristicSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfBoxCharacteristicSelect(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfBoxCharacteristicSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfBoxCharacteristicSelect.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_begin, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.end = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_end, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_cbegin, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_cend, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Init, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Size, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Length, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_IsEmpty, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Lower, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Upper, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_IsDeletable, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_IsAllocated, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Assign, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Move, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Set, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.First = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_First, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_ChangeFirst, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Last, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_ChangeLast, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Value, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_ChangeValue, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect___call__, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_SetValue, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Resize, None, StepVisual_Array1OfBoxCharacteristicSelect)
StepVisual_Array1OfBoxCharacteristicSelect_swigregister = _StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_swigregister
StepVisual_Array1OfBoxCharacteristicSelect_swigregister(StepVisual_Array1OfBoxCharacteristicSelect)

class StepVisual_Array1OfCurveStyleFontPattern(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfCurveStyleFontPattern_swiginit(self, _StepVisual.new_StepVisual_Array1OfCurveStyleFontPattern(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfCurveStyleFontPattern

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfCurveStyleFontPattern.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_begin, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.end = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_end, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_cbegin, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_cend, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Init, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Size, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Length, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_IsEmpty, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Lower, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Upper, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_IsDeletable, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_IsAllocated, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Assign, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Move, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Set, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.First = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_First, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_ChangeFirst, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Last, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_ChangeLast, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Value, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_ChangeValue, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern___call__, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_SetValue, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Resize, None, StepVisual_Array1OfCurveStyleFontPattern)
StepVisual_Array1OfCurveStyleFontPattern_swigregister = _StepVisual.StepVisual_Array1OfCurveStyleFontPattern_swigregister
StepVisual_Array1OfCurveStyleFontPattern_swigregister(StepVisual_Array1OfCurveStyleFontPattern)

class StepVisual_VectorOfHSequenceOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_VectorOfHSequenceOfInteger_swiginit(self, _StepVisual.new_StepVisual_VectorOfHSequenceOfInteger(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_VectorOfHSequenceOfInteger
StepVisual_VectorOfHSequenceOfInteger.begin = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_begin, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.end = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_end, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.cbegin = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_cbegin, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.cend = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_cend, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Length = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Length, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Size = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Size, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Lower = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Lower, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Upper = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Upper, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.IsEmpty = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_IsEmpty, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Assign = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Assign, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Set = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Set, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Append = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Append, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Appended = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Appended, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Value = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Value, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.First = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_First, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_ChangeFirst, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.Last = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Last, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.ChangeLast = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_ChangeLast, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.__call__ = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger___call__, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.ChangeValue = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_ChangeValue, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger.SetValue = new_instancemethod(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_SetValue, None, StepVisual_VectorOfHSequenceOfInteger)
StepVisual_VectorOfHSequenceOfInteger_swigregister = _StepVisual.StepVisual_VectorOfHSequenceOfInteger_swigregister
StepVisual_VectorOfHSequenceOfInteger_swigregister(StepVisual_VectorOfHSequenceOfInteger)

class StepVisual_Array1OfDirectionCountSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfDirectionCountSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfDirectionCountSelect(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfDirectionCountSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfDirectionCountSelect.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_begin, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.end = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_end, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_cbegin, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_cend, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Init, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Size, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Length, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_IsEmpty, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Lower, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Upper, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_IsDeletable, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_IsAllocated, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Assign, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Move, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Set, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.First = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_First, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_ChangeFirst, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Last, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_ChangeLast, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Value, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_ChangeValue, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect___call__, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_SetValue, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Resize, None, StepVisual_Array1OfDirectionCountSelect)
StepVisual_Array1OfDirectionCountSelect_swigregister = _StepVisual.StepVisual_Array1OfDirectionCountSelect_swigregister
StepVisual_Array1OfDirectionCountSelect_swigregister(StepVisual_Array1OfDirectionCountSelect)

class StepVisual_Array1OfDraughtingCalloutElement(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfDraughtingCalloutElement_swiginit(self, _StepVisual.new_StepVisual_Array1OfDraughtingCalloutElement(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfDraughtingCalloutElement

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfDraughtingCalloutElement.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_begin, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.end = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_end, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_cbegin, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_cend, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Init, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Size, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Length, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_IsEmpty, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Lower, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Upper, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_IsDeletable, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_IsAllocated, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Assign, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Move, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Set, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.First = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_First, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_ChangeFirst, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Last, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_ChangeLast, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Value, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_ChangeValue, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement___call__, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_SetValue, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Resize, None, StepVisual_Array1OfDraughtingCalloutElement)
StepVisual_Array1OfDraughtingCalloutElement_swigregister = _StepVisual.StepVisual_Array1OfDraughtingCalloutElement_swigregister
StepVisual_Array1OfDraughtingCalloutElement_swigregister(StepVisual_Array1OfDraughtingCalloutElement)

class StepVisual_Array1OfFillStyleSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfFillStyleSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfFillStyleSelect(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfFillStyleSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfFillStyleSelect.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_begin, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.end = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_end, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_cbegin, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_cend, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Init, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Size, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Length, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_IsEmpty, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Lower, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Upper, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_IsDeletable, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_IsAllocated, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Assign, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Move, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Set, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.First = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_First, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_ChangeFirst, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Last, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_ChangeLast, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Value, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_ChangeValue, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect___call__, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_SetValue, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfFillStyleSelect_Resize, None, StepVisual_Array1OfFillStyleSelect)
StepVisual_Array1OfFillStyleSelect_swigregister = _StepVisual.StepVisual_Array1OfFillStyleSelect_swigregister
StepVisual_Array1OfFillStyleSelect_swigregister(StepVisual_Array1OfFillStyleSelect)

class StepVisual_Array1OfStyleContextSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfStyleContextSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfStyleContextSelect(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfStyleContextSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepVisual_Array1OfStyleContextSelect.begin = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_begin, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.end = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_end, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.cbegin = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_cbegin, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.cend = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_cend, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Init = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Init, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Size = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Size, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Length = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Length, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.IsEmpty = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_IsEmpty, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Lower = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Lower, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Upper = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Upper, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.IsDeletable = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_IsDeletable, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.IsAllocated = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_IsAllocated, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Assign = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Assign, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Move = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Move, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Set = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Set, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.First = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_First, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.ChangeFirst = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_ChangeFirst, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Last = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Last, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.ChangeLast = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_ChangeLast, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Value = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Value, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.ChangeValue = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_ChangeValue, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.__call__ = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect___call__, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.SetValue = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_SetValue, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect.Resize = new_instancemethod(_StepVisual.StepVisual_Array1OfStyleContextSelect_Resize, None, StepVisual_Array1OfStyleContextSelect)
StepVisual_Array1OfStyleContextSelect_swigregister = _StepVisual.StepVisual_Array1OfStyleContextSelect_swigregister
StepVisual_Array1OfStyleContextSelect_swigregister(StepVisual_Array1OfStyleContextSelect)

class StepVisual_AnnotationFillArea(OCC.Core.StepShape.StepShape_GeometricCurveSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a AnnotationFillArea
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationFillArea_swiginit(self, _StepVisual.new_StepVisual_AnnotationFillArea(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationFillArea_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationFillArea
StepVisual_AnnotationFillArea_swigregister = _StepVisual.StepVisual_AnnotationFillArea_swigregister
StepVisual_AnnotationFillArea_swigregister(StepVisual_AnnotationFillArea)

class StepVisual_AnnotationPlaneElement(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DraughtingCallout(self, *args) -> "opencascade::handle< StepVisual_DraughtingCallout >":
        """
        * returns Value as a DraughtingCallout (Null if another type)
        	:rtype: opencascade::handle<StepVisual_DraughtingCallout>
        """
        return _StepVisual.StepVisual_AnnotationPlaneElement_DraughtingCallout(self, *args)


    def __init__(self, *args):
        """
        * Returns a AnnotationPlaneElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationPlaneElement_swiginit(self, _StepVisual.new_StepVisual_AnnotationPlaneElement(*args))

    def StyledItem(self, *args) -> "opencascade::handle< StepVisual_StyledItem >":
        """
        * returns Value as a StyledItem (Null if another type)
        	:rtype: opencascade::handle<StepVisual_StyledItem>
        """
        return _StepVisual.StepVisual_AnnotationPlaneElement_StyledItem(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationPlaneElement
StepVisual_AnnotationPlaneElement.DraughtingCallout = new_instancemethod(_StepVisual.StepVisual_AnnotationPlaneElement_DraughtingCallout, None, StepVisual_AnnotationPlaneElement)
StepVisual_AnnotationPlaneElement.StyledItem = new_instancemethod(_StepVisual.StepVisual_AnnotationPlaneElement_StyledItem, None, StepVisual_AnnotationPlaneElement)
StepVisual_AnnotationPlaneElement_swigregister = _StepVisual.StepVisual_AnnotationPlaneElement_swigregister
StepVisual_AnnotationPlaneElement_swigregister(StepVisual_AnnotationPlaneElement)

class StepVisual_AnnotationText(OCC.Core.StepRepr.StepRepr_MappedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a AnnotationText
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationText_swiginit(self, _StepVisual.new_StepVisual_AnnotationText(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationText_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationText
StepVisual_AnnotationText_swigregister = _StepVisual.StepVisual_AnnotationText_swigregister
StepVisual_AnnotationText_swigregister(StepVisual_AnnotationText)

class StepVisual_AreaInSet(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Area(self, *args) -> "opencascade::handle< StepVisual_PresentationArea >":
        """:rtype: opencascade::handle<StepVisual_PresentationArea>"""
        return _StepVisual.StepVisual_AreaInSet_Area(self, *args)


    def InSet(self, *args) -> "opencascade::handle< StepVisual_PresentationSet >":
        """:rtype: opencascade::handle<StepVisual_PresentationSet>"""
        return _StepVisual.StepVisual_AreaInSet_InSet(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aArea:
        	:type aArea: StepVisual_PresentationArea
        	:param aInSet:
        	:type aInSet: StepVisual_PresentationSet
        	:rtype: None
        """
        return _StepVisual.StepVisual_AreaInSet_Init(self, *args)


    def SetArea(self, *args) -> "void":
        """
        :param aArea:
        	:type aArea: StepVisual_PresentationArea
        	:rtype: None
        """
        return _StepVisual.StepVisual_AreaInSet_SetArea(self, *args)


    def SetInSet(self, *args) -> "void":
        """
        :param aInSet:
        	:type aInSet: StepVisual_PresentationSet
        	:rtype: None
        """
        return _StepVisual.StepVisual_AreaInSet_SetInSet(self, *args)


    def __init__(self, *args):
        """
        * Returns a AreaInSet
        	:rtype: None
        """
        _StepVisual.StepVisual_AreaInSet_swiginit(self, _StepVisual.new_StepVisual_AreaInSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AreaInSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AreaInSet
StepVisual_AreaInSet.Area = new_instancemethod(_StepVisual.StepVisual_AreaInSet_Area, None, StepVisual_AreaInSet)
StepVisual_AreaInSet.InSet = new_instancemethod(_StepVisual.StepVisual_AreaInSet_InSet, None, StepVisual_AreaInSet)
StepVisual_AreaInSet.Init = new_instancemethod(_StepVisual.StepVisual_AreaInSet_Init, None, StepVisual_AreaInSet)
StepVisual_AreaInSet.SetArea = new_instancemethod(_StepVisual.StepVisual_AreaInSet_SetArea, None, StepVisual_AreaInSet)
StepVisual_AreaInSet.SetInSet = new_instancemethod(_StepVisual.StepVisual_AreaInSet_SetInSet, None, StepVisual_AreaInSet)
StepVisual_AreaInSet_swigregister = _StepVisual.StepVisual_AreaInSet_swigregister
StepVisual_AreaInSet_swigregister(StepVisual_AreaInSet)

class StepVisual_AreaOrView(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PresentationArea(self, *args) -> "opencascade::handle< StepVisual_PresentationArea >":
        """
        * returns Value as a PresentationArea (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationArea>
        """
        return _StepVisual.StepVisual_AreaOrView_PresentationArea(self, *args)


    def PresentationView(self, *args) -> "opencascade::handle< StepVisual_PresentationView >":
        """
        * returns Value as a PresentationView (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationView>
        """
        return _StepVisual.StepVisual_AreaOrView_PresentationView(self, *args)


    def __init__(self, *args):
        """
        * Returns a AreaOrView SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_AreaOrView_swiginit(self, _StepVisual.new_StepVisual_AreaOrView(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AreaOrView
StepVisual_AreaOrView.PresentationArea = new_instancemethod(_StepVisual.StepVisual_AreaOrView_PresentationArea, None, StepVisual_AreaOrView)
StepVisual_AreaOrView.PresentationView = new_instancemethod(_StepVisual.StepVisual_AreaOrView_PresentationView, None, StepVisual_AreaOrView)
StepVisual_AreaOrView_swigregister = _StepVisual.StepVisual_AreaOrView_swigregister
StepVisual_AreaOrView_swigregister(StepVisual_AreaOrView)

class StepVisual_BoxCharacteristicSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def RealValue(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_BoxCharacteristicSelect_RealValue(self, *args)


    def SetRealValue(self, *args) -> "void":
        """
        :param aValue:
        	:type aValue: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_BoxCharacteristicSelect_SetRealValue(self, *args)


    def SetTypeOfContent(self, *args) -> "void":
        """
        :param aType:
        	:type aType: int
        	:rtype: None
        """
        return _StepVisual.StepVisual_BoxCharacteristicSelect_SetTypeOfContent(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_BoxCharacteristicSelect_swiginit(self, _StepVisual.new_StepVisual_BoxCharacteristicSelect(*args))

    def TypeOfContent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_BoxCharacteristicSelect_TypeOfContent(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_BoxCharacteristicSelect
StepVisual_BoxCharacteristicSelect.RealValue = new_instancemethod(_StepVisual.StepVisual_BoxCharacteristicSelect_RealValue, None, StepVisual_BoxCharacteristicSelect)
StepVisual_BoxCharacteristicSelect.SetRealValue = new_instancemethod(_StepVisual.StepVisual_BoxCharacteristicSelect_SetRealValue, None, StepVisual_BoxCharacteristicSelect)
StepVisual_BoxCharacteristicSelect.SetTypeOfContent = new_instancemethod(_StepVisual.StepVisual_BoxCharacteristicSelect_SetTypeOfContent, None, StepVisual_BoxCharacteristicSelect)
StepVisual_BoxCharacteristicSelect.TypeOfContent = new_instancemethod(_StepVisual.StepVisual_BoxCharacteristicSelect_TypeOfContent, None, StepVisual_BoxCharacteristicSelect)
StepVisual_BoxCharacteristicSelect_swigregister = _StepVisual.StepVisual_BoxCharacteristicSelect_swigregister
StepVisual_BoxCharacteristicSelect_swigregister(StepVisual_BoxCharacteristicSelect)

class StepVisual_CameraImage(OCC.Core.StepRepr.StepRepr_MappedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a CameraImage
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraImage_swiginit(self, _StepVisual.new_StepVisual_CameraImage(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraImage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraImage
StepVisual_CameraImage_swigregister = _StepVisual.StepVisual_CameraImage_swigregister
StepVisual_CameraImage_swigregister(StepVisual_CameraImage)

class StepVisual_CameraModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a CameraModel
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModel_swiginit(self, _StepVisual.new_StepVisual_CameraModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModel
StepVisual_CameraModel_swigregister = _StepVisual.StepVisual_CameraModel_swigregister
StepVisual_CameraModel_swigregister(StepVisual_CameraModel)

class StepVisual_CameraModelD3MultiClippingInterectionSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CameraModelD3MultiClippingUnion(self, *args) -> "opencascade::handle< StepVisual_CameraModelD3MultiClippingUnion >":
        """
        * returns Value as a CameraModelD3MultiClippingUnion (Null if another type)
        	:rtype: opencascade::handle<StepVisual_CameraModelD3MultiClippingUnion>
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_CameraModelD3MultiClippingUnion(self, *args)


    def Plane(self, *args) -> "opencascade::handle< StepGeom_Plane >":
        """
        * returns Value as a Plane (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Plane>
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_Plane(self, *args)


    def __init__(self, *args):
        """
        * Returns a CameraModelD3MultiClippingInterectionSelect select type
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClippingInterectionSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClippingInterectionSelect
StepVisual_CameraModelD3MultiClippingInterectionSelect.CameraModelD3MultiClippingUnion = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_CameraModelD3MultiClippingUnion, None, StepVisual_CameraModelD3MultiClippingInterectionSelect)
StepVisual_CameraModelD3MultiClippingInterectionSelect.Plane = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_Plane, None, StepVisual_CameraModelD3MultiClippingInterectionSelect)
StepVisual_CameraModelD3MultiClippingInterectionSelect_swigregister = _StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_swigregister
StepVisual_CameraModelD3MultiClippingInterectionSelect_swigregister(StepVisual_CameraModelD3MultiClippingInterectionSelect)

class StepVisual_CameraModelD3MultiClippingIntersection(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theShapeClipping:
        	:type theShapeClipping: StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_Init(self, *args)


    def SetShapeClipping(self, *args) -> "void":
        """
        :param theShapeClipping:
        	:type theShapeClipping: StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_SetShapeClipping(self, *args)


    def ShapeClipping(self, *args) -> "opencascade::handle< StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect > const":
        """:rtype: opencascade::handle<StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect>"""
        return _StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_ShapeClipping(self, *args)


    def __init__(self, *args):
        """
        * Returns a StepVisual_CameraModelD3MultiClippingIntersection
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClippingIntersection(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD3MultiClippingIntersection_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClippingIntersection
StepVisual_CameraModelD3MultiClippingIntersection.Init = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_Init, None, StepVisual_CameraModelD3MultiClippingIntersection)
StepVisual_CameraModelD3MultiClippingIntersection.SetShapeClipping = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_SetShapeClipping, None, StepVisual_CameraModelD3MultiClippingIntersection)
StepVisual_CameraModelD3MultiClippingIntersection.ShapeClipping = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_ShapeClipping, None, StepVisual_CameraModelD3MultiClippingIntersection)
StepVisual_CameraModelD3MultiClippingIntersection_swigregister = _StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_swigregister
StepVisual_CameraModelD3MultiClippingIntersection_swigregister(StepVisual_CameraModelD3MultiClippingIntersection)

class StepVisual_CameraModelD3MultiClippingUnion(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theShapeClipping:
        	:type theShapeClipping: StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClippingUnion_Init(self, *args)


    def SetShapeClipping(self, *args) -> "void":
        """
        :param theShapeClipping:
        	:type theShapeClipping: StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClippingUnion_SetShapeClipping(self, *args)


    def ShapeClipping(self, *args) -> "opencascade::handle< StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect > const":
        """:rtype: opencascade::handle<StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect>"""
        return _StepVisual.StepVisual_CameraModelD3MultiClippingUnion_ShapeClipping(self, *args)


    def __init__(self, *args):
        """
        * Returns a StepVisual_CameraModelD3MultiClippingUnion
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClippingUnion_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClippingUnion(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD3MultiClippingUnion_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClippingUnion
StepVisual_CameraModelD3MultiClippingUnion.Init = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingUnion_Init, None, StepVisual_CameraModelD3MultiClippingUnion)
StepVisual_CameraModelD3MultiClippingUnion.SetShapeClipping = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingUnion_SetShapeClipping, None, StepVisual_CameraModelD3MultiClippingUnion)
StepVisual_CameraModelD3MultiClippingUnion.ShapeClipping = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingUnion_ShapeClipping, None, StepVisual_CameraModelD3MultiClippingUnion)
StepVisual_CameraModelD3MultiClippingUnion_swigregister = _StepVisual.StepVisual_CameraModelD3MultiClippingUnion_swigregister
StepVisual_CameraModelD3MultiClippingUnion_swigregister(StepVisual_CameraModelD3MultiClippingUnion)

class StepVisual_CameraModelD3MultiClippingUnionSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CameraModelD3MultiClippingIntersection(self, *args) -> "opencascade::handle< StepVisual_CameraModelD3MultiClippingIntersection >":
        """
        * returns Value as a CameraModelD3MultiClippingIntersection (Null if another type)
        	:rtype: opencascade::handle<StepVisual_CameraModelD3MultiClippingIntersection>
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_CameraModelD3MultiClippingIntersection(self, *args)


    def Plane(self, *args) -> "opencascade::handle< StepGeom_Plane >":
        """
        * returns Value as a Plane (Null if another type)
        	:rtype: opencascade::handle<StepGeom_Plane>
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_Plane(self, *args)


    def __init__(self, *args):
        """
        * Returns a CameraModelD3MultiClippingUnionSelect select type
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClippingUnionSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClippingUnionSelect
StepVisual_CameraModelD3MultiClippingUnionSelect.CameraModelD3MultiClippingIntersection = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_CameraModelD3MultiClippingIntersection, None, StepVisual_CameraModelD3MultiClippingUnionSelect)
StepVisual_CameraModelD3MultiClippingUnionSelect.Plane = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_Plane, None, StepVisual_CameraModelD3MultiClippingUnionSelect)
StepVisual_CameraModelD3MultiClippingUnionSelect_swigregister = _StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_swigregister
StepVisual_CameraModelD3MultiClippingUnionSelect_swigregister(StepVisual_CameraModelD3MultiClippingUnionSelect)

class StepVisual_CameraUsage(OCC.Core.StepRepr.StepRepr_RepresentationMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a CameraUsage
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraUsage_swiginit(self, _StepVisual.new_StepVisual_CameraUsage(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraUsage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraUsage
StepVisual_CameraUsage_swigregister = _StepVisual.StepVisual_CameraUsage_swigregister
StepVisual_CameraUsage_swigregister(StepVisual_CameraUsage)

class StepVisual_Colour(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Colour
        	:rtype: None
        """
        _StepVisual.StepVisual_Colour_swiginit(self, _StepVisual.new_StepVisual_Colour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_Colour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_Colour
StepVisual_Colour_swigregister = _StepVisual.StepVisual_Colour_swigregister
StepVisual_Colour_swigregister(StepVisual_Colour)

class StepVisual_CompositeText(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CollectedText(self, *args) -> "opencascade::handle< StepVisual_HArray1OfTextOrCharacter >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfTextOrCharacter>"""
        return _StepVisual.StepVisual_CompositeText_CollectedText(self, *args)


    def CollectedTextValue(self, *args) -> "StepVisual_TextOrCharacter":
        """
        :param num:
        	:type num: int
        	:rtype: StepVisual_TextOrCharacter
        """
        return _StepVisual.StepVisual_CompositeText_CollectedTextValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aCollectedText:
        	:type aCollectedText: StepVisual_HArray1OfTextOrCharacter
        	:rtype: None
        """
        return _StepVisual.StepVisual_CompositeText_Init(self, *args)


    def NbCollectedText(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_CompositeText_NbCollectedText(self, *args)


    def SetCollectedText(self, *args) -> "void":
        """
        :param aCollectedText:
        	:type aCollectedText: StepVisual_HArray1OfTextOrCharacter
        	:rtype: None
        """
        return _StepVisual.StepVisual_CompositeText_SetCollectedText(self, *args)


    def __init__(self, *args):
        """
        * Returns a CompositeText
        	:rtype: None
        """
        _StepVisual.StepVisual_CompositeText_swiginit(self, _StepVisual.new_StepVisual_CompositeText(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CompositeText_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CompositeText
StepVisual_CompositeText.CollectedText = new_instancemethod(_StepVisual.StepVisual_CompositeText_CollectedText, None, StepVisual_CompositeText)
StepVisual_CompositeText.CollectedTextValue = new_instancemethod(_StepVisual.StepVisual_CompositeText_CollectedTextValue, None, StepVisual_CompositeText)
StepVisual_CompositeText.Init = new_instancemethod(_StepVisual.StepVisual_CompositeText_Init, None, StepVisual_CompositeText)
StepVisual_CompositeText.NbCollectedText = new_instancemethod(_StepVisual.StepVisual_CompositeText_NbCollectedText, None, StepVisual_CompositeText)
StepVisual_CompositeText.SetCollectedText = new_instancemethod(_StepVisual.StepVisual_CompositeText_SetCollectedText, None, StepVisual_CompositeText)
StepVisual_CompositeText_swigregister = _StepVisual.StepVisual_CompositeText_swigregister
StepVisual_CompositeText_swigregister(StepVisual_CompositeText)

class StepVisual_CurveStyle(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CurveColour(self, *args) -> "opencascade::handle< StepVisual_Colour >":
        """:rtype: opencascade::handle<StepVisual_Colour>"""
        return _StepVisual.StepVisual_CurveStyle_CurveColour(self, *args)


    def CurveFont(self, *args) -> "StepVisual_CurveStyleFontSelect":
        """:rtype: StepVisual_CurveStyleFontSelect"""
        return _StepVisual.StepVisual_CurveStyle_CurveFont(self, *args)


    def CurveWidth(self, *args) -> "StepBasic_SizeSelect":
        """:rtype: StepBasic_SizeSelect"""
        return _StepVisual.StepVisual_CurveStyle_CurveWidth(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aCurveFont:
        	:type aCurveFont: StepVisual_CurveStyleFontSelect
        	:param aCurveWidth:
        	:type aCurveWidth: StepBasic_SizeSelect
        	:param aCurveColour:
        	:type aCurveColour: StepVisual_Colour
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyle_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_CurveStyle_Name(self, *args)


    def SetCurveColour(self, *args) -> "void":
        """
        :param aCurveColour:
        	:type aCurveColour: StepVisual_Colour
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyle_SetCurveColour(self, *args)


    def SetCurveFont(self, *args) -> "void":
        """
        :param aCurveFont:
        	:type aCurveFont: StepVisual_CurveStyleFontSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyle_SetCurveFont(self, *args)


    def SetCurveWidth(self, *args) -> "void":
        """
        :param aCurveWidth:
        	:type aCurveWidth: StepBasic_SizeSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyle_SetCurveWidth(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyle_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a CurveStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_CurveStyle_swiginit(self, _StepVisual.new_StepVisual_CurveStyle(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CurveStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CurveStyle
StepVisual_CurveStyle.CurveColour = new_instancemethod(_StepVisual.StepVisual_CurveStyle_CurveColour, None, StepVisual_CurveStyle)
StepVisual_CurveStyle.CurveFont = new_instancemethod(_StepVisual.StepVisual_CurveStyle_CurveFont, None, StepVisual_CurveStyle)
StepVisual_CurveStyle.CurveWidth = new_instancemethod(_StepVisual.StepVisual_CurveStyle_CurveWidth, None, StepVisual_CurveStyle)
StepVisual_CurveStyle.Init = new_instancemethod(_StepVisual.StepVisual_CurveStyle_Init, None, StepVisual_CurveStyle)
StepVisual_CurveStyle.Name = new_instancemethod(_StepVisual.StepVisual_CurveStyle_Name, None, StepVisual_CurveStyle)
StepVisual_CurveStyle.SetCurveColour = new_instancemethod(_StepVisual.StepVisual_CurveStyle_SetCurveColour, None, StepVisual_CurveStyle)
StepVisual_CurveStyle.SetCurveFont = new_instancemethod(_StepVisual.StepVisual_CurveStyle_SetCurveFont, None, StepVisual_CurveStyle)
StepVisual_CurveStyle.SetCurveWidth = new_instancemethod(_StepVisual.StepVisual_CurveStyle_SetCurveWidth, None, StepVisual_CurveStyle)
StepVisual_CurveStyle.SetName = new_instancemethod(_StepVisual.StepVisual_CurveStyle_SetName, None, StepVisual_CurveStyle)
StepVisual_CurveStyle_swigregister = _StepVisual.StepVisual_CurveStyle_swigregister
StepVisual_CurveStyle_swigregister(StepVisual_CurveStyle)

class StepVisual_CurveStyleFont(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aPatternList:
        	:type aPatternList: StepVisual_HArray1OfCurveStyleFontPattern
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyleFont_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_CurveStyleFont_Name(self, *args)


    def NbPatternList(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_CurveStyleFont_NbPatternList(self, *args)


    def PatternList(self, *args) -> "opencascade::handle< StepVisual_HArray1OfCurveStyleFontPattern >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfCurveStyleFontPattern>"""
        return _StepVisual.StepVisual_CurveStyleFont_PatternList(self, *args)


    def PatternListValue(self, *args) -> "opencascade::handle< StepVisual_CurveStyleFontPattern >":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepVisual_CurveStyleFontPattern>
        """
        return _StepVisual.StepVisual_CurveStyleFont_PatternListValue(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyleFont_SetName(self, *args)


    def SetPatternList(self, *args) -> "void":
        """
        :param aPatternList:
        	:type aPatternList: StepVisual_HArray1OfCurveStyleFontPattern
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyleFont_SetPatternList(self, *args)


    def __init__(self, *args):
        """
        * Returns a CurveStyleFont
        	:rtype: None
        """
        _StepVisual.StepVisual_CurveStyleFont_swiginit(self, _StepVisual.new_StepVisual_CurveStyleFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CurveStyleFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CurveStyleFont
StepVisual_CurveStyleFont.Init = new_instancemethod(_StepVisual.StepVisual_CurveStyleFont_Init, None, StepVisual_CurveStyleFont)
StepVisual_CurveStyleFont.Name = new_instancemethod(_StepVisual.StepVisual_CurveStyleFont_Name, None, StepVisual_CurveStyleFont)
StepVisual_CurveStyleFont.NbPatternList = new_instancemethod(_StepVisual.StepVisual_CurveStyleFont_NbPatternList, None, StepVisual_CurveStyleFont)
StepVisual_CurveStyleFont.PatternList = new_instancemethod(_StepVisual.StepVisual_CurveStyleFont_PatternList, None, StepVisual_CurveStyleFont)
StepVisual_CurveStyleFont.PatternListValue = new_instancemethod(_StepVisual.StepVisual_CurveStyleFont_PatternListValue, None, StepVisual_CurveStyleFont)
StepVisual_CurveStyleFont.SetName = new_instancemethod(_StepVisual.StepVisual_CurveStyleFont_SetName, None, StepVisual_CurveStyleFont)
StepVisual_CurveStyleFont.SetPatternList = new_instancemethod(_StepVisual.StepVisual_CurveStyleFont_SetPatternList, None, StepVisual_CurveStyleFont)
StepVisual_CurveStyleFont_swigregister = _StepVisual.StepVisual_CurveStyleFont_swigregister
StepVisual_CurveStyleFont_swigregister(StepVisual_CurveStyleFont)

class StepVisual_CurveStyleFontPattern(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aVisibleSegmentLength:
        	:type aVisibleSegmentLength: float
        	:param aInvisibleSegmentLength:
        	:type aInvisibleSegmentLength: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyleFontPattern_Init(self, *args)


    def InvisibleSegmentLength(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_CurveStyleFontPattern_InvisibleSegmentLength(self, *args)


    def SetInvisibleSegmentLength(self, *args) -> "void":
        """
        :param aInvisibleSegmentLength:
        	:type aInvisibleSegmentLength: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyleFontPattern_SetInvisibleSegmentLength(self, *args)


    def SetVisibleSegmentLength(self, *args) -> "void":
        """
        :param aVisibleSegmentLength:
        	:type aVisibleSegmentLength: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_CurveStyleFontPattern_SetVisibleSegmentLength(self, *args)


    def __init__(self, *args):
        """
        * Returns a CurveStyleFontPattern
        	:rtype: None
        """
        _StepVisual.StepVisual_CurveStyleFontPattern_swiginit(self, _StepVisual.new_StepVisual_CurveStyleFontPattern(*args))

    def VisibleSegmentLength(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_CurveStyleFontPattern_VisibleSegmentLength(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CurveStyleFontPattern_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CurveStyleFontPattern
StepVisual_CurveStyleFontPattern.Init = new_instancemethod(_StepVisual.StepVisual_CurveStyleFontPattern_Init, None, StepVisual_CurveStyleFontPattern)
StepVisual_CurveStyleFontPattern.InvisibleSegmentLength = new_instancemethod(_StepVisual.StepVisual_CurveStyleFontPattern_InvisibleSegmentLength, None, StepVisual_CurveStyleFontPattern)
StepVisual_CurveStyleFontPattern.SetInvisibleSegmentLength = new_instancemethod(_StepVisual.StepVisual_CurveStyleFontPattern_SetInvisibleSegmentLength, None, StepVisual_CurveStyleFontPattern)
StepVisual_CurveStyleFontPattern.SetVisibleSegmentLength = new_instancemethod(_StepVisual.StepVisual_CurveStyleFontPattern_SetVisibleSegmentLength, None, StepVisual_CurveStyleFontPattern)
StepVisual_CurveStyleFontPattern.VisibleSegmentLength = new_instancemethod(_StepVisual.StepVisual_CurveStyleFontPattern_VisibleSegmentLength, None, StepVisual_CurveStyleFontPattern)
StepVisual_CurveStyleFontPattern_swigregister = _StepVisual.StepVisual_CurveStyleFontPattern_swigregister
StepVisual_CurveStyleFontPattern_swigregister(StepVisual_CurveStyleFontPattern)

class StepVisual_CurveStyleFontSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CurveStyleFont(self, *args) -> "opencascade::handle< StepVisual_CurveStyleFont >":
        """
        * returns Value as a CurveStyleFont (Null if another type)
        	:rtype: opencascade::handle<StepVisual_CurveStyleFont>
        """
        return _StepVisual.StepVisual_CurveStyleFontSelect_CurveStyleFont(self, *args)


    def ExternallyDefinedCurveFont(self, *args) -> "opencascade::handle< StepVisual_ExternallyDefinedCurveFont >":
        """
        * returns Value as a ExternallyDefinedCurveFont (Null if another type)
        	:rtype: opencascade::handle<StepVisual_ExternallyDefinedCurveFont>
        """
        return _StepVisual.StepVisual_CurveStyleFontSelect_ExternallyDefinedCurveFont(self, *args)


    def PreDefinedCurveFont(self, *args) -> "opencascade::handle< StepVisual_PreDefinedCurveFont >":
        """
        * returns Value as a PreDefinedCurveFont (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PreDefinedCurveFont>
        """
        return _StepVisual.StepVisual_CurveStyleFontSelect_PreDefinedCurveFont(self, *args)


    def __init__(self, *args):
        """
        * Returns a CurveStyleFontSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_CurveStyleFontSelect_swiginit(self, _StepVisual.new_StepVisual_CurveStyleFontSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CurveStyleFontSelect
StepVisual_CurveStyleFontSelect.CurveStyleFont = new_instancemethod(_StepVisual.StepVisual_CurveStyleFontSelect_CurveStyleFont, None, StepVisual_CurveStyleFontSelect)
StepVisual_CurveStyleFontSelect.ExternallyDefinedCurveFont = new_instancemethod(_StepVisual.StepVisual_CurveStyleFontSelect_ExternallyDefinedCurveFont, None, StepVisual_CurveStyleFontSelect)
StepVisual_CurveStyleFontSelect.PreDefinedCurveFont = new_instancemethod(_StepVisual.StepVisual_CurveStyleFontSelect_PreDefinedCurveFont, None, StepVisual_CurveStyleFontSelect)
StepVisual_CurveStyleFontSelect_swigregister = _StepVisual.StepVisual_CurveStyleFontSelect_swigregister
StepVisual_CurveStyleFontSelect_swigregister(StepVisual_CurveStyleFontSelect)

class StepVisual_DirectionCountSelect(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def SetTypeOfContent(self, *args) -> "void":
        """
        :param aTypeOfContent:
        	:type aTypeOfContent: int
        	:rtype: None
        """
        return _StepVisual.StepVisual_DirectionCountSelect_SetTypeOfContent(self, *args)


    def SetUDirectionCount(self, *args) -> "void":
        """
        :param aUDirectionCount:
        	:type aUDirectionCount: int
        	:rtype: None
        """
        return _StepVisual.StepVisual_DirectionCountSelect_SetUDirectionCount(self, *args)


    def SetVDirectionCount(self, *args) -> "void":
        """
        :param aUDirectionCount:
        	:type aUDirectionCount: int
        	:rtype: None
        """
        return _StepVisual.StepVisual_DirectionCountSelect_SetVDirectionCount(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_DirectionCountSelect_swiginit(self, _StepVisual.new_StepVisual_DirectionCountSelect(*args))

    def TypeOfContent(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_DirectionCountSelect_TypeOfContent(self, *args)


    def UDirectionCount(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_DirectionCountSelect_UDirectionCount(self, *args)


    def VDirectionCount(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_DirectionCountSelect_VDirectionCount(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DirectionCountSelect
StepVisual_DirectionCountSelect.SetTypeOfContent = new_instancemethod(_StepVisual.StepVisual_DirectionCountSelect_SetTypeOfContent, None, StepVisual_DirectionCountSelect)
StepVisual_DirectionCountSelect.SetUDirectionCount = new_instancemethod(_StepVisual.StepVisual_DirectionCountSelect_SetUDirectionCount, None, StepVisual_DirectionCountSelect)
StepVisual_DirectionCountSelect.SetVDirectionCount = new_instancemethod(_StepVisual.StepVisual_DirectionCountSelect_SetVDirectionCount, None, StepVisual_DirectionCountSelect)
StepVisual_DirectionCountSelect.TypeOfContent = new_instancemethod(_StepVisual.StepVisual_DirectionCountSelect_TypeOfContent, None, StepVisual_DirectionCountSelect)
StepVisual_DirectionCountSelect.UDirectionCount = new_instancemethod(_StepVisual.StepVisual_DirectionCountSelect_UDirectionCount, None, StepVisual_DirectionCountSelect)
StepVisual_DirectionCountSelect.VDirectionCount = new_instancemethod(_StepVisual.StepVisual_DirectionCountSelect_VDirectionCount, None, StepVisual_DirectionCountSelect)
StepVisual_DirectionCountSelect_swigregister = _StepVisual.StepVisual_DirectionCountSelect_swigregister
StepVisual_DirectionCountSelect_swigregister(StepVisual_DirectionCountSelect)

class StepVisual_DraughtingCallout(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Contents(self, *args) -> "opencascade::handle< StepVisual_HArray1OfDraughtingCalloutElement >":
        """
        * Returns field Contents
        	:rtype: inline opencascade::handle<StepVisual_HArray1OfDraughtingCalloutElement>
        """
        return _StepVisual.StepVisual_DraughtingCallout_Contents(self, *args)


    def ContentsValue(self, *args) -> "StepVisual_DraughtingCalloutElement":
        """
        * Returns Contents with the given number
        	:param theNum:
        	:type theNum: int
        	:rtype: inline StepVisual_DraughtingCalloutElement
        """
        return _StepVisual.StepVisual_DraughtingCallout_ContentsValue(self, *args)


    def Init(self, *args) -> "void":
        """
        * Init
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theContents:
        	:type theContents: StepVisual_HArray1OfDraughtingCalloutElement
        	:rtype: None
        """
        return _StepVisual.StepVisual_DraughtingCallout_Init(self, *args)


    def NbContents(self, *args) -> "Standard_Integer":
        """
        * Returns number of Contents
        	:rtype: inline int
        """
        return _StepVisual.StepVisual_DraughtingCallout_NbContents(self, *args)


    def SetContents(self, *args) -> "void":
        """
        * Set field Contents
        	:param theContents:
        	:type theContents: StepVisual_HArray1OfDraughtingCalloutElement
        	:rtype: inline void
        """
        return _StepVisual.StepVisual_DraughtingCallout_SetContents(self, *args)


    def SetContentsValue(self, *args) -> "void":
        """
        * Sets Contents with given number
        	:param theNum:
        	:type theNum: int
        	:param theItem:
        	:type theItem: StepVisual_DraughtingCalloutElement
        	:rtype: inline void
        """
        return _StepVisual.StepVisual_DraughtingCallout_SetContentsValue(self, *args)


    def __init__(self, *args):
        """
        * Returns a DraughtingCallout
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingCallout_swiginit(self, _StepVisual.new_StepVisual_DraughtingCallout(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingCallout_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingCallout
StepVisual_DraughtingCallout.Contents = new_instancemethod(_StepVisual.StepVisual_DraughtingCallout_Contents, None, StepVisual_DraughtingCallout)
StepVisual_DraughtingCallout.ContentsValue = new_instancemethod(_StepVisual.StepVisual_DraughtingCallout_ContentsValue, None, StepVisual_DraughtingCallout)
StepVisual_DraughtingCallout.Init = new_instancemethod(_StepVisual.StepVisual_DraughtingCallout_Init, None, StepVisual_DraughtingCallout)
StepVisual_DraughtingCallout.NbContents = new_instancemethod(_StepVisual.StepVisual_DraughtingCallout_NbContents, None, StepVisual_DraughtingCallout)
StepVisual_DraughtingCallout.SetContents = new_instancemethod(_StepVisual.StepVisual_DraughtingCallout_SetContents, None, StepVisual_DraughtingCallout)
StepVisual_DraughtingCallout.SetContentsValue = new_instancemethod(_StepVisual.StepVisual_DraughtingCallout_SetContentsValue, None, StepVisual_DraughtingCallout)
StepVisual_DraughtingCallout_swigregister = _StepVisual.StepVisual_DraughtingCallout_swigregister
StepVisual_DraughtingCallout_swigregister(StepVisual_DraughtingCallout)

class StepVisual_DraughtingCalloutElement(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AnnotationCurveOccurrence(self, *args) -> "opencascade::handle< StepVisual_AnnotationCurveOccurrence >":
        """
        * returns Value as a AnnotationCurveOccurrence (Null if another type)
        	:rtype: opencascade::handle<StepVisual_AnnotationCurveOccurrence>
        """
        return _StepVisual.StepVisual_DraughtingCalloutElement_AnnotationCurveOccurrence(self, *args)


    def AnnotationFillAreaOccurrence(self, *args) -> "opencascade::handle< StepVisual_AnnotationFillAreaOccurrence >":
        """
        * returns Value as a AnnotationFillAreaOccurrence
        	:rtype: opencascade::handle<StepVisual_AnnotationFillAreaOccurrence>
        """
        return _StepVisual.StepVisual_DraughtingCalloutElement_AnnotationFillAreaOccurrence(self, *args)


    def AnnotationTextOccurrence(self, *args) -> "opencascade::handle< StepVisual_AnnotationTextOccurrence >":
        """
        * returns Value as a AnnotationTextOccurrence
        	:rtype: opencascade::handle<StepVisual_AnnotationTextOccurrence>
        """
        return _StepVisual.StepVisual_DraughtingCalloutElement_AnnotationTextOccurrence(self, *args)


    def __init__(self, *args):
        """
        * Returns a DraughtingCalloutElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingCalloutElement_swiginit(self, _StepVisual.new_StepVisual_DraughtingCalloutElement(*args))

    def TessellatedAnnotationOccurrence(self, *args) -> "opencascade::handle< StepVisual_TessellatedAnnotationOccurrence >":
        """
        * returns Value as a TessellatedAnnotationOccurrence
        	:rtype: opencascade::handle<StepVisual_TessellatedAnnotationOccurrence>
        """
        return _StepVisual.StepVisual_DraughtingCalloutElement_TessellatedAnnotationOccurrence(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingCalloutElement
StepVisual_DraughtingCalloutElement.AnnotationCurveOccurrence = new_instancemethod(_StepVisual.StepVisual_DraughtingCalloutElement_AnnotationCurveOccurrence, None, StepVisual_DraughtingCalloutElement)
StepVisual_DraughtingCalloutElement.AnnotationFillAreaOccurrence = new_instancemethod(_StepVisual.StepVisual_DraughtingCalloutElement_AnnotationFillAreaOccurrence, None, StepVisual_DraughtingCalloutElement)
StepVisual_DraughtingCalloutElement.AnnotationTextOccurrence = new_instancemethod(_StepVisual.StepVisual_DraughtingCalloutElement_AnnotationTextOccurrence, None, StepVisual_DraughtingCalloutElement)
StepVisual_DraughtingCalloutElement.TessellatedAnnotationOccurrence = new_instancemethod(_StepVisual.StepVisual_DraughtingCalloutElement_TessellatedAnnotationOccurrence, None, StepVisual_DraughtingCalloutElement)
StepVisual_DraughtingCalloutElement_swigregister = _StepVisual.StepVisual_DraughtingCalloutElement_swigregister
StepVisual_DraughtingCalloutElement_swigregister(StepVisual_DraughtingCalloutElement)

class StepVisual_DraughtingModel(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingModel_swiginit(self, _StepVisual.new_StepVisual_DraughtingModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingModel
StepVisual_DraughtingModel_swigregister = _StepVisual.StepVisual_DraughtingModel_swigregister
StepVisual_DraughtingModel_swigregister(StepVisual_DraughtingModel)

class StepVisual_ExternallyDefinedCurveFont(OCC.Core.StepBasic.StepBasic_ExternallyDefinedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepVisual.StepVisual_ExternallyDefinedCurveFont_swiginit(self, _StepVisual.new_StepVisual_ExternallyDefinedCurveFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ExternallyDefinedCurveFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ExternallyDefinedCurveFont
StepVisual_ExternallyDefinedCurveFont_swigregister = _StepVisual.StepVisual_ExternallyDefinedCurveFont_swigregister
StepVisual_ExternallyDefinedCurveFont_swigregister(StepVisual_ExternallyDefinedCurveFont)

class StepVisual_ExternallyDefinedTextFont(OCC.Core.StepBasic.StepBasic_ExternallyDefinedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor
        	:rtype: None
        """
        _StepVisual.StepVisual_ExternallyDefinedTextFont_swiginit(self, _StepVisual.new_StepVisual_ExternallyDefinedTextFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ExternallyDefinedTextFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ExternallyDefinedTextFont
StepVisual_ExternallyDefinedTextFont_swigregister = _StepVisual.StepVisual_ExternallyDefinedTextFont_swigregister
StepVisual_ExternallyDefinedTextFont_swigregister(StepVisual_ExternallyDefinedTextFont)

class StepVisual_FillAreaStyle(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FillStyles(self, *args) -> "opencascade::handle< StepVisual_HArray1OfFillStyleSelect >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfFillStyleSelect>"""
        return _StepVisual.StepVisual_FillAreaStyle_FillStyles(self, *args)


    def FillStylesValue(self, *args) -> "StepVisual_FillStyleSelect":
        """
        :param num:
        	:type num: int
        	:rtype: StepVisual_FillStyleSelect
        """
        return _StepVisual.StepVisual_FillAreaStyle_FillStylesValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aFillStyles:
        	:type aFillStyles: StepVisual_HArray1OfFillStyleSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_FillAreaStyle_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_FillAreaStyle_Name(self, *args)


    def NbFillStyles(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_FillAreaStyle_NbFillStyles(self, *args)


    def SetFillStyles(self, *args) -> "void":
        """
        :param aFillStyles:
        	:type aFillStyles: StepVisual_HArray1OfFillStyleSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_FillAreaStyle_SetFillStyles(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_FillAreaStyle_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a FillAreaStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_FillAreaStyle_swiginit(self, _StepVisual.new_StepVisual_FillAreaStyle(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_FillAreaStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_FillAreaStyle
StepVisual_FillAreaStyle.FillStyles = new_instancemethod(_StepVisual.StepVisual_FillAreaStyle_FillStyles, None, StepVisual_FillAreaStyle)
StepVisual_FillAreaStyle.FillStylesValue = new_instancemethod(_StepVisual.StepVisual_FillAreaStyle_FillStylesValue, None, StepVisual_FillAreaStyle)
StepVisual_FillAreaStyle.Init = new_instancemethod(_StepVisual.StepVisual_FillAreaStyle_Init, None, StepVisual_FillAreaStyle)
StepVisual_FillAreaStyle.Name = new_instancemethod(_StepVisual.StepVisual_FillAreaStyle_Name, None, StepVisual_FillAreaStyle)
StepVisual_FillAreaStyle.NbFillStyles = new_instancemethod(_StepVisual.StepVisual_FillAreaStyle_NbFillStyles, None, StepVisual_FillAreaStyle)
StepVisual_FillAreaStyle.SetFillStyles = new_instancemethod(_StepVisual.StepVisual_FillAreaStyle_SetFillStyles, None, StepVisual_FillAreaStyle)
StepVisual_FillAreaStyle.SetName = new_instancemethod(_StepVisual.StepVisual_FillAreaStyle_SetName, None, StepVisual_FillAreaStyle)
StepVisual_FillAreaStyle_swigregister = _StepVisual.StepVisual_FillAreaStyle_swigregister
StepVisual_FillAreaStyle_swigregister(StepVisual_FillAreaStyle)

class StepVisual_FillAreaStyleColour(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FillColour(self, *args) -> "opencascade::handle< StepVisual_Colour >":
        """:rtype: opencascade::handle<StepVisual_Colour>"""
        return _StepVisual.StepVisual_FillAreaStyleColour_FillColour(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aFillColour:
        	:type aFillColour: StepVisual_Colour
        	:rtype: None
        """
        return _StepVisual.StepVisual_FillAreaStyleColour_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_FillAreaStyleColour_Name(self, *args)


    def SetFillColour(self, *args) -> "void":
        """
        :param aFillColour:
        	:type aFillColour: StepVisual_Colour
        	:rtype: None
        """
        return _StepVisual.StepVisual_FillAreaStyleColour_SetFillColour(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_FillAreaStyleColour_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a FillAreaStyleColour
        	:rtype: None
        """
        _StepVisual.StepVisual_FillAreaStyleColour_swiginit(self, _StepVisual.new_StepVisual_FillAreaStyleColour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_FillAreaStyleColour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_FillAreaStyleColour
StepVisual_FillAreaStyleColour.FillColour = new_instancemethod(_StepVisual.StepVisual_FillAreaStyleColour_FillColour, None, StepVisual_FillAreaStyleColour)
StepVisual_FillAreaStyleColour.Init = new_instancemethod(_StepVisual.StepVisual_FillAreaStyleColour_Init, None, StepVisual_FillAreaStyleColour)
StepVisual_FillAreaStyleColour.Name = new_instancemethod(_StepVisual.StepVisual_FillAreaStyleColour_Name, None, StepVisual_FillAreaStyleColour)
StepVisual_FillAreaStyleColour.SetFillColour = new_instancemethod(_StepVisual.StepVisual_FillAreaStyleColour_SetFillColour, None, StepVisual_FillAreaStyleColour)
StepVisual_FillAreaStyleColour.SetName = new_instancemethod(_StepVisual.StepVisual_FillAreaStyleColour_SetName, None, StepVisual_FillAreaStyleColour)
StepVisual_FillAreaStyleColour_swigregister = _StepVisual.StepVisual_FillAreaStyleColour_swigregister
StepVisual_FillAreaStyleColour_swigregister(StepVisual_FillAreaStyleColour)

class StepVisual_FillStyleSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FillAreaStyleColour(self, *args) -> "opencascade::handle< StepVisual_FillAreaStyleColour >":
        """
        * returns Value as a FillAreaStyleColour (Null if another type)
        	:rtype: opencascade::handle<StepVisual_FillAreaStyleColour>
        """
        return _StepVisual.StepVisual_FillStyleSelect_FillAreaStyleColour(self, *args)


    def __init__(self, *args):
        """
        * Returns a FillStyleSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_FillStyleSelect_swiginit(self, _StepVisual.new_StepVisual_FillStyleSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_FillStyleSelect
StepVisual_FillStyleSelect.FillAreaStyleColour = new_instancemethod(_StepVisual.StepVisual_FillStyleSelect_FillAreaStyleColour, None, StepVisual_FillStyleSelect)
StepVisual_FillStyleSelect_swigregister = _StepVisual.StepVisual_FillStyleSelect_swigregister
StepVisual_FillStyleSelect_swigregister(StepVisual_FillStyleSelect)

class StepVisual_FontSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def ExternallyDefinedTextFont(self, *args) -> "opencascade::handle< StepVisual_ExternallyDefinedTextFont >":
        """
        * returns Value as a ExternallyDefinedTextFont (Null if another type)
        	:rtype: opencascade::handle<StepVisual_ExternallyDefinedTextFont>
        """
        return _StepVisual.StepVisual_FontSelect_ExternallyDefinedTextFont(self, *args)


    def PreDefinedTextFont(self, *args) -> "opencascade::handle< StepVisual_PreDefinedTextFont >":
        """
        * returns Value as a PreDefinedTextFont (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PreDefinedTextFont>
        """
        return _StepVisual.StepVisual_FontSelect_PreDefinedTextFont(self, *args)


    def __init__(self, *args):
        """
        * Returns a FontSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_FontSelect_swiginit(self, _StepVisual.new_StepVisual_FontSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_FontSelect
StepVisual_FontSelect.ExternallyDefinedTextFont = new_instancemethod(_StepVisual.StepVisual_FontSelect_ExternallyDefinedTextFont, None, StepVisual_FontSelect)
StepVisual_FontSelect.PreDefinedTextFont = new_instancemethod(_StepVisual.StepVisual_FontSelect_PreDefinedTextFont, None, StepVisual_FontSelect)
StepVisual_FontSelect_swigregister = _StepVisual.StepVisual_FontSelect_swigregister
StepVisual_FontSelect_swigregister(StepVisual_FontSelect)

class StepVisual_Invisibility(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aInvisibleItems:
        	:type aInvisibleItems: StepVisual_HArray1OfInvisibleItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_Invisibility_Init(self, *args)


    def InvisibleItems(self, *args) -> "opencascade::handle< StepVisual_HArray1OfInvisibleItem >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfInvisibleItem>"""
        return _StepVisual.StepVisual_Invisibility_InvisibleItems(self, *args)


    def InvisibleItemsValue(self, *args) -> "StepVisual_InvisibleItem":
        """
        :param num:
        	:type num: int
        	:rtype: StepVisual_InvisibleItem
        """
        return _StepVisual.StepVisual_Invisibility_InvisibleItemsValue(self, *args)


    def NbInvisibleItems(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_Invisibility_NbInvisibleItems(self, *args)


    def SetInvisibleItems(self, *args) -> "void":
        """
        :param aInvisibleItems:
        	:type aInvisibleItems: StepVisual_HArray1OfInvisibleItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_Invisibility_SetInvisibleItems(self, *args)


    def __init__(self, *args):
        """
        * Returns a Invisibility
        	:rtype: None
        """
        _StepVisual.StepVisual_Invisibility_swiginit(self, _StepVisual.new_StepVisual_Invisibility(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_Invisibility_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_Invisibility
StepVisual_Invisibility.Init = new_instancemethod(_StepVisual.StepVisual_Invisibility_Init, None, StepVisual_Invisibility)
StepVisual_Invisibility.InvisibleItems = new_instancemethod(_StepVisual.StepVisual_Invisibility_InvisibleItems, None, StepVisual_Invisibility)
StepVisual_Invisibility.InvisibleItemsValue = new_instancemethod(_StepVisual.StepVisual_Invisibility_InvisibleItemsValue, None, StepVisual_Invisibility)
StepVisual_Invisibility.NbInvisibleItems = new_instancemethod(_StepVisual.StepVisual_Invisibility_NbInvisibleItems, None, StepVisual_Invisibility)
StepVisual_Invisibility.SetInvisibleItems = new_instancemethod(_StepVisual.StepVisual_Invisibility_SetInvisibleItems, None, StepVisual_Invisibility)
StepVisual_Invisibility_swigregister = _StepVisual.StepVisual_Invisibility_swigregister
StepVisual_Invisibility_swigregister(StepVisual_Invisibility)

class StepVisual_InvisibilityContext(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DraughtingModel(self, *args) -> "opencascade::handle< StepVisual_DraughtingModel >":
        """
        * returns Value as a PresentationSet (Null if another type)
        	:rtype: opencascade::handle<StepVisual_DraughtingModel>
        """
        return _StepVisual.StepVisual_InvisibilityContext_DraughtingModel(self, *args)


    def PresentationRepresentation(self, *args) -> "opencascade::handle< StepVisual_PresentationRepresentation >":
        """
        * returns Value as a PresentationRepresentation (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationRepresentation>
        """
        return _StepVisual.StepVisual_InvisibilityContext_PresentationRepresentation(self, *args)


    def PresentationSet(self, *args) -> "opencascade::handle< StepVisual_PresentationSet >":
        """
        * returns Value as a PresentationSet (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationSet>
        """
        return _StepVisual.StepVisual_InvisibilityContext_PresentationSet(self, *args)


    def __init__(self, *args):
        """
        * Returns a InvisibilityContext SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_InvisibilityContext_swiginit(self, _StepVisual.new_StepVisual_InvisibilityContext(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_InvisibilityContext
StepVisual_InvisibilityContext.DraughtingModel = new_instancemethod(_StepVisual.StepVisual_InvisibilityContext_DraughtingModel, None, StepVisual_InvisibilityContext)
StepVisual_InvisibilityContext.PresentationRepresentation = new_instancemethod(_StepVisual.StepVisual_InvisibilityContext_PresentationRepresentation, None, StepVisual_InvisibilityContext)
StepVisual_InvisibilityContext.PresentationSet = new_instancemethod(_StepVisual.StepVisual_InvisibilityContext_PresentationSet, None, StepVisual_InvisibilityContext)
StepVisual_InvisibilityContext_swigregister = _StepVisual.StepVisual_InvisibilityContext_swigregister
StepVisual_InvisibilityContext_swigregister(StepVisual_InvisibilityContext)

class StepVisual_InvisibleItem(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PresentationLayerAssignment(self, *args) -> "opencascade::handle< StepVisual_PresentationLayerAssignment >":
        """
        * returns Value as a PresentationLayerAssignment (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationLayerAssignment>
        """
        return _StepVisual.StepVisual_InvisibleItem_PresentationLayerAssignment(self, *args)


    def PresentationRepresentation(self, *args) -> "opencascade::handle< StepVisual_PresentationRepresentation >":
        """
        * returns Value as a PresentationRepresentation (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationRepresentation>
        """
        return _StepVisual.StepVisual_InvisibleItem_PresentationRepresentation(self, *args)


    def __init__(self, *args):
        """
        * Returns a InvisibleItem SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_InvisibleItem_swiginit(self, _StepVisual.new_StepVisual_InvisibleItem(*args))

    def StyledItem(self, *args) -> "opencascade::handle< StepVisual_StyledItem >":
        """
        * returns Value as a StyledItem (Null if another type)
        	:rtype: opencascade::handle<StepVisual_StyledItem>
        """
        return _StepVisual.StepVisual_InvisibleItem_StyledItem(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_InvisibleItem
StepVisual_InvisibleItem.PresentationLayerAssignment = new_instancemethod(_StepVisual.StepVisual_InvisibleItem_PresentationLayerAssignment, None, StepVisual_InvisibleItem)
StepVisual_InvisibleItem.PresentationRepresentation = new_instancemethod(_StepVisual.StepVisual_InvisibleItem_PresentationRepresentation, None, StepVisual_InvisibleItem)
StepVisual_InvisibleItem.StyledItem = new_instancemethod(_StepVisual.StepVisual_InvisibleItem_StyledItem, None, StepVisual_InvisibleItem)
StepVisual_InvisibleItem_swigregister = _StepVisual.StepVisual_InvisibleItem_swigregister
StepVisual_InvisibleItem_swigregister(StepVisual_InvisibleItem)

class StepVisual_LayeredItem(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PresentationRepresentation(self, *args) -> "opencascade::handle< StepVisual_PresentationRepresentation >":
        """
        * returns Value as a PresentationRepresentation (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationRepresentation>
        """
        return _StepVisual.StepVisual_LayeredItem_PresentationRepresentation(self, *args)


    def RepresentationItem(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        * returns Value as a RepresentationItem (Null if another type)
        	:rtype: opencascade::handle<StepRepr_RepresentationItem>
        """
        return _StepVisual.StepVisual_LayeredItem_RepresentationItem(self, *args)


    def __init__(self, *args):
        """
        * Returns a LayeredItem SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_LayeredItem_swiginit(self, _StepVisual.new_StepVisual_LayeredItem(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_LayeredItem
StepVisual_LayeredItem.PresentationRepresentation = new_instancemethod(_StepVisual.StepVisual_LayeredItem_PresentationRepresentation, None, StepVisual_LayeredItem)
StepVisual_LayeredItem.RepresentationItem = new_instancemethod(_StepVisual.StepVisual_LayeredItem_RepresentationItem, None, StepVisual_LayeredItem)
StepVisual_LayeredItem_swigregister = _StepVisual.StepVisual_LayeredItem_swigregister
StepVisual_LayeredItem_swigregister(StepVisual_LayeredItem)

class StepVisual_MarkerMember(OCC.Core.StepData.StepData_SelectInt):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def SetValue(self, *args) -> "void":
        """
        :param val:
        	:type val: StepVisual_MarkerType
        	:rtype: None
        """
        return _StepVisual.StepVisual_MarkerMember_SetValue(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_MarkerMember_swiginit(self, _StepVisual.new_StepVisual_MarkerMember(*args))

    def Value(self, *args) -> "StepVisual_MarkerType":
        """:rtype: StepVisual_MarkerType"""
        return _StepVisual.StepVisual_MarkerMember_Value(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_MarkerMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_MarkerMember
StepVisual_MarkerMember.SetValue = new_instancemethod(_StepVisual.StepVisual_MarkerMember_SetValue, None, StepVisual_MarkerMember)
StepVisual_MarkerMember.Value = new_instancemethod(_StepVisual.StepVisual_MarkerMember_Value, None, StepVisual_MarkerMember)
StepVisual_MarkerMember_swigregister = _StepVisual.StepVisual_MarkerMember_swigregister
StepVisual_MarkerMember_swigregister(StepVisual_MarkerMember)

class StepVisual_MarkerSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def MarkerMember(self, *args) -> "opencascade::handle< StepVisual_MarkerMember >":
        """
        * Gives access to the MarkerMember in order to get/set its value
        	:rtype: opencascade::handle<StepVisual_MarkerMember>
        """
        return _StepVisual.StepVisual_MarkerSelect_MarkerMember(self, *args)


    def __init__(self, *args):
        """
        * Returns a MarkerSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_MarkerSelect_swiginit(self, _StepVisual.new_StepVisual_MarkerSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_MarkerSelect
StepVisual_MarkerSelect.MarkerMember = new_instancemethod(_StepVisual.StepVisual_MarkerSelect_MarkerMember, None, StepVisual_MarkerSelect)
StepVisual_MarkerSelect_swigregister = _StepVisual.StepVisual_MarkerSelect_swigregister
StepVisual_MarkerSelect_swigregister(StepVisual_MarkerSelect)

class StepVisual_NullStyleMember(OCC.Core.StepData.StepData_SelectInt):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def SetName(self, *args) -> "Standard_Boolean":
        """
        :param Standard_CString:
        	:type Standard_CString: 
        	:rtype: bool
        """
        return _StepVisual.StepVisual_NullStyleMember_SetName(self, *args)


    def SetValue(self, *args) -> "void":
        """
        :param theValue:
        	:type theValue: StepVisual_NullStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_NullStyleMember_SetValue(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_NullStyleMember_swiginit(self, _StepVisual.new_StepVisual_NullStyleMember(*args))

    def Value(self, *args) -> "StepVisual_NullStyle":
        """:rtype: StepVisual_NullStyle"""
        return _StepVisual.StepVisual_NullStyleMember_Value(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_NullStyleMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_NullStyleMember
StepVisual_NullStyleMember.SetName = new_instancemethod(_StepVisual.StepVisual_NullStyleMember_SetName, None, StepVisual_NullStyleMember)
StepVisual_NullStyleMember.SetValue = new_instancemethod(_StepVisual.StepVisual_NullStyleMember_SetValue, None, StepVisual_NullStyleMember)
StepVisual_NullStyleMember.Value = new_instancemethod(_StepVisual.StepVisual_NullStyleMember_Value, None, StepVisual_NullStyleMember)
StepVisual_NullStyleMember_swigregister = _StepVisual.StepVisual_NullStyleMember_swigregister
StepVisual_NullStyleMember_swigregister(StepVisual_NullStyleMember)

class StepVisual_PlanarExtent(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSizeInX:
        	:type aSizeInX: float
        	:param aSizeInY:
        	:type aSizeInY: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_PlanarExtent_Init(self, *args)


    def SetSizeInX(self, *args) -> "void":
        """
        :param aSizeInX:
        	:type aSizeInX: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_PlanarExtent_SetSizeInX(self, *args)


    def SetSizeInY(self, *args) -> "void":
        """
        :param aSizeInY:
        	:type aSizeInY: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_PlanarExtent_SetSizeInY(self, *args)


    def SizeInX(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_PlanarExtent_SizeInX(self, *args)


    def SizeInY(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_PlanarExtent_SizeInY(self, *args)


    def __init__(self, *args):
        """
        * Returns a PlanarExtent
        	:rtype: None
        """
        _StepVisual.StepVisual_PlanarExtent_swiginit(self, _StepVisual.new_StepVisual_PlanarExtent(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PlanarExtent_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PlanarExtent
StepVisual_PlanarExtent.Init = new_instancemethod(_StepVisual.StepVisual_PlanarExtent_Init, None, StepVisual_PlanarExtent)
StepVisual_PlanarExtent.SetSizeInX = new_instancemethod(_StepVisual.StepVisual_PlanarExtent_SetSizeInX, None, StepVisual_PlanarExtent)
StepVisual_PlanarExtent.SetSizeInY = new_instancemethod(_StepVisual.StepVisual_PlanarExtent_SetSizeInY, None, StepVisual_PlanarExtent)
StepVisual_PlanarExtent.SizeInX = new_instancemethod(_StepVisual.StepVisual_PlanarExtent_SizeInX, None, StepVisual_PlanarExtent)
StepVisual_PlanarExtent.SizeInY = new_instancemethod(_StepVisual.StepVisual_PlanarExtent_SizeInY, None, StepVisual_PlanarExtent)
StepVisual_PlanarExtent_swigregister = _StepVisual.StepVisual_PlanarExtent_swigregister
StepVisual_PlanarExtent_swigregister(StepVisual_PlanarExtent)

class StepVisual_PointStyle(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aMarker:
        	:type aMarker: StepVisual_MarkerSelect
        	:param aMarkerSize:
        	:type aMarkerSize: StepBasic_SizeSelect
        	:param aMarkerColour:
        	:type aMarkerColour: StepVisual_Colour
        	:rtype: None
        """
        return _StepVisual.StepVisual_PointStyle_Init(self, *args)


    def Marker(self, *args) -> "StepVisual_MarkerSelect":
        """:rtype: StepVisual_MarkerSelect"""
        return _StepVisual.StepVisual_PointStyle_Marker(self, *args)


    def MarkerColour(self, *args) -> "opencascade::handle< StepVisual_Colour >":
        """:rtype: opencascade::handle<StepVisual_Colour>"""
        return _StepVisual.StepVisual_PointStyle_MarkerColour(self, *args)


    def MarkerSize(self, *args) -> "StepBasic_SizeSelect":
        """:rtype: StepBasic_SizeSelect"""
        return _StepVisual.StepVisual_PointStyle_MarkerSize(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_PointStyle_Name(self, *args)


    def SetMarker(self, *args) -> "void":
        """
        :param aMarker:
        	:type aMarker: StepVisual_MarkerSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_PointStyle_SetMarker(self, *args)


    def SetMarkerColour(self, *args) -> "void":
        """
        :param aMarkerColour:
        	:type aMarkerColour: StepVisual_Colour
        	:rtype: None
        """
        return _StepVisual.StepVisual_PointStyle_SetMarkerColour(self, *args)


    def SetMarkerSize(self, *args) -> "void":
        """
        :param aMarkerSize:
        	:type aMarkerSize: StepBasic_SizeSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_PointStyle_SetMarkerSize(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_PointStyle_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a PointStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_PointStyle_swiginit(self, _StepVisual.new_StepVisual_PointStyle(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PointStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PointStyle
StepVisual_PointStyle.Init = new_instancemethod(_StepVisual.StepVisual_PointStyle_Init, None, StepVisual_PointStyle)
StepVisual_PointStyle.Marker = new_instancemethod(_StepVisual.StepVisual_PointStyle_Marker, None, StepVisual_PointStyle)
StepVisual_PointStyle.MarkerColour = new_instancemethod(_StepVisual.StepVisual_PointStyle_MarkerColour, None, StepVisual_PointStyle)
StepVisual_PointStyle.MarkerSize = new_instancemethod(_StepVisual.StepVisual_PointStyle_MarkerSize, None, StepVisual_PointStyle)
StepVisual_PointStyle.Name = new_instancemethod(_StepVisual.StepVisual_PointStyle_Name, None, StepVisual_PointStyle)
StepVisual_PointStyle.SetMarker = new_instancemethod(_StepVisual.StepVisual_PointStyle_SetMarker, None, StepVisual_PointStyle)
StepVisual_PointStyle.SetMarkerColour = new_instancemethod(_StepVisual.StepVisual_PointStyle_SetMarkerColour, None, StepVisual_PointStyle)
StepVisual_PointStyle.SetMarkerSize = new_instancemethod(_StepVisual.StepVisual_PointStyle_SetMarkerSize, None, StepVisual_PointStyle)
StepVisual_PointStyle.SetName = new_instancemethod(_StepVisual.StepVisual_PointStyle_SetName, None, StepVisual_PointStyle)
StepVisual_PointStyle_swigregister = _StepVisual.StepVisual_PointStyle_swigregister
StepVisual_PointStyle_swigregister(StepVisual_PointStyle)

class StepVisual_PreDefinedItem(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_PreDefinedItem_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_PreDefinedItem_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_PreDefinedItem_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a PreDefinedItem
        	:rtype: None
        """
        _StepVisual.StepVisual_PreDefinedItem_swiginit(self, _StepVisual.new_StepVisual_PreDefinedItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PreDefinedItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PreDefinedItem
StepVisual_PreDefinedItem.Init = new_instancemethod(_StepVisual.StepVisual_PreDefinedItem_Init, None, StepVisual_PreDefinedItem)
StepVisual_PreDefinedItem.Name = new_instancemethod(_StepVisual.StepVisual_PreDefinedItem_Name, None, StepVisual_PreDefinedItem)
StepVisual_PreDefinedItem.SetName = new_instancemethod(_StepVisual.StepVisual_PreDefinedItem_SetName, None, StepVisual_PreDefinedItem)
StepVisual_PreDefinedItem_swigregister = _StepVisual.StepVisual_PreDefinedItem_swigregister
StepVisual_PreDefinedItem_swigregister(StepVisual_PreDefinedItem)

class StepVisual_PresentationLayerAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AssignedItems(self, *args) -> "opencascade::handle< StepVisual_HArray1OfLayeredItem >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfLayeredItem>"""
        return _StepVisual.StepVisual_PresentationLayerAssignment_AssignedItems(self, *args)


    def AssignedItemsValue(self, *args) -> "StepVisual_LayeredItem":
        """
        :param num:
        	:type num: int
        	:rtype: StepVisual_LayeredItem
        """
        return _StepVisual.StepVisual_PresentationLayerAssignment_AssignedItemsValue(self, *args)


    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_PresentationLayerAssignment_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:param aAssignedItems:
        	:type aAssignedItems: StepVisual_HArray1OfLayeredItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationLayerAssignment_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_PresentationLayerAssignment_Name(self, *args)


    def NbAssignedItems(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_PresentationLayerAssignment_NbAssignedItems(self, *args)


    def SetAssignedItems(self, *args) -> "void":
        """
        :param aAssignedItems:
        	:type aAssignedItems: StepVisual_HArray1OfLayeredItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationLayerAssignment_SetAssignedItems(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        :param aDescription:
        	:type aDescription: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationLayerAssignment_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationLayerAssignment_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a PresentationLayerAssignment
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationLayerAssignment_swiginit(self, _StepVisual.new_StepVisual_PresentationLayerAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationLayerAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationLayerAssignment
StepVisual_PresentationLayerAssignment.AssignedItems = new_instancemethod(_StepVisual.StepVisual_PresentationLayerAssignment_AssignedItems, None, StepVisual_PresentationLayerAssignment)
StepVisual_PresentationLayerAssignment.AssignedItemsValue = new_instancemethod(_StepVisual.StepVisual_PresentationLayerAssignment_AssignedItemsValue, None, StepVisual_PresentationLayerAssignment)
StepVisual_PresentationLayerAssignment.Description = new_instancemethod(_StepVisual.StepVisual_PresentationLayerAssignment_Description, None, StepVisual_PresentationLayerAssignment)
StepVisual_PresentationLayerAssignment.Init = new_instancemethod(_StepVisual.StepVisual_PresentationLayerAssignment_Init, None, StepVisual_PresentationLayerAssignment)
StepVisual_PresentationLayerAssignment.Name = new_instancemethod(_StepVisual.StepVisual_PresentationLayerAssignment_Name, None, StepVisual_PresentationLayerAssignment)
StepVisual_PresentationLayerAssignment.NbAssignedItems = new_instancemethod(_StepVisual.StepVisual_PresentationLayerAssignment_NbAssignedItems, None, StepVisual_PresentationLayerAssignment)
StepVisual_PresentationLayerAssignment.SetAssignedItems = new_instancemethod(_StepVisual.StepVisual_PresentationLayerAssignment_SetAssignedItems, None, StepVisual_PresentationLayerAssignment)
StepVisual_PresentationLayerAssignment.SetDescription = new_instancemethod(_StepVisual.StepVisual_PresentationLayerAssignment_SetDescription, None, StepVisual_PresentationLayerAssignment)
StepVisual_PresentationLayerAssignment.SetName = new_instancemethod(_StepVisual.StepVisual_PresentationLayerAssignment_SetName, None, StepVisual_PresentationLayerAssignment)
StepVisual_PresentationLayerAssignment_swigregister = _StepVisual.StepVisual_PresentationLayerAssignment_swigregister
StepVisual_PresentationLayerAssignment_swigregister(StepVisual_PresentationLayerAssignment)

class StepVisual_PresentationLayerUsage(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Assignment(self, *args) -> "opencascade::handle< StepVisual_PresentationLayerAssignment >":
        """:rtype: opencascade::handle<StepVisual_PresentationLayerAssignment>"""
        return _StepVisual.StepVisual_PresentationLayerUsage_Assignment(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aAssignment:
        	:type aAssignment: StepVisual_PresentationLayerAssignment
        	:param aPresentation:
        	:type aPresentation: StepVisual_PresentationRepresentation
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationLayerUsage_Init(self, *args)


    def Presentation(self, *args) -> "opencascade::handle< StepVisual_PresentationRepresentation >":
        """:rtype: opencascade::handle<StepVisual_PresentationRepresentation>"""
        return _StepVisual.StepVisual_PresentationLayerUsage_Presentation(self, *args)


    def SetAssignment(self, *args) -> "void":
        """
        :param aAssignment:
        	:type aAssignment: StepVisual_PresentationLayerAssignment
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationLayerUsage_SetAssignment(self, *args)


    def SetPresentation(self, *args) -> "void":
        """
        :param aPresentation:
        	:type aPresentation: StepVisual_PresentationRepresentation
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationLayerUsage_SetPresentation(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_PresentationLayerUsage_swiginit(self, _StepVisual.new_StepVisual_PresentationLayerUsage(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationLayerUsage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationLayerUsage
StepVisual_PresentationLayerUsage.Assignment = new_instancemethod(_StepVisual.StepVisual_PresentationLayerUsage_Assignment, None, StepVisual_PresentationLayerUsage)
StepVisual_PresentationLayerUsage.Init = new_instancemethod(_StepVisual.StepVisual_PresentationLayerUsage_Init, None, StepVisual_PresentationLayerUsage)
StepVisual_PresentationLayerUsage.Presentation = new_instancemethod(_StepVisual.StepVisual_PresentationLayerUsage_Presentation, None, StepVisual_PresentationLayerUsage)
StepVisual_PresentationLayerUsage.SetAssignment = new_instancemethod(_StepVisual.StepVisual_PresentationLayerUsage_SetAssignment, None, StepVisual_PresentationLayerUsage)
StepVisual_PresentationLayerUsage.SetPresentation = new_instancemethod(_StepVisual.StepVisual_PresentationLayerUsage_SetPresentation, None, StepVisual_PresentationLayerUsage)
StepVisual_PresentationLayerUsage_swigregister = _StepVisual.StepVisual_PresentationLayerUsage_swigregister
StepVisual_PresentationLayerUsage_swigregister(StepVisual_PresentationLayerUsage)

class StepVisual_PresentationRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a PresentationRepresentation
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationRepresentation_swiginit(self, _StepVisual.new_StepVisual_PresentationRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationRepresentation
StepVisual_PresentationRepresentation_swigregister = _StepVisual.StepVisual_PresentationRepresentation_swigregister
StepVisual_PresentationRepresentation_swigregister(StepVisual_PresentationRepresentation)

class StepVisual_PresentationRepresentationSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PresentationRepresentation(self, *args) -> "opencascade::handle< StepVisual_PresentationRepresentation >":
        """
        * returns Value as a PresentationRepresentation (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationRepresentation>
        """
        return _StepVisual.StepVisual_PresentationRepresentationSelect_PresentationRepresentation(self, *args)


    def PresentationSet(self, *args) -> "opencascade::handle< StepVisual_PresentationSet >":
        """
        * returns Value as a PresentationSet (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationSet>
        """
        return _StepVisual.StepVisual_PresentationRepresentationSelect_PresentationSet(self, *args)


    def __init__(self, *args):
        """
        * Returns a PresentationRepresentationSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationRepresentationSelect_swiginit(self, _StepVisual.new_StepVisual_PresentationRepresentationSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationRepresentationSelect
StepVisual_PresentationRepresentationSelect.PresentationRepresentation = new_instancemethod(_StepVisual.StepVisual_PresentationRepresentationSelect_PresentationRepresentation, None, StepVisual_PresentationRepresentationSelect)
StepVisual_PresentationRepresentationSelect.PresentationSet = new_instancemethod(_StepVisual.StepVisual_PresentationRepresentationSelect_PresentationSet, None, StepVisual_PresentationRepresentationSelect)
StepVisual_PresentationRepresentationSelect_swigregister = _StepVisual.StepVisual_PresentationRepresentationSelect_swigregister
StepVisual_PresentationRepresentationSelect_swigregister(StepVisual_PresentationRepresentationSelect)

class StepVisual_PresentationSet(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a PresentationSet
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationSet_swiginit(self, _StepVisual.new_StepVisual_PresentationSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationSet
StepVisual_PresentationSet_swigregister = _StepVisual.StepVisual_PresentationSet_swigregister
StepVisual_PresentationSet_swigregister(StepVisual_PresentationSet)

class StepVisual_PresentationSize(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aUnit:
        	:type aUnit: StepVisual_PresentationSizeAssignmentSelect
        	:param aSize:
        	:type aSize: StepVisual_PlanarBox
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationSize_Init(self, *args)


    def SetSize(self, *args) -> "void":
        """
        :param aSize:
        	:type aSize: StepVisual_PlanarBox
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationSize_SetSize(self, *args)


    def SetUnit(self, *args) -> "void":
        """
        :param aUnit:
        	:type aUnit: StepVisual_PresentationSizeAssignmentSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationSize_SetUnit(self, *args)


    def Size(self, *args) -> "opencascade::handle< StepVisual_PlanarBox >":
        """:rtype: opencascade::handle<StepVisual_PlanarBox>"""
        return _StepVisual.StepVisual_PresentationSize_Size(self, *args)


    def __init__(self, *args):
        """
        * Returns a PresentationSize
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationSize_swiginit(self, _StepVisual.new_StepVisual_PresentationSize(*args))

    def Unit(self, *args) -> "StepVisual_PresentationSizeAssignmentSelect":
        """:rtype: StepVisual_PresentationSizeAssignmentSelect"""
        return _StepVisual.StepVisual_PresentationSize_Unit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationSize_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationSize
StepVisual_PresentationSize.Init = new_instancemethod(_StepVisual.StepVisual_PresentationSize_Init, None, StepVisual_PresentationSize)
StepVisual_PresentationSize.SetSize = new_instancemethod(_StepVisual.StepVisual_PresentationSize_SetSize, None, StepVisual_PresentationSize)
StepVisual_PresentationSize.SetUnit = new_instancemethod(_StepVisual.StepVisual_PresentationSize_SetUnit, None, StepVisual_PresentationSize)
StepVisual_PresentationSize.Size = new_instancemethod(_StepVisual.StepVisual_PresentationSize_Size, None, StepVisual_PresentationSize)
StepVisual_PresentationSize.Unit = new_instancemethod(_StepVisual.StepVisual_PresentationSize_Unit, None, StepVisual_PresentationSize)
StepVisual_PresentationSize_swigregister = _StepVisual.StepVisual_PresentationSize_swigregister
StepVisual_PresentationSize_swigregister(StepVisual_PresentationSize)

class StepVisual_PresentationSizeAssignmentSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AreaInSet(self, *args) -> "opencascade::handle< StepVisual_AreaInSet >":
        """
        * returns Value as a AreaInSet (Null if another type)
        	:rtype: opencascade::handle<StepVisual_AreaInSet>
        """
        return _StepVisual.StepVisual_PresentationSizeAssignmentSelect_AreaInSet(self, *args)


    def PresentationArea(self, *args) -> "opencascade::handle< StepVisual_PresentationArea >":
        """
        * returns Value as a PresentationArea (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationArea>
        """
        return _StepVisual.StepVisual_PresentationSizeAssignmentSelect_PresentationArea(self, *args)


    def PresentationView(self, *args) -> "opencascade::handle< StepVisual_PresentationView >":
        """
        * returns Value as a PresentationView (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationView>
        """
        return _StepVisual.StepVisual_PresentationSizeAssignmentSelect_PresentationView(self, *args)


    def __init__(self, *args):
        """
        * Returns a PresentationSizeAssignmentSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationSizeAssignmentSelect_swiginit(self, _StepVisual.new_StepVisual_PresentationSizeAssignmentSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationSizeAssignmentSelect
StepVisual_PresentationSizeAssignmentSelect.AreaInSet = new_instancemethod(_StepVisual.StepVisual_PresentationSizeAssignmentSelect_AreaInSet, None, StepVisual_PresentationSizeAssignmentSelect)
StepVisual_PresentationSizeAssignmentSelect.PresentationArea = new_instancemethod(_StepVisual.StepVisual_PresentationSizeAssignmentSelect_PresentationArea, None, StepVisual_PresentationSizeAssignmentSelect)
StepVisual_PresentationSizeAssignmentSelect.PresentationView = new_instancemethod(_StepVisual.StepVisual_PresentationSizeAssignmentSelect_PresentationView, None, StepVisual_PresentationSizeAssignmentSelect)
StepVisual_PresentationSizeAssignmentSelect_swigregister = _StepVisual.StepVisual_PresentationSizeAssignmentSelect_swigregister
StepVisual_PresentationSizeAssignmentSelect_swigregister(StepVisual_PresentationSizeAssignmentSelect)

class StepVisual_PresentationStyleAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aStyles:
        	:type aStyles: StepVisual_HArray1OfPresentationStyleSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationStyleAssignment_Init(self, *args)


    def NbStyles(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_PresentationStyleAssignment_NbStyles(self, *args)


    def SetStyles(self, *args) -> "void":
        """
        :param aStyles:
        	:type aStyles: StepVisual_HArray1OfPresentationStyleSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationStyleAssignment_SetStyles(self, *args)


    def __init__(self, *args):
        """
        * Returns a PresentationStyleAssignment
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationStyleAssignment_swiginit(self, _StepVisual.new_StepVisual_PresentationStyleAssignment(*args))

    def Styles(self, *args) -> "opencascade::handle< StepVisual_HArray1OfPresentationStyleSelect >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfPresentationStyleSelect>"""
        return _StepVisual.StepVisual_PresentationStyleAssignment_Styles(self, *args)


    def StylesValue(self, *args) -> "StepVisual_PresentationStyleSelect":
        """
        :param num:
        	:type num: int
        	:rtype: StepVisual_PresentationStyleSelect
        """
        return _StepVisual.StepVisual_PresentationStyleAssignment_StylesValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationStyleAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationStyleAssignment
StepVisual_PresentationStyleAssignment.Init = new_instancemethod(_StepVisual.StepVisual_PresentationStyleAssignment_Init, None, StepVisual_PresentationStyleAssignment)
StepVisual_PresentationStyleAssignment.NbStyles = new_instancemethod(_StepVisual.StepVisual_PresentationStyleAssignment_NbStyles, None, StepVisual_PresentationStyleAssignment)
StepVisual_PresentationStyleAssignment.SetStyles = new_instancemethod(_StepVisual.StepVisual_PresentationStyleAssignment_SetStyles, None, StepVisual_PresentationStyleAssignment)
StepVisual_PresentationStyleAssignment.Styles = new_instancemethod(_StepVisual.StepVisual_PresentationStyleAssignment_Styles, None, StepVisual_PresentationStyleAssignment)
StepVisual_PresentationStyleAssignment.StylesValue = new_instancemethod(_StepVisual.StepVisual_PresentationStyleAssignment_StylesValue, None, StepVisual_PresentationStyleAssignment)
StepVisual_PresentationStyleAssignment_swigregister = _StepVisual.StepVisual_PresentationStyleAssignment_swigregister
StepVisual_PresentationStyleAssignment_swigregister(StepVisual_PresentationStyleAssignment)

class StepVisual_PresentationStyleSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CurveStyle(self, *args) -> "opencascade::handle< StepVisual_CurveStyle >":
        """
        * returns Value as a CurveStyle (Null if another type)
        	:rtype: opencascade::handle<StepVisual_CurveStyle>
        """
        return _StepVisual.StepVisual_PresentationStyleSelect_CurveStyle(self, *args)


    def NullStyle(self, *args) -> "opencascade::handle< StepVisual_NullStyleMember >":
        """
        * returns Value as a NullStyleMember (Null if another type)
        	:rtype: opencascade::handle<StepVisual_NullStyleMember>
        """
        return _StepVisual.StepVisual_PresentationStyleSelect_NullStyle(self, *args)


    def PointStyle(self, *args) -> "opencascade::handle< StepVisual_PointStyle >":
        """
        * returns Value as a PointStyle (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PointStyle>
        """
        return _StepVisual.StepVisual_PresentationStyleSelect_PointStyle(self, *args)


    def __init__(self, *args):
        """
        * Returns a PresentationStyleSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationStyleSelect_swiginit(self, _StepVisual.new_StepVisual_PresentationStyleSelect(*args))

    def SurfaceStyleUsage(self, *args) -> "opencascade::handle< StepVisual_SurfaceStyleUsage >":
        """
        * returns Value as a SurfaceStyleUsage (Null if another type)
        	:rtype: opencascade::handle<StepVisual_SurfaceStyleUsage>
        """
        return _StepVisual.StepVisual_PresentationStyleSelect_SurfaceStyleUsage(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationStyleSelect
StepVisual_PresentationStyleSelect.CurveStyle = new_instancemethod(_StepVisual.StepVisual_PresentationStyleSelect_CurveStyle, None, StepVisual_PresentationStyleSelect)
StepVisual_PresentationStyleSelect.NullStyle = new_instancemethod(_StepVisual.StepVisual_PresentationStyleSelect_NullStyle, None, StepVisual_PresentationStyleSelect)
StepVisual_PresentationStyleSelect.PointStyle = new_instancemethod(_StepVisual.StepVisual_PresentationStyleSelect_PointStyle, None, StepVisual_PresentationStyleSelect)
StepVisual_PresentationStyleSelect.SurfaceStyleUsage = new_instancemethod(_StepVisual.StepVisual_PresentationStyleSelect_SurfaceStyleUsage, None, StepVisual_PresentationStyleSelect)
StepVisual_PresentationStyleSelect_swigregister = _StepVisual.StepVisual_PresentationStyleSelect_swigregister
StepVisual_PresentationStyleSelect_swigregister(StepVisual_PresentationStyleSelect)

class StepVisual_PresentedItem(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentedItem_DownCast(t)


    __repr__ = _dumps_object


    def __init__(self):
        _StepVisual.StepVisual_PresentedItem_swiginit(self, _StepVisual.new_StepVisual_PresentedItem())
    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentedItem
StepVisual_PresentedItem_swigregister = _StepVisual.StepVisual_PresentedItem_swigregister
StepVisual_PresentedItem_swigregister(StepVisual_PresentedItem)

class StepVisual_PresentedItemRepresentation(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aPresentation:
        	:type aPresentation: StepVisual_PresentationRepresentationSelect
        	:param aItem:
        	:type aItem: StepVisual_PresentedItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentedItemRepresentation_Init(self, *args)


    def Item(self, *args) -> "opencascade::handle< StepVisual_PresentedItem >":
        """:rtype: opencascade::handle<StepVisual_PresentedItem>"""
        return _StepVisual.StepVisual_PresentedItemRepresentation_Item(self, *args)


    def Presentation(self, *args) -> "StepVisual_PresentationRepresentationSelect":
        """:rtype: StepVisual_PresentationRepresentationSelect"""
        return _StepVisual.StepVisual_PresentedItemRepresentation_Presentation(self, *args)


    def SetItem(self, *args) -> "void":
        """
        :param aItem:
        	:type aItem: StepVisual_PresentedItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentedItemRepresentation_SetItem(self, *args)


    def SetPresentation(self, *args) -> "void":
        """
        :param aPresentation:
        	:type aPresentation: StepVisual_PresentationRepresentationSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentedItemRepresentation_SetPresentation(self, *args)


    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_PresentedItemRepresentation_swiginit(self, _StepVisual.new_StepVisual_PresentedItemRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentedItemRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentedItemRepresentation
StepVisual_PresentedItemRepresentation.Init = new_instancemethod(_StepVisual.StepVisual_PresentedItemRepresentation_Init, None, StepVisual_PresentedItemRepresentation)
StepVisual_PresentedItemRepresentation.Item = new_instancemethod(_StepVisual.StepVisual_PresentedItemRepresentation_Item, None, StepVisual_PresentedItemRepresentation)
StepVisual_PresentedItemRepresentation.Presentation = new_instancemethod(_StepVisual.StepVisual_PresentedItemRepresentation_Presentation, None, StepVisual_PresentedItemRepresentation)
StepVisual_PresentedItemRepresentation.SetItem = new_instancemethod(_StepVisual.StepVisual_PresentedItemRepresentation_SetItem, None, StepVisual_PresentedItemRepresentation)
StepVisual_PresentedItemRepresentation.SetPresentation = new_instancemethod(_StepVisual.StepVisual_PresentedItemRepresentation_SetPresentation, None, StepVisual_PresentedItemRepresentation)
StepVisual_PresentedItemRepresentation_swigregister = _StepVisual.StepVisual_PresentedItemRepresentation_swigregister
StepVisual_PresentedItemRepresentation_swigregister(StepVisual_PresentedItemRepresentation)

class StepVisual_StyleContextSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def PresentationSet(self, *args) -> "opencascade::handle< StepVisual_PresentationSet >":
        """
        * returns Value as a PresentationSet (Null if another type)
        	:rtype: opencascade::handle<StepVisual_PresentationSet>
        """
        return _StepVisual.StepVisual_StyleContextSelect_PresentationSet(self, *args)


    def Representation(self, *args) -> "opencascade::handle< StepRepr_Representation >":
        """
        * returns Value as a Representation (Null if another type)
        	:rtype: opencascade::handle<StepRepr_Representation>
        """
        return _StepVisual.StepVisual_StyleContextSelect_Representation(self, *args)


    def RepresentationItem(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        * returns Value as a RepresentationItem (Null if another type)
        	:rtype: opencascade::handle<StepRepr_RepresentationItem>
        """
        return _StepVisual.StepVisual_StyleContextSelect_RepresentationItem(self, *args)


    def __init__(self, *args):
        """
        * Returns a StyleContextSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_StyleContextSelect_swiginit(self, _StepVisual.new_StepVisual_StyleContextSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_StyleContextSelect
StepVisual_StyleContextSelect.PresentationSet = new_instancemethod(_StepVisual.StepVisual_StyleContextSelect_PresentationSet, None, StepVisual_StyleContextSelect)
StepVisual_StyleContextSelect.Representation = new_instancemethod(_StepVisual.StepVisual_StyleContextSelect_Representation, None, StepVisual_StyleContextSelect)
StepVisual_StyleContextSelect.RepresentationItem = new_instancemethod(_StepVisual.StepVisual_StyleContextSelect_RepresentationItem, None, StepVisual_StyleContextSelect)
StepVisual_StyleContextSelect_swigregister = _StepVisual.StepVisual_StyleContextSelect_swigregister
StepVisual_StyleContextSelect_swigregister(StepVisual_StyleContextSelect)

class StepVisual_StyledItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aStyles:
        	:type aStyles: StepVisual_HArray1OfPresentationStyleAssignment
        	:param aItem:
        	:type aItem: Standard_Transient
        	:rtype: None
        """
        return _StepVisual.StepVisual_StyledItem_Init(self, *args)


    def Item(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem > const &":
        """:rtype: opencascade::handle<StepRepr_RepresentationItem>"""
        return _StepVisual.StepVisual_StyledItem_Item(self, *args)


    def ItemAP242(self, *args) -> "StepVisual_StyledItemTarget":
        """:rtype: StepVisual_StyledItemTarget"""
        return _StepVisual.StepVisual_StyledItem_ItemAP242(self, *args)


    def NbStyles(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_StyledItem_NbStyles(self, *args)


    def SetItem(self, *args) -> "void":
        """
        :param aItem:
        	:type aItem: StepRepr_RepresentationItem
        	:rtype: None
        :param aItem:
        	:type aItem: StepVisual_StyledItemTarget
        	:rtype: None
        """
        return _StepVisual.StepVisual_StyledItem_SetItem(self, *args)


    def SetStyles(self, *args) -> "void":
        """
        :param aStyles:
        	:type aStyles: StepVisual_HArray1OfPresentationStyleAssignment
        	:rtype: None
        """
        return _StepVisual.StepVisual_StyledItem_SetStyles(self, *args)


    def __init__(self, *args):
        """
        * Returns a StyledItem
        	:rtype: None
        """
        _StepVisual.StepVisual_StyledItem_swiginit(self, _StepVisual.new_StepVisual_StyledItem(*args))

    def Styles(self, *args) -> "opencascade::handle< StepVisual_HArray1OfPresentationStyleAssignment > const &":
        """:rtype: opencascade::handle<StepVisual_HArray1OfPresentationStyleAssignment>"""
        return _StepVisual.StepVisual_StyledItem_Styles(self, *args)


    def StylesValue(self, *args) -> "opencascade::handle< StepVisual_PresentationStyleAssignment > const &":
        """
        :param num:
        	:type num: int
        	:rtype: opencascade::handle<StepVisual_PresentationStyleAssignment>
        """
        return _StepVisual.StepVisual_StyledItem_StylesValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_StyledItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_StyledItem
StepVisual_StyledItem.Init = new_instancemethod(_StepVisual.StepVisual_StyledItem_Init, None, StepVisual_StyledItem)
StepVisual_StyledItem.Item = new_instancemethod(_StepVisual.StepVisual_StyledItem_Item, None, StepVisual_StyledItem)
StepVisual_StyledItem.ItemAP242 = new_instancemethod(_StepVisual.StepVisual_StyledItem_ItemAP242, None, StepVisual_StyledItem)
StepVisual_StyledItem.NbStyles = new_instancemethod(_StepVisual.StepVisual_StyledItem_NbStyles, None, StepVisual_StyledItem)
StepVisual_StyledItem.SetItem = new_instancemethod(_StepVisual.StepVisual_StyledItem_SetItem, None, StepVisual_StyledItem)
StepVisual_StyledItem.SetStyles = new_instancemethod(_StepVisual.StepVisual_StyledItem_SetStyles, None, StepVisual_StyledItem)
StepVisual_StyledItem.Styles = new_instancemethod(_StepVisual.StepVisual_StyledItem_Styles, None, StepVisual_StyledItem)
StepVisual_StyledItem.StylesValue = new_instancemethod(_StepVisual.StepVisual_StyledItem_StylesValue, None, StepVisual_StyledItem)
StepVisual_StyledItem_swigregister = _StepVisual.StepVisual_StyledItem_swigregister
StepVisual_StyledItem_swigregister(StepVisual_StyledItem)

class StepVisual_StyledItemTarget(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GeometricRepresentationItem(self, *args) -> "opencascade::handle< StepGeom_GeometricRepresentationItem >":
        """
        * returns Value as a GeometricRepresentationItem (Null if another type)
        	:rtype: opencascade::handle<StepGeom_GeometricRepresentationItem>
        """
        return _StepVisual.StepVisual_StyledItemTarget_GeometricRepresentationItem(self, *args)


    def MappedItem(self, *args) -> "opencascade::handle< StepRepr_MappedItem >":
        """
        * returns Value as a MappedItem (Null if another type)
        	:rtype: opencascade::handle<StepRepr_MappedItem>
        """
        return _StepVisual.StepVisual_StyledItemTarget_MappedItem(self, *args)


    def Representation(self, *args) -> "opencascade::handle< StepRepr_Representation >":
        """
        * returns Value as a Representation (Null if another type)
        	:rtype: opencascade::handle<StepRepr_Representation>
        """
        return _StepVisual.StepVisual_StyledItemTarget_Representation(self, *args)


    def __init__(self, *args):
        """
        * Returns a StyledItemTarget select type
        	:rtype: None
        """
        _StepVisual.StepVisual_StyledItemTarget_swiginit(self, _StepVisual.new_StepVisual_StyledItemTarget(*args))

    def TopologicalRepresentationItem(self, *args) -> "opencascade::handle< StepShape_TopologicalRepresentationItem >":
        """
        * returns Value as a TopologicalRepresentationItem (Null if another type)
        	:rtype: opencascade::handle<StepShape_TopologicalRepresentationItem>
        """
        return _StepVisual.StepVisual_StyledItemTarget_TopologicalRepresentationItem(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_StyledItemTarget
StepVisual_StyledItemTarget.GeometricRepresentationItem = new_instancemethod(_StepVisual.StepVisual_StyledItemTarget_GeometricRepresentationItem, None, StepVisual_StyledItemTarget)
StepVisual_StyledItemTarget.MappedItem = new_instancemethod(_StepVisual.StepVisual_StyledItemTarget_MappedItem, None, StepVisual_StyledItemTarget)
StepVisual_StyledItemTarget.Representation = new_instancemethod(_StepVisual.StepVisual_StyledItemTarget_Representation, None, StepVisual_StyledItemTarget)
StepVisual_StyledItemTarget.TopologicalRepresentationItem = new_instancemethod(_StepVisual.StepVisual_StyledItemTarget_TopologicalRepresentationItem, None, StepVisual_StyledItemTarget)
StepVisual_StyledItemTarget_swigregister = _StepVisual.StepVisual_StyledItemTarget_swigregister
StepVisual_StyledItemTarget_swigregister(StepVisual_StyledItemTarget)

class StepVisual_SurfaceSideStyle(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aStyles:
        	:type aStyles: StepVisual_HArray1OfSurfaceStyleElementSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceSideStyle_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_SurfaceSideStyle_Name(self, *args)


    def NbStyles(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_SurfaceSideStyle_NbStyles(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceSideStyle_SetName(self, *args)


    def SetStyles(self, *args) -> "void":
        """
        :param aStyles:
        	:type aStyles: StepVisual_HArray1OfSurfaceStyleElementSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceSideStyle_SetStyles(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceSideStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceSideStyle_swiginit(self, _StepVisual.new_StepVisual_SurfaceSideStyle(*args))

    def Styles(self, *args) -> "opencascade::handle< StepVisual_HArray1OfSurfaceStyleElementSelect >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfSurfaceStyleElementSelect>"""
        return _StepVisual.StepVisual_SurfaceSideStyle_Styles(self, *args)


    def StylesValue(self, *args) -> "StepVisual_SurfaceStyleElementSelect":
        """
        :param num:
        	:type num: int
        	:rtype: StepVisual_SurfaceStyleElementSelect
        """
        return _StepVisual.StepVisual_SurfaceSideStyle_StylesValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceSideStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceSideStyle
StepVisual_SurfaceSideStyle.Init = new_instancemethod(_StepVisual.StepVisual_SurfaceSideStyle_Init, None, StepVisual_SurfaceSideStyle)
StepVisual_SurfaceSideStyle.Name = new_instancemethod(_StepVisual.StepVisual_SurfaceSideStyle_Name, None, StepVisual_SurfaceSideStyle)
StepVisual_SurfaceSideStyle.NbStyles = new_instancemethod(_StepVisual.StepVisual_SurfaceSideStyle_NbStyles, None, StepVisual_SurfaceSideStyle)
StepVisual_SurfaceSideStyle.SetName = new_instancemethod(_StepVisual.StepVisual_SurfaceSideStyle_SetName, None, StepVisual_SurfaceSideStyle)
StepVisual_SurfaceSideStyle.SetStyles = new_instancemethod(_StepVisual.StepVisual_SurfaceSideStyle_SetStyles, None, StepVisual_SurfaceSideStyle)
StepVisual_SurfaceSideStyle.Styles = new_instancemethod(_StepVisual.StepVisual_SurfaceSideStyle_Styles, None, StepVisual_SurfaceSideStyle)
StepVisual_SurfaceSideStyle.StylesValue = new_instancemethod(_StepVisual.StepVisual_SurfaceSideStyle_StylesValue, None, StepVisual_SurfaceSideStyle)
StepVisual_SurfaceSideStyle_swigregister = _StepVisual.StepVisual_SurfaceSideStyle_swigregister
StepVisual_SurfaceSideStyle_swigregister(StepVisual_SurfaceSideStyle)

class StepVisual_SurfaceStyleBoundary(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aStyleOfBoundary:
        	:type aStyleOfBoundary: StepVisual_CurveStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleBoundary_Init(self, *args)


    def SetStyleOfBoundary(self, *args) -> "void":
        """
        :param aStyleOfBoundary:
        	:type aStyleOfBoundary: StepVisual_CurveStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleBoundary_SetStyleOfBoundary(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceStyleBoundary
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleBoundary_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleBoundary(*args))

    def StyleOfBoundary(self, *args) -> "opencascade::handle< StepVisual_CurveStyle >":
        """:rtype: opencascade::handle<StepVisual_CurveStyle>"""
        return _StepVisual.StepVisual_SurfaceStyleBoundary_StyleOfBoundary(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleBoundary_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleBoundary
StepVisual_SurfaceStyleBoundary.Init = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleBoundary_Init, None, StepVisual_SurfaceStyleBoundary)
StepVisual_SurfaceStyleBoundary.SetStyleOfBoundary = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleBoundary_SetStyleOfBoundary, None, StepVisual_SurfaceStyleBoundary)
StepVisual_SurfaceStyleBoundary.StyleOfBoundary = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleBoundary_StyleOfBoundary, None, StepVisual_SurfaceStyleBoundary)
StepVisual_SurfaceStyleBoundary_swigregister = _StepVisual.StepVisual_SurfaceStyleBoundary_swigregister
StepVisual_SurfaceStyleBoundary_swigregister(StepVisual_SurfaceStyleBoundary)

class StepVisual_SurfaceStyleControlGrid(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aStyleOfControlGrid:
        	:type aStyleOfControlGrid: StepVisual_CurveStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleControlGrid_Init(self, *args)


    def SetStyleOfControlGrid(self, *args) -> "void":
        """
        :param aStyleOfControlGrid:
        	:type aStyleOfControlGrid: StepVisual_CurveStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleControlGrid_SetStyleOfControlGrid(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceStyleControlGrid
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleControlGrid_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleControlGrid(*args))

    def StyleOfControlGrid(self, *args) -> "opencascade::handle< StepVisual_CurveStyle >":
        """:rtype: opencascade::handle<StepVisual_CurveStyle>"""
        return _StepVisual.StepVisual_SurfaceStyleControlGrid_StyleOfControlGrid(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleControlGrid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleControlGrid
StepVisual_SurfaceStyleControlGrid.Init = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleControlGrid_Init, None, StepVisual_SurfaceStyleControlGrid)
StepVisual_SurfaceStyleControlGrid.SetStyleOfControlGrid = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleControlGrid_SetStyleOfControlGrid, None, StepVisual_SurfaceStyleControlGrid)
StepVisual_SurfaceStyleControlGrid.StyleOfControlGrid = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleControlGrid_StyleOfControlGrid, None, StepVisual_SurfaceStyleControlGrid)
StepVisual_SurfaceStyleControlGrid_swigregister = _StepVisual.StepVisual_SurfaceStyleControlGrid_swigregister
StepVisual_SurfaceStyleControlGrid_swigregister(StepVisual_SurfaceStyleControlGrid)

class StepVisual_SurfaceStyleElementSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a SurfaceStyleElementSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleElementSelect_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleElementSelect(*args))

    def SurfaceStyleBoundary(self, *args) -> "opencascade::handle< StepVisual_SurfaceStyleBoundary >":
        """
        * returns Value as a SurfaceStyleBoundary (Null if another type)
        	:rtype: opencascade::handle<StepVisual_SurfaceStyleBoundary>
        """
        return _StepVisual.StepVisual_SurfaceStyleElementSelect_SurfaceStyleBoundary(self, *args)


    def SurfaceStyleFillArea(self, *args) -> "opencascade::handle< StepVisual_SurfaceStyleFillArea >":
        """
        * returns Value as a SurfaceStyleFillArea (Null if another type)
        	:rtype: opencascade::handle<StepVisual_SurfaceStyleFillArea>
        """
        return _StepVisual.StepVisual_SurfaceStyleElementSelect_SurfaceStyleFillArea(self, *args)


    def SurfaceStyleParameterLine(self, *args) -> "opencascade::handle< StepVisual_SurfaceStyleParameterLine >":
        """
        * returns Value as a SurfaceStyleParameterLine (Null if another type)
        	:rtype: opencascade::handle<StepVisual_SurfaceStyleParameterLine>
        """
        return _StepVisual.StepVisual_SurfaceStyleElementSelect_SurfaceStyleParameterLine(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleElementSelect
StepVisual_SurfaceStyleElementSelect.SurfaceStyleBoundary = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleElementSelect_SurfaceStyleBoundary, None, StepVisual_SurfaceStyleElementSelect)
StepVisual_SurfaceStyleElementSelect.SurfaceStyleFillArea = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleElementSelect_SurfaceStyleFillArea, None, StepVisual_SurfaceStyleElementSelect)
StepVisual_SurfaceStyleElementSelect.SurfaceStyleParameterLine = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleElementSelect_SurfaceStyleParameterLine, None, StepVisual_SurfaceStyleElementSelect)
StepVisual_SurfaceStyleElementSelect_swigregister = _StepVisual.StepVisual_SurfaceStyleElementSelect_swigregister
StepVisual_SurfaceStyleElementSelect_swigregister(StepVisual_SurfaceStyleElementSelect)

class StepVisual_SurfaceStyleFillArea(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FillArea(self, *args) -> "opencascade::handle< StepVisual_FillAreaStyle >":
        """:rtype: opencascade::handle<StepVisual_FillAreaStyle>"""
        return _StepVisual.StepVisual_SurfaceStyleFillArea_FillArea(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aFillArea:
        	:type aFillArea: StepVisual_FillAreaStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleFillArea_Init(self, *args)


    def SetFillArea(self, *args) -> "void":
        """
        :param aFillArea:
        	:type aFillArea: StepVisual_FillAreaStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleFillArea_SetFillArea(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceStyleFillArea
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleFillArea_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleFillArea(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleFillArea_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleFillArea
StepVisual_SurfaceStyleFillArea.FillArea = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleFillArea_FillArea, None, StepVisual_SurfaceStyleFillArea)
StepVisual_SurfaceStyleFillArea.Init = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleFillArea_Init, None, StepVisual_SurfaceStyleFillArea)
StepVisual_SurfaceStyleFillArea.SetFillArea = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleFillArea_SetFillArea, None, StepVisual_SurfaceStyleFillArea)
StepVisual_SurfaceStyleFillArea_swigregister = _StepVisual.StepVisual_SurfaceStyleFillArea_swigregister
StepVisual_SurfaceStyleFillArea_swigregister(StepVisual_SurfaceStyleFillArea)

class StepVisual_SurfaceStyleParameterLine(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DirectionCounts(self, *args) -> "opencascade::handle< StepVisual_HArray1OfDirectionCountSelect >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfDirectionCountSelect>"""
        return _StepVisual.StepVisual_SurfaceStyleParameterLine_DirectionCounts(self, *args)


    def DirectionCountsValue(self, *args) -> "StepVisual_DirectionCountSelect":
        """
        :param num:
        	:type num: int
        	:rtype: StepVisual_DirectionCountSelect
        """
        return _StepVisual.StepVisual_SurfaceStyleParameterLine_DirectionCountsValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aStyleOfParameterLines:
        	:type aStyleOfParameterLines: StepVisual_CurveStyle
        	:param aDirectionCounts:
        	:type aDirectionCounts: StepVisual_HArray1OfDirectionCountSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleParameterLine_Init(self, *args)


    def NbDirectionCounts(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_SurfaceStyleParameterLine_NbDirectionCounts(self, *args)


    def SetDirectionCounts(self, *args) -> "void":
        """
        :param aDirectionCounts:
        	:type aDirectionCounts: StepVisual_HArray1OfDirectionCountSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleParameterLine_SetDirectionCounts(self, *args)


    def SetStyleOfParameterLines(self, *args) -> "void":
        """
        :param aStyleOfParameterLines:
        	:type aStyleOfParameterLines: StepVisual_CurveStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleParameterLine_SetStyleOfParameterLines(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceStyleParameterLine
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleParameterLine_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleParameterLine(*args))

    def StyleOfParameterLines(self, *args) -> "opencascade::handle< StepVisual_CurveStyle >":
        """:rtype: opencascade::handle<StepVisual_CurveStyle>"""
        return _StepVisual.StepVisual_SurfaceStyleParameterLine_StyleOfParameterLines(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleParameterLine_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleParameterLine
StepVisual_SurfaceStyleParameterLine.DirectionCounts = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleParameterLine_DirectionCounts, None, StepVisual_SurfaceStyleParameterLine)
StepVisual_SurfaceStyleParameterLine.DirectionCountsValue = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleParameterLine_DirectionCountsValue, None, StepVisual_SurfaceStyleParameterLine)
StepVisual_SurfaceStyleParameterLine.Init = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleParameterLine_Init, None, StepVisual_SurfaceStyleParameterLine)
StepVisual_SurfaceStyleParameterLine.NbDirectionCounts = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleParameterLine_NbDirectionCounts, None, StepVisual_SurfaceStyleParameterLine)
StepVisual_SurfaceStyleParameterLine.SetDirectionCounts = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleParameterLine_SetDirectionCounts, None, StepVisual_SurfaceStyleParameterLine)
StepVisual_SurfaceStyleParameterLine.SetStyleOfParameterLines = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleParameterLine_SetStyleOfParameterLines, None, StepVisual_SurfaceStyleParameterLine)
StepVisual_SurfaceStyleParameterLine.StyleOfParameterLines = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleParameterLine_StyleOfParameterLines, None, StepVisual_SurfaceStyleParameterLine)
StepVisual_SurfaceStyleParameterLine_swigregister = _StepVisual.StepVisual_SurfaceStyleParameterLine_swigregister
StepVisual_SurfaceStyleParameterLine_swigregister(StepVisual_SurfaceStyleParameterLine)

class StepVisual_SurfaceStyleSegmentationCurve(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aStyleOfSegmentationCurve:
        	:type aStyleOfSegmentationCurve: StepVisual_CurveStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleSegmentationCurve_Init(self, *args)


    def SetStyleOfSegmentationCurve(self, *args) -> "void":
        """
        :param aStyleOfSegmentationCurve:
        	:type aStyleOfSegmentationCurve: StepVisual_CurveStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleSegmentationCurve_SetStyleOfSegmentationCurve(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceStyleSegmentationCurve
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleSegmentationCurve_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleSegmentationCurve(*args))

    def StyleOfSegmentationCurve(self, *args) -> "opencascade::handle< StepVisual_CurveStyle >":
        """:rtype: opencascade::handle<StepVisual_CurveStyle>"""
        return _StepVisual.StepVisual_SurfaceStyleSegmentationCurve_StyleOfSegmentationCurve(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleSegmentationCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleSegmentationCurve
StepVisual_SurfaceStyleSegmentationCurve.Init = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleSegmentationCurve_Init, None, StepVisual_SurfaceStyleSegmentationCurve)
StepVisual_SurfaceStyleSegmentationCurve.SetStyleOfSegmentationCurve = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleSegmentationCurve_SetStyleOfSegmentationCurve, None, StepVisual_SurfaceStyleSegmentationCurve)
StepVisual_SurfaceStyleSegmentationCurve.StyleOfSegmentationCurve = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleSegmentationCurve_StyleOfSegmentationCurve, None, StepVisual_SurfaceStyleSegmentationCurve)
StepVisual_SurfaceStyleSegmentationCurve_swigregister = _StepVisual.StepVisual_SurfaceStyleSegmentationCurve_swigregister
StepVisual_SurfaceStyleSegmentationCurve_swigregister(StepVisual_SurfaceStyleSegmentationCurve)

class StepVisual_SurfaceStyleSilhouette(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aStyleOfSilhouette:
        	:type aStyleOfSilhouette: StepVisual_CurveStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleSilhouette_Init(self, *args)


    def SetStyleOfSilhouette(self, *args) -> "void":
        """
        :param aStyleOfSilhouette:
        	:type aStyleOfSilhouette: StepVisual_CurveStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleSilhouette_SetStyleOfSilhouette(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceStyleSilhouette
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleSilhouette_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleSilhouette(*args))

    def StyleOfSilhouette(self, *args) -> "opencascade::handle< StepVisual_CurveStyle >":
        """:rtype: opencascade::handle<StepVisual_CurveStyle>"""
        return _StepVisual.StepVisual_SurfaceStyleSilhouette_StyleOfSilhouette(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleSilhouette_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleSilhouette
StepVisual_SurfaceStyleSilhouette.Init = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleSilhouette_Init, None, StepVisual_SurfaceStyleSilhouette)
StepVisual_SurfaceStyleSilhouette.SetStyleOfSilhouette = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleSilhouette_SetStyleOfSilhouette, None, StepVisual_SurfaceStyleSilhouette)
StepVisual_SurfaceStyleSilhouette.StyleOfSilhouette = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleSilhouette_StyleOfSilhouette, None, StepVisual_SurfaceStyleSilhouette)
StepVisual_SurfaceStyleSilhouette_swigregister = _StepVisual.StepVisual_SurfaceStyleSilhouette_swigregister
StepVisual_SurfaceStyleSilhouette_swigregister(StepVisual_SurfaceStyleSilhouette)

class StepVisual_SurfaceStyleUsage(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aSide:
        	:type aSide: StepVisual_SurfaceSide
        	:param aStyle:
        	:type aStyle: StepVisual_SurfaceSideStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleUsage_Init(self, *args)


    def SetSide(self, *args) -> "void":
        """
        :param aSide:
        	:type aSide: StepVisual_SurfaceSide
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleUsage_SetSide(self, *args)


    def SetStyle(self, *args) -> "void":
        """
        :param aStyle:
        	:type aStyle: StepVisual_SurfaceSideStyle
        	:rtype: None
        """
        return _StepVisual.StepVisual_SurfaceStyleUsage_SetStyle(self, *args)


    def Side(self, *args) -> "StepVisual_SurfaceSide":
        """:rtype: StepVisual_SurfaceSide"""
        return _StepVisual.StepVisual_SurfaceStyleUsage_Side(self, *args)


    def __init__(self, *args):
        """
        * Returns a SurfaceStyleUsage
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleUsage_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleUsage(*args))

    def Style(self, *args) -> "opencascade::handle< StepVisual_SurfaceSideStyle >":
        """:rtype: opencascade::handle<StepVisual_SurfaceSideStyle>"""
        return _StepVisual.StepVisual_SurfaceStyleUsage_Style(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleUsage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleUsage
StepVisual_SurfaceStyleUsage.Init = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleUsage_Init, None, StepVisual_SurfaceStyleUsage)
StepVisual_SurfaceStyleUsage.SetSide = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleUsage_SetSide, None, StepVisual_SurfaceStyleUsage)
StepVisual_SurfaceStyleUsage.SetStyle = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleUsage_SetStyle, None, StepVisual_SurfaceStyleUsage)
StepVisual_SurfaceStyleUsage.Side = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleUsage_Side, None, StepVisual_SurfaceStyleUsage)
StepVisual_SurfaceStyleUsage.Style = new_instancemethod(_StepVisual.StepVisual_SurfaceStyleUsage_Style, None, StepVisual_SurfaceStyleUsage)
StepVisual_SurfaceStyleUsage_swigregister = _StepVisual.StepVisual_SurfaceStyleUsage_swigregister
StepVisual_SurfaceStyleUsage_swigregister(StepVisual_SurfaceStyleUsage)

class StepVisual_Template(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Template
        	:rtype: None
        """
        _StepVisual.StepVisual_Template_swiginit(self, _StepVisual.new_StepVisual_Template(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_Template_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_Template
StepVisual_Template_swigregister = _StepVisual.StepVisual_Template_swigregister
StepVisual_Template_swigregister(StepVisual_Template)

class StepVisual_TemplateInstance(OCC.Core.StepRepr.StepRepr_MappedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a TemplateInstance
        	:rtype: None
        """
        _StepVisual.StepVisual_TemplateInstance_swiginit(self, _StepVisual.new_StepVisual_TemplateInstance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TemplateInstance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TemplateInstance
StepVisual_TemplateInstance_swigregister = _StepVisual.StepVisual_TemplateInstance_swigregister
StepVisual_TemplateInstance_swigregister(StepVisual_TemplateInstance)

class StepVisual_TessellatedItem(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a DraughtingCalloutElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_TessellatedItem_swiginit(self, _StepVisual.new_StepVisual_TessellatedItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TessellatedItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TessellatedItem
StepVisual_TessellatedItem_swigregister = _StepVisual.StepVisual_TessellatedItem_swigregister
StepVisual_TessellatedItem_swigregister(StepVisual_TessellatedItem)

class StepVisual_TextLiteral(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Alignment(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_TextLiteral_Alignment(self, *args)


    def Font(self, *args) -> "StepVisual_FontSelect":
        """:rtype: StepVisual_FontSelect"""
        return _StepVisual.StepVisual_TextLiteral_Font(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aLiteral:
        	:type aLiteral: TCollection_HAsciiString
        	:param aPlacement:
        	:type aPlacement: StepGeom_Axis2Placement
        	:param aAlignment:
        	:type aAlignment: TCollection_HAsciiString
        	:param aPath:
        	:type aPath: StepVisual_TextPath
        	:param aFont:
        	:type aFont: StepVisual_FontSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextLiteral_Init(self, *args)


    def Literal(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_TextLiteral_Literal(self, *args)


    def Path(self, *args) -> "StepVisual_TextPath":
        """:rtype: StepVisual_TextPath"""
        return _StepVisual.StepVisual_TextLiteral_Path(self, *args)


    def Placement(self, *args) -> "StepGeom_Axis2Placement":
        """:rtype: StepGeom_Axis2Placement"""
        return _StepVisual.StepVisual_TextLiteral_Placement(self, *args)


    def SetAlignment(self, *args) -> "void":
        """
        :param aAlignment:
        	:type aAlignment: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextLiteral_SetAlignment(self, *args)


    def SetFont(self, *args) -> "void":
        """
        :param aFont:
        	:type aFont: StepVisual_FontSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextLiteral_SetFont(self, *args)


    def SetLiteral(self, *args) -> "void":
        """
        :param aLiteral:
        	:type aLiteral: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextLiteral_SetLiteral(self, *args)


    def SetPath(self, *args) -> "void":
        """
        :param aPath:
        	:type aPath: StepVisual_TextPath
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextLiteral_SetPath(self, *args)


    def SetPlacement(self, *args) -> "void":
        """
        :param aPlacement:
        	:type aPlacement: StepGeom_Axis2Placement
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextLiteral_SetPlacement(self, *args)


    def __init__(self, *args):
        """
        * Returns a TextLiteral
        	:rtype: None
        """
        _StepVisual.StepVisual_TextLiteral_swiginit(self, _StepVisual.new_StepVisual_TextLiteral(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TextLiteral_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextLiteral
StepVisual_TextLiteral.Alignment = new_instancemethod(_StepVisual.StepVisual_TextLiteral_Alignment, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.Font = new_instancemethod(_StepVisual.StepVisual_TextLiteral_Font, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.Init = new_instancemethod(_StepVisual.StepVisual_TextLiteral_Init, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.Literal = new_instancemethod(_StepVisual.StepVisual_TextLiteral_Literal, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.Path = new_instancemethod(_StepVisual.StepVisual_TextLiteral_Path, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.Placement = new_instancemethod(_StepVisual.StepVisual_TextLiteral_Placement, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.SetAlignment = new_instancemethod(_StepVisual.StepVisual_TextLiteral_SetAlignment, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.SetFont = new_instancemethod(_StepVisual.StepVisual_TextLiteral_SetFont, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.SetLiteral = new_instancemethod(_StepVisual.StepVisual_TextLiteral_SetLiteral, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.SetPath = new_instancemethod(_StepVisual.StepVisual_TextLiteral_SetPath, None, StepVisual_TextLiteral)
StepVisual_TextLiteral.SetPlacement = new_instancemethod(_StepVisual.StepVisual_TextLiteral_SetPlacement, None, StepVisual_TextLiteral)
StepVisual_TextLiteral_swigregister = _StepVisual.StepVisual_TextLiteral_swigregister
StepVisual_TextLiteral_swigregister(StepVisual_TextLiteral)

class StepVisual_TextOrCharacter(OCC.Core.StepData.StepData_SelectType):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def AnnotationText(self, *args) -> "opencascade::handle< StepVisual_AnnotationText >":
        """
        * returns Value as a AnnotationText (Null if another type)
        	:rtype: opencascade::handle<StepVisual_AnnotationText>
        """
        return _StepVisual.StepVisual_TextOrCharacter_AnnotationText(self, *args)


    def CompositeText(self, *args) -> "opencascade::handle< StepVisual_CompositeText >":
        """
        * returns Value as a CompositeText (Null if another type)
        	:rtype: opencascade::handle<StepVisual_CompositeText>
        """
        return _StepVisual.StepVisual_TextOrCharacter_CompositeText(self, *args)


    def __init__(self, *args):
        """
        * Returns a TextOrCharacter SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_TextOrCharacter_swiginit(self, _StepVisual.new_StepVisual_TextOrCharacter(*args))

    def TextLiteral(self, *args) -> "opencascade::handle< StepVisual_TextLiteral >":
        """
        * returns Value as a TextLiteral (Null if another type)
        	:rtype: opencascade::handle<StepVisual_TextLiteral>
        """
        return _StepVisual.StepVisual_TextOrCharacter_TextLiteral(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextOrCharacter
StepVisual_TextOrCharacter.AnnotationText = new_instancemethod(_StepVisual.StepVisual_TextOrCharacter_AnnotationText, None, StepVisual_TextOrCharacter)
StepVisual_TextOrCharacter.CompositeText = new_instancemethod(_StepVisual.StepVisual_TextOrCharacter_CompositeText, None, StepVisual_TextOrCharacter)
StepVisual_TextOrCharacter.TextLiteral = new_instancemethod(_StepVisual.StepVisual_TextOrCharacter_TextLiteral, None, StepVisual_TextOrCharacter)
StepVisual_TextOrCharacter_swigregister = _StepVisual.StepVisual_TextOrCharacter_swigregister
StepVisual_TextOrCharacter_swigregister(StepVisual_TextOrCharacter)

class StepVisual_TextStyle(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CharacterAppearance(self, *args) -> "opencascade::handle< StepVisual_TextStyleForDefinedFont >":
        """:rtype: opencascade::handle<StepVisual_TextStyleForDefinedFont>"""
        return _StepVisual.StepVisual_TextStyle_CharacterAppearance(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aCharacterAppearance:
        	:type aCharacterAppearance: StepVisual_TextStyleForDefinedFont
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextStyle_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_TextStyle_Name(self, *args)


    def SetCharacterAppearance(self, *args) -> "void":
        """
        :param aCharacterAppearance:
        	:type aCharacterAppearance: StepVisual_TextStyleForDefinedFont
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextStyle_SetCharacterAppearance(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextStyle_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a TextStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_TextStyle_swiginit(self, _StepVisual.new_StepVisual_TextStyle(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TextStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextStyle
StepVisual_TextStyle.CharacterAppearance = new_instancemethod(_StepVisual.StepVisual_TextStyle_CharacterAppearance, None, StepVisual_TextStyle)
StepVisual_TextStyle.Init = new_instancemethod(_StepVisual.StepVisual_TextStyle_Init, None, StepVisual_TextStyle)
StepVisual_TextStyle.Name = new_instancemethod(_StepVisual.StepVisual_TextStyle_Name, None, StepVisual_TextStyle)
StepVisual_TextStyle.SetCharacterAppearance = new_instancemethod(_StepVisual.StepVisual_TextStyle_SetCharacterAppearance, None, StepVisual_TextStyle)
StepVisual_TextStyle.SetName = new_instancemethod(_StepVisual.StepVisual_TextStyle_SetName, None, StepVisual_TextStyle)
StepVisual_TextStyle_swigregister = _StepVisual.StepVisual_TextStyle_swigregister
StepVisual_TextStyle_swigregister(StepVisual_TextStyle)

class StepVisual_TextStyleForDefinedFont(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aTextColour:
        	:type aTextColour: StepVisual_Colour
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextStyleForDefinedFont_Init(self, *args)


    def SetTextColour(self, *args) -> "void":
        """
        :param aTextColour:
        	:type aTextColour: StepVisual_Colour
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextStyleForDefinedFont_SetTextColour(self, *args)


    def __init__(self, *args):
        """
        * Returns a TextStyleForDefinedFont
        	:rtype: None
        """
        _StepVisual.StepVisual_TextStyleForDefinedFont_swiginit(self, _StepVisual.new_StepVisual_TextStyleForDefinedFont(*args))

    def TextColour(self, *args) -> "opencascade::handle< StepVisual_Colour >":
        """:rtype: opencascade::handle<StepVisual_Colour>"""
        return _StepVisual.StepVisual_TextStyleForDefinedFont_TextColour(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TextStyleForDefinedFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextStyleForDefinedFont
StepVisual_TextStyleForDefinedFont.Init = new_instancemethod(_StepVisual.StepVisual_TextStyleForDefinedFont_Init, None, StepVisual_TextStyleForDefinedFont)
StepVisual_TextStyleForDefinedFont.SetTextColour = new_instancemethod(_StepVisual.StepVisual_TextStyleForDefinedFont_SetTextColour, None, StepVisual_TextStyleForDefinedFont)
StepVisual_TextStyleForDefinedFont.TextColour = new_instancemethod(_StepVisual.StepVisual_TextStyleForDefinedFont_TextColour, None, StepVisual_TextStyleForDefinedFont)
StepVisual_TextStyleForDefinedFont_swigregister = _StepVisual.StepVisual_TextStyleForDefinedFont_swigregister
StepVisual_TextStyleForDefinedFont_swigregister(StepVisual_TextStyleForDefinedFont)

class StepVisual_ViewVolume(OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def BackPlaneClipping(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepVisual.StepVisual_ViewVolume_BackPlaneClipping(self, *args)


    def BackPlaneDistance(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_ViewVolume_BackPlaneDistance(self, *args)


    def FrontPlaneClipping(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepVisual.StepVisual_ViewVolume_FrontPlaneClipping(self, *args)


    def FrontPlaneDistance(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_ViewVolume_FrontPlaneDistance(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aProjectionType:
        	:type aProjectionType: StepVisual_CentralOrParallel
        	:param aProjectionPoint:
        	:type aProjectionPoint: StepGeom_CartesianPoint
        	:param aViewPlaneDistance:
        	:type aViewPlaneDistance: float
        	:param aFrontPlaneDistance:
        	:type aFrontPlaneDistance: float
        	:param aFrontPlaneClipping:
        	:type aFrontPlaneClipping: bool
        	:param aBackPlaneDistance:
        	:type aBackPlaneDistance: float
        	:param aBackPlaneClipping:
        	:type aBackPlaneClipping: bool
        	:param aViewVolumeSidesClipping:
        	:type aViewVolumeSidesClipping: bool
        	:param aViewWindow:
        	:type aViewWindow: StepVisual_PlanarBox
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_Init(self, *args)


    def ProjectionPoint(self, *args) -> "opencascade::handle< StepGeom_CartesianPoint >":
        """:rtype: opencascade::handle<StepGeom_CartesianPoint>"""
        return _StepVisual.StepVisual_ViewVolume_ProjectionPoint(self, *args)


    def ProjectionType(self, *args) -> "StepVisual_CentralOrParallel":
        """:rtype: StepVisual_CentralOrParallel"""
        return _StepVisual.StepVisual_ViewVolume_ProjectionType(self, *args)


    def SetBackPlaneClipping(self, *args) -> "void":
        """
        :param aBackPlaneClipping:
        	:type aBackPlaneClipping: bool
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_SetBackPlaneClipping(self, *args)


    def SetBackPlaneDistance(self, *args) -> "void":
        """
        :param aBackPlaneDistance:
        	:type aBackPlaneDistance: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_SetBackPlaneDistance(self, *args)


    def SetFrontPlaneClipping(self, *args) -> "void":
        """
        :param aFrontPlaneClipping:
        	:type aFrontPlaneClipping: bool
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_SetFrontPlaneClipping(self, *args)


    def SetFrontPlaneDistance(self, *args) -> "void":
        """
        :param aFrontPlaneDistance:
        	:type aFrontPlaneDistance: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_SetFrontPlaneDistance(self, *args)


    def SetProjectionPoint(self, *args) -> "void":
        """
        :param aProjectionPoint:
        	:type aProjectionPoint: StepGeom_CartesianPoint
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_SetProjectionPoint(self, *args)


    def SetProjectionType(self, *args) -> "void":
        """
        :param aProjectionType:
        	:type aProjectionType: StepVisual_CentralOrParallel
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_SetProjectionType(self, *args)


    def SetViewPlaneDistance(self, *args) -> "void":
        """
        :param aViewPlaneDistance:
        	:type aViewPlaneDistance: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_SetViewPlaneDistance(self, *args)


    def SetViewVolumeSidesClipping(self, *args) -> "void":
        """
        :param aViewVolumeSidesClipping:
        	:type aViewVolumeSidesClipping: bool
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_SetViewVolumeSidesClipping(self, *args)


    def SetViewWindow(self, *args) -> "void":
        """
        :param aViewWindow:
        	:type aViewWindow: StepVisual_PlanarBox
        	:rtype: None
        """
        return _StepVisual.StepVisual_ViewVolume_SetViewWindow(self, *args)


    def __init__(self, *args):
        """
        * Returns a ViewVolume
        	:rtype: None
        """
        _StepVisual.StepVisual_ViewVolume_swiginit(self, _StepVisual.new_StepVisual_ViewVolume(*args))

    def ViewPlaneDistance(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_ViewVolume_ViewPlaneDistance(self, *args)


    def ViewVolumeSidesClipping(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepVisual.StepVisual_ViewVolume_ViewVolumeSidesClipping(self, *args)


    def ViewWindow(self, *args) -> "opencascade::handle< StepVisual_PlanarBox >":
        """:rtype: opencascade::handle<StepVisual_PlanarBox>"""
        return _StepVisual.StepVisual_ViewVolume_ViewWindow(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ViewVolume_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ViewVolume
StepVisual_ViewVolume.BackPlaneClipping = new_instancemethod(_StepVisual.StepVisual_ViewVolume_BackPlaneClipping, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.BackPlaneDistance = new_instancemethod(_StepVisual.StepVisual_ViewVolume_BackPlaneDistance, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.FrontPlaneClipping = new_instancemethod(_StepVisual.StepVisual_ViewVolume_FrontPlaneClipping, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.FrontPlaneDistance = new_instancemethod(_StepVisual.StepVisual_ViewVolume_FrontPlaneDistance, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.Init = new_instancemethod(_StepVisual.StepVisual_ViewVolume_Init, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.ProjectionPoint = new_instancemethod(_StepVisual.StepVisual_ViewVolume_ProjectionPoint, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.ProjectionType = new_instancemethod(_StepVisual.StepVisual_ViewVolume_ProjectionType, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.SetBackPlaneClipping = new_instancemethod(_StepVisual.StepVisual_ViewVolume_SetBackPlaneClipping, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.SetBackPlaneDistance = new_instancemethod(_StepVisual.StepVisual_ViewVolume_SetBackPlaneDistance, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.SetFrontPlaneClipping = new_instancemethod(_StepVisual.StepVisual_ViewVolume_SetFrontPlaneClipping, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.SetFrontPlaneDistance = new_instancemethod(_StepVisual.StepVisual_ViewVolume_SetFrontPlaneDistance, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.SetProjectionPoint = new_instancemethod(_StepVisual.StepVisual_ViewVolume_SetProjectionPoint, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.SetProjectionType = new_instancemethod(_StepVisual.StepVisual_ViewVolume_SetProjectionType, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.SetViewPlaneDistance = new_instancemethod(_StepVisual.StepVisual_ViewVolume_SetViewPlaneDistance, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.SetViewVolumeSidesClipping = new_instancemethod(_StepVisual.StepVisual_ViewVolume_SetViewVolumeSidesClipping, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.SetViewWindow = new_instancemethod(_StepVisual.StepVisual_ViewVolume_SetViewWindow, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.ViewPlaneDistance = new_instancemethod(_StepVisual.StepVisual_ViewVolume_ViewPlaneDistance, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.ViewVolumeSidesClipping = new_instancemethod(_StepVisual.StepVisual_ViewVolume_ViewVolumeSidesClipping, None, StepVisual_ViewVolume)
StepVisual_ViewVolume.ViewWindow = new_instancemethod(_StepVisual.StepVisual_ViewVolume_ViewWindow, None, StepVisual_ViewVolume)
StepVisual_ViewVolume_swigregister = _StepVisual.StepVisual_ViewVolume_swigregister
StepVisual_ViewVolume_swigregister(StepVisual_ViewVolume)

class StepVisual_AnnotationOccurrence(StepVisual_StyledItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a AnnotationOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationOccurrence_swiginit(self, _StepVisual.new_StepVisual_AnnotationOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationOccurrence
StepVisual_AnnotationOccurrence_swigregister = _StepVisual.StepVisual_AnnotationOccurrence_swigregister
StepVisual_AnnotationOccurrence_swigregister(StepVisual_AnnotationOccurrence)

class StepVisual_BackgroundColour(StepVisual_Colour):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aPresentation:
        	:type aPresentation: StepVisual_AreaOrView
        	:rtype: None
        """
        return _StepVisual.StepVisual_BackgroundColour_Init(self, *args)


    def Presentation(self, *args) -> "StepVisual_AreaOrView":
        """:rtype: StepVisual_AreaOrView"""
        return _StepVisual.StepVisual_BackgroundColour_Presentation(self, *args)


    def SetPresentation(self, *args) -> "void":
        """
        :param aPresentation:
        	:type aPresentation: StepVisual_AreaOrView
        	:rtype: None
        """
        return _StepVisual.StepVisual_BackgroundColour_SetPresentation(self, *args)


    def __init__(self, *args):
        """
        * Returns a BackgroundColour
        	:rtype: None
        """
        _StepVisual.StepVisual_BackgroundColour_swiginit(self, _StepVisual.new_StepVisual_BackgroundColour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_BackgroundColour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_BackgroundColour
StepVisual_BackgroundColour.Init = new_instancemethod(_StepVisual.StepVisual_BackgroundColour_Init, None, StepVisual_BackgroundColour)
StepVisual_BackgroundColour.Presentation = new_instancemethod(_StepVisual.StepVisual_BackgroundColour_Presentation, None, StepVisual_BackgroundColour)
StepVisual_BackgroundColour.SetPresentation = new_instancemethod(_StepVisual.StepVisual_BackgroundColour_SetPresentation, None, StepVisual_BackgroundColour)
StepVisual_BackgroundColour_swigregister = _StepVisual.StepVisual_BackgroundColour_swigregister
StepVisual_BackgroundColour_swigregister(StepVisual_BackgroundColour)

class StepVisual_CameraImage2dWithScale(StepVisual_CameraImage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_CameraImage2dWithScale_swiginit(self, _StepVisual.new_StepVisual_CameraImage2dWithScale(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraImage2dWithScale_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraImage2dWithScale
StepVisual_CameraImage2dWithScale_swigregister = _StepVisual.StepVisual_CameraImage2dWithScale_swigregister
StepVisual_CameraImage2dWithScale_swigregister(StepVisual_CameraImage2dWithScale)

class StepVisual_CameraImage3dWithScale(StepVisual_CameraImage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_CameraImage3dWithScale_swiginit(self, _StepVisual.new_StepVisual_CameraImage3dWithScale(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraImage3dWithScale_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraImage3dWithScale
StepVisual_CameraImage3dWithScale_swigregister = _StepVisual.StepVisual_CameraImage3dWithScale_swigregister
StepVisual_CameraImage3dWithScale_swigregister(StepVisual_CameraImage3dWithScale)

class StepVisual_CameraModelD2(StepVisual_CameraModel):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aViewWindow:
        	:type aViewWindow: StepVisual_PlanarBox
        	:param aViewWindowClipping:
        	:type aViewWindowClipping: bool
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD2_Init(self, *args)


    def SetViewWindow(self, *args) -> "void":
        """
        :param aViewWindow:
        	:type aViewWindow: StepVisual_PlanarBox
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD2_SetViewWindow(self, *args)


    def SetViewWindowClipping(self, *args) -> "void":
        """
        :param aViewWindowClipping:
        	:type aViewWindowClipping: bool
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD2_SetViewWindowClipping(self, *args)


    def __init__(self, *args):
        """
        * Returns a CameraModelD2
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD2_swiginit(self, _StepVisual.new_StepVisual_CameraModelD2(*args))

    def ViewWindow(self, *args) -> "opencascade::handle< StepVisual_PlanarBox >":
        """:rtype: opencascade::handle<StepVisual_PlanarBox>"""
        return _StepVisual.StepVisual_CameraModelD2_ViewWindow(self, *args)


    def ViewWindowClipping(self, *args) -> "Standard_Boolean":
        """:rtype: bool"""
        return _StepVisual.StepVisual_CameraModelD2_ViewWindowClipping(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD2_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD2
StepVisual_CameraModelD2.Init = new_instancemethod(_StepVisual.StepVisual_CameraModelD2_Init, None, StepVisual_CameraModelD2)
StepVisual_CameraModelD2.SetViewWindow = new_instancemethod(_StepVisual.StepVisual_CameraModelD2_SetViewWindow, None, StepVisual_CameraModelD2)
StepVisual_CameraModelD2.SetViewWindowClipping = new_instancemethod(_StepVisual.StepVisual_CameraModelD2_SetViewWindowClipping, None, StepVisual_CameraModelD2)
StepVisual_CameraModelD2.ViewWindow = new_instancemethod(_StepVisual.StepVisual_CameraModelD2_ViewWindow, None, StepVisual_CameraModelD2)
StepVisual_CameraModelD2.ViewWindowClipping = new_instancemethod(_StepVisual.StepVisual_CameraModelD2_ViewWindowClipping, None, StepVisual_CameraModelD2)
StepVisual_CameraModelD2_swigregister = _StepVisual.StepVisual_CameraModelD2_swigregister
StepVisual_CameraModelD2_swigregister(StepVisual_CameraModelD2)

class StepVisual_CameraModelD3(StepVisual_CameraModel):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aViewReferenceSystem:
        	:type aViewReferenceSystem: StepGeom_Axis2Placement3d
        	:param aPerspectiveOfVolume:
        	:type aPerspectiveOfVolume: StepVisual_ViewVolume
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD3_Init(self, *args)


    def PerspectiveOfVolume(self, *args) -> "opencascade::handle< StepVisual_ViewVolume >":
        """:rtype: opencascade::handle<StepVisual_ViewVolume>"""
        return _StepVisual.StepVisual_CameraModelD3_PerspectiveOfVolume(self, *args)


    def SetPerspectiveOfVolume(self, *args) -> "void":
        """
        :param aPerspectiveOfVolume:
        	:type aPerspectiveOfVolume: StepVisual_ViewVolume
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD3_SetPerspectiveOfVolume(self, *args)


    def SetViewReferenceSystem(self, *args) -> "void":
        """
        :param aViewReferenceSystem:
        	:type aViewReferenceSystem: StepGeom_Axis2Placement3d
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD3_SetViewReferenceSystem(self, *args)


    def __init__(self, *args):
        """
        * Returns a CameraModelD3
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3(*args))

    def ViewReferenceSystem(self, *args) -> "opencascade::handle< StepGeom_Axis2Placement3d >":
        """:rtype: opencascade::handle<StepGeom_Axis2Placement3d>"""
        return _StepVisual.StepVisual_CameraModelD3_ViewReferenceSystem(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD3_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3
StepVisual_CameraModelD3.Init = new_instancemethod(_StepVisual.StepVisual_CameraModelD3_Init, None, StepVisual_CameraModelD3)
StepVisual_CameraModelD3.PerspectiveOfVolume = new_instancemethod(_StepVisual.StepVisual_CameraModelD3_PerspectiveOfVolume, None, StepVisual_CameraModelD3)
StepVisual_CameraModelD3.SetPerspectiveOfVolume = new_instancemethod(_StepVisual.StepVisual_CameraModelD3_SetPerspectiveOfVolume, None, StepVisual_CameraModelD3)
StepVisual_CameraModelD3.SetViewReferenceSystem = new_instancemethod(_StepVisual.StepVisual_CameraModelD3_SetViewReferenceSystem, None, StepVisual_CameraModelD3)
StepVisual_CameraModelD3.ViewReferenceSystem = new_instancemethod(_StepVisual.StepVisual_CameraModelD3_ViewReferenceSystem, None, StepVisual_CameraModelD3)
StepVisual_CameraModelD3_swigregister = _StepVisual.StepVisual_CameraModelD3_swigregister
StepVisual_CameraModelD3_swigregister(StepVisual_CameraModelD3)

class StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation(StepVisual_DraughtingModel):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_swiginit(self, _StepVisual.new_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation
StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_swigregister = _StepVisual.StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_swigregister
StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_swigregister(StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation)

class StepVisual_ColourSpecification(StepVisual_Colour):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_ColourSpecification_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """:rtype: opencascade::handle<TCollection_HAsciiString>"""
        return _StepVisual.StepVisual_ColourSpecification_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:rtype: None
        """
        return _StepVisual.StepVisual_ColourSpecification_SetName(self, *args)


    def __init__(self, *args):
        """
        * Returns a ColourSpecification
        	:rtype: None
        """
        _StepVisual.StepVisual_ColourSpecification_swiginit(self, _StepVisual.new_StepVisual_ColourSpecification(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ColourSpecification_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ColourSpecification
StepVisual_ColourSpecification.Init = new_instancemethod(_StepVisual.StepVisual_ColourSpecification_Init, None, StepVisual_ColourSpecification)
StepVisual_ColourSpecification.Name = new_instancemethod(_StepVisual.StepVisual_ColourSpecification_Name, None, StepVisual_ColourSpecification)
StepVisual_ColourSpecification.SetName = new_instancemethod(_StepVisual.StepVisual_ColourSpecification_SetName, None, StepVisual_ColourSpecification)
StepVisual_ColourSpecification_swigregister = _StepVisual.StepVisual_ColourSpecification_swigregister
StepVisual_ColourSpecification_swigregister(StepVisual_ColourSpecification)

class StepVisual_CompositeTextWithExtent(StepVisual_CompositeText):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Extent(self, *args) -> "opencascade::handle< StepVisual_PlanarExtent >":
        """:rtype: opencascade::handle<StepVisual_PlanarExtent>"""
        return _StepVisual.StepVisual_CompositeTextWithExtent_Extent(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aCollectedText:
        	:type aCollectedText: StepVisual_HArray1OfTextOrCharacter
        	:param aExtent:
        	:type aExtent: StepVisual_PlanarExtent
        	:rtype: None
        """
        return _StepVisual.StepVisual_CompositeTextWithExtent_Init(self, *args)


    def SetExtent(self, *args) -> "void":
        """
        :param aExtent:
        	:type aExtent: StepVisual_PlanarExtent
        	:rtype: None
        """
        return _StepVisual.StepVisual_CompositeTextWithExtent_SetExtent(self, *args)


    def __init__(self, *args):
        """
        * Returns a CompositeTextWithExtent
        	:rtype: None
        """
        _StepVisual.StepVisual_CompositeTextWithExtent_swiginit(self, _StepVisual.new_StepVisual_CompositeTextWithExtent(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CompositeTextWithExtent_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CompositeTextWithExtent
StepVisual_CompositeTextWithExtent.Extent = new_instancemethod(_StepVisual.StepVisual_CompositeTextWithExtent_Extent, None, StepVisual_CompositeTextWithExtent)
StepVisual_CompositeTextWithExtent.Init = new_instancemethod(_StepVisual.StepVisual_CompositeTextWithExtent_Init, None, StepVisual_CompositeTextWithExtent)
StepVisual_CompositeTextWithExtent.SetExtent = new_instancemethod(_StepVisual.StepVisual_CompositeTextWithExtent_SetExtent, None, StepVisual_CompositeTextWithExtent)
StepVisual_CompositeTextWithExtent_swigregister = _StepVisual.StepVisual_CompositeTextWithExtent_swigregister
StepVisual_CompositeTextWithExtent_swigregister(StepVisual_CompositeTextWithExtent)

class StepVisual_ContextDependentInvisibility(StepVisual_Invisibility):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aInvisibleItems:
        	:type aInvisibleItems: StepVisual_HArray1OfInvisibleItem
        	:param aPresentationContext:
        	:type aPresentationContext: StepVisual_InvisibilityContext
        	:rtype: None
        """
        return _StepVisual.StepVisual_ContextDependentInvisibility_Init(self, *args)


    def PresentationContext(self, *args) -> "StepVisual_InvisibilityContext":
        """:rtype: StepVisual_InvisibilityContext"""
        return _StepVisual.StepVisual_ContextDependentInvisibility_PresentationContext(self, *args)


    def SetPresentationContext(self, *args) -> "void":
        """
        :param aPresentationContext:
        	:type aPresentationContext: StepVisual_InvisibilityContext
        	:rtype: None
        """
        return _StepVisual.StepVisual_ContextDependentInvisibility_SetPresentationContext(self, *args)


    def __init__(self, *args):
        """
        * Returns a ContextDependentInvisibility
        	:rtype: None
        """
        _StepVisual.StepVisual_ContextDependentInvisibility_swiginit(self, _StepVisual.new_StepVisual_ContextDependentInvisibility(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ContextDependentInvisibility_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ContextDependentInvisibility
StepVisual_ContextDependentInvisibility.Init = new_instancemethod(_StepVisual.StepVisual_ContextDependentInvisibility_Init, None, StepVisual_ContextDependentInvisibility)
StepVisual_ContextDependentInvisibility.PresentationContext = new_instancemethod(_StepVisual.StepVisual_ContextDependentInvisibility_PresentationContext, None, StepVisual_ContextDependentInvisibility)
StepVisual_ContextDependentInvisibility.SetPresentationContext = new_instancemethod(_StepVisual.StepVisual_ContextDependentInvisibility_SetPresentationContext, None, StepVisual_ContextDependentInvisibility)
StepVisual_ContextDependentInvisibility_swigregister = _StepVisual.StepVisual_ContextDependentInvisibility_swigregister
StepVisual_ContextDependentInvisibility_swigregister(StepVisual_ContextDependentInvisibility)

class StepVisual_CoordinatesList(StepVisual_TessellatedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param thePoints:
        	:type thePoints: TColgp_HArray1OfXYZ
        	:rtype: None
        """
        return _StepVisual.StepVisual_CoordinatesList_Init(self, *args)


    def Points(self, *args) -> "opencascade::handle< TColgp_HArray1OfXYZ >":
        """:rtype: opencascade::handle<TColgp_HArray1OfXYZ>"""
        return _StepVisual.StepVisual_CoordinatesList_Points(self, *args)


    def __init__(self, *args):
        """
        * Returns a coordinate list
        	:rtype: None
        """
        _StepVisual.StepVisual_CoordinatesList_swiginit(self, _StepVisual.new_StepVisual_CoordinatesList(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CoordinatesList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CoordinatesList
StepVisual_CoordinatesList.Init = new_instancemethod(_StepVisual.StepVisual_CoordinatesList_Init, None, StepVisual_CoordinatesList)
StepVisual_CoordinatesList.Points = new_instancemethod(_StepVisual.StepVisual_CoordinatesList_Points, None, StepVisual_CoordinatesList)
StepVisual_CoordinatesList_swigregister = _StepVisual.StepVisual_CoordinatesList_swigregister
StepVisual_CoordinatesList_swigregister(StepVisual_CoordinatesList)

class StepVisual_MechanicalDesignGeometricPresentationRepresentation(StepVisual_PresentationRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a MechanicalDesignGeometricPresentationRepresentation
        	:rtype: None
        """
        _StepVisual.StepVisual_MechanicalDesignGeometricPresentationRepresentation_swiginit(self, _StepVisual.new_StepVisual_MechanicalDesignGeometricPresentationRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_MechanicalDesignGeometricPresentationRepresentation
StepVisual_MechanicalDesignGeometricPresentationRepresentation_swigregister = _StepVisual.StepVisual_MechanicalDesignGeometricPresentationRepresentation_swigregister
StepVisual_MechanicalDesignGeometricPresentationRepresentation_swigregister(StepVisual_MechanicalDesignGeometricPresentationRepresentation)

class StepVisual_OverRidingStyledItem(StepVisual_StyledItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aStyles:
        	:type aStyles: StepVisual_HArray1OfPresentationStyleAssignment
        	:param aItem:
        	:type aItem: Standard_Transient
        	:param aOverRiddenStyle:
        	:type aOverRiddenStyle: StepVisual_StyledItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_OverRidingStyledItem_Init(self, *args)


    def OverRiddenStyle(self, *args) -> "opencascade::handle< StepVisual_StyledItem >":
        """:rtype: opencascade::handle<StepVisual_StyledItem>"""
        return _StepVisual.StepVisual_OverRidingStyledItem_OverRiddenStyle(self, *args)


    def SetOverRiddenStyle(self, *args) -> "void":
        """
        :param aOverRiddenStyle:
        	:type aOverRiddenStyle: StepVisual_StyledItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_OverRidingStyledItem_SetOverRiddenStyle(self, *args)


    def __init__(self, *args):
        """
        * Returns a OverRidingStyledItem
        	:rtype: None
        """
        _StepVisual.StepVisual_OverRidingStyledItem_swiginit(self, _StepVisual.new_StepVisual_OverRidingStyledItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_OverRidingStyledItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_OverRidingStyledItem
StepVisual_OverRidingStyledItem.Init = new_instancemethod(_StepVisual.StepVisual_OverRidingStyledItem_Init, None, StepVisual_OverRidingStyledItem)
StepVisual_OverRidingStyledItem.OverRiddenStyle = new_instancemethod(_StepVisual.StepVisual_OverRidingStyledItem_OverRiddenStyle, None, StepVisual_OverRidingStyledItem)
StepVisual_OverRidingStyledItem.SetOverRiddenStyle = new_instancemethod(_StepVisual.StepVisual_OverRidingStyledItem_SetOverRiddenStyle, None, StepVisual_OverRidingStyledItem)
StepVisual_OverRidingStyledItem_swigregister = _StepVisual.StepVisual_OverRidingStyledItem_swigregister
StepVisual_OverRidingStyledItem_swigregister(StepVisual_OverRidingStyledItem)

class StepVisual_PlanarBox(StepVisual_PlanarExtent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aSizeInX:
        	:type aSizeInX: float
        	:param aSizeInY:
        	:type aSizeInY: float
        	:param aPlacement:
        	:type aPlacement: StepGeom_Axis2Placement
        	:rtype: None
        """
        return _StepVisual.StepVisual_PlanarBox_Init(self, *args)


    def Placement(self, *args) -> "StepGeom_Axis2Placement":
        """:rtype: StepGeom_Axis2Placement"""
        return _StepVisual.StepVisual_PlanarBox_Placement(self, *args)


    def SetPlacement(self, *args) -> "void":
        """
        :param aPlacement:
        	:type aPlacement: StepGeom_Axis2Placement
        	:rtype: None
        """
        return _StepVisual.StepVisual_PlanarBox_SetPlacement(self, *args)


    def __init__(self, *args):
        """
        * Returns a PlanarBox
        	:rtype: None
        """
        _StepVisual.StepVisual_PlanarBox_swiginit(self, _StepVisual.new_StepVisual_PlanarBox(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PlanarBox_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PlanarBox
StepVisual_PlanarBox.Init = new_instancemethod(_StepVisual.StepVisual_PlanarBox_Init, None, StepVisual_PlanarBox)
StepVisual_PlanarBox.Placement = new_instancemethod(_StepVisual.StepVisual_PlanarBox_Placement, None, StepVisual_PlanarBox)
StepVisual_PlanarBox.SetPlacement = new_instancemethod(_StepVisual.StepVisual_PlanarBox_SetPlacement, None, StepVisual_PlanarBox)
StepVisual_PlanarBox_swigregister = _StepVisual.StepVisual_PlanarBox_swigregister
StepVisual_PlanarBox_swigregister(StepVisual_PlanarBox)

class StepVisual_PreDefinedColour(StepVisual_Colour):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GetPreDefinedItem(self, *args) -> "opencascade::handle< StepVisual_PreDefinedItem > const &":
        """
        * return a pre_defined_item part
        	:rtype: opencascade::handle<StepVisual_PreDefinedItem>
        """
        return _StepVisual.StepVisual_PreDefinedColour_GetPreDefinedItem(self, *args)


    def SetPreDefinedItem(self, *args) -> "void":
        """
        * set a pre_defined_item part
        	:param item:
        	:type item: StepVisual_PreDefinedItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_PreDefinedColour_SetPreDefinedItem(self, *args)


    def __init__(self, *args):
        """
        * Returns a PreDefinedColour
        	:rtype: None
        """
        _StepVisual.StepVisual_PreDefinedColour_swiginit(self, _StepVisual.new_StepVisual_PreDefinedColour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PreDefinedColour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PreDefinedColour
StepVisual_PreDefinedColour.GetPreDefinedItem = new_instancemethod(_StepVisual.StepVisual_PreDefinedColour_GetPreDefinedItem, None, StepVisual_PreDefinedColour)
StepVisual_PreDefinedColour.SetPreDefinedItem = new_instancemethod(_StepVisual.StepVisual_PreDefinedColour_SetPreDefinedItem, None, StepVisual_PreDefinedColour)
StepVisual_PreDefinedColour_swigregister = _StepVisual.StepVisual_PreDefinedColour_swigregister
StepVisual_PreDefinedColour_swigregister(StepVisual_PreDefinedColour)

class StepVisual_PreDefinedCurveFont(StepVisual_PreDefinedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a PreDefinedCurveFont
        	:rtype: None
        """
        _StepVisual.StepVisual_PreDefinedCurveFont_swiginit(self, _StepVisual.new_StepVisual_PreDefinedCurveFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PreDefinedCurveFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PreDefinedCurveFont
StepVisual_PreDefinedCurveFont_swigregister = _StepVisual.StepVisual_PreDefinedCurveFont_swigregister
StepVisual_PreDefinedCurveFont_swigregister(StepVisual_PreDefinedCurveFont)

class StepVisual_PreDefinedTextFont(StepVisual_PreDefinedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a PreDefinedTextFont
        	:rtype: None
        """
        _StepVisual.StepVisual_PreDefinedTextFont_swiginit(self, _StepVisual.new_StepVisual_PreDefinedTextFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PreDefinedTextFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PreDefinedTextFont
StepVisual_PreDefinedTextFont_swigregister = _StepVisual.StepVisual_PreDefinedTextFont_swigregister
StepVisual_PreDefinedTextFont_swigregister(StepVisual_PreDefinedTextFont)

class StepVisual_PresentationArea(StepVisual_PresentationRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a PresentationArea
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationArea_swiginit(self, _StepVisual.new_StepVisual_PresentationArea(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationArea_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationArea
StepVisual_PresentationArea_swigregister = _StepVisual.StepVisual_PresentationArea_swigregister
StepVisual_PresentationArea_swigregister(StepVisual_PresentationArea)

class StepVisual_PresentationStyleByContext(StepVisual_PresentationStyleAssignment):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aStyles:
        	:type aStyles: StepVisual_HArray1OfPresentationStyleSelect
        	:param aStyleContext:
        	:type aStyleContext: StepVisual_StyleContextSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationStyleByContext_Init(self, *args)


    def SetStyleContext(self, *args) -> "void":
        """
        :param aStyleContext:
        	:type aStyleContext: StepVisual_StyleContextSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_PresentationStyleByContext_SetStyleContext(self, *args)


    def __init__(self, *args):
        """
        * Returns a PresentationStyleByContext
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationStyleByContext_swiginit(self, _StepVisual.new_StepVisual_PresentationStyleByContext(*args))

    def StyleContext(self, *args) -> "StepVisual_StyleContextSelect":
        """:rtype: StepVisual_StyleContextSelect"""
        return _StepVisual.StepVisual_PresentationStyleByContext_StyleContext(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationStyleByContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationStyleByContext
StepVisual_PresentationStyleByContext.Init = new_instancemethod(_StepVisual.StepVisual_PresentationStyleByContext_Init, None, StepVisual_PresentationStyleByContext)
StepVisual_PresentationStyleByContext.SetStyleContext = new_instancemethod(_StepVisual.StepVisual_PresentationStyleByContext_SetStyleContext, None, StepVisual_PresentationStyleByContext)
StepVisual_PresentationStyleByContext.StyleContext = new_instancemethod(_StepVisual.StepVisual_PresentationStyleByContext_StyleContext, None, StepVisual_PresentationStyleByContext)
StepVisual_PresentationStyleByContext_swigregister = _StepVisual.StepVisual_PresentationStyleByContext_swigregister
StepVisual_PresentationStyleByContext_swigregister(StepVisual_PresentationStyleByContext)

class StepVisual_PresentationView(StepVisual_PresentationRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a PresentationView
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationView_swiginit(self, _StepVisual.new_StepVisual_PresentationView(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationView_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationView
StepVisual_PresentationView_swigregister = _StepVisual.StepVisual_PresentationView_swigregister
StepVisual_PresentationView_swigregister(StepVisual_PresentationView)

class StepVisual_TessellatedAnnotationOccurrence(StepVisual_StyledItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a TesselatedAnnotationOccurence
        	:rtype: None
        """
        _StepVisual.StepVisual_TessellatedAnnotationOccurrence_swiginit(self, _StepVisual.new_StepVisual_TessellatedAnnotationOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TessellatedAnnotationOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TessellatedAnnotationOccurrence
StepVisual_TessellatedAnnotationOccurrence_swigregister = _StepVisual.StepVisual_TessellatedAnnotationOccurrence_swigregister
StepVisual_TessellatedAnnotationOccurrence_swigregister(StepVisual_TessellatedAnnotationOccurrence)

class StepVisual_TessellatedCurveSet(StepVisual_TessellatedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def CoordList(self, *args) -> "opencascade::handle< StepVisual_CoordinatesList >":
        """:rtype: opencascade::handle<StepVisual_CoordinatesList>"""
        return _StepVisual.StepVisual_TessellatedCurveSet_CoordList(self, *args)


    def Curves(self, *args) -> "NCollection_Handle< StepVisual_VectorOfHSequenceOfInteger >":
        """:rtype: NCollection_Handle<StepVisual_VectorOfHSequenceOfInteger>"""
        return _StepVisual.StepVisual_TessellatedCurveSet_Curves(self, *args)


    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theCoordList:
        	:type theCoordList: StepVisual_CoordinatesList
        	:param theCurves:
        	:type theCurves: NCollection_Handle<StepVisual_VectorOfHSequenceOfInteger>
        	:rtype: None
        """
        return _StepVisual.StepVisual_TessellatedCurveSet_Init(self, *args)


    def __init__(self, *args):
        """
        * Returns a DraughtingCalloutElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_TessellatedCurveSet_swiginit(self, _StepVisual.new_StepVisual_TessellatedCurveSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TessellatedCurveSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TessellatedCurveSet
StepVisual_TessellatedCurveSet.CoordList = new_instancemethod(_StepVisual.StepVisual_TessellatedCurveSet_CoordList, None, StepVisual_TessellatedCurveSet)
StepVisual_TessellatedCurveSet.Curves = new_instancemethod(_StepVisual.StepVisual_TessellatedCurveSet_Curves, None, StepVisual_TessellatedCurveSet)
StepVisual_TessellatedCurveSet.Init = new_instancemethod(_StepVisual.StepVisual_TessellatedCurveSet_Init, None, StepVisual_TessellatedCurveSet)
StepVisual_TessellatedCurveSet_swigregister = _StepVisual.StepVisual_TessellatedCurveSet_swigregister
StepVisual_TessellatedCurveSet_swigregister(StepVisual_TessellatedCurveSet)

class StepVisual_TessellatedGeometricSet(StepVisual_TessellatedItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theItems:
        	:type theItems: NCollection_Handle<StepVisual_Array1OfTessellatedItem>
        	:rtype: None
        """
        return _StepVisual.StepVisual_TessellatedGeometricSet_Init(self, *args)


    def Items(self, *args) -> "NCollection_Handle< StepVisual_Array1OfTessellatedItem >":
        """:rtype: NCollection_Handle<StepVisual_Array1OfTessellatedItem>"""
        return _StepVisual.StepVisual_TessellatedGeometricSet_Items(self, *args)


    def __init__(self, *args):
        """
        * Returns a DraughtingCalloutElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_TessellatedGeometricSet_swiginit(self, _StepVisual.new_StepVisual_TessellatedGeometricSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TessellatedGeometricSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TessellatedGeometricSet
StepVisual_TessellatedGeometricSet.Init = new_instancemethod(_StepVisual.StepVisual_TessellatedGeometricSet_Init, None, StepVisual_TessellatedGeometricSet)
StepVisual_TessellatedGeometricSet.Items = new_instancemethod(_StepVisual.StepVisual_TessellatedGeometricSet_Items, None, StepVisual_TessellatedGeometricSet)
StepVisual_TessellatedGeometricSet_swigregister = _StepVisual.StepVisual_TessellatedGeometricSet_swigregister
StepVisual_TessellatedGeometricSet_swigregister(StepVisual_TessellatedGeometricSet)

class StepVisual_TextStyleWithBoxCharacteristics(StepVisual_TextStyle):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Characteristics(self, *args) -> "opencascade::handle< StepVisual_HArray1OfBoxCharacteristicSelect >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfBoxCharacteristicSelect>"""
        return _StepVisual.StepVisual_TextStyleWithBoxCharacteristics_Characteristics(self, *args)


    def CharacteristicsValue(self, *args) -> "StepVisual_BoxCharacteristicSelect":
        """
        :param num:
        	:type num: int
        	:rtype: StepVisual_BoxCharacteristicSelect
        """
        return _StepVisual.StepVisual_TextStyleWithBoxCharacteristics_CharacteristicsValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aCharacterAppearance:
        	:type aCharacterAppearance: StepVisual_TextStyleForDefinedFont
        	:param aCharacteristics:
        	:type aCharacteristics: StepVisual_HArray1OfBoxCharacteristicSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextStyleWithBoxCharacteristics_Init(self, *args)


    def NbCharacteristics(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_TextStyleWithBoxCharacteristics_NbCharacteristics(self, *args)


    def SetCharacteristics(self, *args) -> "void":
        """
        :param aCharacteristics:
        	:type aCharacteristics: StepVisual_HArray1OfBoxCharacteristicSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_TextStyleWithBoxCharacteristics_SetCharacteristics(self, *args)


    def __init__(self, *args):
        """
        * Returns a TextStyleWithBoxCharacteristics
        	:rtype: None
        """
        _StepVisual.StepVisual_TextStyleWithBoxCharacteristics_swiginit(self, _StepVisual.new_StepVisual_TextStyleWithBoxCharacteristics(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TextStyleWithBoxCharacteristics_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextStyleWithBoxCharacteristics
StepVisual_TextStyleWithBoxCharacteristics.Characteristics = new_instancemethod(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_Characteristics, None, StepVisual_TextStyleWithBoxCharacteristics)
StepVisual_TextStyleWithBoxCharacteristics.CharacteristicsValue = new_instancemethod(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_CharacteristicsValue, None, StepVisual_TextStyleWithBoxCharacteristics)
StepVisual_TextStyleWithBoxCharacteristics.Init = new_instancemethod(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_Init, None, StepVisual_TextStyleWithBoxCharacteristics)
StepVisual_TextStyleWithBoxCharacteristics.NbCharacteristics = new_instancemethod(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_NbCharacteristics, None, StepVisual_TextStyleWithBoxCharacteristics)
StepVisual_TextStyleWithBoxCharacteristics.SetCharacteristics = new_instancemethod(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_SetCharacteristics, None, StepVisual_TextStyleWithBoxCharacteristics)
StepVisual_TextStyleWithBoxCharacteristics_swigregister = _StepVisual.StepVisual_TextStyleWithBoxCharacteristics_swigregister
StepVisual_TextStyleWithBoxCharacteristics_swigregister(StepVisual_TextStyleWithBoxCharacteristics)

class StepVisual_AnnotationCurveOccurrence(StepVisual_AnnotationOccurrence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a AnnotationCurveOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationCurveOccurrence_swiginit(self, _StepVisual.new_StepVisual_AnnotationCurveOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationCurveOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationCurveOccurrence
StepVisual_AnnotationCurveOccurrence_swigregister = _StepVisual.StepVisual_AnnotationCurveOccurrence_swigregister
StepVisual_AnnotationCurveOccurrence_swigregister(StepVisual_AnnotationCurveOccurrence)

class StepVisual_AnnotationFillAreaOccurrence(StepVisual_AnnotationOccurrence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FillStyleTarget(self, *args) -> "opencascade::handle< StepGeom_GeometricRepresentationItem >":
        """
        * Returns field fill_style_target
        	:rtype: opencascade::handle<StepGeom_GeometricRepresentationItem>
        """
        return _StepVisual.StepVisual_AnnotationFillAreaOccurrence_FillStyleTarget(self, *args)


    def Init(self, *args) -> "void":
        """
        * Initialize all fields (own and inherited)
        	:param theName:
        	:type theName: TCollection_HAsciiString
        	:param theStyles:
        	:type theStyles: StepVisual_HArray1OfPresentationStyleAssignment
        	:param theItem:
        	:type theItem: Standard_Transient
        	:param theFillStyleTarget:
        	:type theFillStyleTarget: StepGeom_GeometricRepresentationItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_AnnotationFillAreaOccurrence_Init(self, *args)


    def SetFillStyleTarget(self, *args) -> "void":
        """
        * Set field fill_style_target
        	:param theTarget:
        	:type theTarget: StepGeom_GeometricRepresentationItem
        	:rtype: None
        """
        return _StepVisual.StepVisual_AnnotationFillAreaOccurrence_SetFillStyleTarget(self, *args)


    def __init__(self, *args):
        """
        * Returns a AnnotationFillAreaOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationFillAreaOccurrence_swiginit(self, _StepVisual.new_StepVisual_AnnotationFillAreaOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationFillAreaOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationFillAreaOccurrence
StepVisual_AnnotationFillAreaOccurrence.FillStyleTarget = new_instancemethod(_StepVisual.StepVisual_AnnotationFillAreaOccurrence_FillStyleTarget, None, StepVisual_AnnotationFillAreaOccurrence)
StepVisual_AnnotationFillAreaOccurrence.Init = new_instancemethod(_StepVisual.StepVisual_AnnotationFillAreaOccurrence_Init, None, StepVisual_AnnotationFillAreaOccurrence)
StepVisual_AnnotationFillAreaOccurrence.SetFillStyleTarget = new_instancemethod(_StepVisual.StepVisual_AnnotationFillAreaOccurrence_SetFillStyleTarget, None, StepVisual_AnnotationFillAreaOccurrence)
StepVisual_AnnotationFillAreaOccurrence_swigregister = _StepVisual.StepVisual_AnnotationFillAreaOccurrence_swigregister
StepVisual_AnnotationFillAreaOccurrence_swigregister(StepVisual_AnnotationFillAreaOccurrence)

class StepVisual_AnnotationPlane(StepVisual_AnnotationOccurrence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Elements(self, *args) -> "opencascade::handle< StepVisual_HArray1OfAnnotationPlaneElement >":
        """
        * Returns field Elements
        	:rtype: inline opencascade::handle<StepVisual_HArray1OfAnnotationPlaneElement>
        """
        return _StepVisual.StepVisual_AnnotationPlane_Elements(self, *args)


    def ElementsValue(self, *args) -> "StepVisual_AnnotationPlaneElement":
        """
        * Returns Elements with the given number
        	:param theNum:
        	:type theNum: int
        	:rtype: inline StepVisual_AnnotationPlaneElement
        """
        return _StepVisual.StepVisual_AnnotationPlane_ElementsValue(self, *args)


    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theStyles:
        	:type theStyles: StepVisual_HArray1OfPresentationStyleAssignment
        	:param theItem:
        	:type theItem: Standard_Transient
        	:param theElements:
        	:type theElements: StepVisual_HArray1OfAnnotationPlaneElement
        	:rtype: None
        """
        return _StepVisual.StepVisual_AnnotationPlane_Init(self, *args)


    def NbElements(self, *args) -> "Standard_Integer":
        """
        * Returns number of Elements
        	:rtype: inline int
        """
        return _StepVisual.StepVisual_AnnotationPlane_NbElements(self, *args)


    def SetElements(self, *args) -> "void":
        """
        * Set field Elements
        	:param theElements:
        	:type theElements: StepVisual_HArray1OfAnnotationPlaneElement
        	:rtype: inline void
        """
        return _StepVisual.StepVisual_AnnotationPlane_SetElements(self, *args)


    def SetElementsValue(self, *args) -> "void":
        """
        * Sets Elements with given number
        	:param theNum:
        	:type theNum: int
        	:param theItem:
        	:type theItem: StepVisual_AnnotationPlaneElement
        	:rtype: inline void
        """
        return _StepVisual.StepVisual_AnnotationPlane_SetElementsValue(self, *args)


    def __init__(self, *args):
        """
        * Returns a AnnotationPlane
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationPlane_swiginit(self, _StepVisual.new_StepVisual_AnnotationPlane(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationPlane_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationPlane
StepVisual_AnnotationPlane.Elements = new_instancemethod(_StepVisual.StepVisual_AnnotationPlane_Elements, None, StepVisual_AnnotationPlane)
StepVisual_AnnotationPlane.ElementsValue = new_instancemethod(_StepVisual.StepVisual_AnnotationPlane_ElementsValue, None, StepVisual_AnnotationPlane)
StepVisual_AnnotationPlane.Init = new_instancemethod(_StepVisual.StepVisual_AnnotationPlane_Init, None, StepVisual_AnnotationPlane)
StepVisual_AnnotationPlane.NbElements = new_instancemethod(_StepVisual.StepVisual_AnnotationPlane_NbElements, None, StepVisual_AnnotationPlane)
StepVisual_AnnotationPlane.SetElements = new_instancemethod(_StepVisual.StepVisual_AnnotationPlane_SetElements, None, StepVisual_AnnotationPlane)
StepVisual_AnnotationPlane.SetElementsValue = new_instancemethod(_StepVisual.StepVisual_AnnotationPlane_SetElementsValue, None, StepVisual_AnnotationPlane)
StepVisual_AnnotationPlane_swigregister = _StepVisual.StepVisual_AnnotationPlane_swigregister
StepVisual_AnnotationPlane_swigregister(StepVisual_AnnotationPlane)

class StepVisual_AnnotationTextOccurrence(StepVisual_AnnotationOccurrence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a AnnotationTextOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationTextOccurrence_swiginit(self, _StepVisual.new_StepVisual_AnnotationTextOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationTextOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationTextOccurrence
StepVisual_AnnotationTextOccurrence_swigregister = _StepVisual.StepVisual_AnnotationTextOccurrence_swigregister
StepVisual_AnnotationTextOccurrence_swigregister(StepVisual_AnnotationTextOccurrence)

class StepVisual_CameraModelD3MultiClipping(StepVisual_CameraModelD3):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param theName:
        	:type theName: TCollection_HAsciiString
        	:param theViewReferenceSystem:
        	:type theViewReferenceSystem: StepGeom_Axis2Placement3d
        	:param thePerspectiveOfVolume:
        	:type thePerspectiveOfVolume: StepVisual_ViewVolume
        	:param theShapeClipping:
        	:type theShapeClipping: StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClipping_Init(self, *args)


    def SetShapeClipping(self, *args) -> "void":
        """
        :param theShapeClipping:
        	:type theShapeClipping: StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_CameraModelD3MultiClipping_SetShapeClipping(self, *args)


    def ShapeClipping(self, *args) -> "opencascade::handle< StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect > const":
        """:rtype: opencascade::handle<StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect>"""
        return _StepVisual.StepVisual_CameraModelD3MultiClipping_ShapeClipping(self, *args)


    def __init__(self, *args):
        """
        * Returns a CameraModelD3MultiClipping
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClipping_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClipping(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD3MultiClipping_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClipping
StepVisual_CameraModelD3MultiClipping.Init = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClipping_Init, None, StepVisual_CameraModelD3MultiClipping)
StepVisual_CameraModelD3MultiClipping.SetShapeClipping = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClipping_SetShapeClipping, None, StepVisual_CameraModelD3MultiClipping)
StepVisual_CameraModelD3MultiClipping.ShapeClipping = new_instancemethod(_StepVisual.StepVisual_CameraModelD3MultiClipping_ShapeClipping, None, StepVisual_CameraModelD3MultiClipping)
StepVisual_CameraModelD3MultiClipping_swigregister = _StepVisual.StepVisual_CameraModelD3MultiClipping_swigregister
StepVisual_CameraModelD3MultiClipping_swigregister(StepVisual_CameraModelD3MultiClipping)

class StepVisual_ColourRgb(StepVisual_ColourSpecification):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Blue(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_ColourRgb_Blue(self, *args)


    def Green(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_ColourRgb_Green(self, *args)


    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aRed:
        	:type aRed: float
        	:param aGreen:
        	:type aGreen: float
        	:param aBlue:
        	:type aBlue: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_ColourRgb_Init(self, *args)


    def Red(self, *args) -> "Standard_Real":
        """:rtype: float"""
        return _StepVisual.StepVisual_ColourRgb_Red(self, *args)


    def SetBlue(self, *args) -> "void":
        """
        :param aBlue:
        	:type aBlue: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_ColourRgb_SetBlue(self, *args)


    def SetGreen(self, *args) -> "void":
        """
        :param aGreen:
        	:type aGreen: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_ColourRgb_SetGreen(self, *args)


    def SetRed(self, *args) -> "void":
        """
        :param aRed:
        	:type aRed: float
        	:rtype: None
        """
        return _StepVisual.StepVisual_ColourRgb_SetRed(self, *args)


    def __init__(self, *args):
        """
        * Returns a ColourRgb
        	:rtype: None
        """
        _StepVisual.StepVisual_ColourRgb_swiginit(self, _StepVisual.new_StepVisual_ColourRgb(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ColourRgb_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ColourRgb
StepVisual_ColourRgb.Blue = new_instancemethod(_StepVisual.StepVisual_ColourRgb_Blue, None, StepVisual_ColourRgb)
StepVisual_ColourRgb.Green = new_instancemethod(_StepVisual.StepVisual_ColourRgb_Green, None, StepVisual_ColourRgb)
StepVisual_ColourRgb.Init = new_instancemethod(_StepVisual.StepVisual_ColourRgb_Init, None, StepVisual_ColourRgb)
StepVisual_ColourRgb.Red = new_instancemethod(_StepVisual.StepVisual_ColourRgb_Red, None, StepVisual_ColourRgb)
StepVisual_ColourRgb.SetBlue = new_instancemethod(_StepVisual.StepVisual_ColourRgb_SetBlue, None, StepVisual_ColourRgb)
StepVisual_ColourRgb.SetGreen = new_instancemethod(_StepVisual.StepVisual_ColourRgb_SetGreen, None, StepVisual_ColourRgb)
StepVisual_ColourRgb.SetRed = new_instancemethod(_StepVisual.StepVisual_ColourRgb_SetRed, None, StepVisual_ColourRgb)
StepVisual_ColourRgb_swigregister = _StepVisual.StepVisual_ColourRgb_swigregister
StepVisual_ColourRgb_swigregister(StepVisual_ColourRgb)

class StepVisual_ContextDependentOverRidingStyledItem(StepVisual_OverRidingStyledItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def Init(self, *args) -> "void":
        """
        :param aName:
        	:type aName: TCollection_HAsciiString
        	:param aStyles:
        	:type aStyles: StepVisual_HArray1OfPresentationStyleAssignment
        	:param aItem:
        	:type aItem: Standard_Transient
        	:param aOverRiddenStyle:
        	:type aOverRiddenStyle: StepVisual_StyledItem
        	:param aStyleContext:
        	:type aStyleContext: StepVisual_HArray1OfStyleContextSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_ContextDependentOverRidingStyledItem_Init(self, *args)


    def NbStyleContext(self, *args) -> "Standard_Integer":
        """:rtype: int"""
        return _StepVisual.StepVisual_ContextDependentOverRidingStyledItem_NbStyleContext(self, *args)


    def SetStyleContext(self, *args) -> "void":
        """
        :param aStyleContext:
        	:type aStyleContext: StepVisual_HArray1OfStyleContextSelect
        	:rtype: None
        """
        return _StepVisual.StepVisual_ContextDependentOverRidingStyledItem_SetStyleContext(self, *args)


    def __init__(self, *args):
        """
        * Returns a ContextDependentOverRidingStyledItem
        	:rtype: None
        """
        _StepVisual.StepVisual_ContextDependentOverRidingStyledItem_swiginit(self, _StepVisual.new_StepVisual_ContextDependentOverRidingStyledItem(*args))

    def StyleContext(self, *args) -> "opencascade::handle< StepVisual_HArray1OfStyleContextSelect >":
        """:rtype: opencascade::handle<StepVisual_HArray1OfStyleContextSelect>"""
        return _StepVisual.StepVisual_ContextDependentOverRidingStyledItem_StyleContext(self, *args)


    def StyleContextValue(self, *args) -> "StepVisual_StyleContextSelect":
        """
        :param num:
        	:type num: int
        	:rtype: StepVisual_StyleContextSelect
        """
        return _StepVisual.StepVisual_ContextDependentOverRidingStyledItem_StyleContextValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ContextDependentOverRidingStyledItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ContextDependentOverRidingStyledItem
StepVisual_ContextDependentOverRidingStyledItem.Init = new_instancemethod(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_Init, None, StepVisual_ContextDependentOverRidingStyledItem)
StepVisual_ContextDependentOverRidingStyledItem.NbStyleContext = new_instancemethod(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_NbStyleContext, None, StepVisual_ContextDependentOverRidingStyledItem)
StepVisual_ContextDependentOverRidingStyledItem.SetStyleContext = new_instancemethod(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_SetStyleContext, None, StepVisual_ContextDependentOverRidingStyledItem)
StepVisual_ContextDependentOverRidingStyledItem.StyleContext = new_instancemethod(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_StyleContext, None, StepVisual_ContextDependentOverRidingStyledItem)
StepVisual_ContextDependentOverRidingStyledItem.StyleContextValue = new_instancemethod(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_StyleContextValue, None, StepVisual_ContextDependentOverRidingStyledItem)
StepVisual_ContextDependentOverRidingStyledItem_swigregister = _StepVisual.StepVisual_ContextDependentOverRidingStyledItem_swigregister
StepVisual_ContextDependentOverRidingStyledItem_swigregister(StepVisual_ContextDependentOverRidingStyledItem)

class StepVisual_DraughtingAnnotationOccurrence(StepVisual_AnnotationOccurrence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a DraughtingAnnotationOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingAnnotationOccurrence_swiginit(self, _StepVisual.new_StepVisual_DraughtingAnnotationOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingAnnotationOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingAnnotationOccurrence
StepVisual_DraughtingAnnotationOccurrence_swigregister = _StepVisual.StepVisual_DraughtingAnnotationOccurrence_swigregister
StepVisual_DraughtingAnnotationOccurrence_swigregister(StepVisual_DraughtingAnnotationOccurrence)

class StepVisual_DraughtingPreDefinedColour(StepVisual_PreDefinedColour):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a DraughtingPreDefinedColour
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingPreDefinedColour_swiginit(self, _StepVisual.new_StepVisual_DraughtingPreDefinedColour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingPreDefinedColour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingPreDefinedColour
StepVisual_DraughtingPreDefinedColour_swigregister = _StepVisual.StepVisual_DraughtingPreDefinedColour_swigregister
StepVisual_DraughtingPreDefinedColour_swigregister(StepVisual_DraughtingPreDefinedColour)

class StepVisual_DraughtingPreDefinedCurveFont(StepVisual_PreDefinedCurveFont):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a DraughtingPreDefinedCurveFont
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingPreDefinedCurveFont_swiginit(self, _StepVisual.new_StepVisual_DraughtingPreDefinedCurveFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingPreDefinedCurveFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingPreDefinedCurveFont
StepVisual_DraughtingPreDefinedCurveFont_swigregister = _StepVisual.StepVisual_DraughtingPreDefinedCurveFont_swigregister
StepVisual_DraughtingPreDefinedCurveFont_swigregister(StepVisual_DraughtingPreDefinedCurveFont)

class StepVisual_MechanicalDesignGeometricPresentationArea(StepVisual_PresentationArea):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a MechanicalDesignGeometricPresentationArea
        	:rtype: None
        """
        _StepVisual.StepVisual_MechanicalDesignGeometricPresentationArea_swiginit(self, _StepVisual.new_StepVisual_MechanicalDesignGeometricPresentationArea(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_MechanicalDesignGeometricPresentationArea_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_MechanicalDesignGeometricPresentationArea
StepVisual_MechanicalDesignGeometricPresentationArea_swigregister = _StepVisual.StepVisual_MechanicalDesignGeometricPresentationArea_swigregister
StepVisual_MechanicalDesignGeometricPresentationArea_swigregister(StepVisual_MechanicalDesignGeometricPresentationArea)

class StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem(StepVisual_AnnotationCurveOccurrence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """:rtype: None"""
        _StepVisual.StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_swiginit(self, _StepVisual.new_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem
StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_swigregister = _StepVisual.StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_swigregister
StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_swigregister(StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem)

class StepVisual_HArray1OfAnnotationPlaneElement(StepVisual_Array1OfAnnotationPlaneElement, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfAnnotationPlaneElement_swiginit(self, _StepVisual.new_StepVisual_HArray1OfAnnotationPlaneElement(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfAnnotationPlaneElement_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfAnnotationPlaneElement
StepVisual_HArray1OfAnnotationPlaneElement.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfAnnotationPlaneElement_Array1, None, StepVisual_HArray1OfAnnotationPlaneElement)
StepVisual_HArray1OfAnnotationPlaneElement.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfAnnotationPlaneElement_ChangeArray1, None, StepVisual_HArray1OfAnnotationPlaneElement)
StepVisual_HArray1OfAnnotationPlaneElement_swigregister = _StepVisual.StepVisual_HArray1OfAnnotationPlaneElement_swigregister
StepVisual_HArray1OfAnnotationPlaneElement_swigregister(StepVisual_HArray1OfAnnotationPlaneElement)

class StepVisual_HArray1OfDraughtingCalloutElement(StepVisual_Array1OfDraughtingCalloutElement, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfDraughtingCalloutElement_swiginit(self, _StepVisual.new_StepVisual_HArray1OfDraughtingCalloutElement(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfDraughtingCalloutElement_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfDraughtingCalloutElement
StepVisual_HArray1OfDraughtingCalloutElement.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfDraughtingCalloutElement_Array1, None, StepVisual_HArray1OfDraughtingCalloutElement)
StepVisual_HArray1OfDraughtingCalloutElement.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfDraughtingCalloutElement_ChangeArray1, None, StepVisual_HArray1OfDraughtingCalloutElement)
StepVisual_HArray1OfDraughtingCalloutElement_swigregister = _StepVisual.StepVisual_HArray1OfDraughtingCalloutElement_swigregister
StepVisual_HArray1OfDraughtingCalloutElement_swigregister(StepVisual_HArray1OfDraughtingCalloutElement)

class StepVisual_HArray1OfDirectionCountSelect(StepVisual_Array1OfDirectionCountSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfDirectionCountSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfDirectionCountSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfDirectionCountSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfDirectionCountSelect
StepVisual_HArray1OfDirectionCountSelect.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfDirectionCountSelect_Array1, None, StepVisual_HArray1OfDirectionCountSelect)
StepVisual_HArray1OfDirectionCountSelect.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfDirectionCountSelect_ChangeArray1, None, StepVisual_HArray1OfDirectionCountSelect)
StepVisual_HArray1OfDirectionCountSelect_swigregister = _StepVisual.StepVisual_HArray1OfDirectionCountSelect_swigregister
StepVisual_HArray1OfDirectionCountSelect_swigregister(StepVisual_HArray1OfDirectionCountSelect)

class StepVisual_HArray1OfStyleContextSelect(StepVisual_Array1OfStyleContextSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfStyleContextSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfStyleContextSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfStyleContextSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfStyleContextSelect
StepVisual_HArray1OfStyleContextSelect.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfStyleContextSelect_Array1, None, StepVisual_HArray1OfStyleContextSelect)
StepVisual_HArray1OfStyleContextSelect.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfStyleContextSelect_ChangeArray1, None, StepVisual_HArray1OfStyleContextSelect)
StepVisual_HArray1OfStyleContextSelect_swigregister = _StepVisual.StepVisual_HArray1OfStyleContextSelect_swigregister
StepVisual_HArray1OfStyleContextSelect_swigregister(StepVisual_HArray1OfStyleContextSelect)

class StepVisual_HArray1OfPresentationStyleSelect(StepVisual_Array1OfPresentationStyleSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfPresentationStyleSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfPresentationStyleSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfPresentationStyleSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfPresentationStyleSelect
StepVisual_HArray1OfPresentationStyleSelect.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfPresentationStyleSelect_Array1, None, StepVisual_HArray1OfPresentationStyleSelect)
StepVisual_HArray1OfPresentationStyleSelect.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfPresentationStyleSelect_ChangeArray1, None, StepVisual_HArray1OfPresentationStyleSelect)
StepVisual_HArray1OfPresentationStyleSelect_swigregister = _StepVisual.StepVisual_HArray1OfPresentationStyleSelect_swigregister
StepVisual_HArray1OfPresentationStyleSelect_swigregister(StepVisual_HArray1OfPresentationStyleSelect)

class StepVisual_HArray1OfCurveStyleFontPattern(StepVisual_Array1OfCurveStyleFontPattern, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfCurveStyleFontPattern_swiginit(self, _StepVisual.new_StepVisual_HArray1OfCurveStyleFontPattern(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfCurveStyleFontPattern_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfCurveStyleFontPattern
StepVisual_HArray1OfCurveStyleFontPattern.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfCurveStyleFontPattern_Array1, None, StepVisual_HArray1OfCurveStyleFontPattern)
StepVisual_HArray1OfCurveStyleFontPattern.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfCurveStyleFontPattern_ChangeArray1, None, StepVisual_HArray1OfCurveStyleFontPattern)
StepVisual_HArray1OfCurveStyleFontPattern_swigregister = _StepVisual.StepVisual_HArray1OfCurveStyleFontPattern_swigregister
StepVisual_HArray1OfCurveStyleFontPattern_swigregister(StepVisual_HArray1OfCurveStyleFontPattern)

class StepVisual_HArray1OfBoxCharacteristicSelect(StepVisual_Array1OfBoxCharacteristicSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfBoxCharacteristicSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfBoxCharacteristicSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfBoxCharacteristicSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfBoxCharacteristicSelect
StepVisual_HArray1OfBoxCharacteristicSelect.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfBoxCharacteristicSelect_Array1, None, StepVisual_HArray1OfBoxCharacteristicSelect)
StepVisual_HArray1OfBoxCharacteristicSelect.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfBoxCharacteristicSelect_ChangeArray1, None, StepVisual_HArray1OfBoxCharacteristicSelect)
StepVisual_HArray1OfBoxCharacteristicSelect_swigregister = _StepVisual.StepVisual_HArray1OfBoxCharacteristicSelect_swigregister
StepVisual_HArray1OfBoxCharacteristicSelect_swigregister(StepVisual_HArray1OfBoxCharacteristicSelect)

class StepVisual_HArray1OfPresentationStyleAssignment(StepVisual_Array1OfPresentationStyleAssignment, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfPresentationStyleAssignment_swiginit(self, _StepVisual.new_StepVisual_HArray1OfPresentationStyleAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfPresentationStyleAssignment_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfPresentationStyleAssignment
StepVisual_HArray1OfPresentationStyleAssignment.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfPresentationStyleAssignment_Array1, None, StepVisual_HArray1OfPresentationStyleAssignment)
StepVisual_HArray1OfPresentationStyleAssignment.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfPresentationStyleAssignment_ChangeArray1, None, StepVisual_HArray1OfPresentationStyleAssignment)
StepVisual_HArray1OfPresentationStyleAssignment_swigregister = _StepVisual.StepVisual_HArray1OfPresentationStyleAssignment_swigregister
StepVisual_HArray1OfPresentationStyleAssignment_swigregister(StepVisual_HArray1OfPresentationStyleAssignment)

class StepVisual_HArray1OfFillStyleSelect(StepVisual_Array1OfFillStyleSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfFillStyleSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfFillStyleSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfFillStyleSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfFillStyleSelect
StepVisual_HArray1OfFillStyleSelect.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfFillStyleSelect_Array1, None, StepVisual_HArray1OfFillStyleSelect)
StepVisual_HArray1OfFillStyleSelect.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfFillStyleSelect_ChangeArray1, None, StepVisual_HArray1OfFillStyleSelect)
StepVisual_HArray1OfFillStyleSelect_swigregister = _StepVisual.StepVisual_HArray1OfFillStyleSelect_swigregister
StepVisual_HArray1OfFillStyleSelect_swigregister(StepVisual_HArray1OfFillStyleSelect)

class StepVisual_HArray1OfTextOrCharacter(StepVisual_Array1OfTextOrCharacter, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfTextOrCharacter_swiginit(self, _StepVisual.new_StepVisual_HArray1OfTextOrCharacter(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfTextOrCharacter_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfTextOrCharacter
StepVisual_HArray1OfTextOrCharacter.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfTextOrCharacter_Array1, None, StepVisual_HArray1OfTextOrCharacter)
StepVisual_HArray1OfTextOrCharacter.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfTextOrCharacter_ChangeArray1, None, StepVisual_HArray1OfTextOrCharacter)
StepVisual_HArray1OfTextOrCharacter_swigregister = _StepVisual.StepVisual_HArray1OfTextOrCharacter_swigregister
StepVisual_HArray1OfTextOrCharacter_swigregister(StepVisual_HArray1OfTextOrCharacter)

class StepVisual_HArray1OfSurfaceStyleElementSelect(StepVisual_Array1OfSurfaceStyleElementSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfSurfaceStyleElementSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfSurfaceStyleElementSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfSurfaceStyleElementSelect
StepVisual_HArray1OfSurfaceStyleElementSelect.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfSurfaceStyleElementSelect_Array1, None, StepVisual_HArray1OfSurfaceStyleElementSelect)
StepVisual_HArray1OfSurfaceStyleElementSelect.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfSurfaceStyleElementSelect_ChangeArray1, None, StepVisual_HArray1OfSurfaceStyleElementSelect)
StepVisual_HArray1OfSurfaceStyleElementSelect_swigregister = _StepVisual.StepVisual_HArray1OfSurfaceStyleElementSelect_swigregister
StepVisual_HArray1OfSurfaceStyleElementSelect_swigregister(StepVisual_HArray1OfSurfaceStyleElementSelect)

class StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect(StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect
StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_Array1, None, StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_ChangeArray1, None, StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect)
StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_swigregister = _StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_swigregister
StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_swigregister(StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect)

class StepVisual_HArray1OfLayeredItem(StepVisual_Array1OfLayeredItem, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfLayeredItem_swiginit(self, _StepVisual.new_StepVisual_HArray1OfLayeredItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfLayeredItem_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfLayeredItem
StepVisual_HArray1OfLayeredItem.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfLayeredItem_Array1, None, StepVisual_HArray1OfLayeredItem)
StepVisual_HArray1OfLayeredItem.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfLayeredItem_ChangeArray1, None, StepVisual_HArray1OfLayeredItem)
StepVisual_HArray1OfLayeredItem_swigregister = _StepVisual.StepVisual_HArray1OfLayeredItem_swigregister
StepVisual_HArray1OfLayeredItem_swigregister(StepVisual_HArray1OfLayeredItem)

class StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect(StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect
StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_Array1, None, StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_ChangeArray1, None, StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect)
StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_swigregister = _StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_swigregister
StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_swigregister(StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect)

class StepVisual_HArray1OfInvisibleItem(StepVisual_Array1OfInvisibleItem, OCC.Core.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfInvisibleItem_swiginit(self, _StepVisual.new_StepVisual_HArray1OfInvisibleItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfInvisibleItem_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfInvisibleItem
StepVisual_HArray1OfInvisibleItem.Array1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfInvisibleItem_Array1, None, StepVisual_HArray1OfInvisibleItem)
StepVisual_HArray1OfInvisibleItem.ChangeArray1 = new_instancemethod(_StepVisual.StepVisual_HArray1OfInvisibleItem_ChangeArray1, None, StepVisual_HArray1OfInvisibleItem)
StepVisual_HArray1OfInvisibleItem_swigregister = _StepVisual.StepVisual_HArray1OfInvisibleItem_swigregister
StepVisual_HArray1OfInvisibleItem_swigregister(StepVisual_HArray1OfInvisibleItem)



